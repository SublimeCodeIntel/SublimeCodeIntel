<codeintel version="2.0" name="Ruby 1.8" description="Cix data for Ruby 1.8">
  <file lang="Ruby" path="ruby-1.8.cix">
    <scope ilk="blob" lang="Ruby" name="*">
      <scope doc="The Comparable mixin is used by classes whose objects may be&#xA;ordered. The class must define the &lt;=&gt; operator, which&#xA;compares the receiver against another object, returning -1,&#xA;0, or +1 depending on whether the receiver is less than,&#xA;equal to, or greater than the other object." ilk="namespace" name="Comparable">
        <scope doc="Compares two objects based on the receiver&apos;s &lt;=&gt; method,&#xA;returning true if it returns -1." ilk="function" name="&lt;" signature="obj &lt; other    =&gt; true or false" />
        <scope doc="Compares two objects based on the receiver&apos;s &lt;=&gt; method,&#xA;returning true if it returns -1 or 0." ilk="function" name="&lt;=" signature="obj &lt;= other    =&gt; true or false" />
        <scope doc="Compares two objects based on the receiver&apos;s &lt;=&gt; method,&#xA;returning true if it returns 0. Also returns true if `obj&apos;&#xA;and `other&apos; are the same object." ilk="function" name="==" signature="obj == other    =&gt; true or false" />
        <scope doc="Compares two objects based on the receiver&apos;s &lt;=&gt; method,&#xA;returning true if it returns 1." ilk="function" name="&gt;" signature="obj &gt; other    =&gt; true or false" />
        <scope doc="Compares two objects based on the receiver&apos;s &lt;=&gt; method,&#xA;returning true if it returns 0 or 1." ilk="function" name="&gt;=" signature="obj &gt;= other    =&gt; true or false" />
        <scope doc="Returns false if `obj&apos; &lt;=&gt; `min&apos; is less than zero or if&#xA;`anObject&apos; &lt;=&gt; `max&apos; is greater than zero, true otherwise." ilk="function" name="between?" signature="obj.between?(min, max)    =&gt; true or false" />
      </scope>
      <scope doc="The Enumerable mixin provides collection classes with&#xA;several traversal and searching methods, and with the&#xA;ability to sort. The class must provide a method each, which&#xA;yields successive members of the collection." ilk="namespace" name="Enumerable">
        <scope doc="Passes each element of the collection to the given block.&#xA;The method returns true if the block never returns false or&#xA;nil." ilk="function" name="all?" signature="enum.all? [{|obj| block } ]   =&gt; true or false" />
        <scope doc="Passes each element of the collection to the given block.&#xA;The method returns true if the block ever returns a value&#xA;other that false or nil." ilk="function" name="any?" signature="enum.any? [{|obj| block } ]   =&gt; true or false" />
        <scope doc="Returns a new array with the results of running `block&apos; once&#xA;for every element in `enum&apos;." ilk="function" name="collect" signature="enum.collect {| obj | block }  =&gt; array&#xA;enum.map     {| obj | block }  =&gt; array" />
        <scope doc="Passes each entry in `enum&apos; to `block&apos;. Returns the first&#xA;for which `block&apos; is not false." ilk="function" name="detect" signature="enum.detect(ifnone = nil) {| obj | block }  =&gt; obj or nil&#xA;enum.find(ifnone = nil)   {| obj | block }  =&gt; obj or nil" />
        <scope doc="Iterates the given block for each array of consecutive &lt;n&gt;&#xA;elements." ilk="function" name="each_cons" signature="each_cons(n) {...}" />
        <scope doc="Iterates the given block for each slice of &lt;n&gt; elements." ilk="function" name="each_slice" signature="e.each_slice(n) {...}" />
        <scope doc="Calls `block&apos; with two arguments, the item and its index,&#xA;for each item in `enum&apos;." ilk="function" name="each_with_index" signature="enum.each_with_index {|obj, i| block }  -&gt; enum" />
        <scope doc="Returns an array containing the items in `enum&apos;." ilk="function" name="entries" signature="enum.to_a      =&gt;    array&#xA;enum.entries   =&gt;    array" />
        <scope doc="Returns Enumerable::Enumerator.new(self, :each_cons, n)." ilk="function" name="enum_cons" signature="e.enum_cons(n)" />
        <scope doc="Returns Enumerable::Enumerator.new(self, :each_slice, n)." ilk="function" name="enum_slice" signature="e.enum_slice(n)" />
        <scope doc="Returns Enumerable::Enumerator.new(self, :each_with_index)." ilk="function" name="enum_with_index" signature="enum_with_index" />
        <scope doc="Passes each entry in `enum&apos; to `block&apos;. Returns the first&#xA;for which `block&apos; is not false." ilk="function" name="find" signature="enum.detect(ifnone = nil) {| obj | block }  =&gt; obj or nil&#xA;enum.find(ifnone = nil)   {| obj | block }  =&gt; obj or nil" />
        <scope doc="Returns an array containing all elements of `enum&apos; for which&#xA;`block&apos; is not false (see also Enumerable#reject)." ilk="function" name="find_all" signature="enum.find_all {| obj | block }  =&gt; array&#xA;enum.select   {| obj | block }  =&gt; array" />
        <scope doc="Returns an array of every element in `enum&apos; for which&#xA;Pattern === element. If the optional `block&apos; is supplied,&#xA;each matching element is passed to it, and the block&apos;s&#xA;result is stored in the output array." ilk="function" name="grep" signature="enum.grep(pattern)                   =&gt; array&#xA;enum.grep(pattern) {| obj | block }  =&gt; array" />
        <scope doc="Returns true if any member of `enum&apos; equals `obj&apos;. Equality&#xA;is tested using ==." ilk="function" name="include?" signature="enum.include?(obj)     =&gt; true or false&#xA;enum.member?(obj)      =&gt; true or false" />
        <scope doc="Combines the elements of `enum&apos; by applying the block to an&#xA;accumulator value (`memo&apos;) and each element in turn. At each&#xA;step, `memo&apos; is set to the value returned by the block." ilk="function" name="inject" signature="enum.inject(initial) {| memo, obj | block }  =&gt; obj&#xA;enum.inject          {| memo, obj | block }  =&gt; obj" />
        <scope doc="Returns a new array with the results of running `block&apos; once&#xA;for every element in `enum&apos;." ilk="function" name="map" signature="enum.collect {| obj | block }  =&gt; array&#xA;enum.map     {| obj | block }  =&gt; array" />
        <scope doc="Returns the object in `enum&apos; with the maximum value. The&#xA;first form assumes all objects implement Comparable; the&#xA;second uses the block to return `a &lt;=&gt; b&apos;." ilk="function" name="max" signature="enum.max                   =&gt; obj&#xA;enum.max {|a,b| block }    =&gt; obj" />
        <scope doc="Returns true if any member of `enum&apos; equals `obj&apos;. Equality&#xA;is tested using ==." ilk="function" name="member?" signature="enum.include?(obj)     =&gt; true or false&#xA;enum.member?(obj)      =&gt; true or false" />
        <scope doc="Returns the object in `enum&apos; with the minimum value. The&#xA;first form assumes all objects implement Comparable; the&#xA;second uses the block to return `a &lt;=&gt; b&apos;." ilk="function" name="min" signature="enum.min                    =&gt; obj&#xA;enum.min {| a,b | block }   =&gt; obj" />
        <scope doc="Returns two arrays, the first containing the elements of&#xA;`enum&apos; for which the block evaluates to true, the second&#xA;containing the rest." ilk="function" name="partition" signature="enum.partition {| obj | block }  =&gt; [ true_array, false_array ]" />
        <scope doc="Returns an array for all elements of `enum&apos; for which&#xA;`block&apos; is false (see also Enumerable#find_all)." ilk="function" name="reject" signature="enum.reject {| obj | block }  =&gt; array" />
        <scope doc="Returns an array containing all elements of `enum&apos; for which&#xA;`block&apos; is not false (see also Enumerable#reject)." ilk="function" name="select" signature="enum.find_all {| obj | block }  =&gt; array&#xA;enum.select   {| obj | block }  =&gt; array" />
        <scope doc="Returns an array containing the items in `enum&apos; sorted,&#xA;either according to their own &lt;=&gt; method, or by using the&#xA;results of the supplied block. The block should return -1,&#xA;0, or +1 depending on the comparison between `a&apos; and `b&apos;." ilk="function" name="sort" signature="enum.sort                     =&gt; array&#xA;enum.sort {| a, b | block }   =&gt; array" />
        <scope doc="Sorts `enum&apos; using a set of keys generated by mapping the&#xA;values in `enum&apos; through the given block." ilk="function" name="sort_by" signature="enum.sort_by {| obj | block }    =&gt; array" />
        <scope doc="Returns an array containing the items in `enum&apos;." ilk="function" name="to_a" signature="enum.to_a      =&gt;    array&#xA;enum.entries   =&gt;    array" />
        <scope doc="Makes a set from the enumerable object with given arguments.&#xA;Needs to +require &quot;set&quot;+ to use this method." ilk="function" name="to_set" signature="(klass = Set, *args, &amp;block)" />
        <scope doc="Converts any arguments to arrays, then merges elements of&#xA;`enum&apos; with corresponding elements from each argument. This&#xA;generates a sequence of enum#size `n&apos;-element arrays, where&#xA;`n&apos; is one more that the count of arguments." ilk="function" name="zip" signature="enum.zip(arg, ...)                   =&gt; array&#xA;enum.zip(arg, ...) {|arr| block }    =&gt; nil" />
      </scope>
      <scope ilk="namespace" name="Errno">
        <scope classrefs="SystemCallError" ilk="class" name="E2BIG">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EACCES">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EADDRINUSE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EADDRNOTAVAIL">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EAFNOSUPPORT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EAGAIN">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EALREADY">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EBADF">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EBUSY">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ECHILD">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ECONNABORTED">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ECONNREFUSED">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ECONNRESET">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EDEADLK">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EDEADLOCK">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EDESTADDRREQ">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EDOM">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EDQUOT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EEXIST">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EFAULT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EFBIG">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EHOSTDOWN">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EHOSTUNREACH">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EILSEQ">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EINPROGRESS">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EINTR">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EINVAL">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EIO">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EISCONN">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EISDIR">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ELOOP">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EMFILE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EMLINK">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EMSGSIZE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENAMETOOLONG">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENETDOWN">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENETRESET">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENETUNREACH">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENFILE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOBUFS">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENODEV">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOENT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOEXEC">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOLCK">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOMEM">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOPROTOOPT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOSPC">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOSYS">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOTCONN">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOTDIR">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOTEMPTY">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOTSOCK">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENOTTY">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ENXIO">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EOPNOTSUPP">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EPERM">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EPFNOSUPPORT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EPIPE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EPROTONOSUPPORT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EPROTOTYPE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ERANGE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EREMOTE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EROFS">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ESHUTDOWN">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ESOCKTNOSUPPORT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ESPIPE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ESRCH">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ESTALE">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ETIMEDOUT">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="ETOOMANYREFS">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EUSERS">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EWOULDBLOCK">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
        <scope classrefs="SystemCallError" ilk="class" name="EXDEV">
          <variable attributes="__const__" citdl="Fixnum" name="Errno" />
        </scope>
      </scope>
      <scope doc="FileTest implements file test operations similar to those&#xA;used in File::Stat. It exists as a standalone module, and&#xA;its methods are also insinuated into the File class." ilk="namespace" name="FileTest">
        <scope doc="Returns true if the named file is a block device." ilk="function" name="blockdev?" signature="File.blockdev?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file is a character device." ilk="function" name="chardev?" signature="File.chardev?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file is a directory, false&#xA;otherwise." ilk="function" name="directory?" signature="File.directory?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file is executable by the&#xA;effective user id of this process." ilk="function" name="executable?" signature="File.executable?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file is executable by the real&#xA;user id of this process." ilk="function" name="executable_real?" signature="File.executable_real?(file_name)   =&gt; true or false" />
        <scope doc="Return true if the named file exists." ilk="function" name="exist?" signature="File.exist?(file_name)    =&gt;  true or false&#xA;File.exists?(file_name)   =&gt;  true or false    (obsolete)" />
        <scope doc="Return true if the named file exists." ilk="function" name="exists?" signature="File.exist?(file_name)    =&gt;  true or false&#xA;File.exists?(file_name)   =&gt;  true or false    (obsolete)" />
        <scope doc="Returns true if the named file exists and is a regular file." ilk="function" name="file?" signature="File.file?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file exists and the effective&#xA;group id of the calling process is the owner of the file.&#xA;Returns false on Windows." ilk="function" name="grpowned?" signature="File.grpowned?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named files are identical." ilk="function" name="identical?" signature="File.identical?(file_1, file_2)   =&gt;  true or false" />
        <scope doc="Returns true if the named file exists and the effective used&#xA;id of the calling process is the owner of the file." ilk="function" name="owned?" signature="File.owned?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file is a pipe." ilk="function" name="pipe?" signature="File.pipe?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file is readable by the effective&#xA;user id of this process." ilk="function" name="readable?" signature="File.readable?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file is readable by the real user&#xA;id of this process." ilk="function" name="readable_real?" signature="File.readable_real?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file has the setgid bit set." ilk="function" name="setgid?" signature="File.setgid?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file has the setuid bit set." ilk="function" name="setuid?" signature="File.setuid?(file_name)   =&gt;  true or false" />
        <scope doc="Returns the size of file_name." ilk="function" name="size" signature="File.size(file_name)   =&gt; integer" />
        <scope doc="Returns nil if file_name doesn&apos;t exist or has zero size, the&#xA;size of the file otherwise." ilk="function" name="size?" signature="File.file?(file_name)   =&gt; integer  or  nil" />
        <scope doc="Returns true if the named file is a socket." ilk="function" name="socket?" signature="File.socket?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file has the sticky bit set." ilk="function" name="sticky?" signature="File.sticky?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file is a symbolic link." ilk="function" name="symlink?" signature="File.symlink?(file_name)   =&gt;  true or false" />
        <scope doc="Returns true if the named file is writable by the effective&#xA;user id of this process." ilk="function" name="writable?" signature="File.writable?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file is writable by the real user&#xA;id of this process." ilk="function" name="writable_real?" signature="File.writable_real?(file_name)   =&gt; true or false" />
        <scope doc="Returns true if the named file exists and has a zero size." ilk="function" name="zero?" signature="File.zero?(file_name)   =&gt; true or false" />
      </scope>
      <scope doc="The GC module provides an interface to Ruby&apos;s mark and sweep&#xA;garbage collection mechanism. Some of the underlying methods&#xA;are also available via the ObjectSpace module." ilk="namespace" name="GC">
        <scope attributes="__classmethod__" doc="Disables garbage collection, returning true if garbage&#xA;collection was already disabled." ilk="function" name="disable" signature="GC.disable    =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Enables garbage collection, returning true if garbage&#xA;collection was previously disabled." ilk="function" name="enable" signature="GC.enable    =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Initiates garbage collection, unless manually disabled." ilk="function" name="start" signature="GC.start                     =&gt; nil&#xA;gc.garbage_collect           =&gt; nil&#xA;ObjectSpace.garbage_collect  =&gt; nil" />
        <scope doc="Initiates garbage collection, unless manually disabled." ilk="function" name="garbage_collect" signature="GC.start                     =&gt; nil&#xA;gc.garbage_collect           =&gt; nil&#xA;ObjectSpace.garbage_collect  =&gt; nil" />
      </scope>
      <scope ilk="namespace" name="Kernel">
        <scope doc="Returns `arg&apos; as an Array. First tries to call `arg&apos;.to_ary,&#xA;then `arg&apos;.to_a." ilk="function" name="Array" signature="Array(arg)    =&gt; array" />
        <scope doc="Returns `arg&apos; converted to a float. Numeric types are&#xA;converted directly, the rest are converted using `arg&apos;.to_f." ilk="function" name="Float" signature="Float(arg)    =&gt; float" />
        <scope doc="Converts `arg&apos; to a Fixnum or Bignum. Numeric types are&#xA;converted directly (with floating point numbers being&#xA;truncated)." ilk="function" name="Integer" signature="Integer(arg)    =&gt; integer" />
        <scope doc="Converts `arg&apos; to a String by calling its to_s method." ilk="function" name="String" signature="String(arg)   =&gt; string" />
        <scope doc="alias for URI.parse." ilk="function" name="URI" signature="(uri_str)" />
        <scope doc="Returns the standard output of running `cmd&apos; in a subshell.&#xA;The built-in syntax %x{...} uses this method." ilk="function" name="`" signature="`cmd`    =&gt; string" />
        <scope doc="Terminate execution immediately, effectively by calling&#xA;Kernel.exit(1). If `msg&apos; is given, it is written to STDERR&#xA;prior to terminating." ilk="function" name="abort" signature="abort&#xA;Kernel::abort&#xA;Process::abort" />
        <scope doc="Converts `block&apos; to a Proc object (and therefore binds it at&#xA;the point of call) and registers it for execution when the&#xA;program exits. If multiple handlers are registered, they are&#xA;executed in reverse order of registration." ilk="function" name="at_exit" signature="at_exit { block } -&gt; proc" />
        <scope doc="Registers `filename&apos; to be loaded (using Kernel::require)&#xA;the first time that `module&apos; (which may be a String or a&#xA;symbol) is accessed." ilk="function" name="autoload" signature="autoload(module, filename)   =&gt; nil" />
        <scope doc="Registers `filename&apos; to be loaded (using Kernel::require)&#xA;the first time that `module&apos; (which may be a String or a&#xA;symbol) is accessed." ilk="function" name="autoload?" signature="autoload(module, filename)   =&gt; nil" />
        <scope doc="Returns a Binding object, describing the variable and method&#xA;bindings at the point of call. This object can be used when&#xA;calling eval to execute the evaluated command in this&#xA;environment." ilk="function" name="binding" signature="binding -&gt; a_binding" />
        <scope doc="Returns true if yield would execute a block in the current&#xA;context. The iterator? form is mildly deprecated." ilk="function" name="block_given?" signature="block_given?   =&gt; true or false&#xA;iterator?      =&gt; true or false" />
        <scope doc="Generates a Continuation object, which it passes to the&#xA;associated block. Performing a `cont&apos;.call will cause the&#xA;callcc to return (as will falling through the end of the&#xA;block)." ilk="function" name="callcc" signature="callcc {|cont| block }   =&gt;  obj" />
        <scope doc="Returns the current execution stack---an array containing&#xA;strings in the form ```file:line&apos;&apos;&apos; or ```file:line: in&#xA;`method&apos;&apos;&apos;&apos;. The optional `start&apos; parameter determines the&#xA;number of initial stack entries to omit from the result." ilk="function" name="caller" signature="caller(start=1)    =&gt; array" />
        <scope doc="catch executes its block. If a throw is executed, Ruby&#xA;searches up its stack for a catch block with a tag&#xA;corresponding to the throw&apos;s `symbol&apos;." ilk="function" name="catch" signature="catch(symbol) {| | block }  &gt; obj" />
        <scope doc="Equivalent to $_ = $_.chomp(`string&apos;). See String#chomp." ilk="function" name="chomp" signature="chomp            =&gt; $_&#xA;chomp(string)    =&gt; $_" />
        <scope doc="Equivalent to $_.chomp!(`string&apos;)." ilk="function" name="chomp!" signature="chomp!             =&gt; $_ or nil&#xA;chomp!(string)     =&gt; $_ or nil" />
        <scope doc="Equivalent to ($_.dup).chop!, except nil is never returned.&#xA;See String#chop!." ilk="function" name="chop" signature="chop   =&gt; string" />
        <scope doc="Equivalent to $_.chop!." ilk="function" name="chop!" signature="chop!    =&gt; $_ or nil" />
        <scope doc="Evaluates the Ruby expression(s) in `string&apos;. If `binding&apos;&#xA;is given, the evaluation is performed in its context." ilk="function" name="eval" signature="eval(string [, binding [, filename [,lineno]]])  =&gt; obj" />
        <scope doc="Replaces the current process by running the given external&#xA;`command&apos;. If exec is given a single argument, that argument&#xA;is taken as a line that is subject to shell expansion before&#xA;being executed." ilk="function" name="exec" signature="exec(command [, arg, ...])" />
        <scope doc="Initiates the termination of the Ruby script by raising the&#xA;SystemExit exception. This exception may be caught." ilk="function" name="exit" signature="exit(integer=0)&#xA;Kernel::exit(integer=0)&#xA;Process::exit(integer=0)" />
        <scope doc="Exits the process immediately. No exit handlers are run." ilk="function" name="exit!" signature="Process.exit!(fixnum=-1)" />
        <scope doc="With no arguments, raises the exception in $! or raises a&#xA;RuntimeError if $! is nil. With a single String argument,&#xA;raises a RuntimeError with the string as a message." ilk="function" name="fail" signature="raise&#xA;raise(string)&#xA;raise(exception [, string [, array]])&#xA;fail&#xA;fail(string)&#xA;fail(exception [, string [, array]])" />
        <scope doc="Creates a subprocess. If a block is specified, that block is&#xA;run in the subprocess, and the subprocess terminates with a&#xA;status of zero." ilk="function" name="fork" signature="Kernel.fork  [{ block }]   =&gt; fixnum or nil&#xA;Process.fork [{ block }]   =&gt; fixnum or nil" />
        <scope doc="Returns the string resulting from applying `format_string&apos;&#xA;to any additional arguments. Within the format string, any&#xA;characters other than format sequences are copied to the&#xA;result." ilk="function" name="format" signature="format(format_string [, arguments...] )   =&gt; string&#xA;sprintf(format_string [, arguments...] )  =&gt; string" />
        <scope doc="obsolete" ilk="function" name="getc" signature="()" />
        <scope doc="Returns (and assigns to $_) the next line from the list of&#xA;files in ARGV (or $*), or from standard input if no files&#xA;are present on the command line. Returns nil at end of file." ilk="function" name="gets" signature="gets(separator=$/)    =&gt; string or nil" />
        <scope doc="Returns an array of the names of global variables." ilk="function" name="global_variables" signature="global_variables    =&gt; array" />
        <scope doc="Equivalent to $_.gsub..., except that $_ receives the&#xA;modified result." ilk="function" name="gsub" signature="gsub(pattern, replacement)    =&gt; string&#xA;gsub(pattern) {|...| block }  =&gt; string" />
        <scope doc="Equivalent to Kernel::gsub, except nil is returned if $_ is&#xA;not modified." ilk="function" name="gsub!" signature="gsub!(pattern, replacement)    =&gt; string or nil&#xA;gsub!(pattern) {|...| block }  =&gt; string or nil" />
        <scope doc="Returns true if yield would execute a block in the current&#xA;context. The iterator? form is mildly deprecated." ilk="function" name="iterator?" signature="block_given?   =&gt; true or false&#xA;iterator?      =&gt; true or false" />
        <scope doc="Equivalent to Proc.new, except the resulting Proc objects&#xA;check the number of parameters passed when called." ilk="function" name="lambda" signature="proc   { |...| block }  =&gt; a_proc&#xA;lambda { |...| block }  =&gt; a_proc" />
        <scope doc="Loads and executes the Ruby program in the file `filename&apos;.&#xA;If the filename does not resolve to an absolute path, the&#xA;file is searched for in the library directories listed in&#xA;$:." ilk="function" name="load" signature="load(filename, wrap=false)   =&gt; true" />
        <scope doc="Returns the names of the current local variables." ilk="function" name="local_variables" signature="local_variables    =&gt; array" />
        <scope doc="Repeatedly executes the block." ilk="function" name="loop" signature="loop {|| block } " />
        <scope doc="Invoked by Ruby when `obj&apos; is sent a message it cannot&#xA;handle. `symbol&apos; is the symbol for the method called, and&#xA;`args&apos; are any arguments that were passed to it." ilk="function" name="method_missing" signature="obj.method_missing(symbol [, *args] )   =&gt; result" />
        <scope doc="Creates an IO object connected to the given stream, file, or&#xA;subprocess." ilk="function" name="open" signature="open(path [, mode [, perm]] )                =&gt; io or nil&#xA;open(path [, mode [, perm]] ) {|io| block }  =&gt; obj" />
        <scope doc="For each object, directly writes `obj&apos;.inspect followed by&#xA;the current output record separator to the program&apos;s&#xA;standard output." ilk="function" name="p" signature="p(obj, ...)    =&gt; nil" />
        <scope doc="Prints each object in turn to $stdout. If the output field&#xA;separator ($,) is not nil, its contents will appear between&#xA;each field." ilk="function" name="print" signature="print(obj, ...)    =&gt; nil" />
        <scope doc="Equivalent to:" ilk="function" name="printf" signature="printf(io, string [, obj ... ] )    =&gt; nil&#xA;printf(string [, obj ... ] )        =&gt; nil" />
        <scope doc="Equivalent to Proc.new, except the resulting Proc objects&#xA;check the number of parameters passed when called." ilk="function" name="proc" signature="proc   { |...| block }  =&gt; a_proc&#xA;lambda { |...| block }  =&gt; a_proc" />
        <scope doc="Equivalent to:" ilk="function" name="putc" signature="putc(int)   =&gt; int" />
        <scope doc="Equivalent to" ilk="function" name="puts" signature="puts(obj, ...)    =&gt; nil" />
        <scope doc="With no arguments, raises the exception in $! or raises a&#xA;RuntimeError if $! is nil. With a single String argument,&#xA;raises a RuntimeError with the string as a message." ilk="function" name="raise" signature="raise&#xA;raise(string)&#xA;raise(exception [, string [, array]])&#xA;fail&#xA;fail(string)&#xA;fail(exception [, string [, array]])" />
        <scope doc="Converts `max&apos; to an integer using max1 = max.to_i.abs. If&#xA;the result is zero, returns a pseudorandom floating point&#xA;number greater than or equal to 0.0 and less than 1.0." ilk="function" name="rand" signature="rand(max=0)    =&gt; number" />
        <scope doc="Equivalent to Kernel::gets, except readline raises EOFError&#xA;at end of file." ilk="function" name="readline" signature="readline(separator=$/)   =&gt; string" />
        <scope doc="Returns an array containing the lines returned by calling&#xA;Kernel.gets(`separator&apos;) until the end of file." ilk="function" name="readlines" signature="readlines(separator=$/)    =&gt; array" />
        <scope doc="Ruby tries to load the library named `string&apos;, returning&#xA;true if successful. If the filename does not resolve to an&#xA;absolute path, it will be searched for in the directories&#xA;listed in $:." ilk="function" name="require" signature="require(string)    =&gt; true or false" />
        <scope doc="Equivalent to calling $_.scan. See String#scan." ilk="function" name="scan" signature="scan(pattern)                   =&gt; array&#xA;scan(pattern) {|///| block }    =&gt; $_" />
        <scope doc="See Kernel#select." ilk="function" name="select" signature="IO.select(read_array &#xA;[, write_array &#xA;[, error_array &#xA;[, timeout]]] ) =&gt;  array  or  nil" />
        <scope doc="Establishes `proc&apos; as the handler for tracing, or disables&#xA;tracing if the parameter is nil. `proc&apos; takes up to six&#xA;parameters: an event name, a filename, a line number, an&#xA;object id, a binding, and the name of a class." ilk="function" name="set_trace_func" signature="set_trace_func(proc)    =&gt; proc&#xA;set_trace_func(nil)     =&gt; nil" />
        <scope doc="Suspends the current thread for `duration&apos; seconds (which&#xA;may be any number, including a Float with fractional&#xA;seconds). Returns the actual number of seconds slept&#xA;(rounded), which may be less than that asked for if another&#xA;thread calls Thread#run." ilk="function" name="sleep" signature="sleep([duration])    =&gt; fixnum" />
        <scope doc="Equivalent to $_.split(`pattern&apos;, `limit&apos;). See&#xA;String#split." ilk="function" name="split" signature="split([pattern [, limit]])    =&gt; array" />
        <scope doc="Returns the string resulting from applying `format_string&apos;&#xA;to any additional arguments. Within the format string, any&#xA;characters other than format sequences are copied to the&#xA;result." ilk="function" name="sprintf" signature="format(format_string [, arguments...] )   =&gt; string&#xA;sprintf(format_string [, arguments...] )  =&gt; string" />
        <scope doc="Seeds the pseudorandom number generator to the value of&#xA;`number&apos;.to_i.abs. If `number&apos; is omitted or zero, seeds the&#xA;generator using a combination of the time, the process id,&#xA;and a sequence number." ilk="function" name="srand" signature="srand(number=0)    =&gt; old_seed" />
        <scope doc="Equivalent to $_.sub(`args&apos;), except that $_ will be updated&#xA;if substitution occurs." ilk="function" name="sub" signature="sub(pattern, replacement)   =&gt; $_&#xA;sub(pattern) { block }      =&gt; $_" />
        <scope doc="Equivalent to $_.sub!(`args&apos;)." ilk="function" name="sub!" signature="sub!(pattern, replacement)    =&gt; $_ or nil&#xA;sub!(pattern) {|...| block }  =&gt; $_ or nil" />
        <scope doc="Calls the operating system function identified by `fixnum&apos;,&#xA;passing in the arguments, which must be either String&#xA;objects, or Integer objects that ultimately fit within a&#xA;native long. Up to nine parameters may be passed (14 on the&#xA;Atari-ST)." ilk="function" name="syscall" signature="syscall(fixnum [, args...])   =&gt; integer" />
        <scope doc="Executes `cmd&apos; in a subshell, returning true if the command&#xA;was found and ran successfully, false otherwise. An error&#xA;status is available in $?." ilk="function" name="system" signature="system(cmd [, arg, ...])    =&gt; true or false" />
        <scope ilk="function" name="test" signature="test(int_cmd, file1 [, file2] ) =&gt; obj" />
        <scope doc="Transfers control to the end of the active catch block&#xA;waiting for `symbol&apos;. Raises NameError if there is no catch&#xA;block for the symbol." ilk="function" name="throw" signature="throw(symbol [, obj])" />
        <scope doc="Controls tracing of assignments to global variables. The&#xA;parameter +symbol_ identifies the variable (as either a&#xA;string name or a symbol identifier)." ilk="function" name="trace_var" signature="trace_var(symbol, cmd )             =&gt; nil&#xA;trace_var(symbol) {|val| block }    =&gt; nil" />
        <scope doc="Specifies the handling of signals. The first parameter is a&#xA;signal name (a string such as ``SIGALRM&apos;&apos;, ``SIGUSR1&apos;&apos;, and&#xA;so on) or a signal number." ilk="function" name="trap" signature="Signal.trap( signal, proc ) =&gt; obj&#xA;Signal.trap( signal ) {| | block } =&gt; obj" />
        <scope doc="Removes tracing for the specified command on the given&#xA;global variable and returns nil. If no command is specified,&#xA;removes all tracing for that variable and returns an array&#xA;containing the commands actually removed." ilk="function" name="untrace_var" signature="untrace_var(symbol [, cmd] )   =&gt; array or nil" />
        <scope doc="Display the given message (followed by a newline) on STDERR&#xA;unless warnings are disabled (for example with the -W0&#xA;flag)." ilk="function" name="warn" signature="warn(msg)   =&gt; nil" />
        <scope attributes="private" doc="Prints any supplied `objects&apos; out in YAML. Intended as a&#xA;variation on +Kernel::p+." ilk="function" name="y" signature="( object, *objects )" />
      </scope>
      <scope doc="The marshaling library converts collections of Ruby objects&#xA;into a byte stream, allowing them to be stored outside the&#xA;currently active script. This data may subsequently be read&#xA;and the original objects reconstituted." ilk="namespace" name="Marshal">
        <scope doc="Serializes obj and all descendent objects. If anIO is&#xA;specified, the serialized data will be written to it,&#xA;otherwise the data will be returned as a String." ilk="function" name="dump" signature="dump( obj [, anIO] , limit=--1 ) =&gt; anIO" />
        <scope doc="Returns the result of converting the serialized data in&#xA;source into a Ruby object (possibly with associated&#xA;subordinate objects). source may be either an instance of IO&#xA;or an object that responds to to_str." ilk="function" name="load" signature="load( source [, proc] ) =&gt; obj&#xA;restore( source [, proc] ) =&gt; obj" />
        <scope doc="Returns the result of converting the serialized data in&#xA;source into a Ruby object (possibly with associated&#xA;subordinate objects). source may be either an instance of IO&#xA;or an object that responds to to_str." ilk="function" name="restore" signature="load( source [, proc] ) =&gt; obj&#xA;restore( source [, proc] ) =&gt; obj" />
        <variable attributes="__const__" citdl="Fixnum" name="MAJOR_VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="MINOR_VERSION" />
      </scope>
      <scope doc="The Math module contains module functions for basic&#xA;trigonometric and transcendental functions. See class Float&#xA;for a list of constants that define Ruby&apos;s floating point&#xA;accuracy." ilk="namespace" name="Math">
        <scope doc="Computes the arc cosine of `x&apos;. Returns 0..PI." ilk="function" name="acos" signature="Math.acos(x)    =&gt; float" />
        <scope doc="Alias for #acos" ilk="function" name="acos!" signature="(p1)" />
        <scope ilk="function" name="acosh" signature="(z)" />
        <scope doc="Alias for #acosh" ilk="function" name="acosh!" signature="(p1)" />
        <scope ilk="function" name="asin" signature="(z)" />
        <scope doc="Alias for #asin" ilk="function" name="asin!" signature="(p1)" />
        <scope doc="Computes the inverse hyperbolic sine of `x&apos;." ilk="function" name="asinh" signature="Math.asinh(x)    =&gt; float" />
        <scope doc="Alias for #asinh" ilk="function" name="asinh!" signature="(p1)" />
        <scope ilk="function" name="atan" signature="(z)" />
        <scope doc="Alias for #atan" ilk="function" name="atan!" signature="(p1)" />
        <scope doc="Computes the arc tangent given `y&apos; and `x&apos;. Returns -PI..PI." ilk="function" name="atan2" signature="Math.atan2(y, x)  =&gt; float" />
        <scope doc="Alias for #atan2" ilk="function" name="atan2!" signature="(p1, p2)" />
        <scope ilk="function" name="atanh" signature="(z)" />
        <scope doc="Alias for #atanh" ilk="function" name="atanh!" signature="(p1)" />
        <scope doc="Redefined to handle a Complex argument." ilk="function" name="cos" signature="(z)" />
        <scope doc="Alias for #cos" ilk="function" name="cos!" signature="(p1)" />
        <scope ilk="function" name="cosh" signature="(z)" />
        <scope doc="Alias for #cosh" ilk="function" name="cosh!" signature="(p1)" />
        <scope doc="Calculates the error function of x." ilk="function" name="erf" signature="Math.erf(x)  =&gt; float" />
        <scope doc="Calculates the complementary error function of x." ilk="function" name="erfc" signature="Math.erfc(x)  =&gt; float" />
        <scope doc="Returns e**x." ilk="function" name="exp" signature="Math.exp(x)    =&gt; float" />
        <scope doc="Alias for #exp" ilk="function" name="exp!" signature="(p1)" />
        <scope doc="Returns a two-element array containing the normalized&#xA;fraction (a Float) and exponent (a Fixnum) of `numeric&apos;." ilk="function" name="frexp" signature="Math.frexp(numeric)    =&gt; [ fraction, exponent ]" />
        <scope doc="Returns sqrt(x**2 + y**2), the hypotenuse of a right-angled&#xA;triangle with sides `x&apos; and `y&apos;." ilk="function" name="hypot" signature="Math.hypot(x, y)    =&gt; float" />
        <scope doc="Returns the value of `flt&apos;*(2**`int&apos;)." ilk="function" name="ldexp" signature="Math.ldexp(flt, int) -&gt; float" />
        <scope doc="Returns the natural logarithm of `numeric&apos;." ilk="function" name="log" signature="Math.log(numeric)    =&gt; float" />
        <scope doc="Alias for #log" ilk="function" name="log!" signature="(p1)" />
        <scope doc="Returns the base 10 logarithm of `numeric&apos;." ilk="function" name="log10" signature="Math.log10(numeric)    =&gt; float" />
        <scope doc="Alias for #log10" ilk="function" name="log10!" signature="(p1)" />
        <scope doc="Redefined to handle a Complex argument." ilk="function" name="sin" signature="(z)" />
        <scope doc="Alias for #sin" ilk="function" name="sin!" signature="(p1)" />
        <scope doc="Computes the hyperbolic sine of `x&apos; (expressed in radians)." ilk="function" name="sinh" signature="Math.sinh(x)    =&gt; float" />
        <scope doc="Alias for #sinh" ilk="function" name="sinh!" signature="(p1)" />
        <scope doc="Returns the non-negative square root of `numeric&apos;. Raises&#xA;ArgError if `numeric&apos; is less than zero." ilk="function" name="sqrt" signature="Math.sqrt(numeric)    =&gt; float" />
        <scope doc="Alias for #sqrt" ilk="function" name="sqrt!" signature="(p1)" />
        <scope doc="Redefined to handle a Complex argument." ilk="function" name="tan" signature="(z)" />
        <scope doc="Alias for #tan" ilk="function" name="tan!" signature="(p1)" />
        <scope ilk="function" name="tanh" signature="(z)" />
        <scope doc="Alias for #tanh" ilk="function" name="tanh!" signature="(p1)" />
      </scope>
      <scope doc="The ObjectSpace module contains a number of routines that&#xA;interact with the garbage collection facility and allow you&#xA;to traverse all living objects with an iterator." ilk="namespace" name="ObjectSpace">
        <scope doc="Converts an object id to a reference to the object. May not&#xA;be called on an object id passed as a parameter to a&#xA;finalizer." ilk="function" name="_id2ref" signature="ObjectSpace._id2ref(object_id) -&gt; an_object" />
        <scope doc="deprecated" ilk="function" name="add_finalizer" signature="(p1)" />
        <scope doc="deprecated" ilk="function" name="call_finalizer" signature="(p1)" />
        <scope doc="Adds `aProc&apos; as a finalizer, to be called after `obj&apos; was&#xA;destroyed." ilk="function" name="define_finalizer" signature="ObjectSpace.define_finalizer(obj, aProc=proc())" />
        <scope doc="Calls the block once for each living, nonimmediate object in&#xA;this Ruby process. If `module&apos; is specified, calls the block&#xA;for only those classes or modules that match (or are a&#xA;subclass of) `module&apos;." ilk="function" name="each_object" signature="ObjectSpace.each_object([module]) {|obj| ... } =&gt; fixnum" />
        <scope doc="deprecated" ilk="function" name="finalizers" signature="()" />
        <scope doc="Initiates garbage collection, unless manually disabled." ilk="function" name="garbage_collect" signature="GC.start                     =&gt; nil&#xA;gc.garbage_collect           =&gt; nil&#xA;ObjectSpace.garbage_collect  =&gt; nil" />
        <scope doc="deprecated" ilk="function" name="remove_finalizer" signature="(p1)" />
        <scope doc="Removes all finalizers for `obj&apos;." ilk="function" name="undefine_finalizer" signature="ObjectSpace.undefine_finalizer(obj)" />
      </scope>
      <scope doc="Precision is a mixin for concrete numeric classes with&#xA;precision. Here, `precision&apos; means the fineness of&#xA;approximation of a real number, so, this module should not&#xA;be included into anything which is not a subset of Real (so&#xA;it should not be included in classes such as Complex or&#xA;Matrix)." ilk="namespace" name="Precision">
        <scope attributes="__classmethod__" doc="call_seq:" ilk="function" name="included" signature="(p1)" />
        <scope doc="Converts `self&apos; into an instance of `klass&apos;." ilk="function" name="prec" signature="num.prec(klass)   =&gt; a_klass" />
        <scope doc="Returns a Float converted from `num&apos;. It is equivalent to&#xA;prec(Float)." ilk="function" name="prec_f" signature="num.prec_f  =&gt;  Float" />
        <scope doc="Returns an Integer converted from `num&apos;. It is equivalent to&#xA;prec(Integer)." ilk="function" name="prec_i" signature="num.prec_i  =&gt;  Integer" />
      </scope>
      <scope doc="The Process module is a collection of methods used to&#xA;manipulate processes." ilk="namespace" name="Process">
        <scope attributes="__classmethod__" doc="Terminate execution immediately, effectively by calling&#xA;Kernel.exit(1). If `msg&apos; is given, it is written to STDERR&#xA;prior to terminating." ilk="function" name="abort" signature="abort&#xA;Kernel::abort&#xA;Process::abort" />
        <scope attributes="__classmethod__" doc="Initiates the termination of the Ruby script by raising the&#xA;SystemExit exception. This exception may be caught." ilk="function" name="exit" signature="exit(integer=0)&#xA;Kernel::exit(integer=0)&#xA;Process::exit(integer=0)" />
        <scope attributes="__classmethod__" doc="Exits the process immediately. No exit handlers are run." ilk="function" name="exit!" signature="Process.exit!(fixnum=-1)" />
        <scope attributes="__classmethod__" doc="Creates a subprocess. If a block is specified, that block is&#xA;run in the subprocess, and the subprocess terminates with a&#xA;status of zero." ilk="function" name="fork" signature="Kernel.fork  [{ block }]   =&gt; fixnum or nil&#xA;Process.fork [{ block }]   =&gt; fixnum or nil" />
        <scope doc="Some operating systems retain the status of terminated child&#xA;processes until the parent collects that status (normally&#xA;using some variant of wait(). If the parent never collects&#xA;this status, the child stays around as a `zombie&apos; process." ilk="function" name="detach" signature="Process.detach(pid)   =&gt; thread" />
        <scope doc="Returns the effective group ID for this process. Not&#xA;available on all platforms." ilk="function" name="egid" signature="Process.egid          =&gt; fixnum&#xA;Process::GID.eid      =&gt; fixnum&#xA;Process::Sys.geteid   =&gt; fixnum" />
        <scope doc="Sets the effective group ID for this process. Not available&#xA;on all platforms." ilk="function" name="egid=" signature="Process.egid = fixnum   =&gt; fixnum" />
        <scope doc="Returns the effective user ID for this process." ilk="function" name="euid" signature="Process.euid           =&gt; fixnum&#xA;Process::UID.eid       =&gt; fixnum&#xA;Process::Sys.geteuid   =&gt; fixnum" />
        <scope doc="Sets the effective user ID for this process. Not available&#xA;on all platforms." ilk="function" name="euid=" signature="Process.euid= integer" />
        <scope doc="Returns the process group ID for the given process id. Not&#xA;available on all platforms." ilk="function" name="getpgid" signature="Process.getpgid(pid)   =&gt; integer" />
        <scope doc="Returns the process group ID for this process. Not available&#xA;on all platforms." ilk="function" name="getpgrp" signature="Process.getpgrp   =&gt; integer" />
        <scope doc="Gets the scheduling priority for specified process, process&#xA;group, or user. `kind&apos; indicates the kind of entity to find:&#xA;one of Process::PRIO_PGRP, Process::PRIO_USER, or&#xA;Process::PRIO_PROCESS." ilk="function" name="getpriority" signature="Process.getpriority(kind, integer)   =&gt; fixnum" />
        <scope doc="Returns the (real) group ID for this process." ilk="function" name="gid" signature="Process.gid           =&gt; fixnum&#xA;Process::GID.rid      =&gt; fixnum&#xA;Process::Sys.getgid   =&gt; fixnum" />
        <scope doc="Sets the group ID for this process." ilk="function" name="gid=" signature="Process.gid= fixnum   =&gt; fixnum" />
        <scope doc="Get an Array of the gids of groups in the supplemental group&#xA;access list for this process." ilk="function" name="groups" signature="Process.groups   =&gt; array" />
        <scope doc="Set the supplemental group access list to the given Array of&#xA;group IDs." ilk="function" name="groups=" signature="Process.groups= array   =&gt; array" />
        <scope doc="Initializes the supplemental group access list by reading&#xA;the system group database and using all groups of which the&#xA;given user is a member. The group with the specified `gid&apos;&#xA;is also added to the list." ilk="function" name="initgroups" signature="Process.initgroups(username, gid)   =&gt; array" />
        <scope doc="Sends the given signal to the specified process id(s), or to&#xA;the current process if `pid&apos; is zero. `signal&apos; may be an&#xA;integer signal number or a POSIX signal name (either with or&#xA;without a SIG prefix)." ilk="function" name="kill" signature="Process.kill(signal, pid, ...)    =&gt; fixnum" />
        <scope doc="Returns the maximum number of gids allowed in the&#xA;supplemental group access list." ilk="function" name="maxgroups" signature="Process.maxgroups   =&gt; fixnum" />
        <scope doc="Sets the maximum number of gids allowed in the supplemental&#xA;group access list." ilk="function" name="maxgroups=" signature="Process.maxgroups= fixnum   =&gt; fixnum" />
        <scope doc="Returns the process id of this process. Not available on all&#xA;platforms." ilk="function" name="pid" signature="Process.pid   =&gt; fixnum" />
        <scope doc="Returns the process id of the parent of this process. Always&#xA;returns 0 on NT." ilk="function" name="ppid" signature="Process.ppid   =&gt; fixnum" />
        <scope doc="Sets the process group ID of `pid&apos; (0 indicates this&#xA;process) to `integer&apos;. Not available on all platforms." ilk="function" name="setpgid" signature="Process.setpgid(pid, integer)   =&gt; 0" />
        <scope doc="Equivalent to setpgid(0,0). Not available on all platforms." ilk="function" name="setpgrp" signature="Process.setpgrp   =&gt; 0" />
        <scope doc="See Process#getpriority." ilk="function" name="setpriority" signature="Process.setpriority(kind, integer, priority)   =&gt; 0" />
        <scope doc="Establishes this process as a new session and process group&#xA;leader, with no controlling tty. Returns the session id." ilk="function" name="setsid" signature="Process.setsid   =&gt; fixnum" />
        <scope doc="Returns a Tms structure (see Struct::Tms on page 388) that&#xA;contains user and system CPU times for this process." ilk="function" name="times" signature="Process.times   =&gt; aStructTms" />
        <scope doc="Returns the (real) user ID of this process." ilk="function" name="uid" signature="Process.uid           =&gt; fixnum&#xA;Process::UID.rid      =&gt; fixnum&#xA;Process::Sys.getuid   =&gt; fixnum" />
        <scope doc="Sets the (integer) user ID for this process. Not available&#xA;on all platforms." ilk="function" name="uid=" signature="Process.uid= integer   =&gt; numeric" />
        <scope doc="Waits for a child process to exit, returns its process id,&#xA;and sets $? to a Process::Status object containing&#xA;information on that process." ilk="function" name="wait" signature="Process.wait()                     =&gt; fixnum&#xA;Process.wait(pid=-1, flags=0)      =&gt; fixnum&#xA;Process.waitpid(pid=-1, flags=0)   =&gt; fixnum" />
        <scope doc="Waits for a child process to exit (see Process::waitpid for&#xA;exact semantics) and returns an array containing the process&#xA;id and the exit status (a Process::Status object) of that&#xA;child. Raises a SystemError if there are no child processes." ilk="function" name="wait2" signature="Process.wait2(pid=-1, flags=0)      =&gt; [pid, status]&#xA;Process.waitpid2(pid=-1, flags=0)   =&gt; [pid, status]" />
        <scope doc="Waits for all children, returning an array of `pid&apos;/`status&apos;&#xA;pairs (where `status&apos; is a Process::Status object)." ilk="function" name="waitall" signature="Process.waitall   =&gt; [ [pid1,status1], ...]" />
        <scope doc="Waits for a child process to exit, returns its process id,&#xA;and sets $? to a Process::Status object containing&#xA;information on that process." ilk="function" name="waitpid" signature="Process.wait()                     =&gt; fixnum&#xA;Process.wait(pid=-1, flags=0)      =&gt; fixnum&#xA;Process.waitpid(pid=-1, flags=0)   =&gt; fixnum" />
        <scope doc="Waits for a child process to exit (see Process::waitpid for&#xA;exact semantics) and returns an array containing the process&#xA;id and the exit status (a Process::Status object) of that&#xA;child. Raises a SystemError if there are no child processes." ilk="function" name="waitpid2" signature="Process.wait2(pid=-1, flags=0)      =&gt; [pid, status]&#xA;Process.waitpid2(pid=-1, flags=0)   =&gt; [pid, status]" />
        <variable attributes="__const__" citdl="Fixnum" name="PRIO_PGRP" />
        <variable attributes="__const__" citdl="Fixnum" name="PRIO_PROCESS" />
        <variable attributes="__const__" citdl="Fixnum" name="PRIO_USER" />
        <variable attributes="__const__" citdl="Fixnum" name="WNOHANG" />
        <variable attributes="__const__" citdl="Fixnum" name="WNOHANG" />
        <variable attributes="__const__" citdl="Fixnum" name="WUNTRACED" />
        <variable attributes="__const__" citdl="Fixnum" name="WUNTRACED" />
      </scope>
      <scope doc="Many operating systems allow signals to be sent to running&#xA;processes. Some signals have a defined effect on the&#xA;process, while others may be trapped at the code level and&#xA;acted upon." ilk="namespace" name="Signal">
        <scope doc="Returns a list of signal names mapped to the corresponding&#xA;underlying signal numbers." ilk="function" name="list" signature="Signal.list =&gt; a_hash" />
        <scope doc="Specifies the handling of signals. The first parameter is a&#xA;signal name (a string such as ``SIGALRM&apos;&apos;, ``SIGUSR1&apos;&apos;, and&#xA;so on) or a signal number." ilk="function" name="trap" signature="Signal.trap( signal, proc ) =&gt; obj&#xA;Signal.trap( signal ) {| | block } =&gt; obj" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="ArgumentError" />
      <scope classrefs="Object" doc="Arrays are ordered, integer-indexed collections of any&#xA;object. Array indexing starts at 0, as in C or Java." ilk="class" name="Array">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" doc="Returns a new array populated with the given objects." ilk="function" name="[]" signature="(...)" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new array. In the first form, the new array is&#xA;empty." ilk="function" name="new" signature="Array.new(size=0, obj=nil)&#xA;Array.new(array)&#xA;Array.new(size) {|index| block }" />
        <scope doc="Set Intersection---Returns a new array containing elements&#xA;common to the two arrays, with no duplicates." ilk="function" name="&amp;" signature="array &amp; other_array" />
        <scope doc="Repetition---With a String argument, equivalent to&#xA;self.join(str). Otherwise, returns a new array built by&#xA;concatenating the `int&apos; copies of `self&apos;." ilk="function" name="*" signature="array * int     -&gt;    an_array&#xA;array * str     -&gt;    a_string" />
        <scope doc="Concatenation---Returns a new array built by concatenating&#xA;the two arrays together to produce a third array." ilk="function" name="+" signature="array + other_array   -&gt; an_array" />
        <scope doc="Append---Pushes the given object on to the end of this&#xA;array. This expression returns the array itself, so several&#xA;appends may be chained together." ilk="function" name="&lt;&lt;" signature="array &lt;&lt; obj            -&gt; array" />
        <scope doc="Comparison---Returns an integer (-1, 0, or +1) if this array&#xA;is less than, equal to, or greater than other_array. Each&#xA;object in each array is compared (using &lt;=&gt;)." ilk="function" name="&lt;=&gt;" signature="array &lt;=&gt; other_array   -&gt;  -1, 0, +1" />
        <scope doc="Equality---Two arrays are equal if they contain the same&#xA;number of elements and if each element is equal to&#xA;(according to Object.==) the corresponding element in the&#xA;other array." ilk="function" name="==" signature="array == other_array   -&gt;   bool" />
        <scope doc="Element Reference---Returns the element at `index&apos;, or&#xA;returns a subarray starting at `start&apos; and continuing for&#xA;`length&apos; elements, or returns a subarray specified by&#xA;`range&apos;. Negative indices count backward from the end of the&#xA;array (-1 is the last element)." ilk="function" name="[]" signature="array[index]                -&gt; obj      or nil&#xA;array[start, length]        -&gt; an_array or nil&#xA;array[range]                -&gt; an_array or nil&#xA;array.slice(index)          -&gt; obj      or nil&#xA;array.slice(start, length)  -&gt; an_array or nil&#xA;array.slice(range)          -&gt; an_array or nil" />
        <scope doc="Element Assignment---Sets the element at `index&apos;, or&#xA;replaces a subarray starting at `start&apos; and continuing for&#xA;`length&apos; elements, or replaces a subarray specified by&#xA;`range&apos;. If indices are greater than the current capacity of&#xA;the array, the array grows automatically." ilk="function" name="[]=" signature="array[index]         = obj                     -&gt;  obj&#xA;array[start, length] = obj or an_array or nil  -&gt;  obj or an_array or nil&#xA;array[range]         = obj or an_array or nil  -&gt;  obj or an_array or nil" />
        <scope doc="Calculates the set of unambiguous abbreviations for the&#xA;strings in self. If passed a pattern or a string, only the&#xA;strings matching the pattern or starting with the string are&#xA;considered." ilk="function" name="abbrev" signature="(pattern = nil)" />
        <scope doc="Searches through an array whose elements are also arrays&#xA;comparing `obj&apos; with the first element of each contained&#xA;array using obj.==. Returns the first contained array that&#xA;matches (that is, the first associated array), or nil if no&#xA;match is found." ilk="function" name="assoc" signature="array.assoc(obj)   -&gt;  an_array  or  nil" />
        <scope doc="Returns the element at `index&apos;. A negative index counts from&#xA;the end of `self&apos;." ilk="function" name="at" signature="array.at(index)   -&gt;   obj  or nil" />
        <scope doc="Removes all elements from `self&apos;." ilk="function" name="clear" signature="array.clear    -&gt;  array" />
        <scope doc="Invokes `block&apos; once for each element of `self&apos;. Creates a&#xA;new array containing the values returned by the block." ilk="function" name="collect" signature="array.collect {|item| block }  -&gt; an_array&#xA;array.map     {|item| block }  -&gt; an_array" />
        <scope doc="Invokes the block once for each element of `self&apos;, replacing&#xA;the element with the value returned by `block&apos;. See also&#xA;Enumerable#collect." ilk="function" name="collect!" signature="array.collect! {|item| block }   -&gt;   array&#xA;array.map!     {|item| block }   -&gt;   array" />
        <scope doc="Returns a copy of `self&apos; with all nil elements removed." ilk="function" name="compact" signature="array.compact     -&gt;  an_array" />
        <scope doc="Removes nil elements from array. Returns nil if no changes&#xA;were made." ilk="function" name="compact!" signature="array.compact!    -&gt;   array  or  nil" />
        <scope doc="Appends the elements in other_array to `self&apos;." ilk="function" name="concat" signature="array.concat(other_array)   -&gt;  array" />
        <scope doc="Deletes items from `self&apos; that are equal to `obj&apos;. If the&#xA;item is not found, returns nil." ilk="function" name="delete" signature="array.delete(obj)            -&gt; obj or nil &#xA;array.delete(obj) { block }  -&gt; obj or nil" />
        <scope doc="Deletes the element at the specified index, returning that&#xA;element, or nil if the index is out of range. See also&#xA;Array#slice!." ilk="function" name="delete_at" signature="array.delete_at(index)  -&gt; obj or nil" />
        <scope doc="Deletes every element of `self&apos; for which `block&apos; evaluates&#xA;to true." ilk="function" name="delete_if" signature="array.delete_if {|item| block }  -&gt; array" />
        <scope doc="Calls `block&apos; once for each element in `self&apos;, passing that&#xA;element as a parameter." ilk="function" name="each" signature="array.each {|item| block }   -&gt;   array" />
        <scope doc="Same as Array#each, but passes the index of the element&#xA;instead of the element itself." ilk="function" name="each_index" signature="array.each_index {|index| block }  -&gt;  array" />
        <scope doc="Returns true if `self&apos; array contains no elements." ilk="function" name="empty?" signature="array.empty?   -&gt; true or false" />
        <scope doc="Returns true if `array&apos; and `other&apos; are the same object, or&#xA;are both arrays with the same content." ilk="function" name="eql?" signature="array.eql?(other)  -&gt; true or false" />
        <scope doc="Tries to return the element at position `index&apos;. If the&#xA;index lies outside the array, the first form throws an&#xA;IndexError exception, the second form returns `default&apos;, and&#xA;the third form returns the value of invoking the block,&#xA;passing in the index." ilk="function" name="fetch" signature="array.fetch(index)                    -&gt; obj&#xA;array.fetch(index, default )          -&gt; obj&#xA;array.fetch(index) {|index| block }   -&gt; obj" />
        <scope doc="The first three forms set the selected elements of `self&apos;&#xA;(which may be the entire array) to `obj&apos;. A `start&apos; of nil&#xA;is equivalent to zero." ilk="function" name="fill" signature="array.fill(obj)                                -&gt; array&#xA;array.fill(obj, start [, length])              -&gt; array&#xA;array.fill(obj, range )                        -&gt; array&#xA;array.fill {|index| block }                    -&gt; array&#xA;array.fill(start [, length] ) {|index| block } -&gt; array&#xA;array.fill(range) {|index| block }             -&gt; array" />
        <scope doc="Returns the first element, or the first n elements, of the&#xA;array. If the array is empty, the first form returns nil,&#xA;and the second form returns an empty array." ilk="function" name="first" signature="array.first   -&gt;   obj or nil&#xA;array.first(n) -&gt; an_array" />
        <scope doc="Returns a new array that is a one-dimensional flattening of&#xA;this array (recursively). That is, for every element that is&#xA;an array, extract its elements into the new array." ilk="function" name="flatten" signature="array.flatten -&gt; an_array" />
        <scope doc="Flattens `self&apos; in place." ilk="function" name="flatten!" signature="array.flatten! -&gt; array or nil" />
        <scope doc="Return true if this array is frozen (or temporarily frozen&#xA;while being sorted)." ilk="function" name="frozen?" signature="array.frozen?  -&gt; true or false" />
        <scope doc="Compute a hash-code for this array. Two arrays with the same&#xA;content will have the same hash code (and will compare using&#xA;eql?)." ilk="function" name="hash" signature="array.hash   -&gt; fixnum" />
        <scope doc="Returns true if the given object is present in `self&apos; (that&#xA;is, if any object == `anObject&apos;), false otherwise." ilk="function" name="include?" signature="array.include?(obj)   -&gt; true or false" />
        <scope doc="Returns the index of the first object in `self&apos; such that is&#xA;== to `obj&apos;. Returns nil if no match is found." ilk="function" name="index" signature="array.index(obj)   -&gt;  int or nil" />
        <scope doc="Deprecated; use Array#values_at." ilk="function" name="indexes" signature="array.indexes( i1, i2, ... iN )   -&gt; an_array&#xA;array.indices( i1, i2, ... iN )   -&gt; an_array" />
        <scope doc="Deprecated; use Array#values_at." ilk="function" name="indices" signature="array.indexes( i1, i2, ... iN )   -&gt; an_array&#xA;array.indices( i1, i2, ... iN )   -&gt; an_array" />
        <scope doc="Replaces the contents of `self&apos; with the contents of&#xA;`other_array&apos;, truncating or expanding if necessary." ilk="function" name="initialize_copy" signature="array.replace(other_array)  -&gt; array" />
        <scope doc="Inserts the given values before the element with the given&#xA;index (which may be negative)." ilk="function" name="insert" signature="array.insert(index, obj...)  -&gt; array" />
        <scope doc="Create a printable version of `array&apos;." ilk="function" name="inspect" signature="array.inspect  -&gt; string" />
        <scope doc="Returns a string created by converting each element of the&#xA;array to a string, separated by `sep&apos;." ilk="function" name="join" signature="array.join(sep=$,)    -&gt; str" />
        <scope doc="Returns the last element(s) of `self&apos;. If the array is&#xA;empty, the first form returns nil." ilk="function" name="last" signature="array.last     -&gt;  obj or nil&#xA;array.last(n)  -&gt;  an_array" />
        <scope doc="Returns the number of elements in `self&apos;. May be zero." ilk="function" name="length" signature="array.length -&gt; int" />
        <scope doc="Invokes `block&apos; once for each element of `self&apos;. Creates a&#xA;new array containing the values returned by the block." ilk="function" name="map" signature="array.collect {|item| block }  -&gt; an_array&#xA;array.map     {|item| block }  -&gt; an_array" />
        <scope doc="Invokes the block once for each element of `self&apos;, replacing&#xA;the element with the value returned by `block&apos;. See also&#xA;Enumerable#collect." ilk="function" name="map!" signature="array.collect! {|item| block }   -&gt;   array&#xA;array.map!     {|item| block }   -&gt;   array" />
        <scope doc="Returns the number of non-nil elements in `self&apos;. May be&#xA;zero." ilk="function" name="nitems" signature="array.nitems -&gt; int" />
        <scope doc="Packs the contents of `arr&apos; into a binary sequence according&#xA;to the directives in `aTemplateString&apos; (see the table below)&#xA;Directives ``A,&apos;&apos; ``a,&apos;&apos; and ``Z&apos;&apos; may be followed by a&#xA;count, which gives the width of the resulting field. The&#xA;remaining directives also may take a count, indicating the&#xA;number of array elements to convert." ilk="function" name="pack" signature="arr.pack ( aTemplateString ) -&gt; aBinaryString" />
        <scope doc="Removes the last element from `self&apos; and returns it, or nil&#xA;if the array is empty." ilk="function" name="pop" signature="array.pop  -&gt; obj or nil" />
        <scope doc="Append---Pushes the given object(s) on to the end of this&#xA;array. This expression returns the array itself, so several&#xA;appends may be chained together." ilk="function" name="push" signature="array.push(obj, ... )   -&gt; array" />
        <scope doc="Searches through the array whose elements are also arrays.&#xA;Compares `key&apos; with the second element of each contained&#xA;array using ==." ilk="function" name="rassoc" signature="array.rassoc(key) -&gt; an_array or nil" />
        <scope doc="Returns a new array containing the items in `self&apos; for which&#xA;the block is not true." ilk="function" name="reject" signature="array.reject {|item| block }  -&gt; an_array" />
        <scope doc="Equivalent to Array#delete_if, deleting elements from `self&apos;&#xA;for which the block evaluates to true, but returns nil if no&#xA;changes were made. Also see Enumerable#reject." ilk="function" name="reject!" signature="array.reject! {|item| block }  -&gt; array or nil" />
        <scope doc="Replaces the contents of `self&apos; with the contents of&#xA;`other_array&apos;, truncating or expanding if necessary." ilk="function" name="replace" signature="array.replace(other_array)  -&gt; array" />
        <scope doc="Returns a new array containing `self&apos;&apos;s elements in reverse&#xA;order." ilk="function" name="reverse" signature="array.reverse -&gt; an_array" />
        <scope doc="Reverses `self&apos; in place." ilk="function" name="reverse!" signature="array.reverse!   -&gt; array " />
        <scope doc="Same as Array#each, but traverses `self&apos; in reverse order." ilk="function" name="reverse_each" signature="array.reverse_each {|item| block } " />
        <scope doc="Returns the index of the last object in `array&apos; == to `obj&apos;.&#xA;Returns nil if no match is found." ilk="function" name="rindex" signature="array.rindex(obj)    -&gt;  int or nil" />
        <scope doc="Invokes the block passing in successive elements from&#xA;`array&apos;, returning an array containing those elements for&#xA;which the block returns a true value (equivalent to&#xA;Enumerable#select)." ilk="function" name="select" signature="array.select {|item| block } -&gt; an_array" />
        <scope doc="Returns the first element of `self&apos; and removes it (shifting&#xA;all other elements down by one). Returns nil if the array is&#xA;empty." ilk="function" name="shift" signature="array.shift   -&gt;   obj or nil" />
        <scope doc="Alias for #length" ilk="function" name="size" signature="()" />
        <scope doc="Element Reference---Returns the element at `index&apos;, or&#xA;returns a subarray starting at `start&apos; and continuing for&#xA;`length&apos; elements, or returns a subarray specified by&#xA;`range&apos;. Negative indices count backward from the end of the&#xA;array (-1 is the last element)." ilk="function" name="slice" signature="array[index]                -&gt; obj      or nil&#xA;array[start, length]        -&gt; an_array or nil&#xA;array[range]                -&gt; an_array or nil&#xA;array.slice(index)          -&gt; obj      or nil&#xA;array.slice(start, length)  -&gt; an_array or nil&#xA;array.slice(range)          -&gt; an_array or nil" />
        <scope doc="Deletes the element(s) given by an index (optionally with a&#xA;length) or by a range. Returns the deleted object, subarray,&#xA;or nil if the index is out of range." ilk="function" name="slice!" signature="array.slice!(index)         -&gt; obj or nil&#xA;array.slice!(start, length) -&gt; sub_array or nil&#xA;array.slice!(range)         -&gt; sub_array or nil " />
        <scope doc="Returns a new array created by sorting `self&apos;. Comparisons&#xA;for the sort will be done using the &lt;=&gt; operator or using an&#xA;optional code block." ilk="function" name="sort" signature="array.sort                   -&gt; an_array &#xA;array.sort {| a,b | block }  -&gt; an_array " />
        <scope doc="Sorts `self&apos;. Comparisons for the sort will be done using&#xA;the &lt;=&gt; operator or using an optional code block." ilk="function" name="sort!" signature="array.sort!                   -&gt; array&#xA;array.sort! {| a,b | block }  -&gt; array " />
        <scope doc="Returns `self&apos;. If called on a subclass of Array, converts&#xA;the receiver to an Array object." ilk="function" name="to_a" signature="array.to_a     -&gt; array" />
        <scope doc="Returns `self&apos;." ilk="function" name="to_ary" signature="array.to_ary -&gt; array" />
        <scope doc="Returns `self&apos;.join." ilk="function" name="to_s" signature="array.to_s -&gt; string" />
        <scope doc="Assumes that `self&apos; is an array of arrays and transposes the&#xA;rows and columns." ilk="function" name="transpose" signature="array.transpose -&gt; an_array" />
        <scope doc="Returns a new array by removing duplicate values in `self&apos;." ilk="function" name="uniq" signature="array.uniq   -&gt; an_array" />
        <scope doc="Removes duplicate elements from `self&apos;. Returns nil if no&#xA;changes are made (that is, no duplicates are found)." ilk="function" name="uniq!" signature="array.uniq! -&gt; array or nil" />
        <scope doc="Prepends objects to the front of `array&apos;. other elements up&#xA;one." ilk="function" name="unshift" signature="array.unshift(obj, ...)  -&gt; array" />
        <scope doc="Returns an array containing the elements in `self&apos;&#xA;corresponding to the given selector(s). The selectors may be&#xA;either integer indices or ranges." ilk="function" name="values_at" signature="array.values_at(selector,... )  -&gt; an_array" />
        <scope doc="Converts any arguments to arrays, then merges elements of&#xA;`self&apos; with corresponding elements from each argument. This&#xA;generates a sequence of self.size `n&apos;-element arrays, where&#xA;`n&apos; is one more that the count of arguments." ilk="function" name="zip" signature="array.zip(arg, ...)                   -&gt; an_array&#xA;array.zip(arg, ...) {| arr | block }  -&gt; nil" />
        <scope doc="Set Union---Returns a new array by joining this array with&#xA;other_array, removing duplicates." ilk="function" name="|" signature="array | other_array     -&gt;  an_array" />
      </scope>
      <scope classrefs="Integer" doc="Bignum objects hold integers outside the range of Fixnum.&#xA;Bignum objects are created automatically when integer&#xA;calculations would otherwise overflow a Fixnum." ilk="class" name="Bignum">
        <scope doc="Returns big modulo other. See Numeric.divmod for more&#xA;information." ilk="function" name="%" signature="big % other         =&gt; Numeric&#xA;big.modulo(other)   =&gt; Numeric" />
        <scope doc="Performs bitwise and between `big&apos; and `numeric&apos;." ilk="function" name="&amp;" signature="big &amp; numeric   =&gt;  integer" />
        <scope doc="Multiplies big and other, returning the result." ilk="function" name="*" signature="big * other  =&gt; Numeric" />
        <scope doc="Raises `big&apos; to the `exponent&apos; power (which may be an&#xA;integer, float, or anything that will coerce to a number)." ilk="function" name="**" signature="big ** exponent   #=&gt; numeric" />
        <scope doc="Adds big and other, returning the result." ilk="function" name="+" signature="big + other  =&gt; Numeric" />
        <scope doc="Divides big by other, returning the result." ilk="function" name="/" signature="big / other     =&gt; Numeric&#xA;big.div(other)  =&gt; Numeric" />
        <scope doc="Shifts big left `numeric&apos; positions (right if `numeric&apos; is&#xA;negative)." ilk="function" name="&lt;&lt;" signature="big &lt;&lt; numeric   =&gt;  integer" />
        <scope doc="Comparison---Returns -1, 0, or +1 depending on whether `big&apos;&#xA;is less than, equal to, or greater than `numeric&apos;. This is&#xA;the basis for the tests in Comparable." ilk="function" name="&lt;=&gt;" signature="big &lt;=&gt; numeric   =&gt; -1, 0, +1" />
        <scope doc="Returns true only if `obj&apos; has the same value as `big&apos;.&#xA;Contrast this with Bignum#eql?, which requires `obj&apos; to be a&#xA;Bignum." ilk="function" name="==" signature="big == obj  =&gt; true or false" />
        <scope doc="Shifts big right `numeric&apos; positions (left if `numeric&apos; is&#xA;negative)." ilk="function" name="&gt;&gt;" signature="big &gt;&gt; numeric   =&gt;  integer" />
        <scope doc="Bit Reference---Returns the `n&apos;th bit in the (assumed)&#xA;binary representation of `big&apos;, where `big&apos;[0] is the least&#xA;significant bit." ilk="function" name="[]" signature="big[n] -&gt; 0, 1" />
        <scope doc="Performs bitwise +exclusive or+ between `big&apos; and `numeric&apos;." ilk="function" name="^" signature="big ^ numeric   =&gt;  integer" />
        <scope doc="Returns the absolute value of `big&apos;." ilk="function" name="abs" signature="big.abs -&gt; aBignum" />
        <scope doc="MISSING: documentation" ilk="function" name="coerce" signature="(p1)" />
        <scope doc="Divides big by other, returning the result." ilk="function" name="div" signature="big / other     =&gt; Numeric&#xA;big.div(other)  =&gt; Numeric" />
        <scope doc="See Numeric#divmod." ilk="function" name="divmod" signature="big.divmod(numeric)   =&gt; array" />
        <scope doc="Returns true only if `obj&apos; is a Bignum with the same value&#xA;as `big&apos;. Contrast this with Bignum#==, which performs type&#xA;conversions." ilk="function" name="eql?" signature="big.eql?(obj)   =&gt; true or false" />
        <scope doc="Compute a hash based on the value of `big&apos;." ilk="function" name="hash" signature="big.hash   =&gt; fixnum" />
        <scope doc="Returns big modulo other. See Numeric.divmod for more&#xA;information." ilk="function" name="modulo" signature="big % other         =&gt; Numeric&#xA;big.modulo(other)   =&gt; Numeric" />
        <scope doc="Alias for #**" ilk="function" name="power!" signature="(p1)" />
        <scope doc="Returns the floating point result of dividing `big&apos; by&#xA;`numeric&apos;." ilk="function" name="quo" signature="big.quo(numeric) -&gt; float" />
        <scope doc="Alias for #quo" ilk="function" name="rdiv" signature="(p1)" />
        <scope doc="Returns the remainder after dividing `big&apos; by `numeric&apos;." ilk="function" name="remainder" signature="big.remainder(numeric)    =&gt; number" />
        <scope doc="Returns a Rational number if the result is in fact rational&#xA;(i.e. other &lt; 0)." ilk="function" name="rpower" signature="(other)" />
        <scope doc="Returns the number of bytes in the machine representation of&#xA;`big&apos;." ilk="function" name="size" signature="big.size -&gt; integer" />
        <scope doc="Converts `big&apos; to a Float. If `big&apos; doesn&apos;t fit in a Float,&#xA;the result is infinity." ilk="function" name="to_f" signature="big.to_f -&gt; float" />
        <scope doc="Returns a string containing the representation of `big&apos;&#xA;radix `base&apos; (2 through 36)." ilk="function" name="to_s" signature="big.to_s(base=10)   =&gt;  string" />
        <scope doc="Performs bitwise or between `big&apos; and `numeric&apos;." ilk="function" name="|" signature="big | numeric   =&gt;  integer" />
        <scope doc="Inverts the bits in big. As Bignums are conceptually&#xA;infinite length, the result acts as if it had an infinite&#xA;number of one bits to the left." ilk="function" name="~" signature="~big  =&gt;  integer" />
      </scope>
      <scope classrefs="Object" doc="Objects of class Binding encapsulate the execution context&#xA;at some particular place in the code and retain this context&#xA;for future use. The variables, methods, value of self, and&#xA;possibly an iterator block that can be accessed in this&#xA;context are all retained." ilk="class" name="Binding">
        <scope doc="MISSING: documentation" ilk="function" name="clone" signature="()" />
        <scope doc="MISSING: documentation" ilk="function" name="dup" signature="()" />
      </scope>
      <scope classrefs="Module" doc="Classes in Ruby are first-class objects---each is an&#xA;instance of class Class." ilk="class" name="Class">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new anonymous (unnamed) class with the given&#xA;superclass (or Object if no parameter is given). You can&#xA;give a class a name by assigning the class object to a&#xA;constant." ilk="function" name="new" signature="Class.new(super_class=Object)   =&gt;    a_class" />
        <scope doc="Allocates space for a new object of `class&apos;&apos;s class. The&#xA;returned object must be an instance of `class&apos;." ilk="function" name="allocate" signature="class.allocate()   =&gt;   obj" />
        <scope doc="Not documented" ilk="function" name="inherited" signature="(p1)" />
        <scope doc="Calls allocate to create a new object of `class&apos;&apos;s class,&#xA;then invokes that object&apos;s initialize method, passing it&#xA;`args&apos;. This is the method that ends up getting called&#xA;whenever an object is constructed using .new." ilk="function" name="new" signature="class.new(args, ...)    =&gt;  obj" />
        <scope doc="Returns the superclass of `class&apos;, or nil." ilk="function" name="superclass" signature="class.superclass -&gt; a_super_class or nil" />
      </scope>
      <scope classrefs="Object" doc="Continuation objects are generated by Kernel#callcc. They&#xA;hold a return address and execution context, allowing a&#xA;nonlocal return to the end of the callcc block from anywhere&#xA;within a program." ilk="class" name="Continuation">
        <scope doc="Invokes the continuation. The program continues from the end&#xA;of the callcc block." ilk="function" name="[]" signature="cont.call(args, ...) &#xA;cont[args, ...]" />
        <scope doc="Invokes the continuation. The program continues from the end&#xA;of the callcc block." ilk="function" name="call" signature="cont.call(args, ...) &#xA;cont[args, ...]" />
      </scope>
      <scope classrefs="Object" ilk="class" name="Data" />
      <scope classrefs="Object" doc="tmpdir - retrieve temporary directory path" ilk="class" name="Dir">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" doc="Equivalent to calling `dir&apos;.glob(`string,&apos;0)." ilk="function" name="[]" signature="Dir[ string ] =&gt; array" />
        <scope attributes="__classmethod__" doc="Changes the current working directory of the process to the&#xA;given string. When called without an argument, changes the&#xA;directory to the value of the environment variable HOME, or&#xA;LOGDIR." ilk="function" name="chdir" signature="Dir.chdir( [ string] ) =&gt; 0&#xA;Dir.chdir( [ string] ) {| path | block }  =&gt; anObject" />
        <scope attributes="__classmethod__" doc="Changes this process&apos;s idea of the file system root. Only a&#xA;privileged process may make this call." ilk="function" name="chroot" signature="Dir.chroot( string ) =&gt; 0" />
        <scope attributes="__classmethod__" doc="Deletes the named directory. Raises a subclass of&#xA;SystemCallError if the directory isn&apos;t empty." ilk="function" name="delete" signature="Dir.delete( string ) =&gt; 0&#xA;Dir.rmdir( string ) =&gt; 0&#xA;Dir.unlink( string ) =&gt; 0" />
        <scope attributes="__classmethod__" doc="Returns an array containing all of the filenames in the&#xA;given directory. Will raise a SystemCallError if the named&#xA;directory doesn&apos;t exist." ilk="function" name="entries" signature="Dir.entries( dirname ) =&gt; array" />
        <scope attributes="__classmethod__" doc="Calls the block once for each entry in the named directory,&#xA;passing the filename of each entry as a parameter to the&#xA;block." ilk="function" name="foreach" signature="Dir.foreach( dirname ) {| filename | block }  =&gt; nil" />
        <scope attributes="__classmethod__" doc="Returns the path to the current working directory of this&#xA;process as a string." ilk="function" name="getwd" signature="Dir.getwd =&gt; string&#xA;Dir.pwd =&gt; string" />
        <scope attributes="__classmethod__" doc="Returns the filenames found by expanding the pattern given&#xA;in `string&apos;, either as an `array&apos; or as parameters to the&#xA;block. Note that this pattern is not a regexp (it&apos;s closer&#xA;to a shell glob)." ilk="function" name="glob" signature="Dir.glob( string, [flags] ) =&gt; array&#xA;Dir.glob( string, [flags] ) {| filename | block }  =&gt; nil" />
        <scope attributes="__classmethod__" doc="Makes a new directory named by `string&apos;, with permissions&#xA;specified by the optional parameter `anInteger&apos;. The&#xA;permissions may be modified by the value of File::umask, and&#xA;are ignored on NT." ilk="function" name="mkdir" signature="Dir.mkdir( string [, integer] ) =&gt; 0" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new directory object for the named directory." ilk="function" name="new" signature="Dir.new( string ) -&gt; aDir" />
        <scope attributes="__classmethod__" doc="With no block, open is a synonym for Dir::new. If a block is&#xA;present, it is passed `aDir&apos; as a parameter." ilk="function" name="open" signature="Dir.open( string ) =&gt; aDir&#xA;Dir.open( string ) {| aDir | block } =&gt; anObject" />
        <scope attributes="__classmethod__" doc="Returns the path to the current working directory of this&#xA;process as a string." ilk="function" name="pwd" signature="Dir.getwd =&gt; string&#xA;Dir.pwd =&gt; string" />
        <scope attributes="__classmethod__" doc="Deletes the named directory. Raises a subclass of&#xA;SystemCallError if the directory isn&apos;t empty." ilk="function" name="rmdir" signature="Dir.delete( string ) =&gt; 0&#xA;Dir.rmdir( string ) =&gt; 0&#xA;Dir.unlink( string ) =&gt; 0" />
        <scope attributes="__classmethod__" doc="Returns the operating system&apos;s temporary file path." ilk="function" name="tmpdir" signature="()" />
        <scope attributes="__classmethod__" doc="Deletes the named directory. Raises a subclass of&#xA;SystemCallError if the directory isn&apos;t empty." ilk="function" name="unlink" signature="Dir.delete( string ) =&gt; 0&#xA;Dir.rmdir( string ) =&gt; 0&#xA;Dir.unlink( string ) =&gt; 0" />
        <scope doc="Closes the directory stream. Any further attempts to access&#xA;`dir&apos; will raise an IOError." ilk="function" name="close" signature="dir.close =&gt; nil" />
        <scope doc="Calls the block once for each entry in this directory,&#xA;passing the filename of each entry as a parameter to the&#xA;block." ilk="function" name="each" signature="dir.each { |filename| block }  =&gt; dir" />
        <scope doc="Returns the path parameter passed to `dir&apos;&apos;s constructor." ilk="function" name="path" signature="dir.path =&gt; string or nil" />
        <scope doc="Returns the current position in `dir&apos;. See also Dir#seek." ilk="function" name="pos" signature="dir.pos =&gt; integer&#xA;dir.tell =&gt; integer" />
        <scope doc="Synonym for Dir#seek, but returns the position parameter." ilk="function" name="pos=" signature="dir.pos( integer ) =&gt; integer" />
        <scope doc="Reads the next entry from `dir&apos; and returns it as a string.&#xA;Returns nil at the end of the stream." ilk="function" name="read" signature="dir.read =&gt; string or nil" />
        <scope doc="Repositions `dir&apos; to the first entry." ilk="function" name="rewind" signature="dir.rewind =&gt; dir" />
        <scope doc="Seeks to a particular location in `dir&apos;. `integer&apos; must be a&#xA;value returned by Dir#tell." ilk="function" name="seek" signature="dir.seek( integer ) =&gt; dir" />
        <scope doc="Returns the current position in `dir&apos;. See also Dir#seek." ilk="function" name="tell" signature="dir.pos =&gt; integer&#xA;dir.tell =&gt; integer" />
      </scope>
      <scope classrefs="IOError" ilk="class" name="EOFError" />
      <scope classrefs="Object" doc="Descendents of class Exception are used to communicate&#xA;between raise methods and rescue statements in begin/end&#xA;blocks. Exception objects carry information about the&#xA;exception---its type (the exception&apos;s class name), an&#xA;optional descriptive string, and optional traceback&#xA;information." ilk="class" name="Exception">
        <scope attributes="__classmethod__" doc="With no argument, or if the argument is the same as the&#xA;receiver, return the receiver. Otherwise, create a new&#xA;exception object of the same class as the receiver, but with&#xA;a message equal to string.to_str." ilk="function" name="exception" signature="exc.exception(string) -&gt; an_exception or exc" />
        <scope attributes="__classmethod__ __ctor__" doc="Construct a new Exception object, optionally passing in a&#xA;message." ilk="function" name="new" signature="Exception.new(msg = nil)   =&gt;  exception" />
        <scope doc="Returns any backtrace associated with the exception." ilk="function" name="backtrace" signature="exception.backtrace    =&gt; array" />
        <scope doc="With no argument, or if the argument is the same as the&#xA;receiver, return the receiver. Otherwise, create a new&#xA;exception object of the same class as the receiver, but with&#xA;a message equal to string.to_str." ilk="function" name="exception" signature="exc.exception(string) -&gt; an_exception or exc" />
        <scope doc="Return this exception&apos;s class name an message" ilk="function" name="inspect" signature="exception.inspect   =&gt; string" />
        <scope doc="Returns the result of invoking exception.to_s. Normally this&#xA;returns the exception&apos;s message or name." ilk="function" name="message" signature="exception.message   =&gt;  string&#xA;exception.to_str    =&gt;  string" />
        <scope doc="Sets the backtrace information associated with `exc&apos;. The&#xA;argument must be an array of String objects in the format&#xA;described in Exception#backtrace." ilk="function" name="set_backtrace" signature="exc.set_backtrace(array)   =&gt;  array" />
        <scope doc="Returns exception&apos;s message (or the name of the exception if&#xA;no message is set)." ilk="function" name="to_s" signature="exception.to_s   =&gt;  string" />
        <scope doc="Returns the result of invoking exception.to_s. Normally this&#xA;returns the exception&apos;s message or name." ilk="function" name="to_str" signature="exception.message   =&gt;  string&#xA;exception.to_str    =&gt;  string" />
      </scope>
      <scope classrefs="Object" doc="The global value false is the only instance of class&#xA;FalseClass and represents a logically false value in boolean&#xA;expressions. The class provides operators allowing false to&#xA;participate correctly in logical expressions." ilk="class" name="FalseClass">
        <scope doc="And---Returns false. `obj&apos; is always evaluated as it is the&#xA;argument to a method call---there is no short-circuit&#xA;evaluation in this case." ilk="function" name="&amp;" signature="false &amp; obj   =&gt; false&#xA;nil &amp; obj     =&gt; false" />
        <scope doc="Exclusive Or---If `obj&apos; is nil or false, returns false;&#xA;otherwise, returns true." ilk="function" name="^" signature="false ^ obj    =&gt; true or false&#xA;nil   ^ obj    =&gt; true or false" />
        <scope doc="&apos;nuf said..." ilk="function" name="to_s" signature="false.to_s   =&gt;  &quot;false&quot;" />
        <scope doc="Or---Returns false if `obj&apos; is nil or false; true otherwise." ilk="function" name="|" signature="false | obj   =&gt;   true or false&#xA;nil   | obj   =&gt;   true or false" />
      </scope>
      <scope classrefs="IO" doc="A File is an abstraction of any file object accessible by&#xA;the program and is closely associated with class IO File&#xA;includes the methods of module FileTest as class methods,&#xA;allowing you to write (for example) File.exist?(&quot;foo&quot;)." ilk="class" name="File">
        <scope attributes="__classmethod__" doc="Returns the last access time for the named file as a Time&#xA;object)." ilk="function" name="atime" signature="File.atime(file_name)  =&gt;  time" />
        <scope attributes="__classmethod__" doc="Returns the last component of the filename given in&#xA;`file_name&apos;, which must be formed using forward slashes&#xA;(``/&apos;&apos;) regardless of the separator used on the local file&#xA;system. If `suffix&apos; is given and present at the end of&#xA;`file_name&apos;, it is removed." ilk="function" name="basename" signature="File.basename(file_name [, suffix] ) -&gt; base_name" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is a block device." ilk="function" name="blockdev?" signature="File.blockdev?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is a character device." ilk="function" name="chardev?" signature="File.chardev?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Changes permission bits on the named file(s) to the bit&#xA;pattern represented by `mode_int&apos;. Actual effects are&#xA;operating system dependent (see the beginning of this&#xA;section)." ilk="function" name="chmod" signature="File.chmod(mode_int, file_name, ... ) -&gt; integer" />
        <scope attributes="__classmethod__" doc="Changes the owner and group of the named file(s) to the&#xA;given numeric owner and group id&apos;s. Only a process with&#xA;superuser privileges may change the owner of a file." ilk="function" name="chown" signature="File.chown(owner_int, group_int, file_name,... ) -&gt; integer" />
        <scope attributes="__classmethod__" doc="Returns the change time for the named file (the time at&#xA;which directory information about the file was changed, not&#xA;the file itself)." ilk="function" name="ctime" signature="File.ctime(file_name)  =&gt; time" />
        <scope attributes="__classmethod__" doc="Deletes the named files, returning the number of names&#xA;passed as arguments. Raises an exception on any error." ilk="function" name="delete" signature="File.delete(file_name, ...)  =&gt; integer&#xA;File.unlink(file_name, ...)  =&gt; integer" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is a directory, false&#xA;otherwise." ilk="function" name="directory?" signature="File.directory?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Returns all components of the filename given in `file_name&apos;&#xA;except the last one. The filename must be formed using&#xA;forward slashes (``/&apos;&apos;) regardless of the separator used on&#xA;the local file system." ilk="function" name="dirname" signature="File.dirname(file_name ) -&gt; dir_name" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is executable by the&#xA;effective user id of this process." ilk="function" name="executable?" signature="File.executable?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is executable by the real&#xA;user id of this process." ilk="function" name="executable_real?" signature="File.executable_real?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Return true if the named file exists." ilk="function" name="exist?" signature="File.exist?(file_name)    =&gt;  true or false&#xA;File.exists?(file_name)   =&gt;  true or false    (obsolete)" />
        <scope attributes="__classmethod__" doc="Return true if the named file exists." ilk="function" name="exists?" signature="File.exist?(file_name)    =&gt;  true or false&#xA;File.exists?(file_name)   =&gt;  true or false    (obsolete)" />
        <scope attributes="__classmethod__" doc="Converts a pathname to an absolute pathname. Relative paths&#xA;are referenced from the current working directory of the&#xA;process unless `dir_string&apos; is given, in which case it will&#xA;be used as the starting point." ilk="function" name="expand_path" signature="File.expand_path(file_name [, dir_string] ) -&gt; abs_file_name" />
        <scope attributes="__classmethod__" doc="Returns the extension (the portion of file name in `path&apos;&#xA;after the period)." ilk="function" name="extname" signature="File.extname(path) -&gt; string" />
        <scope attributes="__classmethod__" doc="Returns true if the named file exists and is a regular file." ilk="function" name="file?" signature="File.file?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if `path&apos; matches against `pattern&apos; The pattern&#xA;is not a regular expression; instead it follows rules&#xA;similar to shell filename globbing." ilk="function" name="fnmatch" signature="File.fnmatch( pattern, path, [flags] ) =&gt; (true or false)&#xA;File.fnmatch?( pattern, path, [flags] ) =&gt; (true or false)" />
        <scope attributes="__classmethod__" doc="Returns true if `path&apos; matches against `pattern&apos; The pattern&#xA;is not a regular expression; instead it follows rules&#xA;similar to shell filename globbing." ilk="function" name="fnmatch?" signature="File.fnmatch( pattern, path, [flags] ) =&gt; (true or false)&#xA;File.fnmatch?( pattern, path, [flags] ) =&gt; (true or false)" />
        <scope attributes="__classmethod__" doc="Identifies the type of the named file; the return string is&#xA;one of ``file&apos;&apos;, ``directory&apos;&apos;, ``characterSpecial&apos;&apos;,&#xA;``blockSpecial&apos;&apos;, ``fifo&apos;&apos;, ``link&apos;&apos;, ``socket&apos;&apos;, or&#xA;``unknown&apos;&apos;." ilk="function" name="ftype" signature="File.ftype(file_name)   =&gt; string" />
        <scope attributes="__classmethod__" doc="Returns true if the named file exists and the effective&#xA;group id of the calling process is the owner of the file.&#xA;Returns false on Windows." ilk="function" name="grpowned?" signature="File.grpowned?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named files are identical." ilk="function" name="identical?" signature="File.identical?(file_1, file_2)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Returns a new string formed by joining the strings using&#xA;File::SEPARATOR." ilk="function" name="join" signature="File.join(string, ...) -&gt; path" />
        <scope attributes="__classmethod__" doc="Equivalent to File::chmod, but does not follow symbolic&#xA;links (so it will change the permissions associated with the&#xA;link, not the file referenced by the link). Often not&#xA;available." ilk="function" name="lchmod" signature="File.lchmod(mode_int, file_name, ...)  =&gt; integer" />
        <scope attributes="__classmethod__" doc="Equivalent to File::chown, but does not follow symbolic&#xA;links (so it will change the owner associated with the link,&#xA;not the file referenced by the link). Often not available." ilk="function" name="lchown" signature="file.lchown(owner_int, group_int, file_name,..) =&gt; integer" />
        <scope attributes="__classmethod__" doc="Creates a new name for an existing file using a hard link.&#xA;Will not overwrite `new_name&apos; if it already exists (raising&#xA;a subclass of SystemCallError)." ilk="function" name="link" signature="File.link(old_name, new_name)    =&gt; 0" />
        <scope attributes="__classmethod__" doc="Same as File::stat, but does not follow the last symbolic&#xA;link. Instead, reports on the link itself." ilk="function" name="lstat" signature="File.lstat(file_name)   =&gt; stat" />
        <scope attributes="__classmethod__" doc="Returns the modification time for the named file as a Time&#xA;object." ilk="function" name="mtime" signature="File.mtime(file_name)  =&gt;  time" />
        <scope attributes="__classmethod__ __ctor__" doc="Opens the file named by `filename&apos; according to `mode&apos;&#xA;(default is ``r&apos;&apos;) and returns a new File object. See the&#xA;description of class IO for a description of `mode&apos;." ilk="function" name="new" signature="File.new(filename, mode=&quot;r&quot;)            =&gt; file&#xA;File.new(filename [, mode [, perm]])    =&gt; file" />
        <scope attributes="__classmethod__" doc="Returns true if the named file exists and the effective used&#xA;id of the calling process is the owner of the file." ilk="function" name="owned?" signature="File.owned?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is a pipe." ilk="function" name="pipe?" signature="File.pipe?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is readable by the effective&#xA;user id of this process." ilk="function" name="readable?" signature="File.readable?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is readable by the real user&#xA;id of this process." ilk="function" name="readable_real?" signature="File.readable_real?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns the name of the file referenced by the given link.&#xA;Not available on all platforms." ilk="function" name="readlink" signature="File.readlink(link_name) -&gt; file_name" />
        <scope attributes="__classmethod__" doc="Renames the given file to the new name. Raises a&#xA;SystemCallError if the file cannot be renamed." ilk="function" name="rename" signature="File.rename(old_name, new_name)   =&gt; 0" />
        <scope attributes="__classmethod__" doc="Returns true if the named file has the setgid bit set." ilk="function" name="setgid?" signature="File.setgid?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file has the setuid bit set." ilk="function" name="setuid?" signature="File.setuid?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Returns the size of file_name." ilk="function" name="size" signature="File.size(file_name)   =&gt; integer" />
        <scope attributes="__classmethod__" doc="Returns nil if file_name doesn&apos;t exist or has zero size, the&#xA;size of the file otherwise." ilk="function" name="size?" signature="File.file?(file_name)   =&gt; integer  or  nil" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is a socket." ilk="function" name="socket?" signature="File.socket?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Splits the given string into a directory and a file&#xA;component and returns them in a two-element array. See also&#xA;File::dirname and File::basename." ilk="function" name="split" signature="File.split(file_name)   =&gt; array" />
        <scope attributes="__classmethod__" doc="Returns a File::Stat object for the named file (see&#xA;File::Stat)." ilk="function" name="stat" signature="File.stat(file_name)   =&gt;  stat" />
        <scope attributes="__classmethod__" doc="Returns true if the named file has the sticky bit set." ilk="function" name="sticky?" signature="File.sticky?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Creates a symbolic link called `new_name&apos; for the existing&#xA;file `old_name&apos;. Raises a NotImplemented exception on&#xA;platforms that do not support symbolic links." ilk="function" name="symlink" signature="File.symlink(old_name, new_name)   =&gt; 0" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is a symbolic link." ilk="function" name="symlink?" signature="File.symlink?(file_name)   =&gt;  true or false" />
        <scope attributes="__classmethod__" doc="Truncates the file `file_name&apos; to be at most `integer&apos; bytes&#xA;long. Not available on all platforms." ilk="function" name="truncate" signature="File.truncate(file_name, integer)  =&gt; 0" />
        <scope attributes="__classmethod__" doc="Returns the current umask value for this process. If the&#xA;optional argument is given, set the umask to that value and&#xA;return the previous value." ilk="function" name="umask" signature="File.umask()          =&gt; integer&#xA;File.umask(integer)   =&gt; integer" />
        <scope attributes="__classmethod__" doc="Deletes the named files, returning the number of names&#xA;passed as arguments. Raises an exception on any error." ilk="function" name="unlink" signature="File.delete(file_name, ...)  =&gt; integer&#xA;File.unlink(file_name, ...)  =&gt; integer" />
        <scope attributes="__classmethod__" doc="Sets the access and modification times of each named file to&#xA;the first two arguments. Returns the number of file names in&#xA;the argument list." ilk="function" name="utime" signature="File.utime(atime, mtime, file_name,...)   =&gt;  integer" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is writable by the effective&#xA;user id of this process." ilk="function" name="writable?" signature="File.writable?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file is writable by the real user&#xA;id of this process." ilk="function" name="writable_real?" signature="File.writable_real?(file_name)   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns true if the named file exists and has a zero size." ilk="function" name="zero?" signature="File.zero?(file_name)   =&gt; true or false" />
        <scope doc="Returns the last access time (a Time object)" ilk="function" name="atime" signature="file.atime    =&gt; time" />
        <scope doc="Changes permission bits on `file&apos; to the bit pattern&#xA;represented by `mode_int&apos;. Actual effects are platform&#xA;dependent; on Unix systems, see chmod(2) for details." ilk="function" name="chmod" signature="file.chmod(mode_int)   =&gt; 0" />
        <scope doc="Changes the owner and group of `file&apos; to the given numeric&#xA;owner and group id&apos;s. Only a process with superuser&#xA;privileges may change the owner of a file." ilk="function" name="chown" signature="file.chown(owner_int, group_int )   =&gt; 0" />
        <scope doc="Returns the change time for `file&apos; (that is, the time&#xA;directory information about the file was changed, not the&#xA;file itself)." ilk="function" name="ctime" signature="file.ctime -&gt; time" />
        <scope doc="Locks or unlocks a file according to `locking_constant&apos; (a&#xA;logical `or&apos; of the values in the table below). Returns&#xA;false if File::LOCK_NB is specified and the operation would&#xA;otherwise have blocked." ilk="function" name="flock" signature="file.flock (locking_constant ) =&gt;  0 or false" />
        <scope doc="Same as IO#stat, but does not follow the last symbolic link.&#xA;Instead, reports on the link itself." ilk="function" name="lstat" signature="file.lstat   =&gt;  stat" />
        <scope doc="Returns the modification time for `file&apos;." ilk="function" name="mtime" signature="file.mtime -&gt; time" />
        <scope doc="Returns the pathname used to create `file&apos; as a string. Does&#xA;not normalize the name." ilk="function" name="path" signature="file.path -&gt; filename" />
        <scope doc="Truncates `file&apos; to at most `integer&apos; bytes. The file must&#xA;be opened for writing." ilk="function" name="truncate" signature="file.truncate(integer)    =&gt; 0" />
        <variable attributes="__const__" citdl="String" name="ALT_SEPARATOR" />
        <variable attributes="__const__" citdl="String" name="PATH_SEPARATOR" />
      </scope>
      <scope classrefs="Integer" doc="A Fixnum holds Integer values that can be represented in a&#xA;native machine word (minus 1 bit). If any operation on a&#xA;Fixnum exceeds this range, the value is automatically&#xA;converted to a Bignum." ilk="class" name="Fixnum">
        <import symbol="Precision" />
        <scope attributes="__classmethod__" doc="Convert obj to a Fixnum. Works with numeric parameters." ilk="function" name="induced_from" signature="Fixnum.induced_from(obj)    =&gt;  fixnum" />
        <scope doc="Returns fix modulo other. See Numeric.divmod for more&#xA;information." ilk="function" name="%" signature="fix % other         =&gt; Numeric&#xA;fix.modulo(other)   =&gt; Numeric" />
        <scope doc="Bitwise AND." ilk="function" name="&amp;" signature="fix &amp; other     =&gt; integer" />
        <scope doc="Performs multiplication: the class of the resulting object&#xA;depends on the class of numeric and on the magnitude of the&#xA;result." ilk="function" name="*" signature="fix * numeric   =&gt;  numeric_result" />
        <scope doc="Raises fix to the other power, which may be negative or&#xA;fractional." ilk="function" name="**" signature="fix ** other         =&gt; Numeric" />
        <scope doc="Performs addition: the class of the resulting object depends&#xA;on the class of numeric and on the magnitude of the result." ilk="function" name="+" signature="fix + numeric   =&gt;  numeric_result" />
        <scope doc="Performs division: the class of the resulting object depends&#xA;on the class of numeric and on the magnitude of the result." ilk="function" name="/" signature="fix / numeric      =&gt;  numeric_result&#xA;fix.div(numeric)   =&gt;  numeric_result" />
        <scope doc="Returns true if the value of fix is less than that of other." ilk="function" name="&lt;" signature="fix &lt; other     =&gt; true or false" />
        <scope doc="Shifts `fix&apos; left `count&apos; positions (right if `count&apos; is&#xA;negative)." ilk="function" name="&lt;&lt;" signature="fix &lt;&lt; count     =&gt; integer" />
        <scope doc="Returns true if the value of fix is less thanor equal to&#xA;that of other." ilk="function" name="&lt;=" signature="fix &lt;= other     =&gt; true or false" />
        <scope doc="Comparison---Returns -1, 0, or +1 depending on whether `fix&apos;&#xA;is less than, equal to, or greater than `numeric&apos;. This is&#xA;the basis for the tests in Comparable." ilk="function" name="&lt;=&gt;" signature="fix &lt;=&gt; numeric    =&gt; -1, 0, +1" />
        <scope doc="Return true if fix equals other numerically." ilk="function" name="==" signature="fix == other" />
        <scope doc="Returns true if the value of fix is greater than that of&#xA;other." ilk="function" name="&gt;" signature="fix &gt; other     =&gt; true or false" />
        <scope doc="Returns true if the value of fix is greater than or equal to&#xA;that of other." ilk="function" name="&gt;=" signature="fix &gt;= other     =&gt; true or false" />
        <scope doc="Shifts `fix&apos; right `count&apos; positions (left if `count&apos; is&#xA;negative)." ilk="function" name="&gt;&gt;" signature="fix &gt;&gt; count     =&gt; integer" />
        <scope doc="Bit Reference---Returns the `n&apos;th bit in the binary&#xA;representation of `fix&apos;, where `fix&apos;[0] is the least&#xA;significant bit." ilk="function" name="[]" signature="fix[n]     =&gt; 0, 1" />
        <scope doc="Bitwise EXCLUSIVE OR." ilk="function" name="^" signature="fix ^ other     =&gt; integer" />
        <scope doc="Returns the absolute value of `fix&apos;." ilk="function" name="abs" signature="fix.abs -&gt; aFixnum" />
        <scope doc="Performs division: the class of the resulting object depends&#xA;on the class of numeric and on the magnitude of the result." ilk="function" name="div" signature="fix / numeric      =&gt;  numeric_result&#xA;fix.div(numeric)   =&gt;  numeric_result" />
        <scope doc="See Numeric#divmod." ilk="function" name="divmod" signature="fix.divmod(numeric)    =&gt; array" />
        <scope doc="Returns the name of the object whose symbol id is `fix&apos;. If&#xA;there is no symbol in the symbol table with this value,&#xA;returns nil." ilk="function" name="id2name" signature="fix.id2name -&gt; string or nil" />
        <scope doc="Returns fix modulo other. See Numeric.divmod for more&#xA;information." ilk="function" name="modulo" signature="fix % other         =&gt; Numeric&#xA;fix.modulo(other)   =&gt; Numeric" />
        <scope doc="Alias for #**" ilk="function" name="power!" signature="(p1)" />
        <scope doc="If Rational is defined, returns a Rational number instead of&#xA;a Fixnum." ilk="function" name="quo" signature="(other)" />
        <scope doc="Alias for #quo" ilk="function" name="rdiv" signature="(p1)" />
        <scope doc="Returns a Rational number if the result is in fact rational&#xA;(i.e. other &lt; 0)." ilk="function" name="rpower" signature="(other)" />
        <scope doc="Returns the number of `bytes&apos; in the machine representation&#xA;of a Fixnum." ilk="function" name="size" signature="fix.size -&gt; fixnum" />
        <scope doc="Converts `fix&apos; to a Float." ilk="function" name="to_f" signature="fix.to_f -&gt; float" />
        <scope doc="Returns a string containing the representation of `fix&apos;&#xA;radix `base&apos; (between 2 and 36)." ilk="function" name="to_s" signature="fix.to_s( base=10 ) -&gt; aString" />
        <scope doc="Returns the symbol whose integer value is `fix&apos;. See also&#xA;Fixnum#id2name." ilk="function" name="to_sym" signature="fix.to_sym -&gt; aSymbol" />
        <scope doc="Returns true if `fix&apos; is zero." ilk="function" name="zero?" signature="fix.zero?    =&gt; true or false" />
        <scope doc="Bitwise OR." ilk="function" name="|" signature="fix | other     =&gt; integer" />
        <scope doc="One&apos;s complement: returns a number where each bit is&#xA;flipped." ilk="function" name="~" signature="~fix     =&gt; integer" />
      </scope>
      <scope classrefs="Numeric" doc="Float objects represent real numbers using the native&#xA;architecture&apos;s double-precision floating point&#xA;representation." ilk="class" name="Float">
        <import symbol="Precision" />
        <scope attributes="__classmethod__" doc="Convert obj to a float." ilk="function" name="induced_from" signature="Float.induced_from(obj)    =&gt;  float" />
        <scope doc="Return the modulo after division of flt by other." ilk="function" name="%" signature="flt % other         =&gt; float&#xA;flt.modulo(other)   =&gt; float" />
        <scope doc="Returns a new float which is the product of float and other." ilk="function" name="*" signature="float * other   =&gt; float" />
        <scope ilk="function" name="**" />
        <scope doc="Returns a new float which is the sum of float and other." ilk="function" name="+" signature="float + other   =&gt; float" />
        <scope doc="Returns a new float which is the result of dividing float by&#xA;other." ilk="function" name="/" signature="float / other   =&gt; float" />
        <scope doc="true if flt is less than other." ilk="function" name="&lt;" signature="flt &lt; other    =&gt;  true or false" />
        <scope doc="true if flt is less than or equal to other." ilk="function" name="&lt;=" signature="flt &lt;= other    =&gt;  true or false" />
        <scope doc="Returns -1, 0, or +1 depending on whether `flt&apos; is less&#xA;than, equal to, or greater than `numeric&apos;. This is the basis&#xA;for the tests in Comparable." ilk="function" name="&lt;=&gt;" signature="flt &lt;=&gt; numeric   =&gt; -1, 0, +1" />
        <scope doc="Returns true only if `obj&apos; has the same value as `flt&apos;.&#xA;Contrast this with Float#eql?, which requires `obj&apos; to be a&#xA;Float." ilk="function" name="==" signature="flt == obj   =&gt; true or false" />
        <scope doc="true if flt is greater than other." ilk="function" name="&gt;" signature="flt &gt; other    =&gt;  true or false" />
        <scope doc="true if flt is greater than or equal to other." ilk="function" name="&gt;=" signature="flt &gt;= other    =&gt;  true or false" />
        <scope doc="Returns the absolute value of `flt&apos;." ilk="function" name="abs" signature="flt.abs    =&gt; float" />
        <scope doc="Returns the smallest Integer greater than or equal to `flt&apos;." ilk="function" name="ceil" signature="flt.ceil    =&gt; integer" />
        <scope doc="MISSING: documentation" ilk="function" name="coerce" signature="(p1)" />
        <scope doc="See Numeric#divmod." ilk="function" name="divmod" signature="flt.divmod(numeric)    =&gt; array" />
        <scope doc="Returns true only if `obj&apos; is a Float with the same value as&#xA;`flt&apos;. Contrast this with Float#==, which performs type&#xA;conversions." ilk="function" name="eql?" signature="flt.eql?(obj)   =&gt; true or false" />
        <scope doc="Returns true if `flt&apos; is a valid IEEE floating point number&#xA;(it is not infinite, and nan? is false)." ilk="function" name="finite?" signature="flt.finite? -&gt; true or false" />
        <scope doc="Returns the largest integer less than or equal to `flt&apos;." ilk="function" name="floor" signature="flt.floor   =&gt; integer" />
        <scope doc="Returns a hash code for this float." ilk="function" name="hash" signature="flt.hash   =&gt; integer" />
        <scope doc="Returns nil, -1, or +1 depending on whether `flt&apos; is finite,&#xA;-infinity, or +infinity." ilk="function" name="infinite?" signature="flt.infinite? -&gt; nil, -1, +1" />
        <scope doc="Return the modulo after division of flt by other." ilk="function" name="modulo" signature="flt % other         =&gt; float&#xA;flt.modulo(other)   =&gt; float" />
        <scope doc="Returns true if `flt&apos; is an invalid IEEE floating point&#xA;number." ilk="function" name="nan?" signature="flt.nan? -&gt; true or false" />
        <scope doc="Rounds `flt&apos; to the nearest integer." ilk="function" name="round" signature="flt.round   =&gt; integer" />
        <scope doc="As flt is already a float, returns `self&apos;." ilk="function" name="to_f" signature="flt.to_f   =&gt; flt" />
        <scope doc="Returns `flt&apos; truncated to an Integer." ilk="function" name="to_i" signature="flt.to_i       =&gt; integer&#xA;flt.to_int     =&gt; integer&#xA;flt.truncate   =&gt; integer" />
        <scope doc="Returns `flt&apos; truncated to an Integer." ilk="function" name="to_int" signature="flt.to_i       =&gt; integer&#xA;flt.to_int     =&gt; integer&#xA;flt.truncate   =&gt; integer" />
        <scope doc="Returns a string containing a representation of self. As&#xA;well as a fixed or exponential form of the number, the call&#xA;may return ``NaN&apos;&apos;, ``Infinity&apos;&apos;, and ``-Infinity&apos;&apos;." ilk="function" name="to_s" signature="flt.to_s    =&gt; string" />
        <scope doc="Returns `flt&apos; truncated to an Integer." ilk="function" name="truncate" signature="flt.to_i       =&gt; integer&#xA;flt.to_int     =&gt; integer&#xA;flt.truncate   =&gt; integer" />
        <scope doc="Returns true if `flt&apos; is 0.0." ilk="function" name="zero?" signature="flt.zero? -&gt; true or false" />
        <variable attributes="__const__" citdl="Fixnum" name="DIG" />
        <variable attributes="__const__" citdl="Fixnum" name="MANT_DIG" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_10_EXP" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_EXP" />
        <variable attributes="__const__" citdl="Fixnum" name="MIN_10_EXP" />
        <variable attributes="__const__" citdl="Fixnum" name="MIN_EXP" />
        <variable attributes="__const__" citdl="Fixnum" name="RADIX" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUNDS" />
      </scope>
      <scope classrefs="RangeError" ilk="class" name="FloatDomainError" />
      <scope classrefs="Object" doc="A Hash is a collection of key-value pairs. It is similar to&#xA;an Array, except that indexing is done via arbitrary keys of&#xA;any object type, not an integer index." ilk="class" name="Hash">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" doc="Creates a new hash populated with the given objects.&#xA;Equivalent to the literal { `key&apos;, `value&apos;, ..." ilk="function" name="[]" signature="Hash[ [key =&gt;|, value]* ]   =&gt; hash" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new, empty hash. If this hash is subsequently&#xA;accessed by a key that doesn&apos;t correspond to a hash entry,&#xA;the value returned depends on the style of new used to&#xA;create the hash." ilk="function" name="new" signature="Hash.new                          =&gt; hash&#xA;Hash.new(obj)                     =&gt; aHash&#xA;Hash.new {|hash, key| block }     =&gt; aHash" />
        <scope doc="Equality---Two hashes are equal if they each contain the&#xA;same number of keys and if each key-value pair is equal to&#xA;(according to Object#==) the corresponding elements in the&#xA;other hash." ilk="function" name="==" signature="hsh == other_hash    =&gt; true or false" />
        <scope doc="Element Reference---Retrieves the `value&apos; object&#xA;corresponding to the `key&apos; object. If not found, returns the&#xA;a default value (see Hash::new for details)." ilk="function" name="[]" signature="hsh[key]    =&gt;  value" />
        <scope doc="Element Assignment---Associates the value given by `value&apos;&#xA;with the key given by `key&apos;. `key&apos; should not have its value&#xA;changed while it is in use as a key (a String passed as a&#xA;key will be duplicated and frozen)." ilk="function" name="[]=" signature="hsh[key] = value        =&gt; value&#xA;hsh.store(key, value)   =&gt; value" />
        <scope doc="Removes all key-value pairs from `hsh&apos;." ilk="function" name="clear" signature="hsh.clear -&gt; hsh" />
        <scope doc="Returns the default value, the value that would be returned&#xA;by `hsh&apos;[`key&apos;] if `key&apos; did not exist in `hsh&apos;. See also&#xA;Hash::new and Hash#default=." ilk="function" name="default" signature="hsh.default(key=nil)   =&gt; obj" />
        <scope doc="Sets the default value, the value returned for a key that&#xA;does not exist in the hash. It is not possible to set the a&#xA;default to a Proc that will be executed on each key lookup." ilk="function" name="default=" signature="hsh.default = obj     =&gt; hsh" />
        <scope doc="If Hash::new was invoked with a block, return that block,&#xA;otherwise return nil." ilk="function" name="default_proc" signature="hsh.default_proc -&gt; anObject" />
        <scope doc="Deletes and returns a key-value pair from `hsh&apos; whose key is&#xA;equal to `key&apos;. If the key is not found, returns the&#xA;`default value&apos;." ilk="function" name="delete" signature="hsh.delete(key)                   =&gt; value&#xA;hsh.delete(key) {| key | block }  =&gt; value" />
        <scope doc="Deletes every key-value pair from `hsh&apos; for which `block&apos;&#xA;evaluates to true." ilk="function" name="delete_if" signature="hsh.delete_if {| key, value | block }  -&gt; hsh" />
        <scope doc="Calls `block&apos; once for each key in `hsh&apos;, passing the key&#xA;and value to the block as a two-element array. Because of&#xA;the assignment semantics of block parameters, these elements&#xA;will be split out if the block has two formal parameters." ilk="function" name="each" signature="hsh.each {| key, value | block } -&gt; hsh" />
        <scope doc="Calls `block&apos; once for each key in `hsh&apos;, passing the key as&#xA;a parameter." ilk="function" name="each_key" signature="hsh.each_key {| key | block } -&gt; hsh" />
        <scope doc="Calls `block&apos; once for each key in `hsh&apos;, passing the key&#xA;and value as parameters." ilk="function" name="each_pair" signature="hsh.each_pair {| key_value_array | block } -&gt; hsh" />
        <scope doc="Calls `block&apos; once for each key in `hsh&apos;, passing the value&#xA;as a parameter." ilk="function" name="each_value" signature="hsh.each_value {| value | block } -&gt; hsh" />
        <scope doc="Returns true if `hsh&apos; contains no key-value pairs." ilk="function" name="empty?" signature="hsh.empty?    =&gt; true or false" />
        <scope doc="Returns a value from the hash for the given key. If the key&#xA;can&apos;t be found, there are several options: With no other&#xA;arguments, it will raise an IndexError exception; if&#xA;`default&apos; is given, then that will be returned; if the&#xA;optional code block is specified, then that will be run and&#xA;its result returned." ilk="function" name="fetch" signature="hsh.fetch(key [, default] )       =&gt; obj&#xA;hsh.fetch(key) {| key | block }   =&gt; obj" />
        <scope doc="Returns true if the given key is present in `hsh&apos;." ilk="function" name="has_key?" signature="hsh.has_key?(key)    =&gt; true or false&#xA;hsh.include?(key)    =&gt; true or false&#xA;hsh.key?(key)        =&gt; true or false&#xA;hsh.member?(key)     =&gt; true or false" />
        <scope doc="Returns true if the given value is present for some key in&#xA;`hsh&apos;." ilk="function" name="has_value?" signature="hsh.has_value?(value)    =&gt; true or false&#xA;hsh.value?(value)        =&gt; true or false" />
        <scope doc="Returns true if the given key is present in `hsh&apos;." ilk="function" name="include?" signature="hsh.has_key?(key)    =&gt; true or false&#xA;hsh.include?(key)    =&gt; true or false&#xA;hsh.key?(key)        =&gt; true or false&#xA;hsh.member?(key)     =&gt; true or false" />
        <scope doc="Returns the key for a given value. If not found, returns&#xA;nil." ilk="function" name="index" signature="hsh.index(value)    =&gt; key" />
        <scope doc="Deprecated in favor of Hash#select." ilk="function" name="indexes" signature="hsh.indexes(key, ...)    =&gt; array&#xA;hsh.indices(key, ...)    =&gt; array" />
        <scope doc="Deprecated in favor of Hash#select." ilk="function" name="indices" signature="hsh.indexes(key, ...)    =&gt; array&#xA;hsh.indices(key, ...)    =&gt; array" />
        <scope doc="Replaces the contents of `hsh&apos; with the contents of&#xA;`other_hash&apos;." ilk="function" name="initialize_copy" signature="hsh.replace(other_hash) -&gt; hsh" />
        <scope doc="Return the contents of this hash as a string." ilk="function" name="inspect" signature="hsh.inspect  =&gt; string" />
        <scope doc="Returns a new hash created by using `hsh&apos;&apos;s values as keys,&#xA;and the keys as values." ilk="function" name="invert" signature="hsh.invert -&gt; aHash" />
        <scope doc="Returns true if the given key is present in `hsh&apos;." ilk="function" name="key?" signature="hsh.has_key?(key)    =&gt; true or false&#xA;hsh.include?(key)    =&gt; true or false&#xA;hsh.key?(key)        =&gt; true or false&#xA;hsh.member?(key)     =&gt; true or false" />
        <scope doc="Returns a new array populated with the keys from this hash.&#xA;See also Hash#values." ilk="function" name="keys" signature="hsh.keys    =&gt; array" />
        <scope doc="Returns the number of key-value pairs in the hash." ilk="function" name="length" signature="hsh.length    =&gt;  fixnum&#xA;hsh.size      =&gt;  fixnum" />
        <scope doc="Returns true if the given key is present in `hsh&apos;." ilk="function" name="member?" signature="hsh.has_key?(key)    =&gt; true or false&#xA;hsh.include?(key)    =&gt; true or false&#xA;hsh.key?(key)        =&gt; true or false&#xA;hsh.member?(key)     =&gt; true or false" />
        <scope doc="Returns a new hash containing the contents of `other_hash&apos;&#xA;and the contents of `hsh&apos;, overwriting entries in `hsh&apos; with&#xA;duplicate keys with those from `other_hash&apos;." ilk="function" name="merge" signature="hsh.merge(other_hash)                              -&gt; a_hash&#xA;hsh.merge(other_hash){|key, oldval, newval| block} -&gt; a_hash" />
        <scope doc="Adds the contents of `other_hash&apos; to `hsh&apos;, overwriting&#xA;entries with duplicate keys with those from `other_hash&apos;." ilk="function" name="merge!" signature="hsh.merge!(other_hash)                                 =&gt; hsh&#xA;hsh.update(other_hash)                                 =&gt; hsh&#xA;hsh.merge!(other_hash){|key, oldval, newval| block}    =&gt; hsh&#xA;hsh.update(other_hash){|key, oldval, newval| block}    =&gt; hsh" />
        <scope doc="Rebuilds the hash based on the current hash values for each&#xA;key. If values of key objects have changed since they were&#xA;inserted, this method will reindex `hsh&apos;." ilk="function" name="rehash" signature="hsh.rehash -&gt; hsh" />
        <scope doc="Same as Hash#delete_if, but works on (and returns) a copy of&#xA;the `hsh&apos;. Equivalent to `hsh&apos;.dup.delete_if." ilk="function" name="reject" signature="hsh.reject {| key, value | block }  -&gt; a_hash" />
        <scope doc="Equivalent to Hash#delete_if, but returns nil if no changes&#xA;were made." ilk="function" name="reject!" signature="hsh.reject! {| key, value | block }  -&gt; hsh or nil" />
        <scope doc="Replaces the contents of `hsh&apos; with the contents of&#xA;`other_hash&apos;." ilk="function" name="replace" signature="hsh.replace(other_hash) -&gt; hsh" />
        <scope doc="Returns a new array consisting of [key,value] pairs for&#xA;which the block returns true. Also see Hash.values_at." ilk="function" name="select" signature="hsh.select {|key, value| block}   =&gt; array" />
        <scope doc="Removes a key-value pair from `hsh&apos; and returns it as the&#xA;two-item array [ `key, value&apos; ], or the hash&apos;s default value&#xA;if the hash is empty." ilk="function" name="shift" signature="hsh.shift -&gt; anArray or obj" />
        <scope doc="Returns the number of key-value pairs in the hash." ilk="function" name="size" signature="hsh.length    =&gt;  fixnum&#xA;hsh.size      =&gt;  fixnum" />
        <scope doc="Converts `hsh&apos; to a nested array of [ `key, value&apos; ] arrays&#xA;and sorts it, using Array#sort." ilk="function" name="sort" signature="hsh.sort                    =&gt; array &#xA;hsh.sort {| a, b | block }  =&gt; array " />
        <scope doc="Element Assignment---Associates the value given by `value&apos;&#xA;with the key given by `key&apos;. `key&apos; should not have its value&#xA;changed while it is in use as a key (a String passed as a&#xA;key will be duplicated and frozen)." ilk="function" name="store" signature="hsh[key] = value        =&gt; value&#xA;hsh.store(key, value)   =&gt; value" />
        <scope doc="Converts `hsh&apos; to a nested array of [ `key, value&apos; ] arrays." ilk="function" name="to_a" signature="hsh.to_a -&gt; array" />
        <scope doc="Returns `self&apos;." ilk="function" name="to_hash" signature="hsh.to_hash   =&gt; hsh" />
        <scope doc="Converts `hsh&apos; to a string by converting the hash to an&#xA;array of [ `key, value&apos; ] pairs and then converting that&#xA;array to a string using Array#join with the default&#xA;separator." ilk="function" name="to_s" signature="hsh.to_s   =&gt; string" />
        <scope doc="Adds the contents of `other_hash&apos; to `hsh&apos;, overwriting&#xA;entries with duplicate keys with those from `other_hash&apos;." ilk="function" name="update" signature="hsh.merge!(other_hash)                                 =&gt; hsh&#xA;hsh.update(other_hash)                                 =&gt; hsh&#xA;hsh.merge!(other_hash){|key, oldval, newval| block}    =&gt; hsh&#xA;hsh.update(other_hash){|key, oldval, newval| block}    =&gt; hsh" />
        <scope doc="Returns true if the given value is present for some key in&#xA;`hsh&apos;." ilk="function" name="value?" signature="hsh.has_value?(value)    =&gt; true or false&#xA;hsh.value?(value)        =&gt; true or false" />
        <scope doc="Returns a new array populated with the values from `hsh&apos;.&#xA;See also Hash#keys." ilk="function" name="values" signature="hsh.values    =&gt; array" />
        <scope doc="Return an array containing the values associated with the&#xA;given keys. Also see Hash.select." ilk="function" name="values_at" signature="hsh.values_at(key, ...)   =&gt; array" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="IndexError" />
      <scope classrefs="Numeric" doc="Integer is the basis for the two concrete classes that hold&#xA;whole numbers, Bignum and Fixnum." ilk="class" name="Integer">
        <import symbol="Precision" />
        <scope attributes="__classmethod__" doc="Convert obj to an Integer." ilk="function" name="induced_from" signature="Integer.induced_from(obj)    =&gt;  fixnum, bignum" />
        <scope doc="As `int&apos; is already an Integer, all these methods simply&#xA;return the receiver." ilk="function" name="ceil" signature="int.to_i      =&gt; int&#xA;int.to_int    =&gt; int&#xA;int.floor     =&gt; int&#xA;int.ceil      =&gt; int&#xA;int.round     =&gt; int&#xA;int.truncate  =&gt; int" />
        <scope doc="Returns a string containing the ASCII character represented&#xA;by the receiver&apos;s value." ilk="function" name="chr" signature="int.chr    =&gt; string" />
        <scope doc="In an integer, the denominator is 1. Therefore, this method&#xA;returns 1." ilk="function" name="denominator" signature="()" />
        <scope doc="Iterates `block&apos;, passing decreasing values from `int&apos; down&#xA;to and including `limit&apos;." ilk="function" name="downto" signature="int.downto(limit) {|i| block }     =&gt; int" />
        <scope doc="As `int&apos; is already an Integer, all these methods simply&#xA;return the receiver." ilk="function" name="floor" signature="int.to_i      =&gt; int&#xA;int.to_int    =&gt; int&#xA;int.floor     =&gt; int&#xA;int.ceil      =&gt; int&#xA;int.round     =&gt; int&#xA;int.truncate  =&gt; int" />
        <scope doc="Returns the `greatest common denominator&apos; of the two numbers&#xA;(self and n)." ilk="function" name="gcd" signature="(other)" />
        <scope doc="Returns the GCD `and&apos; the LCM (see #gcd and #lcm) of the two&#xA;arguments (self and other). This is more efficient than&#xA;calculating them separately." ilk="function" name="gcdlcm" signature="(other)" />
        <scope doc="Always returns true." ilk="function" name="integer?" signature="int.integer? -&gt; true" />
        <scope doc="Returns the `lowest common multiple&apos; (LCM) of the two&#xA;arguments (self and other)." ilk="function" name="lcm" signature="(other)" />
        <scope doc="Returns the Integer equal to `int&apos; + 1." ilk="function" name="next" signature="int.next    =&gt; integer&#xA;int.succ    =&gt; integer" />
        <scope doc="In an integer, the value `is&apos; the numerator of its rational&#xA;equivalent. Therefore, this method returns self." ilk="function" name="numerator" signature="()" />
        <scope doc="As `int&apos; is already an Integer, all these methods simply&#xA;return the receiver." ilk="function" name="round" signature="int.to_i      =&gt; int&#xA;int.to_int    =&gt; int&#xA;int.floor     =&gt; int&#xA;int.ceil      =&gt; int&#xA;int.round     =&gt; int&#xA;int.truncate  =&gt; int" />
        <scope doc="Returns the Integer equal to `int&apos; + 1." ilk="function" name="succ" signature="int.next    =&gt; integer&#xA;int.succ    =&gt; integer" />
        <scope doc="Iterates block `int&apos; times, passing in values from zero to&#xA;`int&apos; - 1." ilk="function" name="times" signature="int.times {|i| block }     =&gt; int" />
        <scope doc="As `int&apos; is already an Integer, all these methods simply&#xA;return the receiver." ilk="function" name="to_i" signature="int.to_i      =&gt; int&#xA;int.to_int    =&gt; int&#xA;int.floor     =&gt; int&#xA;int.ceil      =&gt; int&#xA;int.round     =&gt; int&#xA;int.truncate  =&gt; int" />
        <scope doc="As `int&apos; is already an Integer, all these methods simply&#xA;return the receiver." ilk="function" name="to_int" signature="int.to_i      =&gt; int&#xA;int.to_int    =&gt; int&#xA;int.floor     =&gt; int&#xA;int.ceil      =&gt; int&#xA;int.round     =&gt; int&#xA;int.truncate  =&gt; int" />
        <scope doc="Returns a Rational representation of this integer." ilk="function" name="to_r" signature="()" />
        <scope doc="As `int&apos; is already an Integer, all these methods simply&#xA;return the receiver." ilk="function" name="truncate" signature="int.to_i      =&gt; int&#xA;int.to_int    =&gt; int&#xA;int.floor     =&gt; int&#xA;int.ceil      =&gt; int&#xA;int.round     =&gt; int&#xA;int.truncate  =&gt; int" />
        <scope doc="Iterates `block&apos;, passing in integer values from `int&apos; up to&#xA;and including `limit&apos;." ilk="function" name="upto" signature="int.upto(limit) {|i| block }     =&gt; int" />
      </scope>
      <scope classrefs="SignalException" ilk="class" name="Interrupt" />
      <scope classrefs="Object" doc="Class IO is the basis for all input and output in Ruby. An&#xA;I/O stream may be `duplexed&apos; (that is, bidirectional), and&#xA;so may use more than one native operating system stream." ilk="class" name="IO">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" doc="Synonym for IO::new." ilk="function" name="for_fd" signature="IO.for_fd(fd, mode)    =&gt; io" />
        <scope attributes="__classmethod__" doc="Executes the block for every line in the named I/O port,&#xA;where lines are separated by `sep_string&apos;." ilk="function" name="foreach" signature="IO.foreach(name, sep_string=$/) {|line| block }   =&gt; nil" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new IO object (a stream) for the given integer&#xA;file descriptor and mode string. See also IO#fileno and&#xA;IO::for_fd." ilk="function" name="new" signature="IO.new(fd, mode)   =&gt; io" />
        <scope attributes="__classmethod__" doc="With no associated block, open is a synonym for IO::new. If&#xA;the optional code block is given, it will be passed `io&apos; as&#xA;an argument, and the IO object will automatically be closed&#xA;when the block terminates." ilk="function" name="open" signature="IO.open(fd, mode_string=&quot;r&quot; )               =&gt; io&#xA;IO.open(fd, mode_string=&quot;r&quot; ) {|io| block } =&gt; obj" />
        <scope attributes="__classmethod__" doc="Creates a pair of pipe endpoints (connected to each other)&#xA;and returns them as a two-element array of IO objects: [&#xA;`read_file&apos;, `write_file&apos; ]. Not available on all platforms." ilk="function" name="pipe" signature="IO.pipe -&gt; array" />
        <scope attributes="__classmethod__" doc="Runs the specified command string as a subprocess; the&#xA;subprocess&apos;s standard input and output will be connected to&#xA;the returned IO object. If `cmd_string&apos; starts with a ``-&apos;&apos;,&#xA;then a new instance of Ruby is started as the subprocess." ilk="function" name="popen" signature="IO.popen(cmd_string, mode=&quot;r&quot; )               =&gt; io&#xA;IO.popen(cmd_string, mode=&quot;r&quot; ) {|io| block } =&gt; obj" />
        <scope attributes="__classmethod__" doc="Opens the file, optionally seeks to the given offset, then&#xA;returns `length&apos; bytes (defaulting to the rest of the file).&#xA;read ensures the file is closed before returning." ilk="function" name="read" signature="IO.read(name, [length [, offset]] )   =&gt; string" />
        <scope attributes="__classmethod__" doc="Reads the entire file specified by `name&apos; as individual&#xA;lines, and returns those lines in an array. Lines are&#xA;separated by `sep_string&apos;." ilk="function" name="readlines" signature="IO.readlines(name, sep_string=$/)   =&gt; array" />
        <scope attributes="__classmethod__" doc="See Kernel#select." ilk="function" name="select" signature="IO.select(read_array &#xA;[, write_array &#xA;[, error_array &#xA;[, timeout]]] ) =&gt;  array  or  nil" />
        <scope attributes="__classmethod__" doc="Opens the given path, returning the underlying file&#xA;descriptor as a Fixnum." ilk="function" name="sysopen" signature="IO.sysopen(path, [mode, [perm]])  =&gt; fixnum" />
        <scope doc="String Output---Writes `obj&apos; to `ios&apos;. `obj&apos; will be&#xA;converted to a string using to_s." ilk="function" name="&lt;&lt;" signature="ios &lt;&lt; obj     =&gt; ios" />
        <scope doc="Puts `ios&apos; into binary mode. This is useful only in MS-&#xA;DOS/Windows environments." ilk="function" name="binmode" signature="ios.binmode    =&gt; ios" />
        <scope doc="Closes `ios&apos; and flushes any pending writes to the operating&#xA;system. The stream is unavailable for any further data&#xA;operations; an IOError is raised if such an attempt is made." ilk="function" name="close" signature="ios.close   =&gt; nil" />
        <scope doc="Closes the read end of a duplex I/O stream (i.e., one that&#xA;contains both a read and a write stream, such as a pipe).&#xA;Will raise an IOError if the stream is not duplexed." ilk="function" name="close_read" signature="ios.close_read    =&gt; nil" />
        <scope doc="Closes the write end of a duplex I/O stream (i.e., one that&#xA;contains both a read and a write stream, such as a pipe).&#xA;Will raise an IOError if the stream is not duplexed." ilk="function" name="close_write" signature="ios.close_write   =&gt; nil" />
        <scope doc="Returns true if `ios&apos; is completely closed (for duplex&#xA;streams, both reader and writer), false otherwise." ilk="function" name="closed?" signature="ios.closed?    =&gt; true or false" />
        <scope doc="Executes the block for every line in `ios&apos;, where lines are&#xA;separated by `sep_string&apos;. `ios&apos; must be opened for reading&#xA;or an IOError will be raised." ilk="function" name="each" signature="ios.each(sep_string=$/)      {|line| block }  =&gt; ios&#xA;ios.each_line(sep_string=$/) {|line| block }  =&gt; ios" />
        <scope doc="Calls the given block once for each byte (0..255) in `ios&apos;,&#xA;passing the byte as an argument. The stream must be opened&#xA;for reading or an IOError will be raised." ilk="function" name="each_byte" signature="ios.each_byte {|byte| block }  =&gt; nil" />
        <scope doc="Executes the block for every line in `ios&apos;, where lines are&#xA;separated by `sep_string&apos;. `ios&apos; must be opened for reading&#xA;or an IOError will be raised." ilk="function" name="each_line" signature="ios.each(sep_string=$/)      {|line| block }  =&gt; ios&#xA;ios.each_line(sep_string=$/) {|line| block }  =&gt; ios" />
        <scope doc="Returns true if `ios&apos; is at end of file that means there are&#xA;no more data to read. The stream must be opened for reading&#xA;or an IOError will be raised." ilk="function" name="eof" signature="ios.eof     =&gt; true or false&#xA;ios.eof?    =&gt; true or false" />
        <scope doc="Returns true if `ios&apos; is at end of file that means there are&#xA;no more data to read. The stream must be opened for reading&#xA;or an IOError will be raised." ilk="function" name="eof?" signature="ios.eof     =&gt; true or false&#xA;ios.eof?    =&gt; true or false" />
        <scope doc="Provides a mechanism for issuing low-level commands to&#xA;control or query file-oriented I/O streams. Arguments and&#xA;results are platform dependent." ilk="function" name="fcntl" signature="ios.fcntl(integer_cmd, arg)    =&gt; integer" />
        <scope doc="Returns an integer representing the numeric file descriptor&#xA;for `ios&apos;." ilk="function" name="fileno" signature="ios.fileno    =&gt; fixnum&#xA;ios.to_i      =&gt; fixnum" />
        <scope doc="Flushes any buffered data within `ios&apos; to the underlying&#xA;operating system (note that this is Ruby internal buffering&#xA;only; the OS may buffer the data as well)." ilk="function" name="flush" signature="ios.flush    =&gt; ios" />
        <scope doc="Immediately writes all buffered data in `ios&apos; to disk.&#xA;Returns nil if the underlying operating system does not&#xA;support `fsync(2)&apos;." ilk="function" name="fsync" signature="ios.fsync   =&gt; 0 or nil" />
        <scope doc="Gets the next 8-bit byte (0..255) from `ios&apos;. Returns nil if&#xA;called at end of file." ilk="function" name="getc" signature="ios.getc   =&gt; fixnum or nil" />
        <scope doc="Reads the next ``line&apos;&apos; from the I/O stream; lines are&#xA;separated by `sep_string&apos;. A separator of nil reads the&#xA;entire contents, and a zero-length separator reads the input&#xA;a paragraph at a time (two successive newlines in the input&#xA;separate paragraphs)." ilk="function" name="gets" signature="ios.gets(sep_string=$/)   =&gt; string or nil" />
        <scope doc="Return a string describing this IO object." ilk="function" name="inspect" signature="ios.inspect   =&gt; string" />
        <scope doc="Provides a mechanism for issuing low-level commands to&#xA;control or query I/O devices. Arguments and results are&#xA;platform dependent." ilk="function" name="ioctl" signature="ios.ioctl(integer_cmd, arg)    =&gt; integer" />
        <scope doc="Returns true if `ios&apos; is associated with a terminal device&#xA;(tty), false otherwise." ilk="function" name="isatty" signature="ios.isatty   =&gt; true or false&#xA;ios.tty?     =&gt; true or false" />
        <scope doc="Returns the current line number in `ios&apos;. The stream must be&#xA;opened for reading." ilk="function" name="lineno" signature="ios.lineno    =&gt; integer" />
        <scope doc="Manually sets the current line number to the given value. $." ilk="function" name="lineno=" signature="ios.lineno = integer    =&gt; integer" />
        <scope doc="Returns the process ID of a child process associated with&#xA;`ios&apos;. This will be set by IO::popen." ilk="function" name="pid" signature="ios.pid    =&gt; fixnum" />
        <scope doc="Returns the current offset (in bytes) of `ios&apos;." ilk="function" name="pos" signature="ios.pos     =&gt; integer&#xA;ios.tell    =&gt; integer" />
        <scope doc="Seeks to the given position (in bytes) in `ios&apos;." ilk="function" name="pos=" signature="ios.pos = integer    =&gt; integer" />
        <scope doc="Writes the given object(s) to `ios&apos;. The stream must be&#xA;opened for writing." ilk="function" name="print" signature="ios.print()             =&gt; nil&#xA;ios.print(obj, ...)     =&gt; nil" />
        <scope doc="Formats and writes to `ios&apos;, converting parameters under&#xA;control of the format string. See Kernel#sprintf for&#xA;details." ilk="function" name="printf" signature="ios.printf(format_string [, obj, ...] )   =&gt; nil" />
        <scope doc="If `obj&apos; is Numeric, write the character whose code is&#xA;`obj&apos;, otherwise write the first character of the string&#xA;representation of `obj&apos; to `ios&apos;." ilk="function" name="putc" signature="ios.putc(obj)    =&gt; obj" />
        <scope doc="Writes the given objects to `ios&apos; as with IO#print. Writes a&#xA;record separator (typically a newline) after any that do not&#xA;already end with a newline sequence." ilk="function" name="puts" signature="ios.puts(obj, ...)    =&gt; nil" />
        <scope doc="Reads at most `length&apos; bytes from the I/O stream, or to the&#xA;end of file if `length&apos; is omitted or is nil. `length&apos; must&#xA;be a non-negative integer or nil." ilk="function" name="read" signature="ios.read([length [, buffer]])    =&gt; string, buffer, or nil" />
        <scope doc="Reads a character as with IO#getc, but raises an EOFError on&#xA;end of file." ilk="function" name="readchar" signature="ios.readchar   =&gt; fixnum" />
        <scope doc="Reads a line as with IO#gets, but raises an EOFError on end&#xA;of file." ilk="function" name="readline" signature="ios.readline(sep_string=$/)   =&gt; string" />
        <scope doc="Reads all of the lines in `ios&apos;, and returns them in&#xA;`anArray&apos;. Lines are separated by the optional `sep_string&apos;." ilk="function" name="readlines" signature="ios.readlines(sep_string=$/)  =&gt;   array" />
        <scope doc="Reads at most `maxlen&apos; bytes from the I/O stream but it&#xA;blocks only if `ios&apos; has no data immediately available. If&#xA;the optional `outbuf&apos; argument is present, it must reference&#xA;a String, which will receive the data." ilk="function" name="readpartial" signature="ios.readpartial(maxlen[, outbuf])    =&gt; string, outbuf" />
        <scope doc="Reassociates `ios&apos; with the I/O stream given in `other_IO&apos;&#xA;or to a new stream opened on `path&apos;. This may dynamically&#xA;change the actual class of this stream." ilk="function" name="reopen" signature="ios.reopen(other_IO)         =&gt; ios &#xA;ios.reopen(path, mode_str)   =&gt; ios" />
        <scope doc="Positions `ios&apos; to the beginning of input, resetting lineno&#xA;to zero." ilk="function" name="rewind" signature="ios.rewind    =&gt; 0" />
        <scope doc="Seeks to a given offset `anInteger&apos; in the stream according&#xA;to the value of `whence&apos;:" ilk="function" name="seek" signature="ios.seek(amount, whence=SEEK_SET) -&gt; 0" />
        <scope doc="Returns status information for `ios&apos; as an object of type&#xA;File::Stat." ilk="function" name="stat" signature="ios.stat    =&gt; stat" />
        <scope doc="Returns the current ``sync mode&apos;&apos; of `ios&apos;. When sync mode&#xA;is true, all output is immediately flushed to the underlying&#xA;operating system and is not buffered by Ruby internally." ilk="function" name="sync" signature="ios.sync    =&gt; true or false" />
        <scope doc="Sets the ``sync mode&apos;&apos; to true or false. When sync mode is&#xA;true, all output is immediately flushed to the underlying&#xA;operating system and is not buffered internally." ilk="function" name="sync=" signature="ios.sync = boolean   =&gt; boolean" />
        <scope doc="Reads `integer&apos; bytes from `ios&apos; using a low-level read and&#xA;returns them as a string. Do not mix with other methods that&#xA;read from `ios&apos; or you may get unpredictable results." ilk="function" name="sysread" signature="ios.sysread(integer )    =&gt; string" />
        <scope doc="Seeks to a given `offset&apos; in the stream according to the&#xA;value of `whence&apos; (see IO#seek for values of `whence&apos;).&#xA;Returns the new offset into the file." ilk="function" name="sysseek" signature="ios.sysseek(offset, whence=SEEK_SET)   =&gt; integer" />
        <scope doc="Writes the given string to `ios&apos; using a low-level write.&#xA;Returns the number of bytes written." ilk="function" name="syswrite" signature="ios.syswrite(string)   =&gt; integer" />
        <scope doc="Returns the current offset (in bytes) of `ios&apos;." ilk="function" name="tell" signature="ios.pos     =&gt; integer&#xA;ios.tell    =&gt; integer" />
        <scope doc="Alias for #fileno" ilk="function" name="to_i" signature="()" />
        <scope doc="Returns `ios&apos;." ilk="function" name="to_io" signature="ios.to_io -&gt; ios" />
        <scope doc="Returns true if `ios&apos; is associated with a terminal device&#xA;(tty), false otherwise." ilk="function" name="tty?" signature="ios.isatty   =&gt; true or false&#xA;ios.tty?     =&gt; true or false" />
        <scope doc="Pushes back one character (passed as a parameter) onto&#xA;`ios&apos;, such that a subsequent buffered read will return it.&#xA;Only one character may be pushed back before a subsequent&#xA;read operation (that is, you will be able to read only the&#xA;last of several characters that have been pushed back)." ilk="function" name="ungetc" signature="ios.ungetc(integer)   =&gt; nil" />
        <scope doc="Writes the given string to `ios&apos;. The stream must be opened&#xA;for writing." ilk="function" name="write" signature="ios.write(string)    =&gt; integer" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="IOError" />
      <scope classrefs="ScriptError" ilk="class" name="LoadError" />
      <scope classrefs="StandardError" ilk="class" name="LocalJumpError">
        <scope doc="call_seq:" ilk="function" name="exit_value" signature="()" />
        <scope doc="The reason this block was terminated: :break, :redo, :retry,&#xA;:next, :return, or :noreason." ilk="function" name="reason" signature="local_jump_error.reason   =&gt; symbol" />
      </scope>
      <scope classrefs="Object" doc="MatchData is the type of the special variable $~, and is the&#xA;type of the object returned by Regexp#match and&#xA;Regexp#last_match. It encapsulates all the results of a&#xA;pattern match, results normally accessed through the special&#xA;variables $&amp;, $&apos;, $`, $1, $2, and so on." ilk="class" name="MatchData">
        <scope doc="Match Reference---MatchData acts as an array, and may be&#xA;accessed using the normal array indexing techniques.&#xA;`mtch&apos;[0] is equivalent to the special variable $&amp;, and&#xA;returns the entire matched string." ilk="function" name="[]" signature="mtch[i]               =&gt; obj&#xA;mtch[start, length]   =&gt; array&#xA;mtch[range]           =&gt; array" />
        <scope doc="Returns the offset of the start of the `n&apos;th element of the&#xA;match array in the string." ilk="function" name="begin" signature="mtch.begin(n)   =&gt; integer" />
        <scope doc="Returns the array of captures; equivalent to&#xA;mtch.to_a[1..-1]." ilk="function" name="captures" signature="mtch.captures   =&gt; array" />
        <scope doc="Returns the offset of the character immediately following&#xA;the end of the `n&apos;th element of the match array in the&#xA;string." ilk="function" name="end" signature="mtch.end(n)   =&gt; integer" />
        <scope doc="Returns a string representing `obj&apos;. The default to_s prints&#xA;the object&apos;s class and an encoding of the object id." ilk="function" name="inspect" signature="obj.to_s    =&gt; string" />
        <scope doc="Returns the number of elements in the match array." ilk="function" name="length" signature="mtch.length   =&gt; integer&#xA;mtch.size     =&gt; integer" />
        <scope doc="Returns a two-element array containing the beginning and&#xA;ending offsets of the `n&apos;th match." ilk="function" name="offset" signature="mtch.offset(n)   =&gt; array" />
        <scope doc="Returns the portion of the original string after the current&#xA;match. Equivalent to the special variable $&apos;." ilk="function" name="post_match" signature="mtch.post_match   =&gt; str" />
        <scope doc="Returns the portion of the original string before the&#xA;current match. Equivalent to the special variable $`." ilk="function" name="pre_match" signature="mtch.pre_match   =&gt; str" />
        <scope doc="Uses each `index&apos; to access the matching values, returning&#xA;an array of the corresponding matches." ilk="function" name="select" signature="mtch.select([index]*)   =&gt; array" />
        <scope doc="Returns the number of elements in the match array." ilk="function" name="size" signature="mtch.length   =&gt; integer&#xA;mtch.size     =&gt; integer" />
        <scope doc="Returns a frozen copy of the string passed in to match." ilk="function" name="string" signature="mtch.string   =&gt; str" />
        <scope doc="Returns the array of matches." ilk="function" name="to_a" signature="mtch.to_a   =&gt; anArray" />
        <scope doc="Returns the entire matched string." ilk="function" name="to_s" signature="mtch.to_s   =&gt; str" />
        <scope doc="Uses each `index&apos; to access the matching values, returning&#xA;an array of the corresponding matches." ilk="function" name="values_at" signature="mtch.select([index]*)   =&gt; array" />
      </scope>
      <scope classrefs="Object" ilk="class" name="MatchingData">
        <scope ilk="function" name="[]" />
        <scope ilk="function" name="begin" />
        <scope ilk="function" name="captures" />
        <scope ilk="function" name="end" />
        <scope ilk="function" name="inspect" />
        <scope ilk="function" name="length" />
        <scope ilk="function" name="offset" />
        <scope ilk="function" name="post_match" />
        <scope ilk="function" name="pre_match" />
        <scope ilk="function" name="select" />
        <scope ilk="function" name="size" />
        <scope ilk="function" name="string" />
        <scope ilk="function" name="to_a" />
        <scope ilk="function" name="to_s" />
        <scope ilk="function" name="values_at" />
      </scope>
      <scope classrefs="Object" ilk="class" name="Method">
        <scope doc="Two method objects are equal if that are bound to the same&#xA;object and contain the same body." ilk="function" name="==" signature="meth == other_meth  =&gt; true or false" />
        <scope doc="Invokes the `meth&apos; with the specified arguments, returning&#xA;the method&apos;s return value." ilk="function" name="[]" signature="meth.call(args, ...)    =&gt; obj&#xA;meth[args, ...]         =&gt; obj" />
        <scope doc="Returns an indication of the number of arguments accepted by&#xA;a method. Returns a nonnegative integer for methods that&#xA;take a fixed number of arguments." ilk="function" name="arity" signature="meth.arity    =&gt; fixnum" />
        <scope doc="Invokes the `meth&apos; with the specified arguments, returning&#xA;the method&apos;s return value." ilk="function" name="call" signature="meth.call(args, ...)    =&gt; obj&#xA;meth[args, ...]         =&gt; obj" />
        <scope doc="MISSING: documentation" ilk="function" name="clone" signature="()" />
        <scope doc="Show the name of the underlying method." ilk="function" name="inspect" signature="meth.to_s      =&gt;  string&#xA;meth.inspect   =&gt;  string" />
        <scope doc="Returns a Proc object corresponding to this method." ilk="function" name="to_proc" signature="meth.to_proc    =&gt; prc" />
        <scope doc="Show the name of the underlying method." ilk="function" name="to_s" signature="meth.to_s      =&gt;  string&#xA;meth.inspect   =&gt;  string" />
        <scope doc="Dissociates `meth&apos; from it&apos;s current receiver. The resulting&#xA;UnboundMethod can subsequently be bound to a new object of&#xA;the same class (see UnboundMethod)." ilk="function" name="unbind" signature="meth.unbind    =&gt; unbound_method" />
      </scope>
      <scope classrefs="Object" doc="A Module is a collection of methods and constants. The&#xA;methods in a module may be instance methods or module&#xA;methods." ilk="class" name="Module">
        <scope attributes="__classmethod__" doc="Returns an array of the names of all constants defined in&#xA;the system. This list includes the names of all modules and&#xA;classes." ilk="function" name="constants" signature="Module.constants   =&gt; array" />
        <scope attributes="__classmethod__" doc="Returns the list of Modules nested at the point of call." ilk="function" name="nesting" signature="Module.nesting    =&gt; array" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new anonymous module. If a block is given, it is&#xA;passed the module object, and the block is evaluated in the&#xA;context of this module using module_eval." ilk="function" name="new" signature="Module.new                  =&gt; mod&#xA;Module.new {|mod| block }   =&gt; mod" />
        <scope doc="Returns true if `mod&apos; is a subclass of `other&apos;. Returns nil&#xA;if there&apos;s no relationship between the two." ilk="function" name="&lt;" signature="mod &lt; other   =&gt;  true, false, or nil" />
        <scope doc="Returns true if `mod&apos; is a subclass of `other&apos; or is the&#xA;same as `other&apos;. Returns nil if there&apos;s no relationship&#xA;between the two." ilk="function" name="&lt;=" signature="mod &lt;= other   =&gt;  true, false, or nil" />
        <scope doc="Comparison---Returns -1 if `mod&apos; includes `other_mod&apos;, 0 if&#xA;`mod&apos; is the same as `other_mod&apos;, and +1 if `mod&apos; is&#xA;included by `other_mod&apos; or if `mod&apos; has no relationship with&#xA;`other_mod&apos;. Returns nil if `other_mod&apos; is not a module." ilk="function" name="&lt;=&gt;" signature="mod &lt;=&gt; other_mod   =&gt; -1, 0, +1, or nil" />
        <scope doc="Equality---At the Object level, == returns true only if&#xA;`obj&apos; and `other&apos; are the same object. Typically, this&#xA;method is overridden in descendent classes to provide class-&#xA;specific meaning." ilk="function" name="==" signature="obj == other        =&gt; true or false&#xA;obj.equal?(other)   =&gt; true or false&#xA;obj.eql?(other)     =&gt; true or false" />
        <scope doc="Case Equality---Returns true if `anObject&apos; is an instance of&#xA;`mod&apos; or one of `mod&apos;&apos;s descendents. Of limited use for&#xA;modules, but can be used in case statements to classify&#xA;objects by class." ilk="function" name="===" signature="mod === obj    =&gt; true or false" />
        <scope doc="Returns true if `mod&apos; is an ancestor of `other&apos;. Returns nil&#xA;if there&apos;s no relationship between the two." ilk="function" name="&gt;" signature="mod &gt; other   =&gt;  true, false, or nil" />
        <scope doc="Returns true if `mod&apos; is an ancestor of `other&apos;, or the two&#xA;modules are the same. Returns nil if there&apos;s no relationship&#xA;between the two." ilk="function" name="&gt;=" signature="mod &gt;= other   =&gt;  true, false, or nil" />
        <scope doc="Makes `new_name&apos; a new copy of the method `old_name&apos;. This&#xA;can be used to retain access to methods that are overridden." ilk="function" name="alias_method" signature="alias_method(new_name, old_name)   =&gt; self" />
        <scope doc="Returns a list of modules included in `mod&apos; (including `mod&apos;&#xA;itself)." ilk="function" name="ancestors" signature="mod.ancestors -&gt; array" />
        <scope doc="When this module is included in another, Ruby calls&#xA;append_features in this module, passing it the receiving&#xA;module in `mod&apos;. Ruby&apos;s default implementation is to add the&#xA;constants, methods, and module variables of this module to&#xA;`mod&apos; if this module has not already been added to `mod&apos; or&#xA;one of its ancestors." ilk="function" name="append_features" signature="append_features(mod)   =&gt; mod" />
        <scope doc="Defines a named attribute for this module, where the name is&#xA;`symbol.&apos;id2name, creating an instance variable (@name) and&#xA;a corresponding access method to read it. If the optional&#xA;`writable&apos; argument is true, also creates a method called&#xA;name= to set the attribute." ilk="function" name="attr" signature="attr(symbol, writable=false)    =&gt; nil" />
        <scope doc="Equivalent to calling ``attr`symbol&apos;, true&apos;&apos; on each&#xA;`symbol&apos; in turn." ilk="function" name="attr_accessor" signature="attr_accessor(symbol, ...)    =&gt; nil" />
        <scope doc="Creates instance variables and corresponding methods that&#xA;return the value of each instance variable. Equivalent to&#xA;calling ``attr`:name&apos;&apos;&apos; on each name in turn." ilk="function" name="attr_reader" signature="attr_reader(symbol, ...)    =&gt; nil" />
        <scope doc="Creates an accessor method to allow assignment to the&#xA;attribute `aSymbol&apos;.id2name." ilk="function" name="attr_writer" signature="attr_writer(symbol, ...)    =&gt; nil" />
        <scope doc="Registers `filename&apos; to be loaded (using Kernel::require)&#xA;the first time that `name&apos; (which may be a String or a&#xA;symbol) is accessed in the namespace of `mod&apos;." ilk="function" name="autoload" signature="mod.autoload(name, filename)   =&gt; nil" />
        <scope doc="Returns `filename&apos; to be loaded if `name&apos; is registered as&#xA;autoload in the namespace of `mod&apos;." ilk="function" name="autoload?" signature="mod.autoload?(name)   =&gt; String or nil" />
        <scope doc="Evaluates the string or block in the context of `mod&apos;. This&#xA;can be used to add methods to a class." ilk="function" name="class_eval" signature="mod.class_eval(string [, filename [, lineno]])  =&gt; obj&#xA;mod.module_eval {|| block }                     =&gt; obj" />
        <scope doc="Returns the value of the given class variable (or throws a&#xA;NameError exception)." ilk="function" name="class_variable_get" signature="mod.class_variable_get(symbol)    =&gt; obj" />
        <scope doc="Sets the class variable names by `symbol&apos; to `object&apos;." ilk="function" name="class_variable_set" signature="obj.class_variable_set(symbol, obj)    =&gt; obj" />
        <scope doc="Returns an array of the names of class variables in `mod&apos;&#xA;and the ancestors of `mod&apos;." ilk="function" name="class_variables" signature="mod.class_variables   =&gt; array" />
        <scope doc="Returns true if a constant with the given name is defined by&#xA;`mod&apos;." ilk="function" name="const_defined?" signature="mod.const_defined?(sym)   =&gt; true or false" />
        <scope doc="Returns the value of the named constant in `mod&apos;." ilk="function" name="const_get" signature="mod.const_get(sym)    =&gt; obj" />
        <scope doc="Invoked when a reference is made to an undefined constant in&#xA;`mod&apos;. It is passed a symbol for the undefined constant, and&#xA;returns a value to be used for that constant." ilk="function" name="const_missing" signature="mod.const_missing(sym)    =&gt; obj" />
        <scope doc="Sets the named constant to the given object, returning that&#xA;object. Creates a new constant if no constant with the given&#xA;name previously existed." ilk="function" name="const_set" signature="mod.const_set(sym, obj)    =&gt; obj" />
        <scope doc="Returns an array of the names of the constants accessible in&#xA;`mod&apos;. This includes the names of constants in any included&#xA;modules (example at start of section)." ilk="function" name="constants" signature="mod.constants    =&gt; array" />
        <scope doc="Defines an instance method in the receiver. The `method&apos;&#xA;parameter can be a Proc or Method object." ilk="function" name="define_method" signature="define_method(symbol, method)     =&gt; new_method&#xA;define_method(symbol) { block }   =&gt; proc" />
        <scope doc="Extends the specified object by adding this module&apos;s&#xA;constants and methods (which are added as singleton&#xA;methods). This is the callback method used by Object#extend." ilk="function" name="extend_object" signature="extend_object(obj)    =&gt; obj" />
        <scope doc="Not documented" ilk="function" name="extended" signature="(p1)" />
        <scope doc="Prevents further modifications to `mod&apos;." ilk="function" name="freeze" signature="mod.freeze" />
        <scope doc="Invokes Module.append_features on each parameter in turn." ilk="function" name="include" signature="include(module, ...)    =&gt; self" />
        <scope doc="Returns true if `module&apos; is included in `mod&apos; or one of&#xA;`mod&apos;&apos;s ancestors." ilk="function" name="include?" signature="mod.include?(module)    =&gt; true or false" />
        <scope doc="Callback invoked whenever the receiver is included in&#xA;another module or class. This should be used in preference&#xA;to Module.append_features if your code wants to perform some&#xA;action when a module is included in another." ilk="function" name="included" signature="included( othermod )" />
        <scope doc="Returns the list of modules included in `mod&apos;." ilk="function" name="included_modules" signature="mod.included_modules -&gt; array" />
        <scope doc="Returns an UnboundMethod representing the given instance&#xA;method in `mod&apos;." ilk="function" name="instance_method" signature="mod.instance_method(symbol)   =&gt; unbound_method" />
        <scope doc="Returns an array containing the names of public instance&#xA;methods in the receiver. For a module, these are the public&#xA;methods; for a class, they are the instance (not singleton)&#xA;methods." ilk="function" name="instance_methods" signature="mod.instance_methods(include_super=true)   =&gt; array" />
        <scope doc="Not documented" ilk="function" name="method_added" signature="(p1)" />
        <scope doc="Returns true if the named method is defined by `mod&apos; (or its&#xA;included modules and, if `mod&apos; is a class, its ancestors).&#xA;Public and protected methods are matched." ilk="function" name="method_defined?" signature="mod.method_defined?(symbol)    =&gt; true or false" />
        <scope doc="Not documented" ilk="function" name="method_removed" signature="(p1)" />
        <scope doc="Not documented" ilk="function" name="method_undefined" signature="(p1)" />
        <scope doc="Evaluates the string or block in the context of `mod&apos;. This&#xA;can be used to add methods to a class." ilk="function" name="module_eval" signature="mod.class_eval(string [, filename [, lineno]])  =&gt; obj&#xA;mod.module_eval {|| block }                     =&gt; obj" />
        <scope doc="Creates module functions for the named methods. These&#xA;functions may be called with the module as a receiver, and&#xA;also become available as instance methods to classes that&#xA;mix in the module." ilk="function" name="module_function" signature="module_function(symbol, ...)    =&gt; self" />
        <scope doc="Returns the name of the module `mod&apos;." ilk="function" name="name" signature="mod.name    =&gt; string" />
        <scope doc="With no arguments, sets the default visibility for&#xA;subsequently defined methods to private. With arguments,&#xA;sets the named methods to have private visibility." ilk="function" name="private" signature="private                 =&gt; self&#xA;private(symbol, ...)    =&gt; self" />
        <scope doc="Makes existing class methods private. Often used to hide the&#xA;default constructor new." ilk="function" name="private_class_method" signature="mod.private_class_method(symbol, ...)   =&gt; mod" />
        <scope doc="Returns a list of the private instance methods defined in&#xA;`mod&apos;. If the optional parameter is not false, the methods&#xA;of any ancestors are included." ilk="function" name="private_instance_methods" signature="mod.private_instance_methods(include_super=true)    =&gt; array" />
        <scope doc="Returns true if the named private method is defined by _&#xA;mod_ (or its included modules and, if `mod&apos; is a class, its&#xA;ancestors)." ilk="function" name="private_method_defined?" signature="mod.private_method_defined?(symbol)    =&gt; true or false" />
        <scope doc="With no arguments, sets the default visibility for&#xA;subsequently defined methods to protected. With arguments,&#xA;sets the named methods to have protected visibility." ilk="function" name="protected" signature="protected                =&gt; self&#xA;protected(symbol, ...)   =&gt; self" />
        <scope doc="Returns a list of the protected instance methods defined in&#xA;`mod&apos;. If the optional parameter is not false, the methods&#xA;of any ancestors are included." ilk="function" name="protected_instance_methods" signature="mod.protected_instance_methods(include_super=true)   =&gt; array" />
        <scope doc="Returns true if the named protected method is defined by&#xA;`mod&apos; (or its included modules and, if `mod&apos; is a class, its&#xA;ancestors)." ilk="function" name="protected_method_defined?" signature="mod.protected_method_defined?(symbol)   =&gt; true or false" />
        <scope doc="With no arguments, sets the default visibility for&#xA;subsequently defined methods to public. With arguments, sets&#xA;the named methods to have public visibility." ilk="function" name="public" signature="public                 =&gt; self&#xA;public(symbol, ...)    =&gt; self" />
        <scope doc="Makes a list of existing class methods public." ilk="function" name="public_class_method" signature="mod.public_class_method(symbol, ...)    =&gt; mod" />
        <scope doc="Returns a list of the public instance methods defined in&#xA;`mod&apos;. If the optional parameter is not false, the methods&#xA;of any ancestors are included." ilk="function" name="public_instance_methods" signature="mod.public_instance_methods(include_super=true)   =&gt; array" />
        <scope doc="Returns true if the named public method is defined by `mod&apos;&#xA;(or its included modules and, if `mod&apos; is a class, its&#xA;ancestors)." ilk="function" name="public_method_defined?" signature="mod.public_method_defined?(symbol)   =&gt; true or false" />
        <scope doc="Removes the definition of the `sym&apos;, returning that&#xA;constant&apos;s value." ilk="function" name="remove_class_variable" signature="remove_class_variable(sym)    =&gt; obj" />
        <scope doc="Removes the definition of the given constant, returning that&#xA;constant&apos;s value. Predefined classes and singleton objects&#xA;(such as `true&apos;) cannot be removed." ilk="function" name="remove_const" signature="remove_const(sym)   =&gt; obj" />
        <scope doc="Removes the method identified by `symbol&apos; from the current&#xA;class. For an example, see Module.undef_method." ilk="function" name="remove_method" signature="remove_method(symbol)   =&gt; self" />
        <scope doc="Return a string representing this module or class. For basic&#xA;classes and modules, this is the name." ilk="function" name="to_s" signature="mod.to_s   =&gt; string" />
        <scope doc="Prevents the current class from responding to calls to the&#xA;named method. Contrast this with remove_method, which&#xA;deletes the method from the particular class; Ruby will&#xA;still search superclasses and mixed-in modules for a&#xA;possible receiver." ilk="function" name="undef_method" signature="undef_method(symbol)    =&gt; self" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="NameError">
        <scope attributes="__classmethod__ __ctor__" doc="Construct a new NameError exception. If given the `name&apos;&#xA;parameter may subsequently be examined using the&#xA;NameError.name method." ilk="function" name="new" signature="NameError.new(msg [, name])  =&gt; name_error" />
        <scope doc="Return the name associated with this NameError exception." ilk="function" name="name" signature="name_error.name    =&gt;  string or nil" />
        <scope doc="Produce a nicely-formated string representing the NameError." ilk="function" name="to_s" signature="name_error.to_s   =&gt; string" />
      </scope>
      <scope classrefs="Object" doc="The class of the singleton object nil." ilk="class" name="NilClass">
        <scope doc="And---Returns false. `obj&apos; is always evaluated as it is the&#xA;argument to a method call---there is no short-circuit&#xA;evaluation in this case." ilk="function" name="&amp;" signature="false &amp; obj   =&gt; false&#xA;nil &amp; obj     =&gt; false" />
        <scope doc="Exclusive Or---If `obj&apos; is nil or false, returns false;&#xA;otherwise, returns true." ilk="function" name="^" signature="false ^ obj    =&gt; true or false&#xA;nil   ^ obj    =&gt; true or false" />
        <scope doc="Always returns the string &quot;nil&quot;." ilk="function" name="inspect" signature="nil.inspect  =&gt; &quot;nil&quot;" />
        <scope doc="call_seq:" ilk="function" name="nil?" signature="()" />
        <scope doc="Always returns an empty array." ilk="function" name="to_a" signature="nil.to_a    =&gt; []" />
        <scope doc="Always returns zero." ilk="function" name="to_f" signature="nil.to_f    =&gt; 0.0" />
        <scope doc="Always returns zero." ilk="function" name="to_i" signature="nil.to_i =&gt; 0" />
        <scope doc="Always returns the empty string." ilk="function" name="to_s" signature="nil.to_s    =&gt; &quot;&quot;" />
        <scope doc="Or---Returns false if `obj&apos; is nil or false; true otherwise." ilk="function" name="|" signature="false | obj   =&gt;   true or false&#xA;nil   | obj   =&gt;   true or false" />
      </scope>
      <scope classrefs="Exception" ilk="class" name="NoMemoryError" />
      <scope classrefs="NameError" ilk="class" name="NoMethodError">
        <scope attributes="__classmethod__ __ctor__" doc="Construct a NoMethodError exception for a method of the&#xA;given name called with the given arguments. The name may be&#xA;accessed using the #name method on the resulting object, and&#xA;the arguments using the #args method." ilk="function" name="new" signature="NoMethodError.new(msg, name [, args])  =&gt; no_method_error" />
        <scope doc="Return the arguments passed in as the third parameter to the&#xA;constructor." ilk="function" name="args" signature="no_method_error.args  =&gt; obj" />
      </scope>
      <scope classrefs="ScriptError" ilk="class" name="NotImplementedError" />
      <scope classrefs="Object" doc="Numeric is a built-in class on which Fixnum, Bignum, etc.,&#xA;are based. Here some methods are added so that all number&#xA;types can be treated to some extent as Complex numbers." ilk="class" name="Numeric">
        <import symbol="Comparable" />
        <scope doc="Unary Plus---Returns the receiver&apos;s value." ilk="function" name="+@" signature="+num    =&gt; num" />
        <scope doc="Returns zero if `num&apos; equals `other&apos;, nil otherwise." ilk="function" name="&lt;=&gt;" signature="num &lt;=&gt; other -&gt; 0 or nil" />
        <scope doc="Returns the absolute value of `num&apos;." ilk="function" name="abs" signature="num.abs   =&gt; num or numeric" />
        <scope doc="Alias for #arg" ilk="function" name="angle" signature="()" />
        <scope doc="See Complex#arg." ilk="function" name="arg" signature="()" />
        <scope doc="Returns the smallest Integer greater than or equal to `num&apos;.&#xA;Class Numeric achieves this by converting itself to a Float&#xA;then invoking Float#ceil." ilk="function" name="ceil" signature="num.ceil    =&gt; integer" />
        <scope doc="If `aNumeric&apos; is the same type as `num&apos;, returns an array&#xA;containing `aNumeric&apos; and `num&apos;. Otherwise, returns an array&#xA;with both `aNumeric&apos; and `num&apos; represented as Float objects." ilk="function" name="coerce" signature="num.coerce(numeric)   =&gt; array" />
        <scope doc="Alias for #conjugate" ilk="function" name="conj" signature="()" />
        <scope doc="See Complex#conjugate (short answer: returns `self&apos;)." ilk="function" name="conjugate" signature="()" />
        <scope doc="Uses / to perform division, then converts the result to an&#xA;integer. Numeric does not define the / operator; this is&#xA;left to subclasses." ilk="function" name="div" signature="num.div(numeric)    =&gt; integer" />
        <scope doc="Returns an array containing the quotient and modulus&#xA;obtained by dividing `num&apos; by `aNumeric&apos;." ilk="function" name="divmod" signature="num.divmod( aNumeric ) -&gt; anArray" />
        <scope doc="Returns true if `num&apos; and `numeric&apos; are the same type and&#xA;have equal values." ilk="function" name="eql?" signature="num.eql?(numeric)    =&gt; true or false" />
        <scope doc="Returns the largest integer less than or equal to `num&apos;.&#xA;Numeric implements this by converting `anInteger&apos; to a Float&#xA;and invoking Float#floor." ilk="function" name="floor" signature="num.floor    =&gt; integer" />
        <scope doc="Returns a Complex number (0,`self&apos;)." ilk="function" name="im" signature="()" />
        <scope doc="Alias for #image" ilk="function" name="imag" signature="()" />
        <scope doc="The imaginary part of a complex number, i.e. 0." ilk="function" name="image" signature="()" />
        <scope doc="Returns true if `num&apos; is an Integer (including Fixnum and&#xA;Bignum)." ilk="function" name="integer?" signature="num.integer? -&gt; true or false" />
        <scope doc="Equivalent to `num&apos;.divmod(`aNumeric&apos;)[1]." ilk="function" name="modulo" signature="num.modulo(numeric)    =&gt; result" />
        <scope doc="Returns `num&apos; if `num&apos; is not zero, nil otherwise." ilk="function" name="nonzero?" signature="num.nonzero?    =&gt; num or nil" />
        <scope doc="See Complex#polar." ilk="function" name="polar" signature="()" />
        <scope doc="Equivalent to Numeric#/, but overridden in subclasses." ilk="function" name="quo" signature="num.quo(numeric)    =&gt;   result" />
        <scope doc="The real part of a complex number, i.e. `self&apos;." ilk="function" name="real" signature="()" />
        <scope doc="If `num&apos; and `numeric&apos; have different signs, returns&#xA;`mod&apos;-`numeric&apos;; otherwise, returns `mod&apos;. In both cases&#xA;`mod&apos; is the value `num&apos;.modulo(`numeric&apos;)." ilk="function" name="remainder" signature="num.remainder(numeric)    =&gt; result" />
        <scope doc="Rounds `num&apos; to the nearest integer. Numeric implements this&#xA;by converting itself to a Float and invoking Float#round." ilk="function" name="round" signature="num.round    =&gt; integer" />
        <scope doc="Trap attempts to add methods to Numeric objects." ilk="function" name="singleton_method_added" signature="(p1)" />
        <scope doc="Invokes `block&apos; with the sequence of numbers starting at&#xA;`num&apos;, incremented by `step&apos; on each call. The loop finishes&#xA;when the value to be passed to the block is greater than&#xA;`limit&apos; (if `step&apos; is positive) or less than `limit&apos; (if&#xA;`step&apos; is negative)." ilk="function" name="step" signature="num.step(limit, step ) {|i| block }     =&gt; num" />
        <scope doc="Invokes the child class&apos;s to_i method to convert `num&apos; to an&#xA;integer." ilk="function" name="to_int" signature="num.to_int    =&gt; integer" />
        <scope doc="Returns `num&apos; truncated to an integer. Numeric implements&#xA;this by converting its value to a float and invoking&#xA;Float#truncate." ilk="function" name="truncate" signature="num.truncate    =&gt; integer" />
        <scope doc="Returns true if `num&apos; has a zero value." ilk="function" name="zero?" signature="num.zero?    =&gt; true or false" />
      </scope>
      <scope doc="Object is the parent class of all classes in Ruby. Its&#xA;methods are therefore available to all objects unless&#xA;explicitly overridden." ilk="class" name="Object">
        <scope attributes="__classmethod__ __ctor__" doc="Not documented" ilk="function" name="new" signature="()" />
        <scope doc="Equality---At the Object level, == returns true only if&#xA;`obj&apos; and `other&apos; are the same object. Typically, this&#xA;method is overridden in descendent classes to provide class-&#xA;specific meaning." ilk="function" name="==" signature="obj == other        =&gt; true or false&#xA;obj.equal?(other)   =&gt; true or false&#xA;obj.eql?(other)     =&gt; true or false" />
        <scope doc="Case Equality---For class Object, effectively the same as&#xA;calling #==, but typically overridden by descendents to&#xA;provide meaningful semantics in case statements." ilk="function" name="===" signature="obj === other   =&gt; true or false" />
        <scope doc="Pattern Match---Overridden by descendents (notably Regexp&#xA;and String) to provide meaningful pattern-match semantics." ilk="function" name="=~" signature="obj =~ other  =&gt; false" />
        <scope doc="Document-method: object_id" ilk="function" name="__id__" signature="obj.__id__       =&gt; fixnum&#xA;obj.object_id    =&gt; fixnum" />
        <scope doc="Invokes the method identified by `symbol&apos;, passing it any&#xA;arguments specified. You can use __send__ if the name send&#xA;clashes with an existing method in `obj&apos;." ilk="function" name="__send__" signature="obj.send(symbol [, args...])        =&gt; obj&#xA;obj.__send__(symbol [, args...])    =&gt; obj" />
        <scope doc="Returns the class of `obj&apos;, now preferred over Object#type,&#xA;as an object&apos;s type in Ruby is only loosely tied to that&#xA;object&apos;s class. This method must always be called with an&#xA;explicit receiver, as class is also a reserved word in Ruby." ilk="function" name="class" signature="obj.class    =&gt; class" />
        <scope doc="Produces a shallow copy of `obj&apos;---the instance variables of&#xA;`obj&apos; are copied, but not the objects they reference. Copies&#xA;the frozen and tainted state of `obj&apos;." ilk="function" name="clone" signature="obj.clone -&gt; an_object" />
        <scope doc="Prints `obj&apos; on the given port (default $&gt;)." ilk="function" name="display" signature="obj.display(port=$&gt;)    =&gt; nil" />
        <scope doc="Produces a shallow copy of `obj&apos;---the instance variables of&#xA;`obj&apos; are copied, but not the objects they reference. dup&#xA;copies the tainted state of `obj&apos;." ilk="function" name="dup" signature="obj.dup -&gt; an_object" />
        <scope doc="Returns Enumerable::Enumerator.new(self, method, *args)." ilk="function" name="enum_for" signature="obj.to_enum(method = :each, *args)&#xA;obj.enum_for(method = :each, *args)" />
        <scope doc="Equality---At the Object level, == returns true only if&#xA;`obj&apos; and `other&apos; are the same object. Typically, this&#xA;method is overridden in descendent classes to provide class-&#xA;specific meaning." ilk="function" name="eql?" signature="obj == other        =&gt; true or false&#xA;obj.equal?(other)   =&gt; true or false&#xA;obj.eql?(other)     =&gt; true or false" />
        <scope doc="Equality---At the Object level, == returns true only if&#xA;`obj&apos; and `other&apos; are the same object. Typically, this&#xA;method is overridden in descendent classes to provide class-&#xA;specific meaning." ilk="function" name="equal?" signature="obj == other        =&gt; true or false&#xA;obj.equal?(other)   =&gt; true or false&#xA;obj.eql?(other)     =&gt; true or false" />
        <scope doc="Adds to `obj&apos; the instance methods from each module given as&#xA;a parameter." ilk="function" name="extend" signature="obj.extend(module, ...)    =&gt; obj" />
        <scope doc="Prevents further modifications to `obj&apos;. A TypeError will be&#xA;raised if modification is attempted." ilk="function" name="freeze" signature="obj.freeze    =&gt; obj" />
        <scope doc="Returns the freeze status of `obj&apos;." ilk="function" name="frozen?" signature="obj.frozen?    =&gt; true or false" />
        <scope doc="Generates a Fixnum hash value for this object. This function&#xA;must have the property that a.eql?(b) implies a.hash ==&#xA;b.hash." ilk="function" name="hash" signature="obj.hash    =&gt; fixnum" />
        <scope doc="Soon-to-be deprecated version of Object#object_id." ilk="function" name="id" signature="obj.id    =&gt; fixnum" />
        <scope doc="Returns a string containing a human-readable representation&#xA;of `obj&apos;. If not overridden, uses the to_s method to&#xA;generate the string." ilk="function" name="inspect" signature="obj.inspect   =&gt; string" />
        <scope doc="Evaluates a string containing Ruby source code, or the given&#xA;block, within the context of the receiver (`obj&apos;). In order&#xA;to set the context, the variable self is set to `obj&apos; while&#xA;the code is executing, giving the code access to `obj&apos;&apos;s&#xA;instance variables." ilk="function" name="instance_eval" signature="obj.instance_eval(string [, filename [, lineno]] )   =&gt; obj&#xA;obj.instance_eval {| | block }                       =&gt; obj" />
        <scope doc="Returns true if `obj&apos; is an instance of the given class. See&#xA;also Object#kind_of?." ilk="function" name="instance_of?" signature="obj.instance_of?(class)    =&gt; true or false" />
        <scope doc="Returns the value of the given instance variable (or throws&#xA;a NameError exception)." ilk="function" name="instance_variable_get" signature="obj.instance_variable_get(symbol)    =&gt; obj" />
        <scope doc="Sets the instance variable names by `symbol&apos; to `object&apos;,&#xA;thereby frustrating the efforts of the class&apos;s author to&#xA;attempt to provide proper encapsulation. The variable did&#xA;not have to exist prior to this call." ilk="function" name="instance_variable_set" signature="obj.instance_variable_set(symbol, obj)    =&gt; obj" />
        <scope doc="Returns an array of instance variable names for the&#xA;receiver. Note that simply defining an accessor does not&#xA;create the corresponding instance variable." ilk="function" name="instance_variables" signature="obj.instance_variables    =&gt; array" />
        <scope doc="Returns true if `class&apos; is the class of `obj&apos;, or if `class&apos;&#xA;is one of the superclasses of `obj&apos; or modules included in&#xA;`obj&apos;." ilk="function" name="is_a?" signature="obj.is_a?(class)       =&gt; true or false&#xA;obj.kind_of?(class)    =&gt; true or false" />
        <scope doc="Returns true if `class&apos; is the class of `obj&apos;, or if `class&apos;&#xA;is one of the superclasses of `obj&apos; or modules included in&#xA;`obj&apos;." ilk="function" name="kind_of?" signature="obj.is_a?(class)       =&gt; true or false&#xA;obj.kind_of?(class)    =&gt; true or false" />
        <scope doc="Looks up the named method as a receiver in `obj&apos;, returning&#xA;a Method object (or raising NameError). The Method object&#xA;acts as a closure in `obj&apos;&apos;s object instance, so instance&#xA;variables and the value of self remain available." ilk="function" name="method" signature="obj.method(sym)    =&gt; method" />
        <scope doc="Returns a list of the names of methods publicly accessible&#xA;in `obj&apos;. This will include all the methods accessible in&#xA;`obj&apos;&apos;s ancestors." ilk="function" name="methods" signature="obj.methods    =&gt; array" />
        <scope doc="call_seq:" ilk="function" name="nil?" signature="()" />
        <scope doc="Returns an integer identifier for `obj&apos;. The same number&#xA;will be returned on all calls to id for a given object, and&#xA;no two active objects will share an id." ilk="function" name="object_id" signature="obj.__id__       =&gt; fixnum&#xA;obj.object_id    =&gt; fixnum" />
        <scope doc="Returns the list of private methods accessible to `obj&apos;. If&#xA;the `all&apos; parameter is set to false, only those methods in&#xA;the receiver will be listed." ilk="function" name="private_methods" signature="obj.private_methods(all=true)   =&gt; array" />
        <scope doc="Returns the list of protected methods accessible to `obj&apos;.&#xA;If the `all&apos; parameter is set to false, only those methods&#xA;in the receiver will be listed." ilk="function" name="protected_methods" signature="obj.protected_methods(all=true)   =&gt; array" />
        <scope doc="Returns the list of public methods accessible to `obj&apos;. If&#xA;the `all&apos; parameter is set to false, only those methods in&#xA;the receiver will be listed." ilk="function" name="public_methods" signature="obj.public_methods(all=true)   =&gt; array" />
        <scope doc="Removes the named instance variable from `obj&apos;, returning&#xA;that variable&apos;s value." ilk="function" name="remove_instance_variable" signature="obj.remove_instance_variable(symbol)    =&gt; obj" />
        <scope doc="Returns true&gt; if `obj&apos; responds to the given method. Private&#xA;methods are included in the search only if the optional&#xA;second parameter evaluates to true." ilk="function" name="respond_to?" signature="obj.respond_to?(symbol, include_private=false) =&gt; true or false" />
        <scope doc="Invokes the method identified by `symbol&apos;, passing it any&#xA;arguments specified. You can use __send__ if the name send&#xA;clashes with an existing method in `obj&apos;." ilk="function" name="send" signature="obj.send(symbol [, args...])        =&gt; obj&#xA;obj.__send__(symbol [, args...])    =&gt; obj" />
        <scope doc="Invoked as a callback whenever a singleton method is added&#xA;to the receiver." ilk="function" name="singleton_method_added" signature="singleton_method_added(symbol)" />
        <scope doc="Invoked as a callback whenever a singleton method is removed&#xA;from the receiver." ilk="function" name="singleton_method_removed" signature="singleton_method_removed(symbol)" />
        <scope doc="Invoked as a callback whenever a singleton method is&#xA;undefined in the receiver." ilk="function" name="singleton_method_undefined" signature="singleton_method_undefined(symbol)" />
        <scope doc="Returns an array of the names of singleton methods for&#xA;`obj&apos;. If the optional `all&apos; parameter is true, the list&#xA;will include methods in modules included in `obj&apos;." ilk="function" name="singleton_methods" signature="obj.singleton_methods(all=true)    =&gt; array" />
        <scope doc="Marks `obj&apos; as tainted---if the $SAFE level is set&#xA;appropriately, many method calls which might alter the&#xA;running programs environment will refuse to accept tainted&#xA;strings." ilk="function" name="taint" signature="obj.taint -&gt; obj" />
        <scope doc="Returns true if the object is tainted." ilk="function" name="tainted?" signature="obj.tainted?    =&gt; true or false" />
        <scope doc="Returns an array representation of `obj&apos;. For objects of&#xA;class Object and others that don&apos;t explicitly override the&#xA;method, the return value is an array containing self." ilk="function" name="to_a" signature="obj.to_a -&gt; anArray" />
        <scope doc="Returns Enumerable::Enumerator.new(self, method, *args)." ilk="function" name="to_enum" signature="obj.to_enum(method = :each, *args)&#xA;obj.enum_for(method = :each, *args)" />
        <scope doc="Returns a string representing `obj&apos;. The default to_s prints&#xA;the object&apos;s class and an encoding of the object id." ilk="function" name="to_s" signature="obj.to_s    =&gt; string" />
        <scope doc="Deprecated synonym for Object#class." ilk="function" name="type" signature="obj.type   =&gt; class" />
        <scope doc="Removes the taint from `obj&apos;." ilk="function" name="untaint" signature="obj.untaint    =&gt; obj" />
      </scope>
      <scope classrefs="Object" doc="Proc objects are blocks of code that have been bound to a&#xA;set of local variables. Once bound, the code may be called&#xA;in different contexts and still access those variables." ilk="class" name="Proc">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new Proc object, bound to the current context.&#xA;Proc::new may be called without a block only within a method&#xA;with an attached block, in which case that block is&#xA;converted to the Proc object." ilk="function" name="new" signature="Proc.new {|...| block } =&gt; a_proc &#xA;Proc.new                =&gt; a_proc " />
        <scope doc="Return true if `prc&apos; is the same object as `other_proc&apos;, or&#xA;if they are both procs with the same body." ilk="function" name="==" signature="prc == other_proc   =&gt;  true or false" />
        <scope doc="Invokes the block, setting the block&apos;s parameters to the&#xA;values in `params&apos; using something close to method calling&#xA;semantics. Generates a warning if multiple values are passed&#xA;to a proc that expects just one (previously this silently&#xA;converted the parameters to an array)." ilk="function" name="[]" signature="prc.call(params,...)   =&gt; obj&#xA;prc[params,...]        =&gt; obj" />
        <scope doc="Returns the number of arguments that would not be ignored.&#xA;If the block is declared to take no arguments, returns 0." ilk="function" name="arity" signature="prc.arity -&gt; fixnum" />
        <scope doc="Returns the binding associated with `prc&apos;. Note that&#xA;Kernel#eval accepts either a Proc or a Binding object as its&#xA;second parameter." ilk="function" name="binding" signature="prc.binding    =&gt; binding" />
        <scope doc="Invokes the block, setting the block&apos;s parameters to the&#xA;values in `params&apos; using something close to method calling&#xA;semantics. Generates a warning if multiple values are passed&#xA;to a proc that expects just one (previously this silently&#xA;converted the parameters to an array)." ilk="function" name="call" signature="prc.call(params,...)   =&gt; obj&#xA;prc[params,...]        =&gt; obj" />
        <scope doc="MISSING: documentation" ilk="function" name="clone" signature="()" />
        <scope doc="MISSING: documentation" ilk="function" name="dup" signature="()" />
        <scope doc="Part of the protocol for converting objects to Proc objects.&#xA;Instances of class Proc simply return themselves." ilk="function" name="to_proc" signature="prc.to_proc -&gt; prc" />
        <scope doc="Shows the unique identifier for this proc, along with an&#xA;indication of where the proc was defined." ilk="function" name="to_s" signature="prc.to_s   =&gt; string" />
      </scope>
      <scope classrefs="Object" doc="A Range represents an interval---a set of values with a&#xA;start and an end. Ranges may be constructed using the&#xA;`s&apos;..`e&apos; and `s&apos;...`e&apos; literals, or with Range::new." ilk="class" name="Range">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Constructs a range using the given `start&apos; and `end&apos;. If the&#xA;third parameter is omitted or is false, the `range&apos; will&#xA;include the end object; otherwise, it will be excluded." ilk="function" name="new" signature="Range.new(start, end, exclusive=false)    =&gt; range" />
        <scope doc="Returns true only if `obj&apos; is a Range, has equivalent&#xA;beginning and end items (by comparing them with ==), and has&#xA;the same #exclude_end? setting as &lt;i&gt;rng&lt;/t&gt;." ilk="function" name="==" signature="rng == obj    =&gt; true or false" />
        <scope doc="Returns true if `obj&apos; is an element of `rng&apos;, false&#xA;otherwise. Conveniently, === is the comparison operator used&#xA;by case statements." ilk="function" name="===" signature="rng === obj       =&gt;  true or false&#xA;rng.member?(val)  =&gt;  true or false&#xA;rng.include?(val) =&gt;  true or false" />
        <scope doc="Returns the first object in `rng&apos;." ilk="function" name="begin" signature="rng.first    =&gt; obj&#xA;rng.begin    =&gt; obj" />
        <scope doc="Iterates over the elements `rng&apos;, passing each in turn to&#xA;the block. You can only iterate if the start object of the&#xA;range supports the succ method (which means that you can&apos;t&#xA;iterate over ranges of Float objects)." ilk="function" name="each" signature="rng.each {| i | block } =&gt; rng" />
        <scope doc="Returns the object that defines the end of `rng&apos;." ilk="function" name="end" signature="rng.end    =&gt; obj&#xA;rng.last   =&gt; obj" />
        <scope doc="Returns true only if `obj&apos; is a Range, has equivalent&#xA;beginning and end items (by comparing them with #eql?), and&#xA;has the same #exclude_end? setting as `rng&apos;." ilk="function" name="eql?" signature="rng.eql?(obj)    =&gt; true or false" />
        <scope doc="Returns true if `rng&apos; excludes its end value." ilk="function" name="exclude_end?" signature="rng.exclude_end?    =&gt; true or false" />
        <scope doc="Returns the first object in `rng&apos;." ilk="function" name="first" signature="rng.first    =&gt; obj&#xA;rng.begin    =&gt; obj" />
        <scope doc="Generate a hash value such that two ranges with the same&#xA;start and end points, and the same value for the &quot;exclude&#xA;end&quot; flag, generate the same hash value." ilk="function" name="hash" signature="rng.hash    =&gt; fixnum" />
        <scope doc="Returns true if `obj&apos; is an element of `rng&apos;, false&#xA;otherwise. Conveniently, === is the comparison operator used&#xA;by case statements." ilk="function" name="include?" signature="rng === obj       =&gt;  true or false&#xA;rng.member?(val)  =&gt;  true or false&#xA;rng.include?(val) =&gt;  true or false" />
        <scope doc="Convert this range object to a printable form (using inspect&#xA;to convert the start and end objects)." ilk="function" name="inspect" signature="rng.inspect  =&gt; string" />
        <scope doc="Returns the object that defines the end of `rng&apos;." ilk="function" name="last" signature="rng.end    =&gt; obj&#xA;rng.last   =&gt; obj" />
        <scope doc="Returns true if `obj&apos; is an element of `rng&apos;, false&#xA;otherwise. Conveniently, === is the comparison operator used&#xA;by case statements." ilk="function" name="member?" signature="rng === obj       =&gt;  true or false&#xA;rng.member?(val)  =&gt;  true or false&#xA;rng.include?(val) =&gt;  true or false" />
        <scope doc="Iterates over `rng&apos;, passing each `n&apos;th element to the&#xA;block. If the range contains numbers or strings, natural&#xA;ordering is used." ilk="function" name="step" signature="rng.step(n=1) {| obj | block }    =&gt; rng" />
        <scope doc="Convert this range object to a printable form." ilk="function" name="to_s" signature="rng.to_s   =&gt; string" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="RangeError" />
      <scope classrefs="Object" doc="Document-class: Regexp" ilk="class" name="Regexp">
        <scope attributes="__classmethod__" doc="Synonym for Regexp.new" ilk="function" name="compile" signature="(...)" />
        <scope attributes="__classmethod__" doc="Escapes any characters that would have special meaning in a&#xA;regular expression. Returns a new escaped string, or self if&#xA;no characters are escaped." ilk="function" name="escape" signature="Regexp.escape(str)   =&gt; a_str&#xA;Regexp.quote(str)    =&gt; a_str" />
        <scope attributes="__classmethod__" doc="The first form returns the MatchData object generated by the&#xA;last successful pattern match. Equivalent to reading the&#xA;global variable $~." ilk="function" name="last_match" signature="Regexp.last_match           =&gt; matchdata&#xA;Regexp.last_match(fixnum)   =&gt; str" />
        <scope attributes="__classmethod__ __ctor__" doc="Constructs a new regular expression from `pattern&apos;, which&#xA;can be either a String or a Regexp (in which case that&#xA;regexp&apos;s options are propagated, and new options may not be&#xA;specified (a change as of Ruby 1.8). If `options&apos; is a&#xA;Fixnum, it should be one or more of the constants&#xA;Regexp::EXTENDED, Regexp::IGNORECASE, and Regexp::MULTILINE,&#xA;`or&apos;-ed together." ilk="function" name="new" signature="Regexp.new(string [, options [, lang]])       =&gt; regexp&#xA;Regexp.new(regexp)                            =&gt; regexp&#xA;Regexp.compile(string [, options [, lang]])   =&gt; regexp&#xA;Regexp.compile(regexp)                        =&gt; regexp" />
        <scope attributes="__classmethod__" doc="Escapes any characters that would have special meaning in a&#xA;regular expression. Returns a new escaped string, or self if&#xA;no characters are escaped." ilk="function" name="quote" signature="Regexp.escape(str)   =&gt; a_str&#xA;Regexp.quote(str)    =&gt; a_str" />
        <scope attributes="__classmethod__" doc="Return a Regexp object that is the union of the given&#xA;`pattern&apos;s, i.e., will match any of its parts. The&#xA;`pattern&apos;s can be Regexp objects, in which case their&#xA;options will be preserved, or Strings." ilk="function" name="union" signature="Regexp.union([pattern]*)   =&gt; new_str" />
        <scope doc="Equality---Two regexps are equal if their patterns are&#xA;identical, they have the same character set code, and their&#xA;casefold? values are the same." ilk="function" name="==" signature="rxp == other_rxp      =&gt; true or false&#xA;rxp.eql?(other_rxp)   =&gt; true or false" />
        <scope doc="Case Equality---Synonym for Regexp#=~ used in case&#xA;statements." ilk="function" name="===" signature="rxp === str   =&gt; true or false" />
        <scope doc="Returns a MatchData object describing the match, or nil if&#xA;there was no match. This is equivalent to retrieving the&#xA;value of the special variable $~ following a normal match." ilk="function" name="=~" signature="rxp.match(str)   =&gt; matchdata or nil" />
        <scope doc="Returns the value of the case-insensitive flag." ilk="function" name="casefold?" signature="rxp.casefold?   =&gt; true or false" />
        <scope doc="Equality---Two regexps are equal if their patterns are&#xA;identical, they have the same character set code, and their&#xA;casefold? values are the same." ilk="function" name="eql?" signature="rxp == other_rxp      =&gt; true or false&#xA;rxp.eql?(other_rxp)   =&gt; true or false" />
        <scope doc="Produce a hash based on the text and options of this regular&#xA;expression." ilk="function" name="hash" signature="rxp.hash   =&gt; fixnum" />
        <scope doc="Produce a nicely formatted string-version of `rxp&apos;. Perhaps&#xA;surprisingly, #inspect actually produces the more natural&#xA;version of the string than #to_s." ilk="function" name="inspect" signature="rxp.inspect   =&gt; string" />
        <scope doc="Returns the character set code for the regexp." ilk="function" name="kcode" signature="rxp.kcode   =&gt; str" />
        <scope doc="Returns a MatchData object describing the match, or nil if&#xA;there was no match. This is equivalent to retrieving the&#xA;value of the special variable $~ following a normal match." ilk="function" name="match" signature="rxp.match(str)   =&gt; matchdata or nil" />
        <scope doc="Returns the set of bits corresponding to the options used&#xA;when creating this Regexp (see Regexp::new for details. Note&#xA;that additional bits may be set in the returned options:&#xA;these are used internally by the regular expression code." ilk="function" name="options" signature="rxp.options   =&gt; fixnum" />
        <scope doc="Returns the original string of the pattern." ilk="function" name="source" signature="rxp.source   =&gt; str" />
        <scope doc="Returns a string containing the regular expression and its&#xA;options (using the (?xxx:yyy) notation. This string can be&#xA;fed back in to Regexp::new to a regular expression with the&#xA;same semantics as the original." ilk="function" name="to_s" signature="rxp.to_s   =&gt; str" />
        <scope doc="Match---Matches `rxp&apos; against the contents of $_. Equivalent&#xA;to `rxp&apos; =~ $_." ilk="function" name="~" signature="~ rxp   =&gt; integer or nil" />
        <variable attributes="__const__" citdl="Fixnum" name="EXTENDED" />
        <variable attributes="__const__" citdl="Fixnum" name="IGNORECASE" />
        <variable attributes="__const__" citdl="Fixnum" name="MULTILINE" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="RegexpError" />
      <scope classrefs="StandardError" ilk="class" name="RuntimeError" />
      <scope classrefs="Exception" ilk="class" name="ScriptError" />
      <scope classrefs="StandardError" ilk="class" name="SecurityError" />
      <scope classrefs="Exception" ilk="class" name="SignalException" />
      <scope classrefs="Exception" ilk="class" name="StandardError" />
      <scope classrefs="Object" doc="A String object holds and manipulates an arbitrary sequence&#xA;of bytes, typically representing characters. String objects&#xA;may be created using String::new or as literals." ilk="class" name="String">
        <import symbol="Comparable" />
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new string object containing a copy of `str&apos;." ilk="function" name="new" signature="String.new(str=&quot;&quot;)   =&gt; new_str" />
        <scope doc="Format---Uses `str&apos; as a format specification, and returns&#xA;the result of applying it to `arg&apos;. If the format&#xA;specification contains more than one substitution, then&#xA;`arg&apos; must be an Array containing the values to be&#xA;substituted." ilk="function" name="%" signature="str % arg   =&gt; new_str" />
        <scope doc="Copy---Returns a new String containing `integer&apos; copies of&#xA;the receiver." ilk="function" name="*" signature="str * integer   =&gt; new_str" />
        <scope doc="Concatenation---Returns a new String containing `other_str&apos;&#xA;concatenated to `str&apos;." ilk="function" name="+" signature="str + other_str   =&gt; new_str" />
        <scope doc="Append---Concatenates the given object to `str&apos;. If the&#xA;object is a Fixnum between 0 and 255, it is converted to a&#xA;character before concatenation." ilk="function" name="&lt;&lt;" signature="str &lt;&lt; fixnum        =&gt; str&#xA;str.concat(fixnum)   =&gt; str&#xA;str &lt;&lt; obj           =&gt; str&#xA;str.concat(obj)      =&gt; str" />
        <scope doc="Comparison---Returns -1 if `other_str&apos; is less than, 0 if&#xA;`other_str&apos; is equal to, and +1 if `other_str&apos; is greater&#xA;than `str&apos;. If the strings are of different lengths, and the&#xA;strings are equal when compared up to the shortest length,&#xA;then the longer string is considered greater than the&#xA;shorter one." ilk="function" name="&lt;=&gt;" signature="str &lt;=&gt; other_str   =&gt; -1, 0, +1" />
        <scope doc="Equality---If `obj&apos; is not a String, returns false.&#xA;Otherwise, returns true if `str&apos; &lt;=&gt; `obj&apos; returns zero." ilk="function" name="==" signature="str == obj   =&gt; true or false" />
        <scope doc="Match---If `obj&apos; is a Regexp, use it as a pattern to match&#xA;against `str&apos;. If `obj&apos; is a String, look for it in `str&apos;&#xA;(similar to String#index)." ilk="function" name="=~" signature="str =~ obj   =&gt; fixnum or nil" />
        <scope doc="Element Reference---If passed a single Fixnum, returns the&#xA;code of the character at that position. If passed two Fixnum&#xA;objects, returns a substring starting at the offset given by&#xA;the first, and a length given by the second." ilk="function" name="[]" signature="str[fixnum]                 =&gt; fixnum or nil&#xA;str[fixnum, fixnum]         =&gt; new_str or nil&#xA;str[range]                  =&gt; new_str or nil&#xA;str[regexp]                 =&gt; new_str or nil&#xA;str[regexp, fixnum]         =&gt; new_str or nil&#xA;str[other_str]              =&gt; new_str or nil&#xA;str.slice(fixnum)           =&gt; fixnum or nil&#xA;str.slice(fixnum, fixnum)   =&gt; new_str or nil&#xA;str.slice(range)            =&gt; new_str or nil&#xA;str.slice(regexp)           =&gt; new_str or nil&#xA;str.slice(regexp, fixnum)   =&gt; new_str or nil&#xA;str.slice(other_str)        =&gt; new_str or nil" />
        <scope doc="Element Assignment---Replaces some or all of the content of&#xA;`str&apos;. The portion of the string affected is determined&#xA;using the same criteria as String#[]." ilk="function" name="[]=" signature="str[fixnum] = fixnum&#xA;str[fixnum] = new_str&#xA;str[fixnum, fixnum] = new_str&#xA;str[range] = aString&#xA;str[regexp] = new_str&#xA;str[regexp, fixnum] = new_str&#xA;str[other_str] = new_str" />
        <scope doc="Returns a copy of `str&apos; with the first character converted&#xA;to uppercase and the remainder to lowercase." ilk="function" name="capitalize" signature="str.capitalize   =&gt; new_str" />
        <scope doc="Modifies `str&apos; by converting the first character to&#xA;uppercase and the remainder to lowercase. Returns nil if no&#xA;changes are made." ilk="function" name="capitalize!" signature="str.capitalize!   =&gt; str or nil" />
        <scope doc="Case-insensitive version of String#&lt;=&gt;." ilk="function" name="casecmp" signature="str.casecmp(other_str)   =&gt; -1, 0, +1" />
        <scope doc="If `integer&apos; is greater than the length of `str&apos;, returns a&#xA;new String of length `integer&apos; with `str&apos; centered and&#xA;padded with `padstr&apos;; otherwise, returns `str&apos;." ilk="function" name="center" signature="str.center(integer, padstr)   =&gt; new_str" />
        <scope doc="Returns a new String with the given record separator removed&#xA;from the end of `str&apos; (if present). If $/ has not been&#xA;changed from the default Ruby record separator, then chomp&#xA;also removes carriage return characters (that is it will&#xA;remove \n, \r, and \r\n)." ilk="function" name="chomp" signature="str.chomp(separator=$/)   =&gt; new_str" />
        <scope doc="Modifies `str&apos; in place as described for String#chomp,&#xA;returning `str&apos;, or nil if no modifications were made." ilk="function" name="chomp!" signature="str.chomp!(separator=$/)   =&gt; str or nil" />
        <scope doc="Returns a new String with the last character removed. If the&#xA;string ends with \r\n, both characters are removed." ilk="function" name="chop" signature="str.chop   =&gt; new_str" />
        <scope doc="Processes `str&apos; as for String#chop, returning `str&apos;, or nil&#xA;if `str&apos; is the empty string. See also String#chomp!." ilk="function" name="chop!" signature="str.chop!   =&gt; str or nil" />
        <scope doc="Append---Concatenates the given object to `str&apos;. If the&#xA;object is a Fixnum between 0 and 255, it is converted to a&#xA;character before concatenation." ilk="function" name="concat" signature="str &lt;&lt; fixnum        =&gt; str&#xA;str.concat(fixnum)   =&gt; str&#xA;str &lt;&lt; obj           =&gt; str&#xA;str.concat(obj)      =&gt; str" />
        <scope doc="Each `other_str&apos; parameter defines a set of characters to&#xA;count. The intersection of these sets defines the characters&#xA;to count in `str&apos;." ilk="function" name="count" signature="str.count([other_str]+)   =&gt; fixnum" />
        <scope doc="Applies a one-way cryptographic hash to `str&apos; by invoking&#xA;the standard library function crypt. The argument is the&#xA;salt string, which should be two characters long, each&#xA;character drawn from [a-zA-Z0-9./]." ilk="function" name="crypt" signature="str.crypt(other_str)   =&gt; new_str" />
        <scope doc="Returns a copy of `str&apos; with all characters in the&#xA;intersection of its arguments deleted. Uses the same rules&#xA;for building the set of characters as String#count." ilk="function" name="delete" signature="str.delete([other_str]+)   =&gt; new_str" />
        <scope doc="Performs a delete operation in place, returning `str&apos;, or&#xA;nil if `str&apos; was not modified." ilk="function" name="delete!" signature="str.delete!([other_str]+&gt;)   =&gt; str or nil" />
        <scope doc="Returns a copy of `str&apos; with all uppercase letters replaced&#xA;with their lowercase counterparts. The operation is locale&#xA;insensitive---only characters ``A&apos;&apos; to ``Z&apos;&apos; are affected." ilk="function" name="downcase" signature="str.downcase   =&gt; new_str" />
        <scope doc="Downcases the contents of `str&apos;, returning nil if no changes&#xA;were made." ilk="function" name="downcase!" signature="str.downcase!   =&gt; str or nil" />
        <scope doc="Produces a version of `str&apos; with all nonprinting characters&#xA;replaced by \nnn notation and all special characters&#xA;escaped." ilk="function" name="dump" signature="str.dump   =&gt; new_str" />
        <scope doc="Splits `str&apos; using the supplied parameter as the record&#xA;separator ($/ by default), passing each substring in turn to&#xA;the supplied block. If a zero-length record separator is&#xA;supplied, the string is split on \n characters, except that&#xA;multiple successive newlines are appended together." ilk="function" name="each" signature="str.each(separator=$/) {|substr| block }        =&gt; str&#xA;str.each_line(separator=$/) {|substr| block }   =&gt; str" />
        <scope doc="Passes each byte in `str&apos; to the given block." ilk="function" name="each_byte" signature="str.each_byte {|fixnum| block }    =&gt; str" />
        <scope doc="Splits `str&apos; using the supplied parameter as the record&#xA;separator ($/ by default), passing each substring in turn to&#xA;the supplied block. If a zero-length record separator is&#xA;supplied, the string is split on \n characters, except that&#xA;multiple successive newlines are appended together." ilk="function" name="each_line" signature="str.each(separator=$/) {|substr| block }        =&gt; str&#xA;str.each_line(separator=$/) {|substr| block }   =&gt; str" />
        <scope doc="Returns true if `str&apos; has a length of zero." ilk="function" name="empty?" signature="str.empty?   =&gt; true or false" />
        <scope doc="Two strings are equal if the have the same length and&#xA;content." ilk="function" name="eql?" signature="str.eql?(other)   =&gt; true or false" />
        <scope doc="Returns a copy of `str&apos; with `all&apos; occurrences of `pattern&apos;&#xA;replaced with either `replacement&apos; or the value of the&#xA;block. The `pattern&apos; will typically be a Regexp; if it is a&#xA;String then no regular expression metacharacters will be&#xA;interpreted (that is /\d/ will match a digit, but &apos;\d&apos; will&#xA;match a backslash followed by a &apos;d&apos;)." ilk="function" name="gsub" signature="str.gsub(pattern, replacement)       =&gt; new_str&#xA;str.gsub(pattern) {|match| block }   =&gt; new_str" />
        <scope doc="Performs the substitutions of String#gsub in place,&#xA;returning `str&apos;, or nil if no substitutions were performed." ilk="function" name="gsub!" signature="str.gsub!(pattern, replacement)        =&gt; str or nil&#xA;str.gsub!(pattern) {|match| block }    =&gt; str or nil" />
        <scope doc="Return a hash based on the string&apos;s length and content." ilk="function" name="hash" signature="str.hash   =&gt; fixnum" />
        <scope doc="Treats leading characters from `str&apos; as a string of&#xA;hexadecimal digits (with an optional sign and an optional&#xA;0x) and returns the corresponding number. Zero is returned&#xA;on error." ilk="function" name="hex" signature="str.hex   =&gt; integer" />
        <scope doc="Returns true if `str&apos; contains the given string or&#xA;character." ilk="function" name="include?" signature="str.include? other_str   =&gt; true or false&#xA;str.include? fixnum      =&gt; true or false" />
        <scope doc="Returns the index of the first occurrence of the given&#xA;`substring&apos;, character (`fixnum&apos;), or pattern (`regexp&apos;) in&#xA;`str&apos;. Returns nil if not found." ilk="function" name="index" signature="str.index(substring [, offset])   =&gt; fixnum or nil&#xA;str.index(fixnum [, offset])      =&gt; fixnum or nil&#xA;str.index(regexp [, offset])      =&gt; fixnum or nil" />
        <scope doc="Replaces the contents and taintedness of `str&apos; with the&#xA;corresponding values in `other_str&apos;." ilk="function" name="initialize_copy" signature="str.replace(other_str)   =&gt; str" />
        <scope doc="Inserts `other_str&apos; before the character at the given&#xA;`index&apos;, modifying `str&apos;. Negative indices count from the&#xA;end of the string, and insert `after&apos; the given character." ilk="function" name="insert" signature="str.insert(index, other_str)   =&gt; str" />
        <scope doc="Returns a printable version of `str&apos;, with special&#xA;characters escaped." ilk="function" name="inspect" signature="str.inspect   =&gt; string" />
        <scope doc="Returns the Symbol corresponding to `str&apos;, creating the&#xA;symbol if it did not previously exist. See Symbol#id2name." ilk="function" name="intern" signature="str.intern   =&gt; symbol&#xA;str.to_sym   =&gt; symbol" />
        <scope doc="Returns whether self&apos;s encoding is EUC-JP or not." ilk="function" name="iseuc" signature="String#iseuc   -&gt; obj or nil" />
        <scope doc="Returns whether self&apos;s encoding is Shift_JIS or not." ilk="function" name="issjis" signature="String#issjis   -&gt; obj or nil" />
        <scope doc="Returns whether self&apos;s encoding is UTF-8 or not." ilk="function" name="isutf8" signature="String#isutf8   -&gt; obj or nil" />
        <scope doc="Convert self to out_code. out_code and in_code are given as&#xA;constants of Kconv." ilk="function" name="kconv" signature="String#kconv(out_code, in_code = Kconv::AUTO)" />
        <scope doc="Returns the length of `str&apos;." ilk="function" name="length" signature="str.length   =&gt; integer" />
        <scope doc="If `integer&apos; is greater than the length of `str&apos;, returns a&#xA;new String of length `integer&apos; with `str&apos; left justified and&#xA;padded with `padstr&apos;; otherwise, returns `str&apos;." ilk="function" name="ljust" signature="str.ljust(integer, padstr=&apos; &apos;)   =&gt; new_str" />
        <scope doc="Returns a copy of `str&apos; with leading whitespace removed. See&#xA;also String#rstrip and String#strip." ilk="function" name="lstrip" signature="str.lstrip   =&gt; new_str" />
        <scope doc="Removes leading whitespace from `str&apos;, returning nil if no&#xA;change was made. See also String#rstrip! and String#strip!." ilk="function" name="lstrip!" signature="str.lstrip!   =&gt; self or nil" />
        <scope doc="Converts `pattern&apos; to a Regexp (if it isn&apos;t already one),&#xA;then invokes its match method on `str&apos;." ilk="function" name="match" signature="str.match(pattern)   =&gt; matchdata or nil" />
        <scope doc="Returns the successor to `str&apos;. The successor is calculated&#xA;by incrementing characters starting from the rightmost&#xA;alphanumeric (or the rightmost character if there are no&#xA;alphanumerics) in the string." ilk="function" name="next" signature="str.succ   =&gt; new_str&#xA;str.next   =&gt; new_str" />
        <scope doc="Equivalent to String#succ, but modifies the receiver in&#xA;place." ilk="function" name="next!" signature="str.succ!   =&gt; str&#xA;str.next!   =&gt; str" />
        <scope doc="Treats leading characters of `str&apos; as a string of octal&#xA;digits (with an optional sign) and returns the corresponding&#xA;number. Returns 0 if the conversion fails." ilk="function" name="oct" signature="str.oct   =&gt; integer" />
        <scope doc="Replaces the contents and taintedness of `str&apos; with the&#xA;corresponding values in `other_str&apos;." ilk="function" name="replace" signature="str.replace(other_str)   =&gt; str" />
        <scope doc="Returns a new string with the characters from `str&apos; in&#xA;reverse order." ilk="function" name="reverse" signature="str.reverse   =&gt; new_str" />
        <scope doc="Reverses `str&apos; in place." ilk="function" name="reverse!" signature="str.reverse!   =&gt; str" />
        <scope doc="Returns the index of the last occurrence of the given&#xA;`substring&apos;, character (`fixnum&apos;), or pattern (`regexp&apos;) in&#xA;`str&apos;. Returns nil if not found." ilk="function" name="rindex" signature="str.rindex(substring [, fixnum])   =&gt; fixnum or nil&#xA;str.rindex(fixnum [, fixnum])   =&gt; fixnum or nil&#xA;str.rindex(regexp [, fixnum])   =&gt; fixnum or nil" />
        <scope doc="If `integer&apos; is greater than the length of `str&apos;, returns a&#xA;new String of length `integer&apos; with `str&apos; right justified&#xA;and padded with `padstr&apos;; otherwise, returns `str&apos;." ilk="function" name="rjust" signature="str.rjust(integer, padstr=&apos; &apos;)   =&gt; new_str" />
        <scope doc="Returns a copy of `str&apos; with trailing whitespace removed.&#xA;See also String#lstrip and String#strip." ilk="function" name="rstrip" signature="str.rstrip   =&gt; new_str" />
        <scope doc="Removes trailing whitespace from `str&apos;, returning nil if no&#xA;change was made. See also String#lstrip! and String#strip!." ilk="function" name="rstrip!" signature="str.rstrip!   =&gt; self or nil" />
        <scope doc="Both forms iterate through `str&apos;, matching the pattern&#xA;(which may be a Regexp or a String). For each match, a&#xA;result is generated and either added to the result array or&#xA;passed to the block." ilk="function" name="scan" signature="str.scan(pattern)                         =&gt; array&#xA;str.scan(pattern) {|match, ...| block }   =&gt; str" />
        <scope doc="Returns the length of `str&apos;." ilk="function" name="size" signature="str.length   =&gt; integer" />
        <scope doc="Element Reference---If passed a single Fixnum, returns the&#xA;code of the character at that position. If passed two Fixnum&#xA;objects, returns a substring starting at the offset given by&#xA;the first, and a length given by the second." ilk="function" name="slice" signature="str[fixnum]                 =&gt; fixnum or nil&#xA;str[fixnum, fixnum]         =&gt; new_str or nil&#xA;str[range]                  =&gt; new_str or nil&#xA;str[regexp]                 =&gt; new_str or nil&#xA;str[regexp, fixnum]         =&gt; new_str or nil&#xA;str[other_str]              =&gt; new_str or nil&#xA;str.slice(fixnum)           =&gt; fixnum or nil&#xA;str.slice(fixnum, fixnum)   =&gt; new_str or nil&#xA;str.slice(range)            =&gt; new_str or nil&#xA;str.slice(regexp)           =&gt; new_str or nil&#xA;str.slice(regexp, fixnum)   =&gt; new_str or nil&#xA;str.slice(other_str)        =&gt; new_str or nil" />
        <scope doc="Deletes the specified portion from `str&apos;, and returns the&#xA;portion deleted. The forms that take a Fixnum will raise an&#xA;IndexError if the value is out of range; the Range form will&#xA;raise a RangeError, and the Regexp and String forms will&#xA;silently ignore the assignment." ilk="function" name="slice!" signature="str.slice!(fixnum)           =&gt; fixnum or nil&#xA;str.slice!(fixnum, fixnum)   =&gt; new_str or nil&#xA;str.slice!(range)            =&gt; new_str or nil&#xA;str.slice!(regexp)           =&gt; new_str or nil&#xA;str.slice!(other_str)        =&gt; new_str or nil" />
        <scope doc="Divides `str&apos; into substrings based on a delimiter,&#xA;returning an array of these substrings." ilk="function" name="split" signature="str.split(pattern=$;, [limit])   =&gt; anArray" />
        <scope doc="Builds a set of characters from the `other_str&apos; parameter(s)&#xA;using the procedure described for String#count. Returns a&#xA;new string where runs of the same character that occur in&#xA;this set are replaced by a single character." ilk="function" name="squeeze" signature="str.squeeze([other_str]*)    =&gt; new_str" />
        <scope doc="Squeezes `str&apos; in place, returning either `str&apos;, or nil if&#xA;no changes were made." ilk="function" name="squeeze!" signature="str.squeeze!([other_str]*)   =&gt; str or nil" />
        <scope doc="Returns a copy of `str&apos; with leading and trailing whitespace&#xA;removed." ilk="function" name="strip" signature="str.strip   =&gt; new_str" />
        <scope doc="Removes leading and trailing whitespace from `str&apos;. Returns&#xA;nil if `str&apos; was not altered." ilk="function" name="strip!" signature="str.strip!   =&gt; str or nil" />
        <scope doc="Returns a copy of `str&apos; with the `first&apos; occurrence of&#xA;`pattern&apos; replaced with either `replacement&apos; or the value of&#xA;the block. The `pattern&apos; will typically be a Regexp; if it&#xA;is a String then no regular expression metacharacters will&#xA;be interpreted (that is /\d/ will match a digit, but &apos;\d&apos;&#xA;will match a backslash followed by a &apos;d&apos;)." ilk="function" name="sub" signature="str.sub(pattern, replacement)         =&gt; new_str&#xA;str.sub(pattern) {|match| block }     =&gt; new_str" />
        <scope doc="Performs the substitutions of String#sub in place, returning&#xA;`str&apos;, or nil if no substitutions were performed." ilk="function" name="sub!" signature="str.sub!(pattern, replacement)          =&gt; str or nil&#xA;str.sub!(pattern) {|match| block }      =&gt; str or nil" />
        <scope doc="Returns the successor to `str&apos;. The successor is calculated&#xA;by incrementing characters starting from the rightmost&#xA;alphanumeric (or the rightmost character if there are no&#xA;alphanumerics) in the string." ilk="function" name="succ" signature="str.succ   =&gt; new_str&#xA;str.next   =&gt; new_str" />
        <scope doc="Equivalent to String#succ, but modifies the receiver in&#xA;place." ilk="function" name="succ!" signature="str.succ!   =&gt; str&#xA;str.next!   =&gt; str" />
        <scope doc="Returns a basic `n&apos;-bit checksum of the characters in `str&apos;,&#xA;where `n&apos; is the optional Fixnum parameter, defaulting to&#xA;16. The result is simply the sum of the binary value of each&#xA;character in `str&apos; modulo 2n - 1." ilk="function" name="sum" signature="str.sum(n=16)   =&gt; integer" />
        <scope doc="Returns a copy of `str&apos; with uppercase alphabetic characters&#xA;converted to lowercase and lowercase characters converted to&#xA;uppercase." ilk="function" name="swapcase" signature="str.swapcase   =&gt; new_str" />
        <scope doc="Equivalent to String#swapcase, but modifies the receiver in&#xA;place, returning `str&apos;, or nil if no changes were made." ilk="function" name="swapcase!" signature="str.swapcase!   =&gt; str or nil" />
        <scope doc="Returns the result of interpreting leading characters in&#xA;`str&apos; as a floating point number. Extraneous characters past&#xA;the end of a valid number are ignored." ilk="function" name="to_f" signature="str.to_f   =&gt; float" />
        <scope doc="Returns the result of interpreting leading characters in&#xA;`str&apos; as an integer base `base&apos; (2, 8, 10, or 16).&#xA;Extraneous characters past the end of a valid number are&#xA;ignored." ilk="function" name="to_i" signature="str.to_i(base=10)   =&gt; integer" />
        <scope doc="Returns the receiver." ilk="function" name="to_s" signature="str.to_s     =&gt; str&#xA;str.to_str   =&gt; str" />
        <scope doc="Returns the receiver." ilk="function" name="to_str" signature="str.to_s     =&gt; str&#xA;str.to_str   =&gt; str" />
        <scope doc="Returns the Symbol corresponding to `str&apos;, creating the&#xA;symbol if it did not previously exist. See Symbol#id2name." ilk="function" name="to_sym" signature="str.intern   =&gt; symbol&#xA;str.to_sym   =&gt; symbol" />
        <scope doc="Convert self to EUC-JP" ilk="function" name="toeuc" signature="String#toeuc   -&gt; string" />
        <scope doc="Convert self to ISO-2022-JP" ilk="function" name="tojis" signature="String#tojis   -&gt; string" />
        <scope doc="Convert self to Shift_JIS" ilk="function" name="tosjis" signature="String#tosjis   -&gt; string" />
        <scope doc="Convert self to UTF-16" ilk="function" name="toutf16" signature="String#toutf16   -&gt; string" />
        <scope doc="Convert self to UTF-8" ilk="function" name="toutf8" signature="String#toutf8   -&gt; string" />
        <scope doc="Returns a copy of `str&apos; with the characters in `from_str&apos;&#xA;replaced by the corresponding characters in `to_str&apos;. If&#xA;`to_str&apos; is shorter than `from_str&apos;, it is padded with its&#xA;last character." ilk="function" name="tr" signature="str.tr(from_str, to_str)   =&gt; new_str" />
        <scope doc="Translates `str&apos; in place, using the same rules as&#xA;String#tr. Returns `str&apos;, or nil if no changes were made." ilk="function" name="tr!" signature="str.tr!(from_str, to_str)   =&gt; str or nil" />
        <scope doc="Processes a copy of `str&apos; as described under String#tr, then&#xA;removes duplicate characters in regions that were affected&#xA;by the translation." ilk="function" name="tr_s" signature="str.tr_s(from_str, to_str)   =&gt; new_str" />
        <scope doc="Performs String#tr_s processing on `str&apos; in place, returning&#xA;`str&apos;, or nil if no changes were made." ilk="function" name="tr_s!" signature="str.tr_s!(from_str, to_str)   =&gt; str or nil" />
        <scope doc="Decodes `str&apos; (which may contain binary data) according to&#xA;the format string, returning an array of each value&#xA;extracted. The format string consists of a sequence of&#xA;single-character directives, summarized in the table at the&#xA;end of this entry." ilk="function" name="unpack" signature="str.unpack(format)   =&gt; anArray" />
        <scope doc="Returns a copy of `str&apos; with all lowercase letters replaced&#xA;with their uppercase counterparts. The operation is locale&#xA;insensitive---only characters ``a&apos;&apos; to ``z&apos;&apos; are affected." ilk="function" name="upcase" signature="str.upcase   =&gt; new_str" />
        <scope doc="Upcases the contents of `str&apos;, returning nil if no changes&#xA;were made." ilk="function" name="upcase!" signature="str.upcase!   =&gt; str or nil" />
        <scope doc="Iterates through successive values, starting at `str&apos; and&#xA;ending at `other_str&apos; inclusive, passing each value in turn&#xA;to the block. The String#succ method is used to generate&#xA;each value." ilk="function" name="upto" signature="str.upto(other_str) {|s| block }   =&gt; str" />
      </scope>
      <scope classrefs="Object" doc="A Struct is a convenient way to bundle a number of&#xA;attributes together, using accessor methods, without having&#xA;to write an explicit class." ilk="class" name="Struct">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new class, named by `aString&apos;, containing accessor&#xA;methods for the given symbols. If the name `aString&apos; is&#xA;omitted, an anonymous structure class will be created." ilk="function" name="new" signature="Struct.new( [aString] [, aSym]+&gt; )    =&gt; StructClass&#xA;StructClass.new(arg, ...)             =&gt; obj&#xA;StructClass[arg, ...]                 =&gt; obj" />
        <scope doc="Equality---Returns true if `other_struct&apos; is equal to this&#xA;one: they must be of the same class as generated by&#xA;Struct::new, and the values of all instance variables must&#xA;be equal (according to Object#==)." ilk="function" name="==" signature="struct == other_struct     =&gt; true or false" />
        <scope doc="Attribute Reference---Returns the value of the instance&#xA;variable named by `symbol&apos;, or indexed (0..length-1) by&#xA;`fixnum&apos;. Will raise NameError if the named variable does&#xA;not exist, or IndexError if the index is out of range." ilk="function" name="[]" signature="struct[symbol]    =&gt; anObject&#xA;struct[fixnum]    =&gt; anObject " />
        <scope doc="Attribute Assignment---Assigns to the instance variable&#xA;named by `symbol&apos; or `fixnum&apos; the value `obj&apos; and returns&#xA;it. Will raise a NameError if the named variable does not&#xA;exist, or an IndexError if the index is out of range." ilk="function" name="[]=" signature="struct[symbol] = obj    =&gt; obj&#xA;struct[fixnum] = obj    =&gt; obj" />
        <scope doc="Calls `block&apos; once for each instance variable, passing the&#xA;value as a parameter." ilk="function" name="each" signature="struct.each {|obj| block }  =&gt; struct" />
        <scope doc="Calls `block&apos; once for each instance variable, passing the&#xA;name (as a symbol) and the value as parameters." ilk="function" name="each_pair" signature="struct.each_pair {|sym, obj| block }     =&gt; struct" />
        <scope doc="code-seq:" ilk="function" name="eql?" signature="(p1)" />
        <scope doc="Return a hash value based on this struct&apos;s contents." ilk="function" name="hash" signature="struct.hash   =&gt; fixnum" />
        <scope doc="Describe the contents of this struct in a string." ilk="function" name="inspect" signature="struct.to_s      =&gt; string&#xA;struct.inspect   =&gt; string" />
        <scope doc="Returns the number of instance variables." ilk="function" name="length" signature="struct.length    =&gt; fixnum&#xA;struct.size      =&gt; fixnum" />
        <scope doc="Returns an array of strings representing the names of the&#xA;instance variables." ilk="function" name="members" signature="struct.members    =&gt; array" />
        <scope doc="Invokes the block passing in successive elements from&#xA;`struct&apos;, returning an array containing those elements for&#xA;which the block returns a true value (equivalent to&#xA;Enumerable#select)." ilk="function" name="select" signature="struct.select {|i| block }    =&gt; array" />
        <scope doc="Returns the number of instance variables." ilk="function" name="size" signature="struct.length    =&gt; fixnum&#xA;struct.size      =&gt; fixnum" />
        <scope doc="Returns the values for this instance as an array." ilk="function" name="to_a" signature="struct.to_a     =&gt; array&#xA;struct.values   =&gt; array" />
        <scope doc="Describe the contents of this struct in a string." ilk="function" name="to_s" signature="struct.to_s      =&gt; string&#xA;struct.inspect   =&gt; string" />
        <scope doc="Returns the values for this instance as an array." ilk="function" name="values" signature="struct.to_a     =&gt; array&#xA;struct.values   =&gt; array" />
        <scope doc="Returns an array containing the elements in `self&apos;&#xA;corresponding to the given selector(s). The selectors may be&#xA;either integer indices or ranges." ilk="function" name="values_at" signature="struct.values_at(selector,... )  =&gt; an_array" />
      </scope>
      <scope classrefs="Object" doc="Symbol objects represent names and some strings inside the&#xA;Ruby interpreter. They are generated using the :name and&#xA;:&quot;string&quot; literals syntax, and by the various to_sym&#xA;methods." ilk="class" name="Symbol">
        <scope attributes="__classmethod__" doc="Returns an array of all the symbols currently in Ruby&apos;s&#xA;symbol table." ilk="function" name="all_symbols" signature="Symbol.all_symbols    =&gt; array" />
        <scope doc="Equality---At the Object level, == returns true only if&#xA;`obj&apos; and `other&apos; are the same object. Typically, this&#xA;method is overridden in descendent classes to provide class-&#xA;specific meaning." ilk="function" name="===" signature="obj == other        =&gt; true or false&#xA;obj.equal?(other)   =&gt; true or false&#xA;obj.eql?(other)     =&gt; true or false" />
        <scope doc="Returns the name or string corresponding to `sym&apos;." ilk="function" name="id2name" signature="sym.id2name   =&gt; string&#xA;sym.to_s      =&gt; string" />
        <scope doc="Returns the representation of `sym&apos; as a symbol literal." ilk="function" name="inspect" signature="sym.inspect    =&gt; string" />
        <scope doc="Returns an integer that is unique for each symbol within a&#xA;particular execution of a program." ilk="function" name="to_i" signature="sym.to_i      =&gt; fixnum" />
        <scope doc=":nodoc:" ilk="function" name="to_int" signature="()" />
        <scope doc="Returns the name or string corresponding to `sym&apos;." ilk="function" name="to_s" signature="sym.id2name   =&gt; string&#xA;sym.to_s      =&gt; string" />
        <scope doc="In general, to_sym returns the Symbol corresponding to an&#xA;object. As `sym&apos; is already a symbol, self is returned in&#xA;this case." ilk="function" name="to_sym" signature="sym.to_sym   =&gt; sym" />
      </scope>
      <scope classrefs="ScriptError" ilk="class" name="SyntaxError" />
      <scope classrefs="StandardError" ilk="class" name="SystemCallError">
        <scope attributes="__classmethod__" doc="Return true if the receiver is a generic SystemCallError, or&#xA;if the error numbers `self&apos; and `other&apos; are the same." ilk="function" name="===" signature="system_call_error === other  =&gt; true or false" />
        <scope attributes="__classmethod__ __ctor__" doc="If `errno&apos; corresponds to a known system error code,&#xA;constructs the appropriate Errno class for that error,&#xA;otherwise constructs a generic SystemCallError object. The&#xA;error number is subsequently available via the errno method." ilk="function" name="new" signature="SystemCallError.new(msg, errno)  =&gt; system_call_error_subclass" />
        <scope doc="Return this SystemCallError&apos;s error number." ilk="function" name="errno" signature="system_call_error.errno   =&gt; fixnum" />
      </scope>
      <scope classrefs="Exception" ilk="class" name="SystemExit">
        <scope attributes="__classmethod__ __ctor__" doc="Create a new SystemExit exception with the given status." ilk="function" name="new" signature="SystemExit.new(status=0)   =&gt; system_exit" />
        <scope doc="Return the status value associated with this system exit." ilk="function" name="status" signature="system_exit.status   =&gt; fixnum" />
        <scope doc="Returns true if exiting successful, false if not." ilk="function" name="success?" signature="system_exit.success?  =&gt; true or false" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="SystemStackError" />
      <scope classrefs="Object" doc="Thread encapsulates the behavior of a thread of execution,&#xA;including the main thread of the Ruby script." ilk="class" name="Thread">
        <scope attributes="__classmethod__" doc="Returns the status of the global ``abort on exception&apos;&apos;&#xA;condition. The default is false." ilk="function" name="abort_on_exception" signature="Thread.abort_on_exception   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="When set to true, all threads will abort if an exception is&#xA;raised. Returns the new state." ilk="function" name="abort_on_exception=" signature="Thread.abort_on_exception= boolean   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns the status of the global ``thread critical&apos;&apos;&#xA;condition." ilk="function" name="critical" signature="Thread.critical   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Sets the status of the global ``thread critical&apos;&apos; condition&#xA;and returns it. When set to true, prohibits scheduling of&#xA;any existing thread." ilk="function" name="critical=" signature="Thread.critical= boolean   =&gt; true or false" />
        <scope attributes="__classmethod__" doc="Returns the currently executing thread." ilk="function" name="current" signature="Thread.current   =&gt; thread" />
        <scope attributes="__classmethod__" doc="Wraps a block in Thread.critical, restoring the original&#xA;value upon exit from the critical section." ilk="function" name="exclusive" signature="() {|| ...}" />
        <scope attributes="__classmethod__" doc="Terminates the currently running thread and schedules&#xA;another thread to be run. If this thread is already marked&#xA;to be killed, exit returns the Thread." ilk="function" name="exit" signature="Thread.exit   =&gt; thread" />
        <scope attributes="__classmethod__" doc="Basically the same as Thread::new. However, if class Thread&#xA;is subclassed, then calling start in that subclass will not&#xA;invoke the subclass&apos;s initialize method." ilk="function" name="fork" signature="Thread.start([args]*) {|args| block }   =&gt; thread&#xA;Thread.fork([args]*) {|args| block }    =&gt; thread" />
        <scope attributes="__classmethod__" doc="Causes the given `thread&apos; to exit (see Thread::exit)." ilk="function" name="kill" signature="Thread.kill(thread)   =&gt; thread" />
        <scope attributes="__classmethod__" doc="Returns an array of Thread objects for all threads that are&#xA;either runnable or stopped." ilk="function" name="list" signature="Thread.list   =&gt; array" />
        <scope attributes="__classmethod__" doc="Returns the main thread for the process." ilk="function" name="main" signature="Thread.main   =&gt; thread" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates and runs a new thread to execute the instructions&#xA;given in `block&apos;. Any arguments passed to Thread::new are&#xA;passed into the block." ilk="function" name="new" signature="Thread.new([arg]*) {|args| block }   =&gt; thread" />
        <scope attributes="__classmethod__" doc="Invokes the thread scheduler to pass execution to another&#xA;thread." ilk="function" name="pass" signature="Thread.pass   =&gt; nil" />
        <scope attributes="__classmethod__" doc="Basically the same as Thread::new. However, if class Thread&#xA;is subclassed, then calling start in that subclass will not&#xA;invoke the subclass&apos;s initialize method." ilk="function" name="start" signature="Thread.start([args]*) {|args| block }   =&gt; thread&#xA;Thread.fork([args]*) {|args| block }    =&gt; thread" />
        <scope attributes="__classmethod__" doc="Stops execution of the current thread, putting it into a&#xA;``sleep&apos;&apos; state, and schedules execution of another thread.&#xA;Resets the ``critical&apos;&apos; condition to false." ilk="function" name="stop" signature="Thread.stop   =&gt; nil" />
        <scope doc="Attribute Reference---Returns the value of a thread-local&#xA;variable, using either a symbol or a string name. If the&#xA;specified variable does not exist, returns nil." ilk="function" name="[]" signature="thr[sym]   =&gt; obj or nil" />
        <scope doc="Attribute Assignment---Sets or creates the value of a&#xA;thread-local variable, using either a symbol or a string.&#xA;See also Thread#[]." ilk="function" name="[]=" signature="thr[sym] = obj   =&gt; obj" />
        <scope doc="Returns the status of the thread-local ``abort on&#xA;exception&apos;&apos; condition for `thr&apos;. The default is false." ilk="function" name="abort_on_exception" signature="thr.abort_on_exception   =&gt; true or false" />
        <scope doc="When set to true, causes all threads (including the main&#xA;program) to abort if an exception is raised in `thr&apos;. The&#xA;process will effectively exit(0)." ilk="function" name="abort_on_exception=" signature="thr.abort_on_exception= boolean   =&gt; true or false" />
        <scope doc="Returns true if `thr&apos; is running or sleeping." ilk="function" name="alive?" signature="thr.alive?   =&gt; true or false" />
        <scope doc="Terminates `thr&apos; and schedules another thread to be run. If&#xA;this thread is already marked to be killed, exit returns the&#xA;Thread." ilk="function" name="exit" signature="thr.exit        =&gt; thr or nil&#xA;thr.kill        =&gt; thr or nil&#xA;thr.terminate   =&gt; thr or nil" />
        <scope doc="Returns the ThreadGroup which contains `thr&apos;, or nil if the&#xA;thread is not a member of any group." ilk="function" name="group" signature="thr.group   =&gt; thgrp or nil" />
        <scope doc="Dump the name, id, and status of `thr&apos; to a string." ilk="function" name="inspect" signature="thr.inspect   =&gt; string" />
        <scope doc="The calling thread will suspend execution and run `thr&apos;.&#xA;Does not return until `thr&apos; exits or until `limit&apos; seconds&#xA;have passed." ilk="function" name="join" signature="thr.join          =&gt; thr&#xA;thr.join(limit)   =&gt; thr" />
        <scope doc="Returns true if the given string (or symbol) exists as a&#xA;thread-local variable." ilk="function" name="key?" signature="thr.key?(sym)   =&gt; true or false" />
        <scope doc="Returns an an array of the names of the thread-local&#xA;variables (as Symbols)." ilk="function" name="keys" signature="thr.keys   =&gt; array" />
        <scope doc="Terminates `thr&apos; and schedules another thread to be run. If&#xA;this thread is already marked to be killed, exit returns the&#xA;Thread." ilk="function" name="kill" signature="thr.exit        =&gt; thr or nil&#xA;thr.kill        =&gt; thr or nil&#xA;thr.terminate   =&gt; thr or nil" />
        <scope doc="Returns the priority of `thr&apos;. Default is zero; higher-&#xA;priority threads will run before lower-priority threads." ilk="function" name="priority" signature="thr.priority   =&gt; integer" />
        <scope doc="Sets the priority of `thr&apos; to `integer&apos;. Higher-priority&#xA;threads will run before lower-priority threads." ilk="function" name="priority=" signature="thr.priority= integer   =&gt; thr" />
        <scope doc="Raises an exception (see Kernel::raise) from `thr&apos;. The&#xA;caller does not have to be `thr&apos;." ilk="function" name="raise" signature="thr.raise(exception)" />
        <scope doc="Wakes up `thr&apos;, making it eligible for scheduling. If not in&#xA;a critical section, then invokes the scheduler." ilk="function" name="run" signature="thr.run   =&gt; thr" />
        <scope doc="Returns the safe level in effect for `thr&apos;. Setting thread-&#xA;local safe levels can help when implementing sandboxes which&#xA;run insecure code." ilk="function" name="safe_level" signature="thr.safe_level   =&gt; integer" />
        <scope doc="Returns the status of `thr&apos;: ``sleep&apos;&apos; if `thr&apos; is sleeping&#xA;or waiting on I/O, ``run&apos;&apos; if `thr&apos; is executing,&#xA;``aborting&apos;&apos; if `thr&apos; is aborting, false if `thr&apos; terminated&#xA;normally, and nil if `thr&apos; terminated with an exception." ilk="function" name="status" signature="thr.status   =&gt; string, false or nil" />
        <scope doc="Returns true if `thr&apos; is dead or sleeping." ilk="function" name="stop?" signature="thr.stop?   =&gt; true or false" />
        <scope doc="Terminates `thr&apos; and schedules another thread to be run. If&#xA;this thread is already marked to be killed, exit returns the&#xA;Thread." ilk="function" name="terminate" signature="thr.exit        =&gt; thr or nil&#xA;thr.kill        =&gt; thr or nil&#xA;thr.terminate   =&gt; thr or nil" />
        <scope doc="Waits for `thr&apos; to complete (via Thread#join) and returns&#xA;its value." ilk="function" name="value" signature="thr.value   =&gt; obj" />
        <scope doc="Marks `thr&apos; as eligible for scheduling (it may still remain&#xA;blocked on I/O, however). Does not invoke the scheduler (see&#xA;Thread#run)." ilk="function" name="wakeup" signature="thr.wakeup   =&gt; thr" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="ThreadError" />
      <scope classrefs="Object" doc="ThreadGroup provides a means of keeping track of a number of&#xA;threads as a group. A Thread can belong to only one&#xA;ThreadGroup at a time; adding a thread to a new group will&#xA;remove it from any previous group." ilk="class" name="ThreadGroup">
        <scope doc="Adds the given `thread&apos; to this group, removing it from any&#xA;other group to which it may have previously belonged." ilk="function" name="add" signature="thgrp.add(thread)   =&gt; thgrp" />
        <scope doc="Prevents threads from being added to or removed from the&#xA;receiving ThreadGroup. New threads can still be started in&#xA;an enclosed ThreadGroup." ilk="function" name="enclose" signature="thgrp.enclose   =&gt; thgrp" />
        <scope doc="Returns true if `thgrp&apos; is enclosed. See also&#xA;ThreadGroup#enclose." ilk="function" name="enclosed?" signature="thgrp.enclosed?   =&gt; true or false" />
        <scope doc="Returns an array of all existing Thread objects that belong&#xA;to this group." ilk="function" name="list" signature="thgrp.list   =&gt; array" />
      </scope>
      <scope classrefs="Object" doc="Implements the extensions to the Time class that are&#xA;described in the documentation for the time.rb library." ilk="class" name="Time">
        <import symbol="Comparable" />
        <scope attributes="__classmethod__" doc="Unmarshal a dumped Time object." ilk="function" name="_load" signature="Time._load(string)   =&gt; time" />
        <scope attributes="__classmethod__ private" ilk="function" name="apply_offset" signature="(year, mon, day, hour, min, sec, off)" />
        <scope attributes="__classmethod__" doc="Creates a new time object with the value given by `aTime&apos;,&#xA;or the given number of `seconds&apos; (and optional&#xA;`microseconds&apos;) from epoch. A non-portable feature allows&#xA;the offset to be negative on some systems." ilk="function" name="at" signature="Time.at( aTime ) =&gt; time&#xA;Time.at( seconds [, microseconds] ) =&gt; time" />
        <scope attributes="__classmethod__" doc="Creates a time based on given values, interpreted as UTC&#xA;(GMT). The year must be specified." ilk="function" name="gm" signature="Time.utc( year [, month, day, hour, min, sec, usec] ) =&gt; time&#xA;Time.utc( sec, min, hour, day, month, year, wday, yday, isdst, tz&#xA;) =&gt; time&#xA;Time.gm( year [, month, day, hour, min, sec, usec] ) =&gt; time&#xA;Time.gm( sec, min, hour, day, month, year, wday, yday, isdst, tz&#xA;) =&gt; time" />
        <scope attributes="__classmethod__" doc="Parses date as HTTP-date defined by RFC 2616 and converts it&#xA;to a Time object." ilk="function" name="httpdate" signature="(date)" />
        <scope attributes="__classmethod__" doc="Same as Time::gm, but interprets the values in the local&#xA;time zone." ilk="function" name="local" signature="Time.local( year [, month, day, hour, min, sec, usec] ) =&gt; time&#xA;Time.local( sec, min, hour, day, month, year, wday, yday, isdst,&#xA;tz ) =&gt; time&#xA;Time.mktime( year, month, day, hour, min, sec, usec )   =&gt; time" />
        <scope attributes="__classmethod__ private" ilk="function" name="make_time" signature="(year, mon, day, hour, min, sec, sec_fraction, zone, now)" />
        <scope attributes="__classmethod__" doc="Same as Time::gm, but interprets the values in the local&#xA;time zone." ilk="function" name="mktime" signature="Time.local( year [, month, day, hour, min, sec, usec] ) =&gt; time&#xA;Time.local( sec, min, hour, day, month, year, wday, yday, isdst,&#xA;tz ) =&gt; time&#xA;Time.mktime( year, month, day, hour, min, sec, usec )   =&gt; time" />
        <scope attributes="__classmethod__ private" ilk="function" name="month_days" signature="(y, m)" />
        <scope attributes="__classmethod__ __ctor__" doc="Document-method: now" ilk="function" name="new" signature="Time.new -&gt; time" />
        <scope attributes="__classmethod__" doc="Synonym for Time.new. Returns a Time object initialized tot&#xA;he current system time." ilk="function" name="now" signature="Time.new -&gt; time" />
        <scope attributes="__classmethod__" doc="Parses date using Date._parse and converts it to a Time&#xA;object." ilk="function" name="parse" signature="(date, now=Time.now) {|year| ...}" />
        <scope attributes="__classmethod__" doc="Parses date as date-time defined by RFC 2822 and converts it&#xA;to a Time object. The format is identical to the date format&#xA;defined by RFC 822 and updated by RFC 1123." ilk="function" name="rfc2822" signature="(date)" />
        <scope attributes="__classmethod__" doc="Deprecated in favor of Process::times" ilk="function" name="times" signature="Time.times =&gt; struct_tms" />
        <scope attributes="__classmethod__" doc="Creates a time based on given values, interpreted as UTC&#xA;(GMT). The year must be specified." ilk="function" name="utc" signature="Time.utc( year [, month, day, hour, min, sec, usec] ) =&gt; time&#xA;Time.utc( sec, min, hour, day, month, year, wday, yday, isdst, tz&#xA;) =&gt; time&#xA;Time.gm( year [, month, day, hour, min, sec, usec] ) =&gt; time&#xA;Time.gm( sec, min, hour, day, month, year, wday, yday, isdst, tz&#xA;) =&gt; time" />
        <scope attributes="__classmethod__" doc="Parses date as dateTime defined by XML Schema and converts&#xA;it to a Time object. The format is restricted version of the&#xA;format defined by ISO 8601." ilk="function" name="xmlschema" signature="(date)" />
        <scope attributes="__classmethod__" ilk="function" name="zone_offset" signature="(zone, year=Time.now.year)" />
        <scope attributes="__classmethod__ private" ilk="function" name="zone_utc?" signature="(zone)" />
        <scope doc="Addition---Adds some number of seconds (possibly fractional)&#xA;to `time&apos; and returns that value as a new time." ilk="function" name="+" signature="time + numeric =&gt; time" />
        <scope doc="Comparison---Compares `time&apos; with `other_time&apos; or with&#xA;`numeric&apos;, which is the number of seconds (possibly&#xA;fractional) since epoch." ilk="function" name="&lt;=&gt;" signature="time &lt;=&gt; other_time =&gt; -1, 0, +1 &#xA;time &lt;=&gt; numeric    =&gt; -1, 0, +1" />
        <scope doc="Dump `time&apos; for marshaling." ilk="function" name="_dump" signature="time._dump   =&gt; string" />
        <scope doc="Returns a canonical string representation of `time&apos;." ilk="function" name="asctime" signature="time.asctime =&gt; string&#xA;time.ctime   =&gt; string" />
        <scope doc="Returns a canonical string representation of `time&apos;." ilk="function" name="ctime" signature="time.asctime =&gt; string&#xA;time.ctime   =&gt; string" />
        <scope doc="Returns the day of the month (1..n) for `time&apos;." ilk="function" name="day" signature="time.day  =&gt; fixnum&#xA;time.mday =&gt; fixnum" />
        <scope doc="Returns true if `time&apos; occurs during Daylight Saving Time in&#xA;its time zone." ilk="function" name="dst?" signature="time.isdst =&gt; true or false&#xA;time.dst?  =&gt; true or false" />
        <scope doc="Return true if `time&apos; and `other_time&apos; are both Time objects&#xA;with the same seconds and fractional seconds." ilk="function" name="eql?" signature="time.eql?(other_time)" />
        <scope doc="Returns a new new_time object representing `time&apos; in UTC." ilk="function" name="getgm" signature="time.getgm  =&gt; new_time&#xA;time.getutc =&gt; new_time" />
        <scope doc="Returns a new new_time object representing `time&apos; in local&#xA;time (using the local time zone in effect for this process)." ilk="function" name="getlocal" signature="time.getlocal =&gt; new_time" />
        <scope doc="Returns a new new_time object representing `time&apos; in UTC." ilk="function" name="getutc" signature="time.getgm  =&gt; new_time&#xA;time.getutc =&gt; new_time" />
        <scope doc="Returns true if `time&apos; represents a time in UTC (GMT)." ilk="function" name="gmt?" signature="time.utc? =&gt; true or false&#xA;time.gmt? =&gt; true or false" />
        <scope doc="Returns the offset in seconds between the timezone of `time&apos;&#xA;and UTC." ilk="function" name="gmt_offset" signature="time.gmt_offset =&gt; fixnum&#xA;time.gmtoff     =&gt; fixnum&#xA;time.utc_offset =&gt; fixnum" />
        <scope doc="Converts `time&apos; to UTC (GMT), modifying the receiver." ilk="function" name="gmtime" signature="time.gmtime    =&gt; time&#xA;time.utc       =&gt; time" />
        <scope doc="Returns the offset in seconds between the timezone of `time&apos;&#xA;and UTC." ilk="function" name="gmtoff" signature="time.gmt_offset =&gt; fixnum&#xA;time.gmtoff     =&gt; fixnum&#xA;time.utc_offset =&gt; fixnum" />
        <scope doc="Return a hash code for this time object." ilk="function" name="hash" signature="time.hash   =&gt; fixnum" />
        <scope doc="Returns the hour of the day (0..23) for `time&apos;." ilk="function" name="hour" signature="time.hour =&gt; fixnum" />
        <scope doc="Returns a string which represents the time as rfc1123-date&#xA;of HTTP-date defined by RFC 2616:" ilk="function" name="httpdate" signature="()" />
        <scope doc="Returns a string representing `time&apos;. Equivalent to calling&#xA;Time#strftime with a format string of ``%a %b %d %H:%M:%S %Z&#xA;%Y&apos;&apos;." ilk="function" name="inspect" signature="time.inspect =&gt; string&#xA;time.to_s    =&gt; string" />
        <scope doc="Returns true if `time&apos; occurs during Daylight Saving Time in&#xA;its time zone." ilk="function" name="isdst" signature="time.isdst =&gt; true or false&#xA;time.dst?  =&gt; true or false" />
        <scope doc="Alias for #xmlschema" ilk="function" name="iso8601" signature="(fraction_digits=0)" />
        <scope doc="Converts `time&apos; to local time (using the local time zone in&#xA;effect for this process) modifying the receiver." ilk="function" name="localtime" signature="time.localtime =&gt; time" />
        <scope doc="undocumented" ilk="function" name="marshal_dump" signature="()" />
        <scope doc="undocumented" ilk="function" name="marshal_load" signature="(p1)" />
        <scope doc="Returns the day of the month (1..n) for `time&apos;." ilk="function" name="mday" signature="time.day  =&gt; fixnum&#xA;time.mday =&gt; fixnum" />
        <scope doc="Returns the minute of the hour (0..59) for `time&apos;." ilk="function" name="min" signature="time.min =&gt; fixnum" />
        <scope doc="Returns the month of the year (1..12) for `time&apos;." ilk="function" name="mon" signature="time.mon   =&gt; fixnum&#xA;time.month =&gt; fixnum" />
        <scope doc="Returns the month of the year (1..12) for `time&apos;." ilk="function" name="month" signature="time.mon   =&gt; fixnum&#xA;time.month =&gt; fixnum" />
        <scope doc="Returns a string which represents the time as date-time&#xA;defined by RFC 2822:" ilk="function" name="rfc2822" signature="()" />
        <scope doc="Alias for #rfc2822" ilk="function" name="rfc822" signature="()" />
        <scope doc="Returns the second of the minute (0..60)`[Yes, seconds&#xA;really can range from zero to 60. This allows the system to&#xA;inject leap seconds every now and then to correct for the&#xA;fact that years are not really a convenient number of hours&#xA;long.]&apos; for `time&apos;." ilk="function" name="sec" signature="time.sec =&gt; fixnum" />
        <scope doc="Formats `time&apos; according to the directives in the given&#xA;format string. Any text not listed as a directive will be&#xA;passed through to the output string." ilk="function" name="strftime" signature="time.strftime( string ) =&gt; string" />
        <scope doc="Return a new time object, one second later than time." ilk="function" name="succ" signature="time.succ   =&gt; new_time" />
        <scope doc="Returns a ten-element `array&apos; of values for `time&apos;: {[ sec,&#xA;min, hour, day, month, year, wday, yday, isdst, zone ]}. See&#xA;the individual methods for an explanation of the valid&#xA;ranges of each value." ilk="function" name="to_a" signature="time.to_a =&gt; array" />
        <scope doc="Returns the value of `time&apos; as a floating point number of&#xA;seconds since epoch." ilk="function" name="to_f" signature="time.to_f =&gt; float" />
        <scope doc="Returns the value of `time&apos; as an integer number of seconds&#xA;since epoch." ilk="function" name="to_i" signature="time.to_i   =&gt; int&#xA;time.tv_sec =&gt; int" />
        <scope doc="Returns a string representing `time&apos;. Equivalent to calling&#xA;Time#strftime with a format string of ``%a %b %d %H:%M:%S %Z&#xA;%Y&apos;&apos;." ilk="function" name="to_s" signature="time.inspect =&gt; string&#xA;time.to_s    =&gt; string" />
        <scope doc="Returns the value of `time&apos; as an integer number of seconds&#xA;since epoch." ilk="function" name="tv_sec" signature="time.to_i   =&gt; int&#xA;time.tv_sec =&gt; int" />
        <scope doc="Returns just the number of microseconds for `time&apos;." ilk="function" name="tv_usec" signature="time.usec    =&gt; int&#xA;time.tv_usec =&gt; int" />
        <scope doc="Returns just the number of microseconds for `time&apos;." ilk="function" name="usec" signature="time.usec    =&gt; int&#xA;time.tv_usec =&gt; int" />
        <scope doc="Converts `time&apos; to UTC (GMT), modifying the receiver." ilk="function" name="utc" signature="time.gmtime    =&gt; time&#xA;time.utc       =&gt; time" />
        <scope doc="Returns true if `time&apos; represents a time in UTC (GMT)." ilk="function" name="utc?" signature="time.utc? =&gt; true or false&#xA;time.gmt? =&gt; true or false" />
        <scope doc="Returns the offset in seconds between the timezone of `time&apos;&#xA;and UTC." ilk="function" name="utc_offset" signature="time.gmt_offset =&gt; fixnum&#xA;time.gmtoff     =&gt; fixnum&#xA;time.utc_offset =&gt; fixnum" />
        <scope doc="Returns an integer representing the day of the week, 0..6,&#xA;with Sunday == 0." ilk="function" name="wday" signature="time.wday =&gt; fixnum" />
        <scope doc="Returns a string which represents the time as dateTime&#xA;defined by XML Schema:" ilk="function" name="xmlschema" signature="(fraction_digits=0)" />
        <scope doc="Returns an integer representing the day of the year, 1..366." ilk="function" name="yday" signature="time.yday =&gt; fixnum" />
        <scope doc="Returns the year for `time&apos; (including the century)." ilk="function" name="year" signature="time.year =&gt; fixnum" />
        <scope doc="Returns the name of the time zone used for `time&apos;. As of&#xA;Ruby 1.8, returns ``UTC&apos;&apos; rather than ``GMT&apos;&apos; for UTC times." ilk="function" name="zone" signature="time.zone =&gt; string" />
      </scope>
      <scope classrefs="Object" doc="The global value true is the only instance of class&#xA;TrueClass and represents a logically true value in boolean&#xA;expressions. The class provides operators allowing true to&#xA;be used in logical expressions." ilk="class" name="TrueClass">
        <scope doc="And---Returns false if `obj&apos; is nil or false, true&#xA;otherwise." ilk="function" name="&amp;" signature="true &amp; obj    =&gt; true or false" />
        <scope doc="Exclusive Or---Returns true if `obj&apos; is nil or false, false&#xA;otherwise." ilk="function" name="^" signature="true ^ obj   =&gt; !obj" />
        <scope doc="The string representation of true is &quot;true&quot;." ilk="function" name="to_s" signature="true.to_s   =&gt;  &quot;true&quot;" />
        <scope doc="Or---Returns true. As `anObject&apos; is an argument to a method&#xA;call, it is always evaluated; there is no short-circuit&#xA;evaluation in this case." ilk="function" name="|" signature="true | obj   =&gt; true" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="TypeError" />
      <scope classrefs="Object" doc="Ruby supports two forms of objectified methods. Class Method&#xA;is used to represent methods that are associated with a&#xA;particular object: these method objects are bound to that&#xA;object." ilk="class" name="UnboundMethod">
        <scope doc="Two method objects are equal if that are bound to the same&#xA;object and contain the same body." ilk="function" name="==" signature="meth == other_meth  =&gt; true or false" />
        <scope doc="Returns an indication of the number of arguments accepted by&#xA;a method. Returns a nonnegative integer for methods that&#xA;take a fixed number of arguments." ilk="function" name="arity" signature="meth.arity    =&gt; fixnum" />
        <scope doc="Bind `umeth&apos; to `obj&apos;. If Klass was the class from which&#xA;`umeth&apos; was obtained, obj.kind_of?(Klass) must be true." ilk="function" name="bind" signature="umeth.bind(obj) -&gt; method" />
        <scope doc="MISSING: documentation" ilk="function" name="clone" signature="()" />
        <scope doc="Show the name of the underlying method." ilk="function" name="inspect" signature="meth.to_s      =&gt;  string&#xA;meth.inspect   =&gt;  string" />
        <scope doc="Show the name of the underlying method." ilk="function" name="to_s" signature="meth.to_s      =&gt;  string&#xA;meth.inspect   =&gt;  string" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="ZeroDivisionError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="bigdecimal">
      <scope classrefs="Numeric" ilk="class" name="BigDecimal">
        <import symbol="Comparable" />
        <scope attributes="__classmethod__" ilk="function" name="_load" />
        <scope attributes="__classmethod__" ilk="function" name="double_fig" />
        <scope attributes="__classmethod__" ilk="function" name="induced_from" />
        <scope attributes="__classmethod__" ilk="function" name="limit" />
        <scope attributes="__classmethod__" ilk="function" name="mode" />
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope attributes="__classmethod__" ilk="function" name="ver" />
        <scope ilk="function" name="!=" />
        <scope ilk="function" name="%" />
        <scope ilk="function" name="*" />
        <scope ilk="function" name="**" />
        <scope ilk="function" name="+" />
        <scope ilk="function" name="+@" />
        <scope ilk="function" name="-" />
        <scope ilk="function" name="-@" />
        <scope ilk="function" name="/" />
        <scope ilk="function" name="_dump" />
        <scope ilk="function" name="abs" />
        <scope ilk="function" name="add" />
        <scope ilk="function" name="ceil" />
        <scope ilk="function" name="coerce" />
        <scope ilk="function" name="div" />
        <scope ilk="function" name="divmod" />
        <scope ilk="function" name="exponent" />
        <scope ilk="function" name="finite?" />
        <scope ilk="function" name="fix" />
        <scope ilk="function" name="floor" />
        <scope ilk="function" name="frac" />
        <scope ilk="function" name="infinite?" />
        <scope ilk="function" name="modulo" />
        <scope ilk="function" name="mult" />
        <scope ilk="function" name="nan?" />
        <scope ilk="function" name="nonzero?" />
        <scope ilk="function" name="power" />
        <scope ilk="function" name="precs" />
        <scope ilk="function" name="quo" />
        <scope ilk="function" name="remainder" />
        <scope ilk="function" name="round" />
        <scope ilk="function" name="sign" />
        <scope ilk="function" name="split" />
        <scope ilk="function" name="sqrt" />
        <scope ilk="function" name="sub" />
        <scope ilk="function" name="to_f" />
        <scope ilk="function" name="to_i" />
        <scope ilk="function" name="to_int" />
        <scope ilk="function" name="truncate" />
        <scope ilk="function" name="zero?" />
        <variable attributes="__const__" citdl="Fixnum" name="BASE" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCEPTION_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCEPTION_INFINITY" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCEPTION_NaN" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCEPTION_OVERFLOW" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCEPTION_UNDERFLOW" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCEPTION_ZERODIVIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_CEILING" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_FLOOR" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_HALF_DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_HALF_EVEN" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_HALF_UP" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="ROUND_UP" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_NEGATIVE_FINITE" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_NEGATIVE_INFINITE" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_NEGATIVE_ZERO" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_NaN" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_POSITIVE_FINITE" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_POSITIVE_INFINITE" />
        <variable attributes="__const__" citdl="Fixnum" name="SIGN_POSITIVE_ZERO" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="curses">
      <scope ilk="namespace" name="Curses">
        <scope attributes="__classmethod__" ilk="function" name="addch" />
        <scope attributes="__classmethod__" ilk="function" name="addstr" />
        <scope attributes="__classmethod__" ilk="function" name="attroff" />
        <scope attributes="__classmethod__" ilk="function" name="attron" />
        <scope attributes="__classmethod__" ilk="function" name="attrset" />
        <scope attributes="__classmethod__" ilk="function" name="beep" />
        <scope attributes="__classmethod__" ilk="function" name="bkgd" />
        <scope attributes="__classmethod__" ilk="function" name="bkgdset" />
        <scope attributes="__classmethod__" ilk="function" name="can_change_color?" />
        <scope attributes="__classmethod__" ilk="function" name="cbreak" />
        <scope attributes="__classmethod__" ilk="function" name="clear" />
        <scope attributes="__classmethod__" ilk="function" name="close_screen" />
        <scope attributes="__classmethod__" ilk="function" name="closed?" />
        <scope attributes="__classmethod__" ilk="function" name="clrtoeol" />
        <scope attributes="__classmethod__" ilk="function" name="color_content" />
        <scope attributes="__classmethod__" ilk="function" name="color_pair" />
        <scope attributes="__classmethod__" ilk="function" name="cols" />
        <scope attributes="__classmethod__" ilk="function" name="curs_set" />
        <scope attributes="__classmethod__" ilk="function" name="def_prog_mode" />
        <scope attributes="__classmethod__" ilk="function" name="delch" />
        <scope attributes="__classmethod__" ilk="function" name="deleteln" />
        <scope attributes="__classmethod__" ilk="function" name="doupdate" />
        <scope attributes="__classmethod__" ilk="function" name="echo" />
        <scope attributes="__classmethod__" ilk="function" name="flash" />
        <scope attributes="__classmethod__" ilk="function" name="getch" />
        <scope attributes="__classmethod__" ilk="function" name="getstr" />
        <scope attributes="__classmethod__" ilk="function" name="has_colors?" />
        <scope attributes="__classmethod__" ilk="function" name="inch" />
        <scope attributes="__classmethod__" ilk="function" name="init_color" />
        <scope attributes="__classmethod__" ilk="function" name="init_pair" />
        <scope attributes="__classmethod__" ilk="function" name="init_screen" />
        <scope attributes="__classmethod__" ilk="function" name="insch" />
        <scope attributes="__classmethod__" ilk="function" name="insertln" />
        <scope attributes="__classmethod__" ilk="function" name="keyname" />
        <scope attributes="__classmethod__" ilk="function" name="lines" />
        <scope attributes="__classmethod__" ilk="function" name="nl" />
        <scope attributes="__classmethod__" ilk="function" name="nocbreak" />
        <scope attributes="__classmethod__" ilk="function" name="noecho" />
        <scope attributes="__classmethod__" ilk="function" name="nonl" />
        <scope attributes="__classmethod__" ilk="function" name="noraw" />
        <scope attributes="__classmethod__" ilk="function" name="pair_content" />
        <scope attributes="__classmethod__" ilk="function" name="pair_number" />
        <scope attributes="__classmethod__" ilk="function" name="raw" />
        <scope attributes="__classmethod__" ilk="function" name="refresh" />
        <scope attributes="__classmethod__" ilk="function" name="reset_prog_mode" />
        <scope attributes="__classmethod__" ilk="function" name="resize" />
        <scope attributes="__classmethod__" ilk="function" name="resizeterm" />
        <scope attributes="__classmethod__" ilk="function" name="scrl" />
        <scope attributes="__classmethod__" ilk="function" name="setpos" />
        <scope attributes="__classmethod__" ilk="function" name="setscrreg" />
        <scope attributes="__classmethod__" ilk="function" name="standend" />
        <scope attributes="__classmethod__" ilk="function" name="standout" />
        <scope attributes="__classmethod__" ilk="function" name="start_color" />
        <scope attributes="__classmethod__" ilk="function" name="stdscr" />
        <scope attributes="__classmethod__" ilk="function" name="timeout=" />
        <scope attributes="__classmethod__" ilk="function" name="ungetch" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="addch" />
        <scope ilk="function" name="addstr" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="attroff" />
        <scope ilk="function" name="attron" />
        <scope ilk="function" name="attrset" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="beep" />
        <scope ilk="function" name="bkgd" />
        <scope ilk="function" name="bkgdset" />
        <scope ilk="function" name="can_change_color?" />
        <scope ilk="function" name="cbreak" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="clear" />
        <scope ilk="function" name="close_screen" />
        <scope ilk="function" name="closed?" />
        <scope ilk="function" name="clrtoeol" />
        <scope ilk="function" name="color_content" />
        <scope ilk="function" name="color_pair" />
        <scope ilk="function" name="cols" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="curs_set" />
        <scope ilk="function" name="def_prog_mode" />
        <scope ilk="function" name="delch" />
        <scope ilk="function" name="deleteln" />
        <scope ilk="function" name="doupdate" />
        <scope ilk="function" name="echo" />
        <scope ilk="function" name="flash" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="getch" />
        <scope ilk="function" name="getstr" />
        <scope ilk="function" name="has_colors?" />
        <scope ilk="function" name="inch" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="init_color" />
        <scope ilk="function" name="init_pair" />
        <scope ilk="function" name="init_screen" />
        <scope ilk="function" name="insch" />
        <scope ilk="function" name="insertln" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="keyname" />
        <scope ilk="function" name="lines" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="nl" />
        <scope ilk="function" name="nocbreak" />
        <scope ilk="function" name="noecho" />
        <scope ilk="function" name="nonl" />
        <scope ilk="function" name="noraw" />
        <scope ilk="function" name="pair_content" />
        <scope ilk="function" name="pair_number" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="raw" />
        <scope ilk="function" name="refresh" />
        <scope ilk="function" name="reset_prog_mode" />
        <scope ilk="function" name="resize" />
        <scope ilk="function" name="resizeterm" />
        <scope ilk="function" name="scrl" />
        <scope ilk="function" name="setpos" />
        <scope ilk="function" name="setscrreg" />
        <scope ilk="function" name="standend" />
        <scope ilk="function" name="standout" />
        <scope ilk="function" name="start_color" />
        <scope ilk="function" name="stdscr" />
        <scope ilk="function" name="timeout=" />
        <scope ilk="function" name="to_s" />
        <scope ilk="function" name="ungetch" />
        <variable attributes="__const__" citdl="Fixnum" name="A_ALTCHARSET" />
        <variable attributes="__const__" citdl="Bignum" name="A_ATTRIBUTES" />
        <variable attributes="__const__" citdl="Fixnum" name="A_BLINK" />
        <variable attributes="__const__" citdl="Fixnum" name="A_BOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="A_CHARTEXT" />
        <variable attributes="__const__" citdl="Bignum" name="A_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="A_DIM" />
        <variable attributes="__const__" citdl="Fixnum" name="A_INVIS" />
        <variable attributes="__const__" citdl="Fixnum" name="A_NORMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="A_PROTECT" />
        <variable attributes="__const__" citdl="Fixnum" name="A_REVERSE" />
        <variable attributes="__const__" citdl="Fixnum" name="A_STANDOUT" />
        <variable attributes="__const__" citdl="Fixnum" name="A_UNDERLINE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_BLACK" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_BLUE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_CYAN" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_GREEN" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_MAGENTA" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_RED" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_WHITE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_YELLOW" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_A1" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_A3" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_B2" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_BACKSPACE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_BEG" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_BREAK" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_BTAB" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_C1" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_C3" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CANCEL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CATAB" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CLEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CLOSE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_COMMAND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_COPY" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CREATE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTAB" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_A" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_B" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_C" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_D" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_E" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_F" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_G" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_H" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_I" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_J" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_K" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_L" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_M" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_N" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_O" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_P" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_Q" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_R" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_S" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_T" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_U" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_V" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_W" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_X" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_Y" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_CTRL_Z" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_DC" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_DL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_EIC" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_END" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_ENTER" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_EOL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_EOS" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_EXIT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F0" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F1" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F10" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F11" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F12" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F13" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F14" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F15" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F16" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F17" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F18" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F19" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F2" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F20" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F21" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F22" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F23" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F24" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F25" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F26" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F27" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F28" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F29" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F3" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F30" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F31" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F32" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F33" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F34" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F35" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F36" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F37" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F38" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F39" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F4" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F40" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F41" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F42" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F43" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F44" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F45" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F46" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F47" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F48" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F49" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F5" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F50" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F51" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F52" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F53" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F54" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F55" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F56" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F57" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F58" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F59" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F6" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F60" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F61" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F62" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F63" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F7" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F8" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F9" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_FIND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_HELP" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_HOME" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_IC" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_IL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_LL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_MARK" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_MAX" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_MESSAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_MIN" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_MOVE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_NEXT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_NPAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_OPEN" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_OPTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_PPAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_PREVIOUS" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_PRINT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_REDO" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_REFERENCE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_REFRESH" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_REPLACE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_RESET" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_RESIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_RESTART" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_RESUME" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SAVE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SBEG" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SCANCEL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SCOMMAND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SCOPY" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SCREATE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SDC" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SDL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SEND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SEOL" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SEXIT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SF" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SFIND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SHELP" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SHOME" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SIC" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SLEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SMESSAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SMOVE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SNEXT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SOPTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SPREVIOUS" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SPRINT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SR" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SREDO" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SREPLACE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SRESET" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SRIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SRSUME" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SSAVE" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SSUSPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_STAB" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SUNDO" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_SUSPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_UNDO" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_UP" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="dbm">
      <scope classrefs="Object" ilk="class" name="DBM">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" ilk="function" name="open" />
        <scope ilk="function" name="[]" />
        <scope ilk="function" name="[]=" />
        <scope ilk="function" name="clear" />
        <scope ilk="function" name="close" />
        <scope ilk="function" name="closed?" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="delete_if" />
        <scope ilk="function" name="each" />
        <scope ilk="function" name="each_key" />
        <scope ilk="function" name="each_pair" />
        <scope ilk="function" name="each_value" />
        <scope ilk="function" name="empty?" />
        <scope ilk="function" name="fetch" />
        <scope ilk="function" name="has_key?" />
        <scope ilk="function" name="has_value?" />
        <scope ilk="function" name="index" />
        <scope ilk="function" name="indexes" />
        <scope ilk="function" name="indices" />
        <scope ilk="function" name="invert" />
        <scope ilk="function" name="key?" />
        <scope ilk="function" name="keys" />
        <scope ilk="function" name="length" />
        <scope ilk="function" name="member?" />
        <scope ilk="function" name="reject" />
        <scope ilk="function" name="reject!" />
        <scope ilk="function" name="replace" />
        <scope ilk="function" name="select" />
        <scope ilk="function" name="shift" />
        <scope ilk="function" name="size" />
        <scope ilk="function" name="store" />
        <scope ilk="function" name="to_hash" />
        <scope ilk="function" name="update" />
        <scope ilk="function" name="value?" />
        <scope ilk="function" name="values" />
        <scope ilk="function" name="values_at" />
        <variable attributes="__const__" citdl="Fixnum" name="NEWDB" />
        <variable attributes="__const__" citdl="Fixnum" name="READER" />
        <variable attributes="__const__" citdl="Fixnum" name="WRCREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="WRITER" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="DBMError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="digest/md5">
      <scope ilk="namespace" name="Digest">
        <scope classrefs="Object" ilk="class" name="Base">
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="hexdigest" />
          <scope ilk="function" name="update" />
        </scope>
        <scope classrefs="Digest::Base" ilk="class" name="MD5" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="digest/rmd160">
      <scope ilk="namespace" name="Digest">
        <scope classrefs="Object" ilk="class" name="Base">
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="hexdigest" />
          <scope ilk="function" name="update" />
        </scope>
        <scope classrefs="Digest::Base" ilk="class" name="RMD160" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="digest/sha1">
      <scope ilk="namespace" name="Digest">
        <scope classrefs="Object" ilk="class" name="Base">
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="hexdigest" />
          <scope ilk="function" name="update" />
        </scope>
        <scope classrefs="Digest::Base" ilk="class" name="SHA1" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="digest/sha2">
      <scope ilk="namespace" name="Digest">
        <scope classrefs="Object" ilk="class" name="Base">
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="hexdigest" />
          <scope ilk="function" name="update" />
        </scope>
        <scope classrefs="Digest::Base" ilk="class" name="SHA256" />
        <scope classrefs="Digest::Base" ilk="class" name="SHA384" />
        <scope classrefs="Digest::Base" ilk="class" name="SHA512" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="digest">
      <scope ilk="namespace" name="Digest">
        <scope classrefs="Object" ilk="class" name="Base">
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="hexdigest" />
          <scope ilk="function" name="update" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="dl">
      <scope ilk="namespace" name="DL">
        <scope attributes="__classmethod__" ilk="function" name="callback" />
        <scope attributes="__classmethod__" ilk="function" name="define_callback" />
        <scope attributes="__classmethod__" ilk="function" name="dlopen" />
        <scope attributes="__classmethod__" ilk="function" name="last_error" />
        <scope attributes="__classmethod__" ilk="function" name="last_error=" />
        <scope attributes="__classmethod__" ilk="function" name="malloc" />
        <scope attributes="__classmethod__" ilk="function" name="remove_callback" />
        <scope attributes="__classmethod__" ilk="function" name="sizeof" />
        <scope attributes="__classmethod__" ilk="function" name="strdup" />
        <scope attributes="__classmethod__" ilk="function" name="win32_last_error" />
        <scope attributes="__classmethod__" ilk="function" name="win32_last_error=" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="callback" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="define_callback" />
        <scope ilk="function" name="dlopen" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="last_error" />
        <scope ilk="function" name="last_error=" />
        <scope ilk="function" name="malloc" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="remove_callback" />
        <scope ilk="function" name="sizeof" />
        <scope ilk="function" name="strdup" />
        <scope ilk="function" name="to_s" />
        <scope ilk="function" name="win32_last_error" />
        <scope ilk="function" name="win32_last_error=" />
        <variable attributes="__const__" citdl="Fixnum" name="ALIGN_DOUBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="ALIGN_FLOAT" />
        <variable attributes="__const__" citdl="Fixnum" name="ALIGN_INT" />
        <variable attributes="__const__" citdl="Fixnum" name="ALIGN_LONG" />
        <variable attributes="__const__" citdl="Fixnum" name="ALIGN_SHORT" />
        <variable attributes="__const__" citdl="Fixnum" name="ALIGN_VOIDP" />
        <variable attributes="__const__" citdl="String" name="DLSTACK" />
        <variable attributes="__const__" citdl="DL::Symbol" name="FREE" />
        <variable attributes="__const__" citdl="Hash" name="FuncTable" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_ARG" />
        <variable attributes="__const__" citdl="Fixnum" name="RTLD_GLOBAL" />
        <variable attributes="__const__" citdl="Fixnum" name="RTLD_LAZY" />
        <variable attributes="__const__" citdl="Fixnum" name="RTLD_NOW" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="etc">
      <scope ilk="namespace" name="Etc">
        <scope attributes="__classmethod__" ilk="function" name="endgrent" />
        <scope attributes="__classmethod__" ilk="function" name="endpwent" />
        <scope attributes="__classmethod__" ilk="function" name="getgrent" />
        <scope attributes="__classmethod__" ilk="function" name="getgrgid" />
        <scope attributes="__classmethod__" ilk="function" name="getgrnam" />
        <scope attributes="__classmethod__" ilk="function" name="getlogin" />
        <scope attributes="__classmethod__" ilk="function" name="getpwent" />
        <scope attributes="__classmethod__" ilk="function" name="getpwnam" />
        <scope attributes="__classmethod__" ilk="function" name="getpwuid" />
        <scope attributes="__classmethod__" ilk="function" name="group" />
        <scope attributes="__classmethod__" ilk="function" name="passwd" />
        <scope attributes="__classmethod__" ilk="function" name="setgrent" />
        <scope attributes="__classmethod__" ilk="function" name="setpwent" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="endgrent" />
        <scope ilk="function" name="endpwent" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="getgrent" />
        <scope ilk="function" name="getgrgid" />
        <scope ilk="function" name="getgrnam" />
        <scope ilk="function" name="getlogin" />
        <scope ilk="function" name="getpwent" />
        <scope ilk="function" name="getpwnam" />
        <scope ilk="function" name="getpwuid" />
        <scope ilk="function" name="group" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="passwd" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="setgrent" />
        <scope ilk="function" name="setpwent" />
        <scope ilk="function" name="to_s" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="fcntl">
      <scope ilk="namespace" name="Fcntl">
        <variable attributes="__const__" citdl="Fixnum" name="F_SETFL" />
        <variable attributes="__const__" citdl="Fixnum" name="O_ACCMODE" />
        <variable attributes="__const__" citdl="Fixnum" name="O_APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="O_CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="O_EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="O_NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="O_RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="O_RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="O_TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="O_WRONLY" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="gdbm">
      <scope classrefs="Object" ilk="class" name="GDBM">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" ilk="function" name="open" />
        <scope ilk="function" name="[]" />
        <scope ilk="function" name="[]=" />
        <scope ilk="function" name="cachesize=" />
        <scope ilk="function" name="clear" />
        <scope ilk="function" name="close" />
        <scope ilk="function" name="closed?" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="delete_if" />
        <scope ilk="function" name="each" />
        <scope ilk="function" name="each_key" />
        <scope ilk="function" name="each_pair" />
        <scope ilk="function" name="each_value" />
        <scope ilk="function" name="empty?" />
        <scope ilk="function" name="fastmode=" />
        <scope ilk="function" name="fetch" />
        <scope ilk="function" name="has_key?" />
        <scope ilk="function" name="has_value?" />
        <scope ilk="function" name="index" />
        <scope ilk="function" name="indexes" />
        <scope ilk="function" name="indices" />
        <scope ilk="function" name="invert" />
        <scope ilk="function" name="key?" />
        <scope ilk="function" name="keys" />
        <scope ilk="function" name="length" />
        <scope ilk="function" name="member?" />
        <scope ilk="function" name="reject" />
        <scope ilk="function" name="reject!" />
        <scope ilk="function" name="reorganize" />
        <scope ilk="function" name="replace" />
        <scope ilk="function" name="select" />
        <scope ilk="function" name="shift" />
        <scope ilk="function" name="size" />
        <scope ilk="function" name="store" />
        <scope ilk="function" name="sync" />
        <scope ilk="function" name="syncmode=" />
        <scope ilk="function" name="to_hash" />
        <scope ilk="function" name="update" />
        <scope ilk="function" name="value?" />
        <scope ilk="function" name="values" />
        <scope ilk="function" name="values_at" />
        <variable attributes="__const__" citdl="Fixnum" name="FAST" />
        <variable attributes="__const__" citdl="Fixnum" name="NEWDB" />
        <variable attributes="__const__" citdl="Fixnum" name="NOLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="READER" />
        <variable attributes="__const__" citdl="Fixnum" name="SYNC" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="WRCREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="WRITER" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="GDBMError" />
      <scope classrefs="Exception" ilk="class" name="GDBMFatalError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="glut">
      <scope ilk="namespace" name="GLUT">
        <scope attributes="__classmethod__" ilk="function" name="AddMenuEntry" />
        <scope attributes="__classmethod__" ilk="function" name="AddSubMenu" />
        <scope attributes="__classmethod__" ilk="function" name="AttachMenu" />
        <scope attributes="__classmethod__" ilk="function" name="BitmapCharacter" />
        <scope attributes="__classmethod__" ilk="function" name="BitmapLength" />
        <scope attributes="__classmethod__" ilk="function" name="BitmapWidth" />
        <scope attributes="__classmethod__" ilk="function" name="ButtonBoxFunc" />
        <scope attributes="__classmethod__" ilk="function" name="ChangeToMenuEntry" />
        <scope attributes="__classmethod__" ilk="function" name="ChangeToSubMenu" />
        <scope attributes="__classmethod__" ilk="function" name="CopyColormap" />
        <scope attributes="__classmethod__" ilk="function" name="CreateMenu" />
        <scope attributes="__classmethod__" ilk="function" name="CreateSubWindow" />
        <scope attributes="__classmethod__" ilk="function" name="CreateWindow" />
        <scope attributes="__classmethod__" ilk="function" name="DestroyMenu" />
        <scope attributes="__classmethod__" ilk="function" name="DestroyWindow" />
        <scope attributes="__classmethod__" ilk="function" name="DetachMenu" />
        <scope attributes="__classmethod__" ilk="function" name="DeviceGet" />
        <scope attributes="__classmethod__" ilk="function" name="DialsFunc" />
        <scope attributes="__classmethod__" ilk="function" name="DisplayFunc" />
        <scope attributes="__classmethod__" ilk="function" name="EntryFunc" />
        <scope attributes="__classmethod__" ilk="function" name="EstablishOverlay" />
        <scope attributes="__classmethod__" ilk="function" name="ExtensionSupported" />
        <scope attributes="__classmethod__" ilk="function" name="FullScreen" />
        <scope attributes="__classmethod__" ilk="function" name="Get" />
        <scope attributes="__classmethod__" ilk="function" name="GetColor" />
        <scope attributes="__classmethod__" ilk="function" name="GetMenu" />
        <scope attributes="__classmethod__" ilk="function" name="GetModifiers" />
        <scope attributes="__classmethod__" ilk="function" name="GetWindow" />
        <scope attributes="__classmethod__" ilk="function" name="HideOverlay" />
        <scope attributes="__classmethod__" ilk="function" name="HideWindow" />
        <scope attributes="__classmethod__" ilk="function" name="IconifyWindow" />
        <scope attributes="__classmethod__" ilk="function" name="IdleFunc" />
        <scope attributes="__classmethod__" ilk="function" name="Init" />
        <scope attributes="__classmethod__" ilk="function" name="InitDisplayMode" />
        <scope attributes="__classmethod__" ilk="function" name="InitDisplayString" />
        <scope attributes="__classmethod__" ilk="function" name="InitWindowPosition" />
        <scope attributes="__classmethod__" ilk="function" name="InitWindowSize" />
        <scope attributes="__classmethod__" ilk="function" name="KeyboardFunc" />
        <scope attributes="__classmethod__" ilk="function" name="LayerGet" />
        <scope attributes="__classmethod__" ilk="function" name="MainLoop" />
        <scope attributes="__classmethod__" ilk="function" name="MotionFunc" />
        <scope attributes="__classmethod__" ilk="function" name="MouseFunc" />
        <scope attributes="__classmethod__" ilk="function" name="OverlayDisplayFunc" />
        <scope attributes="__classmethod__" ilk="function" name="PassiveMotionFunc" />
        <scope attributes="__classmethod__" ilk="function" name="PopWindow" />
        <scope attributes="__classmethod__" ilk="function" name="PositionWindow" />
        <scope attributes="__classmethod__" ilk="function" name="PostOverlayRedisplay" />
        <scope attributes="__classmethod__" ilk="function" name="PostRedisplay" />
        <scope attributes="__classmethod__" ilk="function" name="PushWidow" />
        <scope attributes="__classmethod__" ilk="function" name="RemoveMenuItem" />
        <scope attributes="__classmethod__" ilk="function" name="RemoveOverlay" />
        <scope attributes="__classmethod__" ilk="function" name="ReportErrors" />
        <scope attributes="__classmethod__" ilk="function" name="ReshapeFunc" />
        <scope attributes="__classmethod__" ilk="function" name="ReshapeWindow" />
        <scope attributes="__classmethod__" ilk="function" name="SetColor" />
        <scope attributes="__classmethod__" ilk="function" name="SetCurcor" />
        <scope attributes="__classmethod__" ilk="function" name="SetIconTitle" />
        <scope attributes="__classmethod__" ilk="function" name="SetMenu" />
        <scope attributes="__classmethod__" ilk="function" name="SetWindow" />
        <scope attributes="__classmethod__" ilk="function" name="SetWindowTitle" />
        <scope attributes="__classmethod__" ilk="function" name="SetupVideoResizing" />
        <scope attributes="__classmethod__" ilk="function" name="ShowOverlay" />
        <scope attributes="__classmethod__" ilk="function" name="ShowWindow" />
        <scope attributes="__classmethod__" ilk="function" name="SolidCone" />
        <scope attributes="__classmethod__" ilk="function" name="SolidCube" />
        <scope attributes="__classmethod__" ilk="function" name="SolidDodecahedron" />
        <scope attributes="__classmethod__" ilk="function" name="SolidIcosahedron" />
        <scope attributes="__classmethod__" ilk="function" name="SolidOctahedron" />
        <scope attributes="__classmethod__" ilk="function" name="SolidSphere" />
        <scope attributes="__classmethod__" ilk="function" name="SolidTeapot" />
        <scope attributes="__classmethod__" ilk="function" name="SolidTetrahedron" />
        <scope attributes="__classmethod__" ilk="function" name="SolidTorus" />
        <scope attributes="__classmethod__" ilk="function" name="SpaceballButtonFunc" />
        <scope attributes="__classmethod__" ilk="function" name="SpaceballMotionFunc" />
        <scope attributes="__classmethod__" ilk="function" name="SpaceballRotateFunc" />
        <scope attributes="__classmethod__" ilk="function" name="SpecialFunc" />
        <scope attributes="__classmethod__" ilk="function" name="StopVideoResizing" />
        <scope attributes="__classmethod__" ilk="function" name="StrokeCharacter" />
        <scope attributes="__classmethod__" ilk="function" name="StrokeLength" />
        <scope attributes="__classmethod__" ilk="function" name="StrokeWidth" />
        <scope attributes="__classmethod__" ilk="function" name="SwapBuffers" />
        <scope attributes="__classmethod__" ilk="function" name="TabletButtonFunc" />
        <scope attributes="__classmethod__" ilk="function" name="TabletMotionFunc" />
        <scope attributes="__classmethod__" ilk="function" name="TimerFunc" />
        <scope attributes="__classmethod__" ilk="function" name="UseLayer" />
        <scope attributes="__classmethod__" ilk="function" name="VideoPan" />
        <scope attributes="__classmethod__" ilk="function" name="VideoResize" />
        <scope attributes="__classmethod__" ilk="function" name="VideoResizeGet" />
        <scope attributes="__classmethod__" ilk="function" name="VisibilityFunc" />
        <scope attributes="__classmethod__" ilk="function" name="WarpPointer" />
        <scope attributes="__classmethod__" ilk="function" name="WindowStatusFunc" />
        <scope attributes="__classmethod__" ilk="function" name="WireCone" />
        <scope attributes="__classmethod__" ilk="function" name="WireCube" />
        <scope attributes="__classmethod__" ilk="function" name="WireDodecahedron" />
        <scope attributes="__classmethod__" ilk="function" name="WireIcosahedron" />
        <scope attributes="__classmethod__" ilk="function" name="WireOctahedron" />
        <scope attributes="__classmethod__" ilk="function" name="WireSphere" />
        <scope attributes="__classmethod__" ilk="function" name="WireTeapot" />
        <scope attributes="__classmethod__" ilk="function" name="WireTetrahedron" />
        <scope attributes="__classmethod__" ilk="function" name="WireTorus" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="AddMenuEntry" />
        <scope ilk="function" name="AddSubMenu" />
        <scope ilk="function" name="AttachMenu" />
        <scope ilk="function" name="BitmapCharacter" />
        <scope ilk="function" name="BitmapLength" />
        <scope ilk="function" name="BitmapWidth" />
        <scope ilk="function" name="ButtonBoxFunc" />
        <scope ilk="function" name="ChangeToMenuEntry" />
        <scope ilk="function" name="ChangeToSubMenu" />
        <scope ilk="function" name="CopyColormap" />
        <scope ilk="function" name="CreateMenu" />
        <scope ilk="function" name="CreateSubWindow" />
        <scope ilk="function" name="CreateWindow" />
        <scope ilk="function" name="DestroyMenu" />
        <scope ilk="function" name="DestroyWindow" />
        <scope ilk="function" name="DetachMenu" />
        <scope ilk="function" name="DeviceGet" />
        <scope ilk="function" name="DialsFunc" />
        <scope ilk="function" name="DisplayFunc" />
        <scope ilk="function" name="EntryFunc" />
        <scope ilk="function" name="EstablishOverlay" />
        <scope ilk="function" name="ExtensionSupported" />
        <scope ilk="function" name="FullScreen" />
        <scope ilk="function" name="Get" />
        <scope ilk="function" name="GetColor" />
        <scope ilk="function" name="GetMenu" />
        <scope ilk="function" name="GetModifiers" />
        <scope ilk="function" name="GetWindow" />
        <scope ilk="function" name="HideOverlay" />
        <scope ilk="function" name="HideWindow" />
        <scope ilk="function" name="IconifyWindow" />
        <scope ilk="function" name="IdleFunc" />
        <scope ilk="function" name="Init" />
        <scope ilk="function" name="InitDisplayMode" />
        <scope ilk="function" name="InitDisplayString" />
        <scope ilk="function" name="InitWindowPosition" />
        <scope ilk="function" name="InitWindowSize" />
        <scope ilk="function" name="KeyboardFunc" />
        <scope ilk="function" name="LayerGet" />
        <scope ilk="function" name="MainLoop" />
        <scope ilk="function" name="MotionFunc" />
        <scope ilk="function" name="MouseFunc" />
        <scope ilk="function" name="OverlayDisplayFunc" />
        <scope ilk="function" name="PassiveMotionFunc" />
        <scope ilk="function" name="PopWindow" />
        <scope ilk="function" name="PositionWindow" />
        <scope ilk="function" name="PostOverlayRedisplay" />
        <scope ilk="function" name="PostRedisplay" />
        <scope ilk="function" name="PushWidow" />
        <scope ilk="function" name="RemoveMenuItem" />
        <scope ilk="function" name="RemoveOverlay" />
        <scope ilk="function" name="ReportErrors" />
        <scope ilk="function" name="ReshapeFunc" />
        <scope ilk="function" name="ReshapeWindow" />
        <scope ilk="function" name="SetColor" />
        <scope ilk="function" name="SetCurcor" />
        <scope ilk="function" name="SetIconTitle" />
        <scope ilk="function" name="SetMenu" />
        <scope ilk="function" name="SetWindow" />
        <scope ilk="function" name="SetWindowTitle" />
        <scope ilk="function" name="SetupVideoResizing" />
        <scope ilk="function" name="ShowOverlay" />
        <scope ilk="function" name="ShowWindow" />
        <scope ilk="function" name="SolidCone" />
        <scope ilk="function" name="SolidCube" />
        <scope ilk="function" name="SolidDodecahedron" />
        <scope ilk="function" name="SolidIcosahedron" />
        <scope ilk="function" name="SolidOctahedron" />
        <scope ilk="function" name="SolidSphere" />
        <scope ilk="function" name="SolidTeapot" />
        <scope ilk="function" name="SolidTetrahedron" />
        <scope ilk="function" name="SolidTorus" />
        <scope ilk="function" name="SpaceballButtonFunc" />
        <scope ilk="function" name="SpaceballMotionFunc" />
        <scope ilk="function" name="SpaceballRotateFunc" />
        <scope ilk="function" name="SpecialFunc" />
        <scope ilk="function" name="StopVideoResizing" />
        <scope ilk="function" name="StrokeCharacter" />
        <scope ilk="function" name="StrokeLength" />
        <scope ilk="function" name="StrokeWidth" />
        <scope ilk="function" name="SwapBuffers" />
        <scope ilk="function" name="TabletButtonFunc" />
        <scope ilk="function" name="TabletMotionFunc" />
        <scope ilk="function" name="TimerFunc" />
        <scope ilk="function" name="UseLayer" />
        <scope ilk="function" name="VideoPan" />
        <scope ilk="function" name="VideoResize" />
        <scope ilk="function" name="VideoResizeGet" />
        <scope ilk="function" name="VisibilityFunc" />
        <scope ilk="function" name="WarpPointer" />
        <scope ilk="function" name="WindowStatusFunc" />
        <scope ilk="function" name="WireCone" />
        <scope ilk="function" name="WireCube" />
        <scope ilk="function" name="WireDodecahedron" />
        <scope ilk="function" name="WireIcosahedron" />
        <scope ilk="function" name="WireOctahedron" />
        <scope ilk="function" name="WireSphere" />
        <scope ilk="function" name="WireTeapot" />
        <scope ilk="function" name="WireTetrahedron" />
        <scope ilk="function" name="WireTorus" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="to_s" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM" />
        <variable attributes="__const__" citdl="Fixnum" name="ACTIVE_ALT" />
        <variable attributes="__const__" citdl="Fixnum" name="ACTIVE_CTRL" />
        <variable attributes="__const__" citdl="Fixnum" name="ACTIVE_SHIFT" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="API_VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="BLUE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_BOTTOM_LEFT_CORNER" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_BOTTOM_RIGHT_CORNER" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_BOTTOM_SIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_CROSSHAIR" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_CYCLE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_DESTROY" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_FULL_CROSSHAIR" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_HELP" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_INFO" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_INHERIT" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_LEFT_ARROW" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_LEFT_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_LEFT_SIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_RIGHT_ARROW" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_RIGHT_SIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_SPRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_TEXT" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_TOP_LEFT_CORNER" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_TOP_RIGHT_CORNER" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_TOP_SIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_UP_DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="CURSOR_WAIT" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="DISPLAY_MODE_POSSIBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="DOUBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="ELAPSED_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="ENTERED" />
        <variable attributes="__const__" citdl="Fixnum" name="FULLY_COVERED" />
        <variable attributes="__const__" citdl="Fixnum" name="FULLY_RETAINED" />
        <variable attributes="__const__" citdl="Fixnum" name="GREEN" />
        <variable attributes="__const__" citdl="Fixnum" name="HAS_DIAL_AND_BUTTON_BOX" />
        <variable attributes="__const__" citdl="Fixnum" name="HAS_KEYBOARD" />
        <variable attributes="__const__" citdl="Fixnum" name="HAS_MOUSE" />
        <variable attributes="__const__" citdl="Fixnum" name="HAS_OVERLAY" />
        <variable attributes="__const__" citdl="Fixnum" name="HAS_SPACEBALL" />
        <variable attributes="__const__" citdl="Fixnum" name="HAS_TABLET" />
        <variable attributes="__const__" citdl="Fixnum" name="HIDDEN" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="INIT_DISPLAY_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="INIT_WINDOW_HEIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="INIT_WINDOW_WIDTH" />
        <variable attributes="__const__" citdl="Fixnum" name="INIT_WINDOW_X" />
        <variable attributes="__const__" citdl="Fixnum" name="INIT_WINDOW_Y" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_END" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F1" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F10" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F11" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F12" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F2" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F3" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F4" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F5" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F6" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F7" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F8" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_F9" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_HOME" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_INSERT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_PAGE_DOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_PAGE_UP" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEY_UP" />
        <variable attributes="__const__" citdl="Fixnum" name="LAYER_IN_USE" />
        <variable attributes="__const__" citdl="Fixnum" name="LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="LEFT_BUTTON" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="MENU_IN_USE" />
        <variable attributes="__const__" citdl="Fixnum" name="MENU_NOT_IN_USE" />
        <variable attributes="__const__" citdl="Fixnum" name="MENU_NUM_ITEMS" />
        <variable attributes="__const__" citdl="Fixnum" name="MIDDLE_BUTTON" />
        <variable attributes="__const__" citdl="Fixnum" name="MULTISAMPLE" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMAL_DAMAGED" />
        <variable attributes="__const__" citdl="Fixnum" name="NOT_VISIBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="NUM_BUTTON_BOX_BUTTONS" />
        <variable attributes="__const__" citdl="Fixnum" name="NUM_DIALS" />
        <variable attributes="__const__" citdl="Fixnum" name="NUM_MOUSE_BUTTONS" />
        <variable attributes="__const__" citdl="Fixnum" name="NUM_SPACEBALL_BUTTONS" />
        <variable attributes="__const__" citdl="Fixnum" name="NUM_TABLET_BUTTONS" />
        <variable attributes="__const__" citdl="Fixnum" name="OVERLAY" />
        <variable attributes="__const__" citdl="Fixnum" name="OVERLAY_DAMAGED" />
        <variable attributes="__const__" citdl="Fixnum" name="OVERLAY_POSSIBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="PARTIALLY_RETAINED" />
        <variable attributes="__const__" citdl="Fixnum" name="RED" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA" />
        <variable attributes="__const__" citdl="Fixnum" name="RIGHT_BUTTON" />
        <variable attributes="__const__" citdl="Fixnum" name="SCREEN_HEIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="SCREEN_HEIGHT_MM" />
        <variable attributes="__const__" citdl="Fixnum" name="SCREEN_WIDTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SCREEN_WIDTH_MM" />
        <variable attributes="__const__" citdl="Fixnum" name="SINGLE" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL" />
        <variable attributes="__const__" citdl="Fixnum" name="STEREO" />
        <variable attributes="__const__" citdl="Fixnum" name="TRANSPARENT_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="UP" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_HEIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_HEIGHT_DELTA" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_IN_USE" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_POSSIBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_WIDTH" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_WIDTH_DELTA" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_X" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_X_DELTA" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_Y" />
        <variable attributes="__const__" citdl="Fixnum" name="VIDEO_RESIZE_Y_DELTA" />
        <variable attributes="__const__" citdl="Fixnum" name="VISIBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_ACCUM_ALPHA_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_ACCUM_BLUE_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_ACCUM_GREEN_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_ACCUM_RED_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_ALPHA_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_BLUE_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_BUFFER_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_COLORMAP_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_CURSOR" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_DEPTH_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_DOUBLEBUFFER" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_GREEN_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_HEIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_NUM_CHILDREN" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_NUM_SAMPLES" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_PARENT" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_RED_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_RGBA" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_STENCIL_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_STEREO" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_WIDTH" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_X" />
        <variable attributes="__const__" citdl="Fixnum" name="WINDOW_Y" />
        <variable attributes="__const__" citdl="Fixnum" name="XLIB_IMPLEMENTATION" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="iconv">
      <scope classrefs="Data" ilk="class" name="Iconv">
        <scope classrefs="ArgError" doc="Input conversion stopped due to an input byte that does not&#xA;belong to the input codeset, or the output codeset does not&#xA;contain the character." ilk="class" name="IllegalSequence">
          <import symbol="Iconv::Failure" />
        </scope>
        <scope classrefs="ArgError" doc="Input conversion stopped due to an incomplete character or&#xA;shift sequence at the end of the input buffer." ilk="class" name="InvalidCharacter">
          <import symbol="Iconv::Failure" />
        </scope>
        <scope classrefs="RuntimeError" doc="Detected a bug of underlying iconv(3) libray." ilk="class" name="BrokenLibrary">
          <import symbol="Iconv::Failure" />
        </scope>
        <scope classrefs="ArgError" doc="Requested coding-system is not available on this system." ilk="class" name="InvalidEncoding">
          <import symbol="Iconv::Failure" />
        </scope>
        <scope doc="Base attributes for Iconv exceptions." ilk="namespace" name="Failure">
          <scope attributes="__classmethod__ __ctor__" doc="Creates new code converter from a coding-system designated&#xA;with from to another one designated with to." ilk="function" name="new" signature=" Iconv.new(to, from)" />
          <scope doc="Returns substring of the original string passed to Iconv&#xA;that starts at the character caused the exception." ilk="function" name="failed" signature=" failed" />
          <scope doc="Returns inspected string like as: #&lt;`class&apos;: `success&apos;,&#xA;`failed&apos;&gt;" ilk="function" name="inspect" signature=" inspect" />
          <scope doc="Returns string(s) translated successfully until the&#xA;exception occurred." ilk="function" name="success" signature=" success" />
        </scope>
        <scope classrefs="RuntimeError" doc="Iconv library internal error. Must not occur." ilk="class" name="OutOfRange">
          <import symbol="Iconv::Failure" />
        </scope>
        <scope attributes="__classmethod__" doc="Returns the map from canonical name to system dependent&#xA;name." ilk="function" name="charset_map" signature=" Iconv.charset_map" />
        <scope attributes="__classmethod__" doc="Document-method: Iconv::conv" ilk="function" name="conv" signature=" Iconv.iconv(to, from, *strs)" />
        <scope attributes="__classmethod__" doc="Shorthand for" ilk="function" name="iconv" signature=" Iconv.iconv(to, from, *strs)" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates new code converter from a coding-system designated&#xA;with from to another one designated with to." ilk="function" name="new" signature=" Iconv.new(to, from)" />
        <scope attributes="__classmethod__" doc="Equivalent to Iconv.new except that when it is called with a&#xA;block, it yields with the new instance and closes it, and&#xA;returns the result which returned from the block." ilk="function" name="open" signature=" Iconv.open(to, from) { |iconv| ... }" />
        <scope doc="Finishes conversion." ilk="function" name="close" signature="()" />
        <scope doc="Shorthand for" ilk="function" name="iconv" signature=" Iconv.iconv(to, from, *strs)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="nkf">
      <scope doc="NKF - Ruby extension for Network Kanji Filter" ilk="namespace" name="NKF">
        <scope doc="Alias for #guess2" ilk="function" name="guess" signature="(p1)" />
        <scope doc="Returns guessed encoding of `str&apos; as integer." ilk="function" name="guess1" signature="NKF.guess1(str)  -&gt; integer" />
        <scope doc="Returns guessed encoding of `str&apos; as integer by nkf routine." ilk="function" name="guess2" signature="NKF.guess2(str)  -&gt; integer" />
        <scope doc="Convert `str&apos; and return converted result. Conversion&#xA;details are specified by `opt&apos; as String." ilk="function" name="nkf" signature="NKF.nkf(opt, str)   -&gt; string" />
        <variable attributes="__const__" citdl="Fixnum" name="ASCII" />
        <variable attributes="__const__" citdl="Fixnum" name="AUTO" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="EUC" />
        <variable attributes="__const__" citdl="Fixnum" name="JIS" />
        <variable attributes="__const__" citdl="String" name="NKF_RELEASE_DATE" />
        <variable attributes="__const__" citdl="String" name="NKF_VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="NOCONV" />
        <variable attributes="__const__" citdl="Fixnum" name="SJIS" />
        <variable attributes="__const__" citdl="Fixnum" name="UNKNOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="UTF16" />
        <variable attributes="__const__" citdl="Fixnum" name="UTF32" />
        <variable attributes="__const__" citdl="Fixnum" name="UTF8" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="odbc">
      <scope ilk="namespace" name="ODBC">
        <scope attributes="__classmethod__" ilk="function" name="add_dsn" />
        <scope attributes="__classmethod__" ilk="function" name="clear_error" />
        <scope attributes="__classmethod__" ilk="function" name="config_dsn" />
        <scope attributes="__classmethod__" ilk="function" name="connect" />
        <scope attributes="__classmethod__" ilk="function" name="connection_pooling" />
        <scope attributes="__classmethod__" ilk="function" name="connection_pooling=" />
        <scope attributes="__classmethod__" ilk="function" name="datasources" />
        <scope attributes="__classmethod__" ilk="function" name="del_dsn" />
        <scope attributes="__classmethod__" ilk="function" name="drivers" />
        <scope attributes="__classmethod__" ilk="function" name="error" />
        <scope attributes="__classmethod__" ilk="function" name="info" />
        <scope attributes="__classmethod__" ilk="function" name="newenv" />
        <scope attributes="__classmethod__" ilk="function" name="raise" />
        <scope attributes="__classmethod__" ilk="function" name="to_date" />
        <scope attributes="__classmethod__" ilk="function" name="to_time" />
        <scope attributes="__classmethod__" ilk="function" name="trace" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="add_dsn" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="clear_error" />
        <scope ilk="function" name="config_dsn" />
        <scope ilk="function" name="connect" />
        <scope ilk="function" name="connection_pooling" />
        <scope ilk="function" name="connection_pooling=" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="datasources" />
        <scope ilk="function" name="del_dsn" />
        <scope ilk="function" name="drivers" />
        <scope ilk="function" name="error" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="info" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="newenv" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="raise" />
        <scope ilk="function" name="to_date" />
        <scope ilk="function" name="to_s" />
        <scope ilk="function" name="to_time" />
        <scope ilk="function" name="trace" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ACCESSIBLE_PROCEDURES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ACCESSIBLE_TABLES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ACTIVE_CONNECTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ACTIVE_ENVIRONMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ACTIVE_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_ADD_CONSTRAINT_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_ADD_DOMAIN_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_ADD_DOMAIN_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_CONSTRAINT_NAME_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_DROP_DOMAIN_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AD_DROP_DOMAIN_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_AVG" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_COUNT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_DISTINCT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_MAX" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_MIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AF_SUM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AGGREGATE_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ALTER_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ALTER_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AM_CONNECTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AM_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AM_STATEMENT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ASYNC_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_ADD_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_ADD_COLUMN_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_ADD_COLUMN_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_ADD_COLUMN_SINGLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_ADD_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_ADD_TABLE_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_CONSTRAINT_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_CONSTRAINT_INITIALLY_DEFERRED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_CONSTRAINT_NAME_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_CONSTRAINT_NON_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_DROP_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_DROP_COLUMN_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_DROP_COLUMN_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_DROP_COLUMN_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_AT_SET_COLUMN_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BATCH_ROW_COUNT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BATCH_SUPPORT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BEST_ROWID" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BIGINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BOOKMARK_PERSISTENCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_CLOSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_DROP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_OTHER_HSTMT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_SCROLL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_TRANSACTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BP_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BRC_EXPLICIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BRC_PROCEDURES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BRC_ROLLED_UP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BS_ROW_COUNT_EXPLICIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BS_ROW_COUNT_PROC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BS_SELECT_EXPLICIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_BS_SELECT_PROC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_ABSOLUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_BOOKMARK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_BULK_ADD" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_BULK_DELETE_BY_BOOKMARK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_BULK_FETCH_BY_BOOKMARK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_BULK_UPDATE_BY_BOOKMARK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_LOCK_EXCLUSIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_LOCK_NO_CHANGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_LOCK_UNLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_NEXT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_POSITIONED_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_POSITIONED_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_POS_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_POS_POSITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_POS_REFRESH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_POS_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_RELATIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA1_SELECT_FOR_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_CRC_APPROXIMATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_CRC_EXACT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_LOCK_CONCURRENCY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_MAX_ROWS_AFFECTS_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_MAX_ROWS_CATALOG" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_MAX_ROWS_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_MAX_ROWS_INSERT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_MAX_ROWS_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_MAX_ROWS_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_OPT_ROWVER_CONCURRENCY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_OPT_VALUES_CONCURRENCY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_READ_ONLY_CONCURRENCY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_SENSITIVITY_ADDITIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_SENSITIVITY_DELETIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_SENSITIVITY_UPDATES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_SIMULATE_NON_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_SIMULATE_TRY_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA2_SIMULATE_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CATALOG_LOCATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CATALOG_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CATALOG_NAME_SEPARATOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CATALOG_TERM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CATALOG_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA_CONSTRAINT_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA_CONSTRAINT_INITIALLY_DEFERRED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA_CONSTRAINT_NON_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CA_CREATE_ASSERTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CB_CLOSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CB_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CB_NON_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CB_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CB_PRESERVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CCOL_CREATE_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CCS_COLLATE_CLAUSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CCS_CREATE_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CCS_LIMITED_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CC_CLOSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CC_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CC_PRESERVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CONSTRAINT_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CONSTRAINT_NAME_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CONSTRAINT_NON_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_CREATE_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CDO_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CL_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CL_START" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CN_ANY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CN_DIFFERENT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CN_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_COLLATION_SEQ" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_COLUMN_ALIAS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONCAT_NULL_BEHAVIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONCUR_LOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONCUR_READ_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONCUR_ROWVER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONCUR_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONCUR_VALUES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_CHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_DECIMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_DOUBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_FLOAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_INTEGER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_INTERVAL_DAY_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_INTERVAL_YEAR_MONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_LONGVARBINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_LONGVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_NUMERIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_REAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_SMALLINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_TINYINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_VARBINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_VARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_WCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_WLONGVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CONVERT_WVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CORRELATION_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_MATCH_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_OFF" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_ONE_PER_DRIVER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_ONE_PER_HENV" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_RELAXED_MATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CP_STRICT_MATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_ASSERTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_SCHEMA" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_TRANSLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CREATE_VIEW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CR_CLOSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CR_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CR_PRESERVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CS_AUTHORIZATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CS_CREATE_SCHEMA" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CS_DEFAULT_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CTR_CREATE_TRANSLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_COLUMN_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_COLUMN_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_COLUMN_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_COMMIT_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_COMMIT_PRESERVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_CONSTRAINT_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_CONSTRAINT_INITIALLY_DEFERRED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_CONSTRAINT_NAME_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_CONSTRAINT_NON_DEFERRABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_CREATE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_GLOBAL_TEMPORARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_LOCAL_TEMPORARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CT_TABLE_CONSTRAINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_COMMIT_BEHAVIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_DYNAMIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_FORWARD_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_KEYSET_DRIVEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_ROLLBACK_BEHAVIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_SENSITIVITY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CURSOR_STATIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CU_DML_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CU_INDEX_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CU_PRIVILEGE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CU_PROCEDURE_INVOCATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CU_TABLE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_BIGINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_CHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_DECIMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_DOUBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_FLOAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_INTEGER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_INTERVAL_DAY_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_INTERVAL_YEAR_MONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_LONGVARBINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_LONGVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_NUMERIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_REAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_SMALLINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_TINYINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_VARBINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_VARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_WCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_WLONGVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CVT_WVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CV_CASCADED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CV_CHECK_OPTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CV_CREATE_VIEW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_CV_LOCAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DATABASE_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DATA_SOURCE_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DATA_SOURCE_READ_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DATETIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DATETIME_LITERALS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DA_DROP_ASSERTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DBMS_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DBMS_VER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DCS_DROP_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DC_DROP_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DDL_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DD_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DD_DROP_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DD_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DECIMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DEFAULT_TXN_ISOLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DESCRIBE_PARAMETER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DI_CREATE_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DI_DROP_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_DAY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_HOUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_MINUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_MONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_YEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DL_SQL92_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DM_VER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DOUBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_HDBC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_HDESC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_HENV" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_HLIB" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_HSTMT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_ODBC_VER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DRIVER_VER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_ASSERTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_SCHEMA" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_TRANSLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DROP_VIEW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DS_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DS_DROP_SCHEMA" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DS_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DTC_ENLIST_EXPENSIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DTC_TRANSITION_COST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DTC_UNENLIST_EXPENSIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DTR_DROP_TRANSLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DT_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DT_DROP_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DT_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DV_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DV_DROP_VIEW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DV_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DYNAMIC_CURSOR_ATTRIBUTES1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_DYNAMIC_CURSOR_ATTRIBUTES2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_EXPRESSIONS_IN_ORDERBY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_ABSOLUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_BOOKMARK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_FIRST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_LAST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_NEXT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_PRIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FD_FETCH_RELATIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_ABSOLUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_DIRECTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_FIRST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_LAST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_NEXT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_PRIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FETCH_RELATIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FILE_CATALOG" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FILE_NOT_SUPPORTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FILE_QUALIFIER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FILE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FILE_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FLOAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_CVT_CAST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_CVT_CONVERT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_ABS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_ACOS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_ASIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_ATAN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_ATAN2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_CEILING" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_COS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_COT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_DEGREES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_EXP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_FLOOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_LOG" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_LOG10" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_MOD" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_PI" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_POWER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_RADIANS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_RAND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_ROUND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_SIGN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_SIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_SQRT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_TAN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_NUM_TRUNCATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_ASCII" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_BIT_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_CHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_CHARACTER_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_CHAR_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_CONCAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_DIFFERENCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_INSERT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_LCASE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_LOCATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_LOCATE_2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_LTRIM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_OCTET_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_POSITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_REPEAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_REPLACE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_RTRIM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_SOUNDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_SPACE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_SUBSTRING" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_STR_UCASE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_SYS_DBNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_SYS_IFNULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_SYS_USERNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_CURDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_CURRENT_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_CURRENT_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_CURRENT_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_CURTIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_DAYNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_DAYOFMONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_DAYOFWEEK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_DAYOFYEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_EXTRACT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_HOUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_MINUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_MONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_MONTHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_NOW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_QUARTER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_TIMESTAMPADD" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_TIMESTAMPDIFF" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_WEEK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TD_YEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_DAY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_FRAC_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_HOUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_MINUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_MONTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_QUARTER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_SECOND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_WEEK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FN_TSI_YEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GB_COLLATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GB_GROUP_BY_CONTAINS_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GB_GROUP_BY_EQUALS_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GB_NOT_SUPPORTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GB_NO_RELATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GD_ANY_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GD_ANY_ORDER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GD_BLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GD_BOUND" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GETDATA_EXTENSIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GROUP_BY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_GUID" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IC_LOWER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IC_MIXED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IC_SENSITIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IC_UPPER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IDENTIFIER_CASE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IDENTIFIER_QUOTE_CHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IK_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IK_ASC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IK_DESC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IK_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_INDEX_KEYWORDS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_INFO_SCHEMA_VIEWS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_INSERT_STATEMENT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_INTEGER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_INTEGRITY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_ASSERTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_CHARACTER_SETS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_CHECK_CONSTRAINTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_COLLATIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_COLUMNS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_COLUMN_DOMAIN_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_COLUMN_PRIVILEGES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_CONSTRAINT_COLUMN_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_CONSTRAINT_TABLE_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_DOMAINS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_DOMAIN_CONSTRAINTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_KEY_COLUMN_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_REFERENTIAL_CONSTRAINTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_SCHEMATA" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_SQL_LANGUAGES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_TABLES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_TABLE_CONSTRAINTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_TABLE_PRIVILEGES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_TRANSLATIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_USAGE_PRIVILEGES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_VIEWS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_VIEW_COLUMN_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ISV_VIEW_TABLE_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IS_INSERT_LITERALS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IS_INSERT_SEARCHED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_IS_SELECT_INTO" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_KEYSET_CURSOR_ATTRIBUTES1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_KEYSET_CURSOR_ATTRIBUTES2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_KEYWORDS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LCK_EXCLUSIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LCK_NO_CHANGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LCK_UNLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LIKE_ESCAPE_CLAUSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LOCK_TYPES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LONGVARBINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_LONGVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_ASYNC_CONCURRENT_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_BINARY_LITERAL_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_CATALOG_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_CHAR_LITERAL_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_COLUMNS_IN_GROUP_BY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_COLUMNS_IN_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_COLUMNS_IN_ORDER_BY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_COLUMNS_IN_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_COLUMNS_IN_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_COLUMN_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_CONCURRENT_ACTIVITIES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_CURSOR_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_DRIVER_CONNECTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_IDENTIFIER_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_INDEX_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_OWNER_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_PROCEDURE_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_QUALIFIER_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_ROW_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_ROW_SIZE_INCLUDES_LONG" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_SCHEMA_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_STATEMENT_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_TABLES_IN_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_TABLE_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MAX_USER_NAME_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MULTIPLE_ACTIVE_TXN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_MULT_RESULT_SETS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NC_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NC_HIGH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NC_LOW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NC_START" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NEED_LONG_DATA_LEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NNC_NON_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NNC_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NON_NULLABLE_COLUMNS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NULL_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NUMERIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_NUMERIC_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OAC_LEVEL1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OAC_LEVEL2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OAC_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ODBC_API_CONFORMANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ODBC_INTERFACE_CONFORMANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ODBC_SAG_CLI_CONFORMANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ODBC_SQL_CONFORMANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ODBC_SQL_OPT_IEF" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ODBC_VER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OIC_CORE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OIC_LEVEL1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OIC_LEVEL2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_ALL_COMPARISON_OPS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_CAPABILITIES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_FULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_INNER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_NESTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_NOT_ORDERED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OJ_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ORDER_BY_COLUMNS_IN_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OSCC_COMPLIANT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OSCC_NOT_COMPLIANT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OSC_CORE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OSC_EXTENDED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OSC_MINIMUM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OUTER_JOINS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OU_DML_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OU_INDEX_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OU_PRIVILEGE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OU_PROCEDURE_INVOCATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OU_TABLE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OV_ODBC2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OV_ODBC3" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OWNER_TERM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_OWNER_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PARAM_ARRAY_ROW_COUNTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PARAM_ARRAY_SELECTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PARC_BATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PARC_NO_BATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PAS_BATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PAS_NO_BATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PAS_NO_SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POSITIONED_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POS_ADD" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POS_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POS_OPERATIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POS_POSITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POS_REFRESH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_POS_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PROCEDURES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PROCEDURE_TERM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PS_POSITIONED_DELETE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PS_POSITIONED_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_PS_SELECT_FOR_UPDATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QL_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QL_START" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QUALIFIER_LOCATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QUALIFIER_NAME_SEPARATOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QUALIFIER_TERM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QUALIFIER_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QUOTED_IDENTIFIER_CASE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QU_DML_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QU_INDEX_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QU_PRIVILEGE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QU_PROCEDURE_INVOCATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_QU_TABLE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_REAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ROWVER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_ROW_UPDATES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCCO_LOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCCO_OPT_ROWVER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCCO_OPT_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCCO_OPT_VALUES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCCO_READ_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCC_ISO92_CLI" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCC_XOPEN_CLI_VERSION1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCHEMA_TERM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCHEMA_USAGE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCOPE_CURROW" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCOPE_SESSION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCOPE_TRANSACTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCROLL_CONCURRENCY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SCROLL_OPTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_FIPS127_2_TRANSITIONAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_NON_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_SQL92_ENTRY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_SQL92_FULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_SQL92_INTERMEDIATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_TRY_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SC_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SDF_CURRENT_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SDF_CURRENT_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SDF_CURRENT_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SEARCH_PATTERN_ESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SERVER_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKD_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKD_NO_ACTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKD_SET_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKD_SET_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKU_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKU_NO_ACTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKU_SET_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SFKU_SET_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_DELETE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_INSERT_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_INSERT_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_REFERENCES_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_REFERENCES_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_SELECT_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_UPDATE_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_UPDATE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_USAGE_ON_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_USAGE_ON_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_USAGE_ON_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_USAGE_ON_TRANSLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SG_WITH_GRANT_OPTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SMALLINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SNVF_BIT_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SNVF_CHARACTER_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SNVF_CHAR_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SNVF_EXTRACT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SNVF_OCTET_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SNVF_POSITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SO_DYNAMIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SO_FORWARD_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SO_KEYSET_DRIVEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SO_MIXED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SO_STATIC" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SPECIAL_CHARACTERS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_BETWEEN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_COMPARISON" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_EXISTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_IN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_ISNOTNULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_ISNULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_LIKE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_MATCH_FULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_MATCH_PARTIAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_MATCH_UNIQUE_FULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_MATCH_UNIQUE_PARTIAL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_OVERLAPS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_QUANTIFIED_COMPARISON" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SP_UNIQUE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_DATETIME_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_FOREIGN_KEY_DELETE_RULE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_FOREIGN_KEY_UPDATE_RULE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_GRANT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_NUMERIC_VALUE_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_PREDICATES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_RELATIONAL_JOIN_OPERATORS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_REVOKE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_ROW_VALUE_CONSTRUCTOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_STRING_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL92_VALUE_EXPRESSIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQL_CONFORMANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQ_COMPARISON" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQ_CORRELATED_SUBQUERIES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQ_EXISTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQ_IN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SQ_QUANTIFIED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_CORRESPONDING_CLAUSE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_CROSS_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_EXCEPT_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_FULL_OUTER_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_INNER_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_INTERSECT_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_LEFT_OUTER_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_NATURAL_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_RIGHT_OUTER_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRJO_UNION_JOIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRVC_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRVC_NULL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRVC_ROW_SUBQUERY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SRVC_VALUE_EXPRESSION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_CASCADE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_DELETE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_GRANT_OPTION_FOR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_INSERT_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_INSERT_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_REFERENCES_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_REFERENCES_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_RESTRICT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_SELECT_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_UPDATE_COLUMN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_UPDATE_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_USAGE_ON_CHARACTER_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_USAGE_ON_COLLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_USAGE_ON_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SR_USAGE_ON_TRANSLATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_CONVERT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_LOWER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_SUBSTRING" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_TRANSLATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_TRIM_BOTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_TRIM_LEADING" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_TRIM_TRAILING" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SSF_UPPER" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SS_ADDITIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SS_DELETIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SS_UPDATES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_STANDARD_CLI_CONFORMANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_STATIC_CURSOR_ATTRIBUTES1" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_STATIC_CURSOR_ATTRIBUTES2" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_STATIC_SENSITIVITY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_STRING_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SUBQUERIES" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SU_DML_STATEMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SU_INDEX_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SU_PRIVILEGE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SU_PROCEDURE_INVOCATION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SU_TABLE_DEFINITION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SVE_CASE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SVE_CAST" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SVE_COALESCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SVE_NULLIF" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_SYSTEM_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TABLE_TERM" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TC_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TC_DDL_COMMIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TC_DDL_IGNORE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TC_DML" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TC_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TIMEDATE_ADD_INTERVALS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TIMEDATE_DIFF_INTERVALS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TIMEDATE_FUNCTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TINYINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TRANSACTION_READ_COMMITTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TRANSACTION_READ_UNCOMMITTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TRANSACTION_REPEATABLE_READ" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TRANSACTION_SERIALIZABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TXN_CAPABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TXN_ISOLATION_OPTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TXN_READ_COMMITTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TXN_READ_UNCOMMITTED" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TXN_REPEATABLE_READ" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TXN_SERIALIZABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TYPE_DATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TYPE_TIME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_TYPE_TIMESTAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_UNION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_UNKNOWN_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_USER_NAME" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_US_UNION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_US_UNION_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_U_UNION" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_U_UNION_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_VARBINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_VARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_WCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_WLONGVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_WVARCHAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SQL_XOPEN_CLI_YEAR" />
      </scope>
      <scope classrefs="Proc" ilk="class" name="ODBCProc">
        <scope ilk="function" name="[]" />
        <scope ilk="function" name="call" />
        <scope ilk="function" name="statement" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="opengl">
      <scope ilk="namespace" name="GL">
        <scope attributes="__classmethod__" ilk="function" name="Accum" />
        <scope attributes="__classmethod__" ilk="function" name="AlphaFunc" />
        <scope attributes="__classmethod__" ilk="function" name="ArrayElement" />
        <scope attributes="__classmethod__" ilk="function" name="Begin" />
        <scope attributes="__classmethod__" ilk="function" name="BindTexture" />
        <scope attributes="__classmethod__" ilk="function" name="Bitmap" />
        <scope attributes="__classmethod__" ilk="function" name="BlendFunc" />
        <scope attributes="__classmethod__" ilk="function" name="CallList" />
        <scope attributes="__classmethod__" ilk="function" name="CallLists" />
        <scope attributes="__classmethod__" ilk="function" name="Clear" />
        <scope attributes="__classmethod__" ilk="function" name="ClearAccum" />
        <scope attributes="__classmethod__" ilk="function" name="ClearColor" />
        <scope attributes="__classmethod__" ilk="function" name="ClearDepth" />
        <scope attributes="__classmethod__" ilk="function" name="ClearIndex" />
        <scope attributes="__classmethod__" ilk="function" name="ClearStencil" />
        <scope attributes="__classmethod__" ilk="function" name="ClipPlane" />
        <scope attributes="__classmethod__" ilk="function" name="Color" />
        <scope attributes="__classmethod__" ilk="function" name="Color3d" />
        <scope attributes="__classmethod__" ilk="function" name="Color3f" />
        <scope attributes="__classmethod__" ilk="function" name="Color3i" />
        <scope attributes="__classmethod__" ilk="function" name="Color3s" />
        <scope attributes="__classmethod__" ilk="function" name="Color3ub" />
        <scope attributes="__classmethod__" ilk="function" name="Color3ui" />
        <scope attributes="__classmethod__" ilk="function" name="Color3us" />
        <scope attributes="__classmethod__" ilk="function" name="Color4b" />
        <scope attributes="__classmethod__" ilk="function" name="Color4d" />
        <scope attributes="__classmethod__" ilk="function" name="Color4f" />
        <scope attributes="__classmethod__" ilk="function" name="Color4i" />
        <scope attributes="__classmethod__" ilk="function" name="Color4s" />
        <scope attributes="__classmethod__" ilk="function" name="Color4ub" />
        <scope attributes="__classmethod__" ilk="function" name="Color4ui" />
        <scope attributes="__classmethod__" ilk="function" name="Color4us" />
        <scope attributes="__classmethod__" ilk="function" name="ColorMask" />
        <scope attributes="__classmethod__" ilk="function" name="ColorMaterial" />
        <scope attributes="__classmethod__" ilk="function" name="ColorPointer" />
        <scope attributes="__classmethod__" ilk="function" name="CopyPixels" />
        <scope attributes="__classmethod__" ilk="function" name="CopyTexImage1D" />
        <scope attributes="__classmethod__" ilk="function" name="CopyTexImage2D" />
        <scope attributes="__classmethod__" ilk="function" name="CopyTexSubImage1D" />
        <scope attributes="__classmethod__" ilk="function" name="CopyTexSubImage2D" />
        <scope attributes="__classmethod__" ilk="function" name="CullFace" />
        <scope attributes="__classmethod__" ilk="function" name="DeleteLists" />
        <scope attributes="__classmethod__" ilk="function" name="DeleteTextures" />
        <scope attributes="__classmethod__" ilk="function" name="DepthFunc" />
        <scope attributes="__classmethod__" ilk="function" name="DepthMask" />
        <scope attributes="__classmethod__" ilk="function" name="DepthRange" />
        <scope attributes="__classmethod__" ilk="function" name="Disable" />
        <scope attributes="__classmethod__" ilk="function" name="DisableClientState" />
        <scope attributes="__classmethod__" ilk="function" name="DrawArrays" />
        <scope attributes="__classmethod__" ilk="function" name="DrawBuffer" />
        <scope attributes="__classmethod__" ilk="function" name="DrawElements" />
        <scope attributes="__classmethod__" ilk="function" name="DrawPixels" />
        <scope attributes="__classmethod__" ilk="function" name="EdgeFlag" />
        <scope attributes="__classmethod__" ilk="function" name="EdgeFlagPointer" />
        <scope attributes="__classmethod__" ilk="function" name="Enable" />
        <scope attributes="__classmethod__" ilk="function" name="EnableClientState" />
        <scope attributes="__classmethod__" ilk="function" name="End" />
        <scope attributes="__classmethod__" ilk="function" name="EndList" />
        <scope attributes="__classmethod__" ilk="function" name="EvalCoord1d" />
        <scope attributes="__classmethod__" ilk="function" name="EvalCoord2d" />
        <scope attributes="__classmethod__" ilk="function" name="EvalMesh1" />
        <scope attributes="__classmethod__" ilk="function" name="EvalMesh2" />
        <scope attributes="__classmethod__" ilk="function" name="EvalPoint1" />
        <scope attributes="__classmethod__" ilk="function" name="EvalPoint2" />
        <scope attributes="__classmethod__" ilk="function" name="FeedbackBuffer" />
        <scope attributes="__classmethod__" ilk="function" name="Finish" />
        <scope attributes="__classmethod__" ilk="function" name="Flush" />
        <scope attributes="__classmethod__" ilk="function" name="Fog" />
        <scope attributes="__classmethod__" ilk="function" name="Fogf" />
        <scope attributes="__classmethod__" ilk="function" name="Fogi" />
        <scope attributes="__classmethod__" ilk="function" name="FrontFace" />
        <scope attributes="__classmethod__" ilk="function" name="Frustum" />
        <scope attributes="__classmethod__" ilk="function" name="GenLists" />
        <scope attributes="__classmethod__" ilk="function" name="GenTextures" />
        <scope attributes="__classmethod__" ilk="function" name="GetDoublev" />
        <scope attributes="__classmethod__" ilk="function" name="GetError" />
        <scope attributes="__classmethod__" ilk="function" name="GetMaterial" />
        <scope attributes="__classmethod__" ilk="function" name="GetPolygonStipple" />
        <scope attributes="__classmethod__" ilk="function" name="GetString" />
        <scope attributes="__classmethod__" ilk="function" name="Hint" />
        <scope attributes="__classmethod__" ilk="function" name="Index" />
        <scope attributes="__classmethod__" ilk="function" name="IndexMask" />
        <scope attributes="__classmethod__" ilk="function" name="IndexPointer" />
        <scope attributes="__classmethod__" ilk="function" name="Indexd" />
        <scope attributes="__classmethod__" ilk="function" name="Indexi" />
        <scope attributes="__classmethod__" ilk="function" name="InitNames" />
        <scope attributes="__classmethod__" ilk="function" name="InterleavedArrays" />
        <scope attributes="__classmethod__" ilk="function" name="IsEnabled" />
        <scope attributes="__classmethod__" ilk="function" name="IsList" />
        <scope attributes="__classmethod__" ilk="function" name="IsTexture" />
        <scope attributes="__classmethod__" ilk="function" name="Light" />
        <scope attributes="__classmethod__" ilk="function" name="LightModel" />
        <scope attributes="__classmethod__" ilk="function" name="LightModelf" />
        <scope attributes="__classmethod__" ilk="function" name="LightModeli" />
        <scope attributes="__classmethod__" ilk="function" name="Lightf" />
        <scope attributes="__classmethod__" ilk="function" name="Lightfv" />
        <scope attributes="__classmethod__" ilk="function" name="Lighti" />
        <scope attributes="__classmethod__" ilk="function" name="Lightiv" />
        <scope attributes="__classmethod__" ilk="function" name="LineStipple" />
        <scope attributes="__classmethod__" ilk="function" name="LineWidth" />
        <scope attributes="__classmethod__" ilk="function" name="ListBase" />
        <scope attributes="__classmethod__" ilk="function" name="LoadIdentity" />
        <scope attributes="__classmethod__" ilk="function" name="LoadMatrix" />
        <scope attributes="__classmethod__" ilk="function" name="LoadName" />
        <scope attributes="__classmethod__" ilk="function" name="LogicOp" />
        <scope attributes="__classmethod__" ilk="function" name="Map1d" />
        <scope attributes="__classmethod__" ilk="function" name="Map2d" />
        <scope attributes="__classmethod__" ilk="function" name="MapGrid1d" />
        <scope attributes="__classmethod__" ilk="function" name="MapGrid2d" />
        <scope attributes="__classmethod__" ilk="function" name="Material" />
        <scope attributes="__classmethod__" ilk="function" name="Materialf" />
        <scope attributes="__classmethod__" ilk="function" name="Materiali" />
        <scope attributes="__classmethod__" ilk="function" name="MatrixMode" />
        <scope attributes="__classmethod__" ilk="function" name="MultMatrix" />
        <scope attributes="__classmethod__" ilk="function" name="NewList" />
        <scope attributes="__classmethod__" ilk="function" name="Normal" />
        <scope attributes="__classmethod__" ilk="function" name="Normal3d" />
        <scope attributes="__classmethod__" ilk="function" name="Normal3i" />
        <scope attributes="__classmethod__" ilk="function" name="NormalPointer" />
        <scope attributes="__classmethod__" ilk="function" name="Ortho" />
        <scope attributes="__classmethod__" ilk="function" name="PassThrough" />
        <scope attributes="__classmethod__" ilk="function" name="PixelStore" />
        <scope attributes="__classmethod__" ilk="function" name="PixelStoref" />
        <scope attributes="__classmethod__" ilk="function" name="PixelStorei" />
        <scope attributes="__classmethod__" ilk="function" name="PixelTransfer" />
        <scope attributes="__classmethod__" ilk="function" name="PixelTransferf" />
        <scope attributes="__classmethod__" ilk="function" name="PixelTransferi" />
        <scope attributes="__classmethod__" ilk="function" name="PixelZoom" />
        <scope attributes="__classmethod__" ilk="function" name="PointSize" />
        <scope attributes="__classmethod__" ilk="function" name="PolygonMode" />
        <scope attributes="__classmethod__" ilk="function" name="PolygonOffset" />
        <scope attributes="__classmethod__" ilk="function" name="PolygonStipple" />
        <scope attributes="__classmethod__" ilk="function" name="PopAttrib" />
        <scope attributes="__classmethod__" ilk="function" name="PopClientAttrib" />
        <scope attributes="__classmethod__" ilk="function" name="PopMatrix" />
        <scope attributes="__classmethod__" ilk="function" name="PopName" />
        <scope attributes="__classmethod__" ilk="function" name="PushAttrib" />
        <scope attributes="__classmethod__" ilk="function" name="PushClientAttrib" />
        <scope attributes="__classmethod__" ilk="function" name="PushMatrix" />
        <scope attributes="__classmethod__" ilk="function" name="PushName" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos2d" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos2i" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos3d" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos3i" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos4d" />
        <scope attributes="__classmethod__" ilk="function" name="RasterPos4i" />
        <scope attributes="__classmethod__" ilk="function" name="ReadBuffer" />
        <scope attributes="__classmethod__" ilk="function" name="ReadPixels" />
        <scope attributes="__classmethod__" ilk="function" name="Rect" />
        <scope attributes="__classmethod__" ilk="function" name="Rectd" />
        <scope attributes="__classmethod__" ilk="function" name="Recti" />
        <scope attributes="__classmethod__" ilk="function" name="RenderMode" />
        <scope attributes="__classmethod__" ilk="function" name="Rotate" />
        <scope attributes="__classmethod__" ilk="function" name="Rotated" />
        <scope attributes="__classmethod__" ilk="function" name="Scale" />
        <scope attributes="__classmethod__" ilk="function" name="Scaled" />
        <scope attributes="__classmethod__" ilk="function" name="Scissor" />
        <scope attributes="__classmethod__" ilk="function" name="SelectBuffer" />
        <scope attributes="__classmethod__" ilk="function" name="ShadeModel" />
        <scope attributes="__classmethod__" ilk="function" name="StencilFunc" />
        <scope attributes="__classmethod__" ilk="function" name="StencilMask" />
        <scope attributes="__classmethod__" ilk="function" name="StencilOp" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord1d" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord1f" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord1i" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord1s" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord2d" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord2f" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord2i" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord2s" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord3d" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord3f" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord3i" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord3s" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord4d" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord4f" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord4i" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoord4s" />
        <scope attributes="__classmethod__" ilk="function" name="TexCoordPointer" />
        <scope attributes="__classmethod__" ilk="function" name="TexEnv" />
        <scope attributes="__classmethod__" ilk="function" name="TexEnvf" />
        <scope attributes="__classmethod__" ilk="function" name="TexEnvi" />
        <scope attributes="__classmethod__" ilk="function" name="TexGen" />
        <scope attributes="__classmethod__" ilk="function" name="TexGend" />
        <scope attributes="__classmethod__" ilk="function" name="TexGeni" />
        <scope attributes="__classmethod__" ilk="function" name="TexImage2D" />
        <scope attributes="__classmethod__" ilk="function" name="TexParameter" />
        <scope attributes="__classmethod__" ilk="function" name="TexParameterf" />
        <scope attributes="__classmethod__" ilk="function" name="TexParameteri" />
        <scope attributes="__classmethod__" ilk="function" name="TexSubImage2D" />
        <scope attributes="__classmethod__" ilk="function" name="Translate" />
        <scope attributes="__classmethod__" ilk="function" name="Translated" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex2d" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex2f" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex2i" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex3d" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex3f" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex3i" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex4d" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex4f" />
        <scope attributes="__classmethod__" ilk="function" name="Vertex4i" />
        <scope attributes="__classmethod__" ilk="function" name="VertexPointer" />
        <scope attributes="__classmethod__" ilk="function" name="Viewport" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="Accum" />
        <scope ilk="function" name="AlphaFunc" />
        <scope ilk="function" name="ArrayElement" />
        <scope ilk="function" name="Begin" />
        <scope ilk="function" name="BindTexture" />
        <scope ilk="function" name="Bitmap" />
        <scope ilk="function" name="BlendFunc" />
        <scope ilk="function" name="CallList" />
        <scope ilk="function" name="CallLists" />
        <scope ilk="function" name="Clear" />
        <scope ilk="function" name="ClearAccum" />
        <scope ilk="function" name="ClearColor" />
        <scope ilk="function" name="ClearDepth" />
        <scope ilk="function" name="ClearIndex" />
        <scope ilk="function" name="ClearStencil" />
        <scope ilk="function" name="ClipPlane" />
        <scope ilk="function" name="Color" />
        <scope ilk="function" name="Color3d" />
        <scope ilk="function" name="Color3f" />
        <scope ilk="function" name="Color3i" />
        <scope ilk="function" name="Color3s" />
        <scope ilk="function" name="Color3ub" />
        <scope ilk="function" name="Color3ui" />
        <scope ilk="function" name="Color3us" />
        <scope ilk="function" name="Color4b" />
        <scope ilk="function" name="Color4d" />
        <scope ilk="function" name="Color4f" />
        <scope ilk="function" name="Color4i" />
        <scope ilk="function" name="Color4s" />
        <scope ilk="function" name="Color4ub" />
        <scope ilk="function" name="Color4ui" />
        <scope ilk="function" name="Color4us" />
        <scope ilk="function" name="ColorMask" />
        <scope ilk="function" name="ColorMaterial" />
        <scope ilk="function" name="ColorPointer" />
        <scope ilk="function" name="CopyPixels" />
        <scope ilk="function" name="CopyTexImage1D" />
        <scope ilk="function" name="CopyTexImage2D" />
        <scope ilk="function" name="CopyTexSubImage1D" />
        <scope ilk="function" name="CopyTexSubImage2D" />
        <scope ilk="function" name="CullFace" />
        <scope ilk="function" name="DeleteLists" />
        <scope ilk="function" name="DeleteTextures" />
        <scope ilk="function" name="DepthFunc" />
        <scope ilk="function" name="DepthMask" />
        <scope ilk="function" name="DepthRange" />
        <scope ilk="function" name="Disable" />
        <scope ilk="function" name="DisableClientState" />
        <scope ilk="function" name="DrawArrays" />
        <scope ilk="function" name="DrawBuffer" />
        <scope ilk="function" name="DrawElements" />
        <scope ilk="function" name="DrawPixels" />
        <scope ilk="function" name="EdgeFlag" />
        <scope ilk="function" name="EdgeFlagPointer" />
        <scope ilk="function" name="Enable" />
        <scope ilk="function" name="EnableClientState" />
        <scope ilk="function" name="End" />
        <scope ilk="function" name="EndList" />
        <scope ilk="function" name="EvalCoord1d" />
        <scope ilk="function" name="EvalCoord2d" />
        <scope ilk="function" name="EvalMesh1" />
        <scope ilk="function" name="EvalMesh2" />
        <scope ilk="function" name="EvalPoint1" />
        <scope ilk="function" name="EvalPoint2" />
        <scope ilk="function" name="FeedbackBuffer" />
        <scope ilk="function" name="Finish" />
        <scope ilk="function" name="Flush" />
        <scope ilk="function" name="Fog" />
        <scope ilk="function" name="Fogf" />
        <scope ilk="function" name="Fogi" />
        <scope ilk="function" name="FrontFace" />
        <scope ilk="function" name="Frustum" />
        <scope ilk="function" name="GenLists" />
        <scope ilk="function" name="GenTextures" />
        <scope ilk="function" name="GetDoublev" />
        <scope ilk="function" name="GetError" />
        <scope ilk="function" name="GetMaterial" />
        <scope ilk="function" name="GetPolygonStipple" />
        <scope ilk="function" name="GetString" />
        <scope ilk="function" name="Hint" />
        <scope ilk="function" name="Index" />
        <scope ilk="function" name="IndexMask" />
        <scope ilk="function" name="IndexPointer" />
        <scope ilk="function" name="Indexd" />
        <scope ilk="function" name="Indexi" />
        <scope ilk="function" name="InitNames" />
        <scope ilk="function" name="InterleavedArrays" />
        <scope ilk="function" name="IsEnabled" />
        <scope ilk="function" name="IsList" />
        <scope ilk="function" name="IsTexture" />
        <scope ilk="function" name="Light" />
        <scope ilk="function" name="LightModel" />
        <scope ilk="function" name="LightModelf" />
        <scope ilk="function" name="LightModeli" />
        <scope ilk="function" name="Lightf" />
        <scope ilk="function" name="Lightfv" />
        <scope ilk="function" name="Lighti" />
        <scope ilk="function" name="Lightiv" />
        <scope ilk="function" name="LineStipple" />
        <scope ilk="function" name="LineWidth" />
        <scope ilk="function" name="ListBase" />
        <scope ilk="function" name="LoadIdentity" />
        <scope ilk="function" name="LoadMatrix" />
        <scope ilk="function" name="LoadName" />
        <scope ilk="function" name="LogicOp" />
        <scope ilk="function" name="Map1d" />
        <scope ilk="function" name="Map2d" />
        <scope ilk="function" name="MapGrid1d" />
        <scope ilk="function" name="MapGrid2d" />
        <scope ilk="function" name="Material" />
        <scope ilk="function" name="Materialf" />
        <scope ilk="function" name="Materiali" />
        <scope ilk="function" name="MatrixMode" />
        <scope ilk="function" name="MultMatrix" />
        <scope ilk="function" name="NewList" />
        <scope ilk="function" name="Normal" />
        <scope ilk="function" name="Normal3d" />
        <scope ilk="function" name="Normal3i" />
        <scope ilk="function" name="NormalPointer" />
        <scope ilk="function" name="Ortho" />
        <scope ilk="function" name="PassThrough" />
        <scope ilk="function" name="PixelStore" />
        <scope ilk="function" name="PixelStoref" />
        <scope ilk="function" name="PixelStorei" />
        <scope ilk="function" name="PixelTransfer" />
        <scope ilk="function" name="PixelTransferf" />
        <scope ilk="function" name="PixelTransferi" />
        <scope ilk="function" name="PixelZoom" />
        <scope ilk="function" name="PointSize" />
        <scope ilk="function" name="PolygonMode" />
        <scope ilk="function" name="PolygonOffset" />
        <scope ilk="function" name="PolygonStipple" />
        <scope ilk="function" name="PopAttrib" />
        <scope ilk="function" name="PopClientAttrib" />
        <scope ilk="function" name="PopMatrix" />
        <scope ilk="function" name="PopName" />
        <scope ilk="function" name="PushAttrib" />
        <scope ilk="function" name="PushClientAttrib" />
        <scope ilk="function" name="PushMatrix" />
        <scope ilk="function" name="PushName" />
        <scope ilk="function" name="RasterPos" />
        <scope ilk="function" name="RasterPos2d" />
        <scope ilk="function" name="RasterPos2i" />
        <scope ilk="function" name="RasterPos3d" />
        <scope ilk="function" name="RasterPos3i" />
        <scope ilk="function" name="RasterPos4d" />
        <scope ilk="function" name="RasterPos4i" />
        <scope ilk="function" name="ReadBuffer" />
        <scope ilk="function" name="ReadPixels" />
        <scope ilk="function" name="Rect" />
        <scope ilk="function" name="Rectd" />
        <scope ilk="function" name="Recti" />
        <scope ilk="function" name="RenderMode" />
        <scope ilk="function" name="Rotate" />
        <scope ilk="function" name="Rotated" />
        <scope ilk="function" name="Scale" />
        <scope ilk="function" name="Scaled" />
        <scope ilk="function" name="Scissor" />
        <scope ilk="function" name="SelectBuffer" />
        <scope ilk="function" name="ShadeModel" />
        <scope ilk="function" name="StencilFunc" />
        <scope ilk="function" name="StencilMask" />
        <scope ilk="function" name="StencilOp" />
        <scope ilk="function" name="TexCoord" />
        <scope ilk="function" name="TexCoord1d" />
        <scope ilk="function" name="TexCoord1f" />
        <scope ilk="function" name="TexCoord1i" />
        <scope ilk="function" name="TexCoord1s" />
        <scope ilk="function" name="TexCoord2d" />
        <scope ilk="function" name="TexCoord2f" />
        <scope ilk="function" name="TexCoord2i" />
        <scope ilk="function" name="TexCoord2s" />
        <scope ilk="function" name="TexCoord3d" />
        <scope ilk="function" name="TexCoord3f" />
        <scope ilk="function" name="TexCoord3i" />
        <scope ilk="function" name="TexCoord3s" />
        <scope ilk="function" name="TexCoord4d" />
        <scope ilk="function" name="TexCoord4f" />
        <scope ilk="function" name="TexCoord4i" />
        <scope ilk="function" name="TexCoord4s" />
        <scope ilk="function" name="TexCoordPointer" />
        <scope ilk="function" name="TexEnv" />
        <scope ilk="function" name="TexEnvf" />
        <scope ilk="function" name="TexEnvi" />
        <scope ilk="function" name="TexGen" />
        <scope ilk="function" name="TexGend" />
        <scope ilk="function" name="TexGeni" />
        <scope ilk="function" name="TexImage2D" />
        <scope ilk="function" name="TexParameter" />
        <scope ilk="function" name="TexParameterf" />
        <scope ilk="function" name="TexParameteri" />
        <scope ilk="function" name="TexSubImage2D" />
        <scope ilk="function" name="Translate" />
        <scope ilk="function" name="Translated" />
        <scope ilk="function" name="Vertex" />
        <scope ilk="function" name="Vertex2d" />
        <scope ilk="function" name="Vertex2f" />
        <scope ilk="function" name="Vertex2i" />
        <scope ilk="function" name="Vertex3d" />
        <scope ilk="function" name="Vertex3f" />
        <scope ilk="function" name="Vertex3i" />
        <scope ilk="function" name="Vertex4d" />
        <scope ilk="function" name="Vertex4f" />
        <scope ilk="function" name="Vertex4i" />
        <scope ilk="function" name="VertexPointer" />
        <scope ilk="function" name="Viewport" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="to_s" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM_ALPHA_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM_BLUE_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM_BUFFER_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM_CLEAR_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM_GREEN_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ACCUM_RED_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ADD" />
        <variable attributes="__const__" citdl="Fixnum" name="ALL_ATTRIB_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ALL_CLIENT_ATTRIB_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA12" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA16" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA4" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA8" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA_BIAS" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA_SCALE" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA_TEST" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA_TEST_FUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="ALPHA_TEST_REF" />
        <variable attributes="__const__" citdl="Fixnum" name="ALWAYS" />
        <variable attributes="__const__" citdl="Fixnum" name="AMBIENT" />
        <variable attributes="__const__" citdl="Fixnum" name="AMBIENT_AND_DIFFUSE" />
        <variable attributes="__const__" citdl="Fixnum" name="AND" />
        <variable attributes="__const__" citdl="Fixnum" name="AND_INVERTED" />
        <variable attributes="__const__" citdl="Fixnum" name="AND_REVERSE" />
        <variable attributes="__const__" citdl="Fixnum" name="ATTRIB_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="AUTO_NORMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="AUX0" />
        <variable attributes="__const__" citdl="Fixnum" name="AUX1" />
        <variable attributes="__const__" citdl="Fixnum" name="AUX2" />
        <variable attributes="__const__" citdl="Fixnum" name="AUX3" />
        <variable attributes="__const__" citdl="Fixnum" name="AUX_BUFFERS" />
        <variable attributes="__const__" citdl="Fixnum" name="BACK" />
        <variable attributes="__const__" citdl="Fixnum" name="BACK_LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="BACK_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="BITMAP" />
        <variable attributes="__const__" citdl="Fixnum" name="BITMAP_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="BLEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BLEND_DST" />
        <variable attributes="__const__" citdl="Fixnum" name="BLEND_SRC" />
        <variable attributes="__const__" citdl="Fixnum" name="BLUE" />
        <variable attributes="__const__" citdl="Fixnum" name="BLUE_BIAS" />
        <variable attributes="__const__" citdl="Fixnum" name="BLUE_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="BLUE_SCALE" />
        <variable attributes="__const__" citdl="Fixnum" name="BYTE" />
        <variable attributes="__const__" citdl="Fixnum" name="C3F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="C4F_N3F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="C4UB_V2F" />
        <variable attributes="__const__" citdl="Fixnum" name="C4UB_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="CCW" />
        <variable attributes="__const__" citdl="Fixnum" name="CLAMP" />
        <variable attributes="__const__" citdl="Fixnum" name="CLEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIENT_ATTRIB_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIENT_PIXEL_STORE_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIENT_VERTEX_ARRAY_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIP_PLANE0" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIP_PLANE1" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIP_PLANE2" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIP_PLANE3" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIP_PLANE4" />
        <variable attributes="__const__" citdl="Fixnum" name="CLIP_PLANE5" />
        <variable attributes="__const__" citdl="Fixnum" name="COEFF" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_ARRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_ARRAY_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_ARRAY_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_ARRAY_STRIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_ARRAY_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_BUFFER_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_CLEAR_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_INDEXES" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_LOGIC_OP" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_MATERIAL" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_MATERIAL_FACE" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_MATERIAL_PARAMETER" />
        <variable attributes="__const__" citdl="Fixnum" name="COLOR_WRITEMASK" />
        <variable attributes="__const__" citdl="Fixnum" name="COMPILE" />
        <variable attributes="__const__" citdl="Fixnum" name="COMPILE_AND_EXECUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="CONSTANT_ATTENUATION" />
        <variable attributes="__const__" citdl="Fixnum" name="COPY" />
        <variable attributes="__const__" citdl="Fixnum" name="COPY_INVERTED" />
        <variable attributes="__const__" citdl="Fixnum" name="COPY_PIXEL_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="CULL_FACE" />
        <variable attributes="__const__" citdl="Fixnum" name="CULL_FACE_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_NORMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_RASTER_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_RASTER_DISTANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_RASTER_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_RASTER_POSITION" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_RASTER_POSITION_VALID" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_RASTER_TEXTURE_COORDS" />
        <variable attributes="__const__" citdl="Fixnum" name="CURRENT_TEXTURE_COORDS" />
        <variable attributes="__const__" citdl="Fixnum" name="CW" />
        <variable attributes="__const__" citdl="Fixnum" name="DECAL" />
        <variable attributes="__const__" citdl="Fixnum" name="DECR" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_BIAS" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_BUFFER_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_CLEAR_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_COMPONENT" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_FUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_RANGE" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_SCALE" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_TEST" />
        <variable attributes="__const__" citdl="Fixnum" name="DEPTH_WRITEMASK" />
        <variable attributes="__const__" citdl="Fixnum" name="DIFFUSE" />
        <variable attributes="__const__" citdl="Fixnum" name="DITHER" />
        <variable attributes="__const__" citdl="Fixnum" name="DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="DONT_CARE" />
        <variable attributes="__const__" citdl="Fixnum" name="DOUBLE" />
        <variable attributes="__const__" citdl="Fixnum" name="DOUBLEBUFFER" />
        <variable attributes="__const__" citdl="Fixnum" name="DRAW_BUFFER" />
        <variable attributes="__const__" citdl="Fixnum" name="DRAW_PIXEL_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="DST_ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="DST_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="EDGE_FLAG" />
        <variable attributes="__const__" citdl="Fixnum" name="EDGE_FLAG_ARRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="EDGE_FLAG_ARRAY_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="EDGE_FLAG_ARRAY_STRIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="EMISSION" />
        <variable attributes="__const__" citdl="Fixnum" name="ENABLE_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="EQUAL" />
        <variable attributes="__const__" citdl="Fixnum" name="EQUIV" />
        <variable attributes="__const__" citdl="Fixnum" name="EVAL_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXP" />
        <variable attributes="__const__" citdl="Fixnum" name="EXP2" />
        <variable attributes="__const__" citdl="Fixnum" name="EXTENSIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="EYE_LINEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="EYE_PLANE" />
        <variable attributes="__const__" citdl="Fixnum" name="FALSE" />
        <variable attributes="__const__" citdl="Fixnum" name="FASTEST" />
        <variable attributes="__const__" citdl="Fixnum" name="FEEDBACK" />
        <variable attributes="__const__" citdl="Fixnum" name="FEEDBACK_BUFFER_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="FEEDBACK_BUFFER_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="FEEDBACK_BUFFER_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FILL" />
        <variable attributes="__const__" citdl="Fixnum" name="FLAT" />
        <variable attributes="__const__" citdl="Fixnum" name="FLOAT" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_DENSITY" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_END" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_HINT" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="FOG_START" />
        <variable attributes="__const__" citdl="Fixnum" name="FRONT" />
        <variable attributes="__const__" citdl="Fixnum" name="FRONT_AND_BACK" />
        <variable attributes="__const__" citdl="Fixnum" name="FRONT_FACE" />
        <variable attributes="__const__" citdl="Fixnum" name="FRONT_LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="FRONT_RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="GEQUAL" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_2D" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_2_BYTES" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_3D" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_3D_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_3D_COLOR_TEXTURE" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_3_BYTES" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_4D_COLOR_TEXTURE" />
        <variable attributes="__const__" citdl="Fixnum" name="GL_4_BYTES" />
        <variable attributes="__const__" citdl="Fixnum" name="GREATER" />
        <variable attributes="__const__" citdl="Fixnum" name="GREEN" />
        <variable attributes="__const__" citdl="Fixnum" name="GREEN_BIAS" />
        <variable attributes="__const__" citdl="Fixnum" name="GREEN_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="GREEN_SCALE" />
        <variable attributes="__const__" citdl="Fixnum" name="HINT_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="INCR" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_ARRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_ARRAY_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_ARRAY_STRIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_ARRAY_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_CLEAR_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_LOGIC_OP" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_OFFSET" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_SHIFT" />
        <variable attributes="__const__" citdl="Fixnum" name="INDEX_WRITEMASK" />
        <variable attributes="__const__" citdl="Fixnum" name="INT" />
        <variable attributes="__const__" citdl="Fixnum" name="INTENSITY" />
        <variable attributes="__const__" citdl="Fixnum" name="INTENSITY12" />
        <variable attributes="__const__" citdl="Fixnum" name="INTENSITY16" />
        <variable attributes="__const__" citdl="Fixnum" name="INTENSITY4" />
        <variable attributes="__const__" citdl="Fixnum" name="INTENSITY8" />
        <variable attributes="__const__" citdl="Fixnum" name="INVALID_ENUM" />
        <variable attributes="__const__" citdl="Fixnum" name="INVALID_OPERATION" />
        <variable attributes="__const__" citdl="Fixnum" name="INVALID_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="INVERT" />
        <variable attributes="__const__" citdl="Fixnum" name="KEEP" />
        <variable attributes="__const__" citdl="Fixnum" name="LEFT" />
        <variable attributes="__const__" citdl="Fixnum" name="LEQUAL" />
        <variable attributes="__const__" citdl="Fixnum" name="LESS" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT0" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT1" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT2" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT3" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT4" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT5" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT6" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT7" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHTING" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHTING_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT_MODEL_AMBIENT" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT_MODEL_LOCAL_VIEWER" />
        <variable attributes="__const__" citdl="Fixnum" name="LIGHT_MODEL_TWO_SIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE" />
        <variable attributes="__const__" citdl="Fixnum" name="LINEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="LINEAR_ATTENUATION" />
        <variable attributes="__const__" citdl="Fixnum" name="LINEAR_MIPMAP_LINEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="LINEAR_MIPMAP_NEAREST" />
        <variable attributes="__const__" citdl="Fixnum" name="LINES" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_LOOP" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_RESET_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_SMOOTH" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_SMOOTH_HINT" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_STIPPLE" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_STIPPLE_PATTERN" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_STIPPLE_REPEAT" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_STRIP" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_WIDTH" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_WIDTH_GRANULARITY" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE_WIDTH_RANGE" />
        <variable attributes="__const__" citdl="Fixnum" name="LIST_BASE" />
        <variable attributes="__const__" citdl="Fixnum" name="LIST_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="LIST_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="LIST_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="LOAD" />
        <variable attributes="__const__" citdl="Fixnum" name="LOGIC_OP" />
        <variable attributes="__const__" citdl="Fixnum" name="LOGIC_OP_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE12" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE12_ALPHA12" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE12_ALPHA4" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE16" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE16_ALPHA16" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE4" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE4_ALPHA4" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE6_ALPHA2" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE8" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE8_ALPHA8" />
        <variable attributes="__const__" citdl="Fixnum" name="LUMINANCE_ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_COLOR_4" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_GRID_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_GRID_SEGMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_NORMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_TEXTURE_COORD_1" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_TEXTURE_COORD_2" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_TEXTURE_COORD_3" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_TEXTURE_COORD_4" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_VERTEX_3" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_VERTEX_4" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_COLOR_4" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_GRID_DOMAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_GRID_SEGMENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_NORMAL" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_TEXTURE_COORD_1" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_TEXTURE_COORD_2" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_TEXTURE_COORD_3" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_TEXTURE_COORD_4" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_VERTEX_3" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP2_VERTEX_4" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP_STENCIL" />
        <variable attributes="__const__" citdl="Fixnum" name="MATRIX_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_ATTRIB_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_CLIP_PLANES" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_EVAL_ORDER" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_LIGHTS" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_LIST_NESTING" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_MODELVIEW_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_NAME_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_PIXEL_MAP_TABLE" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_PROJECTION_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_TEXTURE_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_TEXTURE_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_VIEWPORT_DIMS" />
        <variable attributes="__const__" citdl="Fixnum" name="MODELVIEW" />
        <variable attributes="__const__" citdl="Fixnum" name="MODELVIEW_MATRIX" />
        <variable attributes="__const__" citdl="Fixnum" name="MODELVIEW_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="MODULATE" />
        <variable attributes="__const__" citdl="Fixnum" name="MULT" />
        <variable attributes="__const__" citdl="Fixnum" name="N3F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="NAME_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="NAND" />
        <variable attributes="__const__" citdl="Fixnum" name="NEAREST" />
        <variable attributes="__const__" citdl="Fixnum" name="NEAREST_MIPMAP_LINEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="NEAREST_MIPMAP_NEAREST" />
        <variable attributes="__const__" citdl="Fixnum" name="NEVER" />
        <variable attributes="__const__" citdl="Fixnum" name="NICEST" />
        <variable attributes="__const__" citdl="Fixnum" name="NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="NOOP" />
        <variable attributes="__const__" citdl="Fixnum" name="NOR" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMALIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMAL_ARRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMAL_ARRAY_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMAL_ARRAY_STRIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="NORMAL_ARRAY_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="NOTEQUAL" />
        <variable attributes="__const__" citdl="Fixnum" name="OBJECT_LINEAR" />
        <variable attributes="__const__" citdl="Fixnum" name="OBJECT_PLANE" />
        <variable attributes="__const__" citdl="Fixnum" name="ONE" />
        <variable attributes="__const__" citdl="Fixnum" name="ONE_MINUS_DST_ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="ONE_MINUS_DST_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="ONE_MINUS_SRC_ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="ONE_MINUS_SRC_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="OR" />
        <variable attributes="__const__" citdl="Fixnum" name="ORDER" />
        <variable attributes="__const__" citdl="Fixnum" name="OR_INVERTED" />
        <variable attributes="__const__" citdl="Fixnum" name="OR_REVERSE" />
        <variable attributes="__const__" citdl="Fixnum" name="OUT_OF_MEMORY" />
        <variable attributes="__const__" citdl="Fixnum" name="PACK_ALIGNMENT" />
        <variable attributes="__const__" citdl="Fixnum" name="PACK_LSB_FIRST" />
        <variable attributes="__const__" citdl="Fixnum" name="PACK_ROW_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="PACK_SKIP_PIXELS" />
        <variable attributes="__const__" citdl="Fixnum" name="PACK_SKIP_ROWS" />
        <variable attributes="__const__" citdl="Fixnum" name="PACK_SWAP_BYTES" />
        <variable attributes="__const__" citdl="Fixnum" name="PASS_THROUGH_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="PERSPECTIVE_CORRECTION_HINT" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_A_TO_A" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_A_TO_A_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_B_TO_B" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_B_TO_B_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_G_TO_G" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_G_TO_G_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_A" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_A_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_B" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_B_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_G" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_G_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_I" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_I_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_R" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_I_TO_R_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_R_TO_R" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_R_TO_R_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_S_TO_S" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MAP_S_TO_S_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="PIXEL_MODE_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT" />
        <variable attributes="__const__" citdl="Fixnum" name="POINTS" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_SIZE_GRANULARITY" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_SIZE_RANGE" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_SMOOTH" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_SMOOTH_HINT" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_OFFSET_FACTOR" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_OFFSET_FILL" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_OFFSET_LINE" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_OFFSET_POINT" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_OFFSET_UNITS" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_SMOOTH" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_SMOOTH_HINT" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_STIPPLE" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_STIPPLE_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="POLYGON_TOKEN" />
        <variable attributes="__const__" citdl="Fixnum" name="POSITION" />
        <variable attributes="__const__" citdl="Fixnum" name="PROJECTION" />
        <variable attributes="__const__" citdl="Fixnum" name="PROJECTION_MATRIX" />
        <variable attributes="__const__" citdl="Fixnum" name="PROJECTION_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="PROXY_TEXTURE_1D" />
        <variable attributes="__const__" citdl="Fixnum" name="PROXY_TEXTURE_2D" />
        <variable attributes="__const__" citdl="Fixnum" name="Q" />
        <variable attributes="__const__" citdl="Fixnum" name="QUADRATIC_ATTENUATION" />
        <variable attributes="__const__" citdl="Fixnum" name="QUADS" />
        <variable attributes="__const__" citdl="Fixnum" name="QUAD_STRIP" />
        <variable attributes="__const__" citdl="Fixnum" name="R" />
        <variable attributes="__const__" citdl="Fixnum" name="R3_G3_B2" />
        <variable attributes="__const__" citdl="Fixnum" name="READ_BUFFER" />
        <variable attributes="__const__" citdl="Fixnum" name="RED" />
        <variable attributes="__const__" citdl="Fixnum" name="RED_BIAS" />
        <variable attributes="__const__" citdl="Fixnum" name="RED_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="RED_SCALE" />
        <variable attributes="__const__" citdl="Fixnum" name="RENDER" />
        <variable attributes="__const__" citdl="Fixnum" name="RENDERER" />
        <variable attributes="__const__" citdl="Fixnum" name="RENDER_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="REPEAT" />
        <variable attributes="__const__" citdl="Fixnum" name="REPLACE" />
        <variable attributes="__const__" citdl="Fixnum" name="RETURN" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB10" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB10_A2" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB12" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB16" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB4" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB5" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB5_A1" />
        <variable attributes="__const__" citdl="Fixnum" name="RGB8" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA12" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA16" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA2" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA4" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA8" />
        <variable attributes="__const__" citdl="Fixnum" name="RGBA_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="RIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="S" />
        <variable attributes="__const__" citdl="Fixnum" name="SCISSOR_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="SCISSOR_BOX" />
        <variable attributes="__const__" citdl="Fixnum" name="SCISSOR_TEST" />
        <variable attributes="__const__" citdl="Fixnum" name="SELECT" />
        <variable attributes="__const__" citdl="Fixnum" name="SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SHADE_MODEL" />
        <variable attributes="__const__" citdl="Fixnum" name="SHININESS" />
        <variable attributes="__const__" citdl="Fixnum" name="SHORT" />
        <variable attributes="__const__" citdl="Fixnum" name="SMOOTH" />
        <variable attributes="__const__" citdl="Fixnum" name="SPECULAR" />
        <variable attributes="__const__" citdl="Fixnum" name="SPHERE_MAP" />
        <variable attributes="__const__" citdl="Fixnum" name="SPOT_CUTOFF" />
        <variable attributes="__const__" citdl="Fixnum" name="SPOT_DIRECTION" />
        <variable attributes="__const__" citdl="Fixnum" name="SPOT_EXPONENT" />
        <variable attributes="__const__" citdl="Fixnum" name="SRC_ALPHA" />
        <variable attributes="__const__" citdl="Fixnum" name="SRC_ALPHA_SATURATE" />
        <variable attributes="__const__" citdl="Fixnum" name="SRC_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="STACK_OVERFLOW" />
        <variable attributes="__const__" citdl="Fixnum" name="STACK_UNDERFLOW" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_BUFFER_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_CLEAR_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_FAIL" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_FUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_INDEX" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_PASS_DEPTH_FAIL" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_PASS_DEPTH_PASS" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_REF" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_TEST" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_VALUE_MASK" />
        <variable attributes="__const__" citdl="Fixnum" name="STENCIL_WRITEMASK" />
        <variable attributes="__const__" citdl="Fixnum" name="STEREO" />
        <variable attributes="__const__" citdl="Fixnum" name="SUBPIXEL_BITS" />
        <variable attributes="__const__" citdl="Fixnum" name="T" />
        <variable attributes="__const__" citdl="Fixnum" name="T2F_C3F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="T2F_C4F_N3F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="T2F_C4UB_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="T2F_N3F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="T2F_V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="T4F_C4F_N3F_V4F" />
        <variable attributes="__const__" citdl="Fixnum" name="T4F_V4F" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_1D" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_2D" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_ALPHA_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_BINDING_1D" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_BINDING_2D" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_BLUE_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_BORDER" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_BORDER_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_COMPONENTS" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_COORD_ARRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_COORD_ARRAY_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_COORD_ARRAY_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_COORD_ARRAY_STRIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_COORD_ARRAY_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_ENV" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_ENV_COLOR" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_ENV_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_GEN_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_GEN_Q" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_GEN_R" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_GEN_S" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_GEN_T" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_GREEN_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_HEIGHT" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_INTENSITY_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_INTERNAL_FORMAT" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_LUMINANCE_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_MAG_FILTER" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_MATRIX" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_MIN_FILTER" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_PRIORITY" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_RED_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_RESIDENT" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_STACK_DEPTH" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_WIDTH" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_WRAP_S" />
        <variable attributes="__const__" citdl="Fixnum" name="TEXTURE_WRAP_T" />
        <variable attributes="__const__" citdl="Fixnum" name="TRANSFORM_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="TRIANGLES" />
        <variable attributes="__const__" citdl="Fixnum" name="TRIANGLE_FAN" />
        <variable attributes="__const__" citdl="Fixnum" name="TRIANGLE_STRIP" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUE" />
        <variable attributes="__const__" citdl="Fixnum" name="UNPACK_ALIGNMENT" />
        <variable attributes="__const__" citdl="Fixnum" name="UNPACK_LSB_FIRST" />
        <variable attributes="__const__" citdl="Fixnum" name="UNPACK_ROW_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="UNPACK_SKIP_PIXELS" />
        <variable attributes="__const__" citdl="Fixnum" name="UNPACK_SKIP_ROWS" />
        <variable attributes="__const__" citdl="Fixnum" name="UNPACK_SWAP_BYTES" />
        <variable attributes="__const__" citdl="Fixnum" name="UNSIGNED_BYTE" />
        <variable attributes="__const__" citdl="Fixnum" name="UNSIGNED_INT" />
        <variable attributes="__const__" citdl="Fixnum" name="UNSIGNED_SHORT" />
        <variable attributes="__const__" citdl="Fixnum" name="V2F" />
        <variable attributes="__const__" citdl="Fixnum" name="V3F" />
        <variable attributes="__const__" citdl="Fixnum" name="VENDOR" />
        <variable attributes="__const__" citdl="Fixnum" name="VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="VERTEX_ARRAY" />
        <variable attributes="__const__" citdl="Fixnum" name="VERTEX_ARRAY_POINTER" />
        <variable attributes="__const__" citdl="Fixnum" name="VERTEX_ARRAY_SIZE" />
        <variable attributes="__const__" citdl="Fixnum" name="VERTEX_ARRAY_STRIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="VERTEX_ARRAY_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="VIEWPORT" />
        <variable attributes="__const__" citdl="Fixnum" name="VIEWPORT_BIT" />
        <variable attributes="__const__" citdl="Fixnum" name="XOR" />
        <variable attributes="__const__" citdl="Fixnum" name="ZERO" />
        <variable attributes="__const__" citdl="Fixnum" name="ZOOM_X" />
        <variable attributes="__const__" citdl="Fixnum" name="ZOOM_Y" />
      </scope>
      <scope ilk="namespace" name="GLU">
        <scope attributes="__classmethod__" ilk="function" name="BeginCurve" />
        <scope attributes="__classmethod__" ilk="function" name="BeginPolygon" />
        <scope attributes="__classmethod__" ilk="function" name="BeginSurface" />
        <scope attributes="__classmethod__" ilk="function" name="BeginTrim" />
        <scope attributes="__classmethod__" ilk="function" name="Build2DMipmaps" />
        <scope attributes="__classmethod__" ilk="function" name="Cylinder" />
        <scope attributes="__classmethod__" ilk="function" name="DeleteNurbsRenderer" />
        <scope attributes="__classmethod__" ilk="function" name="DeleteQuadric" />
        <scope attributes="__classmethod__" ilk="function" name="DeleteTess" />
        <scope attributes="__classmethod__" ilk="function" name="Disk" />
        <scope attributes="__classmethod__" ilk="function" name="EndCurve" />
        <scope attributes="__classmethod__" ilk="function" name="EndPolygon" />
        <scope attributes="__classmethod__" ilk="function" name="EndSurface" />
        <scope attributes="__classmethod__" ilk="function" name="EndTrim" />
        <scope attributes="__classmethod__" ilk="function" name="ErrorString" />
        <scope attributes="__classmethod__" ilk="function" name="GetNurbsProperty" />
        <scope attributes="__classmethod__" ilk="function" name="GetString" />
        <scope attributes="__classmethod__" ilk="function" name="GetTessProperty" />
        <scope attributes="__classmethod__" ilk="function" name="LookAt" />
        <scope attributes="__classmethod__" ilk="function" name="NewNurbsRenderer" />
        <scope attributes="__classmethod__" ilk="function" name="NewQuadric" />
        <scope attributes="__classmethod__" ilk="function" name="NewTess" />
        <scope attributes="__classmethod__" ilk="function" name="NextContour" />
        <scope attributes="__classmethod__" ilk="function" name="NurbsCurve" />
        <scope attributes="__classmethod__" ilk="function" name="NurbsProperty" />
        <scope attributes="__classmethod__" ilk="function" name="NurbsSurface" />
        <scope attributes="__classmethod__" ilk="function" name="Ortho2D" />
        <scope attributes="__classmethod__" ilk="function" name="PartialDisk" />
        <scope attributes="__classmethod__" ilk="function" name="Perspective" />
        <scope attributes="__classmethod__" ilk="function" name="PickMatrix" />
        <scope attributes="__classmethod__" ilk="function" name="Project" />
        <scope attributes="__classmethod__" ilk="function" name="PwlCurve" />
        <scope attributes="__classmethod__" ilk="function" name="QuadricDrawStyle" />
        <scope attributes="__classmethod__" ilk="function" name="QuadricNormals" />
        <scope attributes="__classmethod__" ilk="function" name="QuadricOrientation" />
        <scope attributes="__classmethod__" ilk="function" name="QuadricTexture" />
        <scope attributes="__classmethod__" ilk="function" name="ScaleImage" />
        <scope attributes="__classmethod__" ilk="function" name="Sphere" />
        <scope attributes="__classmethod__" ilk="function" name="TessBeginContour" />
        <scope attributes="__classmethod__" ilk="function" name="TessBeginPolygon" />
        <scope attributes="__classmethod__" ilk="function" name="TessCallback" />
        <scope attributes="__classmethod__" ilk="function" name="TessEndContour" />
        <scope attributes="__classmethod__" ilk="function" name="TessEndPolygon" />
        <scope attributes="__classmethod__" ilk="function" name="TessNormal" />
        <scope attributes="__classmethod__" ilk="function" name="TessProperty" />
        <scope attributes="__classmethod__" ilk="function" name="TessVertex" />
        <scope attributes="__classmethod__" ilk="function" name="UnProject" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="BeginCurve" />
        <scope ilk="function" name="BeginPolygon" />
        <scope ilk="function" name="BeginSurface" />
        <scope ilk="function" name="BeginTrim" />
        <scope ilk="function" name="Build2DMipmaps" />
        <scope ilk="function" name="Cylinder" />
        <scope ilk="function" name="DeleteNurbsRenderer" />
        <scope ilk="function" name="DeleteQuadric" />
        <scope ilk="function" name="DeleteTess" />
        <scope ilk="function" name="Disk" />
        <scope ilk="function" name="EndCurve" />
        <scope ilk="function" name="EndPolygon" />
        <scope ilk="function" name="EndSurface" />
        <scope ilk="function" name="EndTrim" />
        <scope ilk="function" name="ErrorString" />
        <scope ilk="function" name="GetNurbsProperty" />
        <scope ilk="function" name="GetString" />
        <scope ilk="function" name="GetTessProperty" />
        <scope ilk="function" name="LookAt" />
        <scope ilk="function" name="NewNurbsRenderer" />
        <scope ilk="function" name="NewQuadric" />
        <scope ilk="function" name="NewTess" />
        <scope ilk="function" name="NextContour" />
        <scope ilk="function" name="NurbsCurve" />
        <scope ilk="function" name="NurbsProperty" />
        <scope ilk="function" name="NurbsSurface" />
        <scope ilk="function" name="Ortho2D" />
        <scope ilk="function" name="PartialDisk" />
        <scope ilk="function" name="Perspective" />
        <scope ilk="function" name="PickMatrix" />
        <scope ilk="function" name="Project" />
        <scope ilk="function" name="PwlCurve" />
        <scope ilk="function" name="QuadricDrawStyle" />
        <scope ilk="function" name="QuadricNormals" />
        <scope ilk="function" name="QuadricOrientation" />
        <scope ilk="function" name="QuadricTexture" />
        <scope ilk="function" name="ScaleImage" />
        <scope ilk="function" name="Sphere" />
        <scope ilk="function" name="TessBeginContour" />
        <scope ilk="function" name="TessBeginPolygon" />
        <scope ilk="function" name="TessCallback" />
        <scope ilk="function" name="TessEndContour" />
        <scope ilk="function" name="TessEndPolygon" />
        <scope ilk="function" name="TessNormal" />
        <scope ilk="function" name="TessProperty" />
        <scope ilk="function" name="TessVertex" />
        <scope ilk="function" name="UnProject" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="to_s" />
        <variable attributes="__const__" citdl="Fixnum" name="AUTO_LOAD_MATRIX" />
        <variable attributes="__const__" citdl="Fixnum" name="CCW" />
        <variable attributes="__const__" citdl="Fixnum" name="CULLING" />
        <variable attributes="__const__" citdl="Fixnum" name="CW" />
        <variable attributes="__const__" citdl="Fixnum" name="DISPLAY_MODE" />
        <variable attributes="__const__" citdl="Fixnum" name="DOMAIN_DISTANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="EDGE_FLAG" />
        <variable attributes="__const__" citdl="Fixnum" name="ERROR" />
        <variable attributes="__const__" citdl="Fixnum" name="EXTENSIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="EXTERIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="FILL" />
        <variable attributes="__const__" citdl="Fixnum" name="FLAT" />
        <variable attributes="__const__" citdl="Fixnum" name="INCOMPATIBLE_GL_VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="INSIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="INTERIOR" />
        <variable attributes="__const__" citdl="Fixnum" name="INVALID_ENUM" />
        <variable attributes="__const__" citdl="Fixnum" name="INVALID_VALUE" />
        <variable attributes="__const__" citdl="Fixnum" name="LINE" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_TRIM_2" />
        <variable attributes="__const__" citdl="Fixnum" name="MAP1_TRIM_3" />
        <variable attributes="__const__" citdl="Fixnum" name="NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR1" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR10" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR11" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR12" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR13" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR14" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR15" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR16" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR17" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR18" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR19" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR2" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR20" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR21" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR22" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR23" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR24" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR25" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR26" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR27" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR28" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR29" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR3" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR30" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR31" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR32" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR33" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR34" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR35" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR36" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR37" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR4" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR5" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR6" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR7" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR8" />
        <variable attributes="__const__" citdl="Fixnum" name="NURBS_ERROR9" />
        <variable attributes="__const__" citdl="Fixnum" name="OUTLINE_PATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="OUTLINE_POLYGON" />
        <variable attributes="__const__" citdl="Fixnum" name="OUTSIDE" />
        <variable attributes="__const__" citdl="Fixnum" name="OUT_OF_MEMORY" />
        <variable attributes="__const__" citdl="Fixnum" name="PARAMETRIC_ERROR" />
        <variable attributes="__const__" citdl="Fixnum" name="PATH_LENGTH" />
        <variable attributes="__const__" citdl="Fixnum" name="POINT" />
        <variable attributes="__const__" citdl="Fixnum" name="SAMPLING_METHOD" />
        <variable attributes="__const__" citdl="Fixnum" name="SAMPLING_TOLERANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="SILHOUETTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SMOOTH" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_BEGIN" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_BEGIN_DATA" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_BOUNDARY_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_COMBINE" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_COMBINE_DATA" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_EDGE_FLAG" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_EDGE_FLAG_DATA" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_END" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_END_DATA" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR1" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR2" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR3" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR4" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR5" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR6" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR7" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR8" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_ERROR_DATA" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_TOLERANCE" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_VERTEX" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_VERTEX_DATA" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_WINDING_ABS_GEQ_TWO" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_WINDING_NEGATIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_WINDING_NONZERO" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_WINDING_ODD" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_WINDING_POSITIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="TESS_WINDING_RULE" />
        <variable attributes="__const__" citdl="Fixnum" name="UNKNOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="U_STEP" />
        <variable attributes="__const__" citdl="Fixnum" name="VERSION" />
        <variable attributes="__const__" citdl="Fixnum" name="VERTEX" />
        <variable attributes="__const__" citdl="Fixnum" name="V_STEP" />
      </scope>
      <scope classrefs="Object" ilk="class" name="Nurbs" />
      <scope classrefs="Object" ilk="class" name="Quadric" />
      <scope classrefs="Object" ilk="class" name="Tess" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl">
      <scope ilk="namespace" name="Buffering">
        <scope ilk="function" name="&lt;&lt;" />
        <scope ilk="function" name="all?" />
        <scope ilk="function" name="any?" />
        <scope ilk="function" name="close" />
        <scope ilk="function" name="collect" />
        <scope ilk="function" name="detect" />
        <scope ilk="function" name="each" />
        <scope ilk="function" name="each_byte" />
        <scope ilk="function" name="each_line" />
        <scope ilk="function" name="each_with_index" />
        <scope ilk="function" name="entries" />
        <scope ilk="function" name="eof" />
        <scope ilk="function" name="eof?" />
        <scope ilk="function" name="find" />
        <scope ilk="function" name="find_all" />
        <scope ilk="function" name="flush" />
        <scope ilk="function" name="getc" />
        <scope ilk="function" name="gets" />
        <scope ilk="function" name="grep" />
        <scope ilk="function" name="inject" />
        <scope ilk="function" name="map" />
        <scope ilk="function" name="max" />
        <scope ilk="function" name="member?" />
        <scope ilk="function" name="min" />
        <scope ilk="function" name="partition" />
        <scope ilk="function" name="print" />
        <scope ilk="function" name="printf" />
        <scope ilk="function" name="puts" />
        <scope ilk="function" name="read" />
        <scope ilk="function" name="readchar" />
        <scope ilk="function" name="readline" />
        <scope ilk="function" name="readlines" />
        <scope ilk="function" name="readpartial" />
        <scope ilk="function" name="reject" />
        <scope ilk="function" name="select" />
        <scope ilk="function" name="sort" />
        <scope ilk="function" name="sort_by" />
        <scope ilk="function" name="sync" />
        <scope ilk="function" name="sync=" />
        <scope ilk="function" name="ungetc" />
        <scope ilk="function" name="write" />
        <scope ilk="function" name="zip" />
        <variable attributes="__const__" citdl="Fixnum" name="BLOCK_SIZE" />
        <import symbol="Enumerable" />
      </scope>
      <scope ilk="namespace" name="Fcntl">
        <variable attributes="__const__" citdl="Fixnum" name="F_SETFL" />
        <variable attributes="__const__" citdl="Fixnum" name="O_ACCMODE" />
        <variable attributes="__const__" citdl="Fixnum" name="O_APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="O_CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="O_EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="O_NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="O_RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="O_RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="O_TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="O_WRONLY" />
      </scope>
      <scope ilk="namespace" name="OpenSSL">
        <scope ilk="namespace" name="ASN1">
          <scope classrefs="Object" ilk="class" name="ASN1Data">
            <scope ilk="function" name="tag" />
            <scope ilk="function" name="tag=" />
            <scope ilk="function" name="tag_class" />
            <scope ilk="function" name="tag_class=" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="value" />
            <scope ilk="function" name="value=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="ASN1Error" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="BitString">
            <scope ilk="function" name="unused_bits" />
            <scope ilk="function" name="unused_bits=" />
          </scope>
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="BMPString" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="Boolean" />
          <scope classrefs="OpenSSL::ASN1::ASN1Data" ilk="class" name="Constructive">
            <scope ilk="function" name="all?" />
            <scope ilk="function" name="any?" />
            <scope ilk="function" name="collect" />
            <scope ilk="function" name="detect" />
            <scope ilk="function" name="each" />
            <scope ilk="function" name="each_with_index" />
            <scope ilk="function" name="entries" />
            <scope ilk="function" name="find" />
            <scope ilk="function" name="find_all" />
            <scope ilk="function" name="grep" />
            <scope ilk="function" name="inject" />
            <scope ilk="function" name="map" />
            <scope ilk="function" name="max" />
            <scope ilk="function" name="member?" />
            <scope ilk="function" name="min" />
            <scope ilk="function" name="partition" />
            <scope ilk="function" name="reject" />
            <scope ilk="function" name="select" />
            <scope ilk="function" name="sort" />
            <scope ilk="function" name="sort_by" />
            <scope ilk="function" name="tagging" />
            <scope ilk="function" name="tagging=" />
            <scope ilk="function" name="zip" />
            <import symbol="Enumerable" />
          </scope>
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="Enumerated" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="GeneralizedTime" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="GeneralString" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="GraphicString" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="IA5String" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="Integer" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="ISO64String" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="Null" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="NumericString" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="ObjectId">
            <scope ilk="function" name="ln" />
            <scope ilk="function" name="long_name" />
            <scope ilk="function" name="oid" />
            <scope ilk="function" name="short_name" />
            <scope ilk="function" name="sn" />
          </scope>
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="OctetString" />
          <scope classrefs="OpenSSL::ASN1::ASN1Data" ilk="class" name="Primitive">
            <scope ilk="function" name="tagging" />
            <scope ilk="function" name="tagging=" />
          </scope>
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="PrintableString" />
          <scope classrefs="OpenSSL::ASN1::Constructive" ilk="class" name="Sequence">
            <import symbol="Enumerable" />
          </scope>
          <scope classrefs="OpenSSL::ASN1::Constructive" ilk="class" name="Set">
            <import symbol="Enumerable" />
          </scope>
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="T61String" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="UniversalString" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="UTCTime" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="UTF8String" />
          <scope classrefs="OpenSSL::ASN1::Primitive" ilk="class" name="VideotexString" />
          <scope ilk="function" name="BitString" />
          <scope ilk="function" name="BMPString" />
          <scope ilk="function" name="Boolean" />
          <scope ilk="function" name="decode" />
          <scope ilk="function" name="decode_all" />
          <scope ilk="function" name="Enumerated" />
          <scope ilk="function" name="GeneralizedTime" />
          <scope ilk="function" name="GeneralString" />
          <scope ilk="function" name="GraphicString" />
          <scope ilk="function" name="IA5String" />
          <scope ilk="function" name="Integer" />
          <scope ilk="function" name="ISO64String" />
          <scope ilk="function" name="Null" />
          <scope ilk="function" name="NumericString" />
          <scope ilk="function" name="ObjectId" />
          <scope ilk="function" name="OctetString" />
          <scope ilk="function" name="PrintableString" />
          <scope ilk="function" name="Sequence" />
          <scope ilk="function" name="Set" />
          <scope ilk="function" name="T61String" />
          <scope ilk="function" name="traverse" />
          <scope ilk="function" name="UniversalString" />
          <scope ilk="function" name="UTCTime" />
          <scope ilk="function" name="UTF8String" />
          <scope ilk="function" name="VideotexString" />
          <variable attributes="__const__" citdl="Fixnum" name="BIT_STRING" />
          <variable attributes="__const__" citdl="Fixnum" name="BMPSTRING" />
          <variable attributes="__const__" citdl="Fixnum" name="BOOLEAN" />
          <variable attributes="__const__" citdl="Fixnum" name="CHARACTER_STRING" />
          <variable attributes="__const__" citdl="Fixnum" name="EMBEDDED_PDV" />
          <variable attributes="__const__" citdl="Fixnum" name="ENUMERATED" />
          <variable attributes="__const__" citdl="Fixnum" name="EOC" />
          <variable attributes="__const__" citdl="Fixnum" name="EXTERNAL" />
          <variable attributes="__const__" citdl="Fixnum" name="GENERALIZEDTIME" />
          <variable attributes="__const__" citdl="Fixnum" name="GENERALSTRING" />
          <variable attributes="__const__" citdl="Fixnum" name="GRAPHICSTRING" />
          <variable attributes="__const__" citdl="Fixnum" name="IA5STRING" />
          <variable attributes="__const__" citdl="Fixnum" name="INTEGER" />
          <variable attributes="__const__" citdl="Fixnum" name="ISO64STRING" />
          <variable attributes="__const__" citdl="Fixnum" name="NULL" />
          <variable attributes="__const__" citdl="Fixnum" name="NUMERICSTRING" />
          <variable attributes="__const__" citdl="Fixnum" name="OBJECT" />
          <variable attributes="__const__" citdl="Fixnum" name="OBJECT_DESCRIPTOR" />
          <variable attributes="__const__" citdl="Fixnum" name="OCTET_STRING" />
          <variable attributes="__const__" citdl="Fixnum" name="PRINTABLESTRING" />
          <variable attributes="__const__" citdl="Fixnum" name="REAL" />
          <variable attributes="__const__" citdl="Fixnum" name="RELATIVE_OID" />
          <variable attributes="__const__" citdl="Fixnum" name="SEQUENCE" />
          <variable attributes="__const__" citdl="Fixnum" name="SET" />
          <variable attributes="__const__" citdl="Fixnum" name="T61STRING" />
          <variable attributes="__const__" citdl="Array" name="UNIVERSAL_TAG_NAME" />
          <variable attributes="__const__" citdl="Fixnum" name="UNIVERSALSTRING" />
          <variable attributes="__const__" citdl="Fixnum" name="UTCTIME" />
          <variable attributes="__const__" citdl="Fixnum" name="UTF8STRING" />
          <variable attributes="__const__" citdl="Fixnum" name="VIDEOTEXSTRING" />
        </scope>
        <scope ilk="namespace" name="Cipher">
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="AES" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="BF" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="CAST5" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="DES" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="IDEA" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="RC2" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="RC4" />
          <scope classrefs="OpenSSL::Cipher::Cipher" ilk="class" name="RC5" />
        </scope>
        <scope ilk="namespace" name="Digest">
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="DigestError" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="DSS" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="DSS1" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="MD2" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="MD4" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="MD5" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="MDC2" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="RIPEMD160" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="SHA" />
          <scope classrefs="OpenSSL::Digest::Digest" ilk="class" name="SHA1" />
        </scope>
        <scope ilk="namespace" name="Netscape">
          <scope classrefs="Object" ilk="class" name="SPKI">
            <scope ilk="function" name="challenge" />
            <scope ilk="function" name="challenge=" />
            <scope ilk="function" name="public_key" />
            <scope ilk="function" name="public_key=" />
            <scope ilk="function" name="sign" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
            <scope ilk="function" name="verify" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="SPKIError" />
        </scope>
        <scope ilk="namespace" name="OCSP">
          <scope classrefs="Object" ilk="class" name="BasicResponse">
            <scope ilk="function" name="add_nonce" />
            <scope ilk="function" name="add_status" />
            <scope ilk="function" name="copy_nonce" />
            <scope ilk="function" name="sign" />
            <scope ilk="function" name="status" />
            <scope ilk="function" name="verify" />
          </scope>
          <scope classrefs="Object" ilk="class" name="CertificateId">
            <scope ilk="function" name="cmp" />
            <scope ilk="function" name="cmp_issuer" />
            <scope ilk="function" name="serial" />
          </scope>
          <scope classrefs="Object" ilk="class" name="OCSPError" />
          <scope classrefs="Object" ilk="class" name="Request">
            <scope ilk="function" name="add_certid" />
            <scope ilk="function" name="add_nonce" />
            <scope ilk="function" name="certid" />
            <scope ilk="function" name="check_nonce" />
            <scope ilk="function" name="sign" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="verify" />
          </scope>
          <scope classrefs="Object" ilk="class" name="Response">
            <scope ilk="function" name="basic" />
            <scope ilk="function" name="status" />
            <scope ilk="function" name="status_string" />
            <scope ilk="function" name="to_der" />
          </scope>
          <variable attributes="__const__" citdl="Fixnum" name="NOCASIGN" />
          <variable attributes="__const__" citdl="Fixnum" name="NOCERTS" />
          <variable attributes="__const__" citdl="Fixnum" name="NOCHAIN" />
          <variable attributes="__const__" citdl="Fixnum" name="NOCHECKS" />
          <variable attributes="__const__" citdl="Fixnum" name="NODELEGATED" />
          <variable attributes="__const__" citdl="Fixnum" name="NOEXPLICIT" />
          <variable attributes="__const__" citdl="Fixnum" name="NOINTERN" />
          <variable attributes="__const__" citdl="Fixnum" name="NOSIGS" />
          <variable attributes="__const__" citdl="Fixnum" name="NOTIME" />
          <variable attributes="__const__" citdl="Fixnum" name="NOVERIFY" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPID_KEY" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPONSE_STATUS_INTERNALERROR" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPONSE_STATUS_MALFORMEDREQUEST" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPONSE_STATUS_SIGREQUIRED" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPONSE_STATUS_SUCCESSFUL" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPONSE_STATUS_TRYLATER" />
          <variable attributes="__const__" citdl="Fixnum" name="RESPONSE_STATUS_UNAUTHORIZED" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_AFFILIATIONCHANGED" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_CACOMPROMISE" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_CERTIFICATEHOLD" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_CESSATIONOFOPERATION" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_KEYCOMPROMISE" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_NOSTATUS" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_REMOVEFROMCRL" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_SUPERSEDED" />
          <variable attributes="__const__" citdl="Fixnum" name="REVOKED_STATUS_UNSPECIFIED" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUSTOTHER" />
          <variable attributes="__const__" citdl="Fixnum" name="V_CERTSTATUS_GOOD" />
          <variable attributes="__const__" citdl="Fixnum" name="V_CERTSTATUS_REVOKED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_CERTSTATUS_UNKNOWN" />
          <variable attributes="__const__" citdl="Fixnum" name="V_RESPID_KEY" />
          <variable attributes="__const__" citdl="Fixnum" name="V_RESPID_NAME" />
        </scope>
        <scope ilk="namespace" name="PKCS12">
          <scope classrefs="Object" ilk="class" name="PKCS12">
            <scope ilk="function" name="ca_certs" />
            <scope ilk="function" name="certificate" />
            <scope ilk="function" name="key" />
            <scope ilk="function" name="to_der" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="PKCS12Error" />
          <scope ilk="function" name="create" />
        </scope>
        <scope ilk="namespace" name="PKCS7">
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="PKCS7Error" />
          <scope classrefs="Object" ilk="class" name="RecipientInfo">
            <scope ilk="function" name="enc_key" />
            <scope ilk="function" name="issuer" />
            <scope ilk="function" name="serial" />
          </scope>
          <scope classrefs="Object" ilk="class" name="Signer">
            <scope ilk="function" name="issuer" />
            <scope ilk="function" name="name" />
            <scope ilk="function" name="serial" />
            <scope ilk="function" name="signed_time" />
          </scope>
          <scope classrefs="Object" ilk="class" name="SignerInfo">
            <scope ilk="function" name="issuer" />
            <scope ilk="function" name="name" />
            <scope ilk="function" name="serial" />
            <scope ilk="function" name="signed_time" />
          </scope>
          <scope ilk="function" name="encrypt" />
          <scope ilk="function" name="read_smime" />
          <scope ilk="function" name="sign" />
          <scope ilk="function" name="write_smime" />
          <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
          <variable attributes="__const__" citdl="Fixnum" name="DETACHED" />
          <variable attributes="__const__" citdl="Fixnum" name="NOATTR" />
          <variable attributes="__const__" citdl="Fixnum" name="NOCERTS" />
          <variable attributes="__const__" citdl="Fixnum" name="NOCHAIN" />
          <variable attributes="__const__" citdl="Fixnum" name="NOINTERN" />
          <variable attributes="__const__" citdl="Fixnum" name="NOSIGS" />
          <variable attributes="__const__" citdl="Fixnum" name="NOSMIMECAP" />
          <variable attributes="__const__" citdl="Fixnum" name="NOVERIFY" />
          <variable attributes="__const__" citdl="Fixnum" name="TEXT" />
        </scope>
        <scope ilk="namespace" name="PKey">
          <scope classrefs="OpenSSL::PKey::PKey" ilk="class" name="DH">
            <scope ilk="function" name="compute_key" />
            <scope ilk="function" name="export" />
            <scope ilk="function" name="g" />
            <scope ilk="function" name="g=" />
            <scope ilk="function" name="generate_key!" />
            <scope ilk="function" name="p" />
            <scope ilk="function" name="p=" />
            <scope ilk="function" name="params" />
            <scope ilk="function" name="params_ok?" />
            <scope ilk="function" name="priv_key" />
            <scope ilk="function" name="priv_key=" />
            <scope ilk="function" name="private?" />
            <scope ilk="function" name="pub_key" />
            <scope ilk="function" name="pub_key=" />
            <scope ilk="function" name="public?" />
            <scope ilk="function" name="public_key" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
          </scope>
          <scope classrefs="OpenSSL::PKey::PKeyError" ilk="class" name="DHError" />
          <scope classrefs="OpenSSL::PKey::PKey" ilk="class" name="DSA">
            <scope ilk="function" name="export" />
            <scope ilk="function" name="g" />
            <scope ilk="function" name="g=" />
            <scope ilk="function" name="p" />
            <scope ilk="function" name="p=" />
            <scope ilk="function" name="params" />
            <scope ilk="function" name="priv_key" />
            <scope ilk="function" name="priv_key=" />
            <scope ilk="function" name="private?" />
            <scope ilk="function" name="pub_key" />
            <scope ilk="function" name="pub_key=" />
            <scope ilk="function" name="public?" />
            <scope ilk="function" name="public_key" />
            <scope ilk="function" name="q" />
            <scope ilk="function" name="q=" />
            <scope ilk="function" name="syssign" />
            <scope ilk="function" name="sysverify" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
          </scope>
          <scope classrefs="OpenSSL::PKey::PKeyError" ilk="class" name="DSAError" />
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="PKeyError" />
          <scope classrefs="OpenSSL::PKey::PKey" ilk="class" name="RSA">
            <scope ilk="function" name="d" />
            <scope ilk="function" name="d=" />
            <scope ilk="function" name="dmp1" />
            <scope ilk="function" name="dmp1=" />
            <scope ilk="function" name="dmq1" />
            <scope ilk="function" name="dmq1=" />
            <scope ilk="function" name="e" />
            <scope ilk="function" name="e=" />
            <scope ilk="function" name="export" />
            <scope ilk="function" name="iqmp" />
            <scope ilk="function" name="iqmp=" />
            <scope ilk="function" name="n" />
            <scope ilk="function" name="n=" />
            <scope ilk="function" name="p" />
            <scope ilk="function" name="p=" />
            <scope ilk="function" name="params" />
            <scope ilk="function" name="private?" />
            <scope ilk="function" name="private_decrypt" />
            <scope ilk="function" name="private_encrypt" />
            <scope ilk="function" name="public?" />
            <scope ilk="function" name="public_decrypt" />
            <scope ilk="function" name="public_encrypt" />
            <scope ilk="function" name="public_key" />
            <scope ilk="function" name="q" />
            <scope ilk="function" name="q=" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
            <variable attributes="__const__" citdl="Fixnum" name="NO_PADDING" />
            <variable attributes="__const__" citdl="Fixnum" name="PKCS1_OAEP_PADDING" />
            <variable attributes="__const__" citdl="Fixnum" name="PKCS1_PADDING" />
            <variable attributes="__const__" citdl="Fixnum" name="SSLV23_PADDING" />
          </scope>
          <scope classrefs="OpenSSL::PKey::PKeyError" ilk="class" name="RSAError" />
        </scope>
        <scope ilk="namespace" name="Random">
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="RandomError" />
          <scope ilk="function" name="egd" />
          <scope ilk="function" name="egd_bytes" />
          <scope ilk="function" name="load_random_file" />
          <scope ilk="function" name="pseudo_bytes" />
          <scope ilk="function" name="random_bytes" />
          <scope ilk="function" name="seed" />
          <scope ilk="function" name="write_random_file" />
        </scope>
        <scope ilk="namespace" name="SSL">
          <scope ilk="namespace" name="Nonblock" />
          <scope ilk="namespace" name="SocketForwarder">
            <scope ilk="function" name="addr" />
            <scope ilk="function" name="closed?" />
            <scope ilk="function" name="do_not_reverse_lookup=" />
            <scope ilk="function" name="fcntl" />
            <scope ilk="function" name="getsockopt" />
            <scope ilk="function" name="peeraddr" />
            <scope ilk="function" name="setsockopt" />
          </scope>
          <scope classrefs="Object" ilk="class" name="SSLContext">
            <scope ilk="function" name="ca_file" />
            <scope ilk="function" name="ca_file=" />
            <scope ilk="function" name="ca_path" />
            <scope ilk="function" name="ca_path=" />
            <scope ilk="function" name="cert" />
            <scope ilk="function" name="cert=" />
            <scope ilk="function" name="cert_store" />
            <scope ilk="function" name="cert_store=" />
            <scope ilk="function" name="ciphers" />
            <scope ilk="function" name="ciphers=" />
            <scope ilk="function" name="client_ca" />
            <scope ilk="function" name="client_ca=" />
            <scope ilk="function" name="client_cert_cb" />
            <scope ilk="function" name="client_cert_cb=" />
            <scope ilk="function" name="extra_chain_cert" />
            <scope ilk="function" name="extra_chain_cert=" />
            <scope ilk="function" name="key" />
            <scope ilk="function" name="key=" />
            <scope ilk="function" name="options" />
            <scope ilk="function" name="options=" />
            <scope ilk="function" name="session_id_context" />
            <scope ilk="function" name="session_id_context=" />
            <scope ilk="function" name="timeout" />
            <scope ilk="function" name="timeout=" />
            <scope ilk="function" name="tmp_dh_callback" />
            <scope ilk="function" name="tmp_dh_callback=" />
            <scope ilk="function" name="verify_callback" />
            <scope ilk="function" name="verify_callback=" />
            <scope ilk="function" name="verify_depth" />
            <scope ilk="function" name="verify_depth=" />
            <scope ilk="function" name="verify_mode" />
            <scope ilk="function" name="verify_mode=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="SSLError" />
          <scope classrefs="Object" ilk="class" name="SSLServer">
            <scope ilk="function" name="accept" />
            <scope ilk="function" name="addr" />
            <scope ilk="function" name="close" />
            <scope ilk="function" name="closed?" />
            <scope ilk="function" name="do_not_reverse_lookup=" />
            <scope ilk="function" name="fcntl" />
            <scope ilk="function" name="getsockopt" />
            <scope ilk="function" name="listen" />
            <scope ilk="function" name="peeraddr" />
            <scope ilk="function" name="setsockopt" />
            <scope ilk="function" name="start_immediately" />
            <scope ilk="function" name="start_immediately=" />
            <scope ilk="function" name="to_io" />
            <import symbol="OpenSSL::SSL::SocketForwarder" />
          </scope>
          <scope classrefs="Object" ilk="class" name="SSLSocket">
            <scope ilk="function" name="&lt;&lt;" />
            <scope ilk="function" name="accept" />
            <scope ilk="function" name="addr" />
            <scope ilk="function" name="all?" />
            <scope ilk="function" name="any?" />
            <scope ilk="function" name="cert" />
            <scope ilk="function" name="cipher" />
            <scope ilk="function" name="close" />
            <scope ilk="function" name="closed?" />
            <scope ilk="function" name="collect" />
            <scope ilk="function" name="connect" />
            <scope ilk="function" name="context" />
            <scope ilk="function" name="detect" />
            <scope ilk="function" name="do_not_reverse_lookup=" />
            <scope ilk="function" name="each" />
            <scope ilk="function" name="each_byte" />
            <scope ilk="function" name="each_line" />
            <scope ilk="function" name="each_with_index" />
            <scope ilk="function" name="entries" />
            <scope ilk="function" name="eof" />
            <scope ilk="function" name="eof?" />
            <scope ilk="function" name="fcntl" />
            <scope ilk="function" name="find" />
            <scope ilk="function" name="find_all" />
            <scope ilk="function" name="flush" />
            <scope ilk="function" name="getc" />
            <scope ilk="function" name="gets" />
            <scope ilk="function" name="getsockopt" />
            <scope ilk="function" name="grep" />
            <scope ilk="function" name="inject" />
            <scope ilk="function" name="io" />
            <scope ilk="function" name="map" />
            <scope ilk="function" name="max" />
            <scope ilk="function" name="member?" />
            <scope ilk="function" name="min" />
            <scope ilk="function" name="partition" />
            <scope ilk="function" name="peer_cert" />
            <scope ilk="function" name="peer_cert_chain" />
            <scope ilk="function" name="peeraddr" />
            <scope ilk="function" name="pending" />
            <scope ilk="function" name="post_connection_check" />
            <scope ilk="function" name="print" />
            <scope ilk="function" name="printf" />
            <scope ilk="function" name="puts" />
            <scope ilk="function" name="read" />
            <scope ilk="function" name="readchar" />
            <scope ilk="function" name="readline" />
            <scope ilk="function" name="readlines" />
            <scope ilk="function" name="readpartial" />
            <scope ilk="function" name="reject" />
            <scope ilk="function" name="select" />
            <scope ilk="function" name="setsockopt" />
            <scope ilk="function" name="sort" />
            <scope ilk="function" name="sort_by" />
            <scope ilk="function" name="state" />
            <scope ilk="function" name="sync" />
            <scope ilk="function" name="sync=" />
            <scope ilk="function" name="sync_close" />
            <scope ilk="function" name="sync_close=" />
            <scope ilk="function" name="sysclose" />
            <scope ilk="function" name="sysread" />
            <scope ilk="function" name="syswrite" />
            <scope ilk="function" name="to_io" />
            <scope ilk="function" name="ungetc" />
            <scope ilk="function" name="write" />
            <scope ilk="function" name="zip" />
            <variable attributes="__const__" citdl="Fixnum" name="BLOCK_SIZE" />
            <import symbol="Buffering" />
            <import symbol="Enumerable" />
            <import symbol="OpenSSL::SSL::Nonblock" />
            <import symbol="OpenSSL::SSL::SocketForwarder" />
          </scope>
          <variable attributes="__const__" citdl="Fixnum" name="OP_ALL" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_CIPHER_SERVER_PREFERENCE" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_EPHEMERAL_RSA" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_NETSCAPE_CA_DN_BUG" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_NO_SSLv2" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_NO_SSLv3" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_NO_TLSv1" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_PKCS1_CHECK_1" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_PKCS1_CHECK_2" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_SINGLE_DH_USE" />
          <variable attributes="__const__" citdl="Fixnum" name="OP_TLS_ROLLBACK_BUG" />
          <variable attributes="__const__" citdl="Fixnum" name="VERIFY_CLIENT_ONCE" />
          <variable attributes="__const__" citdl="Fixnum" name="VERIFY_FAIL_IF_NO_PEER_CERT" />
          <variable attributes="__const__" citdl="Fixnum" name="VERIFY_NONE" />
          <variable attributes="__const__" citdl="Fixnum" name="VERIFY_PEER" />
        </scope>
        <scope ilk="namespace" name="X509">
          <scope classrefs="Object" ilk="class" name="Attribute">
            <scope ilk="function" name="oid" />
            <scope ilk="function" name="oid=" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="value" />
            <scope ilk="function" name="value=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="AttributeError" />
          <scope classrefs="Object" ilk="class" name="Certificate">
            <scope ilk="function" name="add_extension" />
            <scope ilk="function" name="check_private_key" />
            <scope ilk="function" name="extensions" />
            <scope ilk="function" name="extensions=" />
            <scope ilk="function" name="issuer" />
            <scope ilk="function" name="issuer=" />
            <scope ilk="function" name="not_after" />
            <scope ilk="function" name="not_after=" />
            <scope ilk="function" name="not_before" />
            <scope ilk="function" name="not_before=" />
            <scope ilk="function" name="public_key" />
            <scope ilk="function" name="public_key=" />
            <scope ilk="function" name="serial" />
            <scope ilk="function" name="serial=" />
            <scope ilk="function" name="sign" />
            <scope ilk="function" name="signature_algorithm" />
            <scope ilk="function" name="subject" />
            <scope ilk="function" name="subject=" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
            <scope ilk="function" name="verify" />
            <scope ilk="function" name="version" />
            <scope ilk="function" name="version=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="CertificateError" />
          <scope classrefs="Object" ilk="class" name="CRL">
            <scope ilk="function" name="add_extension" />
            <scope ilk="function" name="add_revoked" />
            <scope ilk="function" name="extensions" />
            <scope ilk="function" name="extensions=" />
            <scope ilk="function" name="issuer" />
            <scope ilk="function" name="issuer=" />
            <scope ilk="function" name="last_update" />
            <scope ilk="function" name="last_update=" />
            <scope ilk="function" name="next_update" />
            <scope ilk="function" name="next_update=" />
            <scope ilk="function" name="revoked" />
            <scope ilk="function" name="revoked=" />
            <scope ilk="function" name="sign" />
            <scope ilk="function" name="signature_algorithm" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
            <scope ilk="function" name="verify" />
            <scope ilk="function" name="version" />
            <scope ilk="function" name="version=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="CRLError" />
          <scope classrefs="Object" ilk="class" name="Extension">
            <scope ilk="function" name="critical=" />
            <scope ilk="function" name="critical?" />
            <scope ilk="function" name="oid" />
            <scope ilk="function" name="oid=" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_h" />
            <scope ilk="function" name="value" />
            <scope ilk="function" name="value=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="ExtensionError" />
          <scope classrefs="Object" ilk="class" name="ExtensionFactory">
            <scope ilk="function" name="config" />
            <scope ilk="function" name="config=" />
            <scope ilk="function" name="create_ext" />
            <scope ilk="function" name="create_ext_from_array" />
            <scope ilk="function" name="create_ext_from_hash" />
            <scope ilk="function" name="create_ext_from_string" />
            <scope ilk="function" name="create_extension" />
            <scope ilk="function" name="crl" />
            <scope ilk="function" name="crl=" />
            <scope ilk="function" name="issuer_certificate" />
            <scope ilk="function" name="issuer_certificate=" />
            <scope ilk="function" name="subject_certificate" />
            <scope ilk="function" name="subject_certificate=" />
            <scope ilk="function" name="subject_request" />
            <scope ilk="function" name="subject_request=" />
          </scope>
          <scope classrefs="Object" ilk="class" name="Name">
            <scope ilk="namespace" name="RFC2253DN">
              <scope ilk="function" name="expand_hexstring" />
              <scope ilk="function" name="expand_pair" />
              <scope ilk="function" name="expand_value" />
              <scope ilk="function" name="scan" />
              <variable attributes="__const__" citdl="Regexp" name="AttributeType" />
              <variable attributes="__const__" citdl="Regexp" name="AttributeValue" />
              <variable attributes="__const__" citdl="Regexp" name="HexChar" />
              <variable attributes="__const__" citdl="Regexp" name="HexPair" />
              <variable attributes="__const__" citdl="Regexp" name="HexString" />
              <variable attributes="__const__" citdl="Regexp" name="Pair" />
              <variable attributes="__const__" citdl="Regexp" name="QuoteChar" />
              <variable attributes="__const__" citdl="String" name="Special" />
              <variable attributes="__const__" citdl="Regexp" name="StringChar" />
              <variable attributes="__const__" citdl="Regexp" name="TypeAndValue" />
            </scope>
            <scope ilk="function" name="&lt;=&gt;" />
            <scope ilk="function" name="add_entry" />
            <scope ilk="function" name="cmp" />
            <scope ilk="function" name="to_der" />
            <variable attributes="__const__" citdl="Fixnum" name="COMPAT" />
            <variable attributes="__const__" citdl="Fixnum" name="DEFAULT_OBJECT_TYPE" />
            <variable attributes="__const__" citdl="Fixnum" name="MULTILINE" />
            <variable attributes="__const__" citdl="Hash" name="OBJECT_TYPE_TEMPLATE" />
            <variable attributes="__const__" citdl="Fixnum" name="ONELINE" />
            <variable attributes="__const__" citdl="Fixnum" name="RFC2253" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="NameError" />
          <scope classrefs="Object" ilk="class" name="Request">
            <scope ilk="function" name="add_attribute" />
            <scope ilk="function" name="attributes" />
            <scope ilk="function" name="attributes=" />
            <scope ilk="function" name="public_key" />
            <scope ilk="function" name="public_key=" />
            <scope ilk="function" name="sign" />
            <scope ilk="function" name="signature_algorithm" />
            <scope ilk="function" name="subject" />
            <scope ilk="function" name="subject=" />
            <scope ilk="function" name="to_der" />
            <scope ilk="function" name="to_pem" />
            <scope ilk="function" name="to_text" />
            <scope ilk="function" name="verify" />
            <scope ilk="function" name="version" />
            <scope ilk="function" name="version=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="RequestError" />
          <scope classrefs="Object" ilk="class" name="Revoked">
            <scope ilk="function" name="add_extension" />
            <scope ilk="function" name="extensions" />
            <scope ilk="function" name="extensions=" />
            <scope ilk="function" name="serial" />
            <scope ilk="function" name="serial=" />
            <scope ilk="function" name="time" />
            <scope ilk="function" name="time=" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="RevokedError" />
          <scope classrefs="Object" ilk="class" name="Store">
            <scope ilk="function" name="add_cert" />
            <scope ilk="function" name="add_crl" />
            <scope ilk="function" name="add_file" />
            <scope ilk="function" name="add_path" />
            <scope ilk="function" name="chain" />
            <scope ilk="function" name="error" />
            <scope ilk="function" name="error_string" />
            <scope ilk="function" name="flags=" />
            <scope ilk="function" name="purpose=" />
            <scope ilk="function" name="set_default_paths" />
            <scope ilk="function" name="time=" />
            <scope ilk="function" name="trust=" />
            <scope ilk="function" name="verify" />
            <scope ilk="function" name="verify_callback" />
            <scope ilk="function" name="verify_callback=" />
          </scope>
          <scope classrefs="Object" ilk="class" name="StoreContext">
            <scope ilk="function" name="chain" />
            <scope ilk="function" name="cleanup" />
            <scope ilk="function" name="current_cert" />
            <scope ilk="function" name="current_crl" />
            <scope ilk="function" name="error" />
            <scope ilk="function" name="error=" />
            <scope ilk="function" name="error_depth" />
            <scope ilk="function" name="error_string" />
            <scope ilk="function" name="flags=" />
            <scope ilk="function" name="purpose=" />
            <scope ilk="function" name="time=" />
            <scope ilk="function" name="trust=" />
            <scope ilk="function" name="verify" />
          </scope>
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="StoreError" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_CERT_AREA" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_CERT_DIR" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_CERT_DIR_ENV" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_CERT_FILE" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_CERT_FILE_ENV" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_PRIVATE_DIR" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_ANY" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_CRL_SIGN" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_NS_SSL_SERVER" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_OCSP_HELPER" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_SMIME_ENCRYPT" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_SMIME_SIGN" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_SSL_CLIENT" />
          <variable attributes="__const__" citdl="Fixnum" name="PURPOSE_SSL_SERVER" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_COMPAT" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_EMAIL" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_OBJECT_SIGN" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_OCSP_REQUEST" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_OCSP_SIGN" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_SSL_CLIENT" />
          <variable attributes="__const__" citdl="Fixnum" name="TRUST_SSL_SERVER" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_AKID_ISSUER_SERIAL_MISMATCH" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_AKID_SKID_MISMATCH" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_APPLICATION_VERIFICATION" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_CHAIN_TOO_LONG" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_HAS_EXPIRED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_NOT_YET_VALID" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_REJECTED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_REVOKED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_SIGNATURE_FAILURE" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CERT_UNTRUSTED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CRL_HAS_EXPIRED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CRL_NOT_YET_VALID" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_CRL_SIGNATURE_FAILURE" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_INVALID_CA" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_INVALID_PURPOSE" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_KEYUSAGE_NO_CERTSIGN" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_OUT_OF_MEM" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_PATH_LENGTH_EXCEEDED" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_SELF_SIGNED_CERT_IN_CHAIN" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_SUBJECT_ISSUER_MISMATCH" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_GET_CRL" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_GET_ISSUER_CERT" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY" />
          <variable attributes="__const__" citdl="Fixnum" name="V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE" />
          <variable attributes="__const__" citdl="Fixnum" name="V_FLAG_CRL_CHECK" />
          <variable attributes="__const__" citdl="Fixnum" name="V_FLAG_CRL_CHECK_ALL" />
          <variable attributes="__const__" citdl="Fixnum" name="V_OK" />
        </scope>
        <scope classrefs="Object" ilk="class" name="BN">
          <scope ilk="function" name="%" />
          <scope ilk="function" name="*" />
          <scope ilk="function" name="**" />
          <scope ilk="function" name="+" />
          <scope ilk="function" name="-" />
          <scope ilk="function" name="/" />
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="&gt;&gt;" />
          <scope ilk="function" name="between?" />
          <scope ilk="function" name="bit_set?" />
          <scope ilk="function" name="clear_bit!" />
          <scope ilk="function" name="cmp" />
          <scope ilk="function" name="coerce" />
          <scope ilk="function" name="copy" />
          <scope ilk="function" name="gcd" />
          <scope ilk="function" name="mask_bits!" />
          <scope ilk="function" name="mod_add" />
          <scope ilk="function" name="mod_exp" />
          <scope ilk="function" name="mod_inverse" />
          <scope ilk="function" name="mod_mul" />
          <scope ilk="function" name="mod_sqr" />
          <scope ilk="function" name="mod_sub" />
          <scope ilk="function" name="num_bits" />
          <scope ilk="function" name="num_bytes" />
          <scope ilk="function" name="odd?" />
          <scope ilk="function" name="one?" />
          <scope ilk="function" name="prime?" />
          <scope ilk="function" name="prime_fasttest?" />
          <scope ilk="function" name="set_bit!" />
          <scope ilk="function" name="sqr" />
          <scope ilk="function" name="to_bn" />
          <scope ilk="function" name="to_i" />
          <scope ilk="function" name="to_int" />
          <scope ilk="function" name="ucmp" />
          <scope ilk="function" name="zero?" />
          <import symbol="Comparable" />
        </scope>
        <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="BNError" />
        <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="CipherError" />
        <scope classrefs="Object" ilk="class" name="Config">
          <scope ilk="function" name="[]" />
          <scope ilk="function" name="[]=" />
          <scope ilk="function" name="add_value" />
          <scope ilk="function" name="all?" />
          <scope ilk="function" name="any?" />
          <scope ilk="function" name="collect" />
          <scope ilk="function" name="detect" />
          <scope ilk="function" name="each" />
          <scope ilk="function" name="each_with_index" />
          <scope ilk="function" name="entries" />
          <scope ilk="function" name="find" />
          <scope ilk="function" name="find_all" />
          <scope ilk="function" name="get_value" />
          <scope ilk="function" name="grep" />
          <scope ilk="function" name="inject" />
          <scope ilk="function" name="map" />
          <scope ilk="function" name="max" />
          <scope ilk="function" name="member?" />
          <scope ilk="function" name="min" />
          <scope ilk="function" name="partition" />
          <scope ilk="function" name="reject" />
          <scope ilk="function" name="section" />
          <scope ilk="function" name="sections" />
          <scope ilk="function" name="select" />
          <scope ilk="function" name="sort" />
          <scope ilk="function" name="sort_by" />
          <scope ilk="function" name="value" />
          <scope ilk="function" name="zip" />
          <variable attributes="__const__" citdl="String" name="DEFAULT_CONFIG_FILE" />
          <import symbol="Enumerable" />
        </scope>
        <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="ConfigError" />
        <scope classrefs="Object" ilk="class" name="Engine">
          <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="EngineError" />
          <scope ilk="function" name="cipher" />
          <scope ilk="function" name="cmds" />
          <scope ilk="function" name="ctrl_cmd" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="finish" />
          <scope ilk="function" name="load_private_key" />
          <scope ilk="function" name="load_public_key" />
          <scope ilk="function" name="name" />
          <scope ilk="function" name="set_default" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_ALL" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_CIPHERS" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_DH" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_DIGESTS" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_DSA" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_NONE" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_RAND" />
          <variable attributes="__const__" citdl="Fixnum" name="METHOD_RSA" />
        </scope>
        <scope classrefs="Object" ilk="class" name="HMAC">
          <scope ilk="function" name="&lt;&lt;" />
          <scope ilk="function" name="digest" />
          <scope ilk="function" name="hexdigest" />
          <scope ilk="function" name="update" />
        </scope>
        <scope classrefs="OpenSSL::OpenSSLError" ilk="class" name="HMACError" />
        <scope classrefs="StandardError" ilk="class" name="OpenSSLError" />
        <scope ilk="function" name="debug" />
        <scope ilk="function" name="debug=" />
        <scope ilk="function" name="errors" />
        <variable attributes="__const__" citdl="Fixnum" name="OPENSSL_VERSION_NUMBER" />
        <variable attributes="__const__" citdl="String" name="OPENSSL_VERSION" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="racc/cparse">
      <scope ilk="namespace" name="Racc">
        <scope classrefs="Object" ilk="class" name="CparseParams" />
        <scope classrefs="Object" ilk="class" name="Parser">
          <variable attributes="__const__" citdl="String" name="Racc_Runtime_Core_Id_C" />
          <variable attributes="__const__" citdl="String" name="Racc_Runtime_Core_Version_C" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="readline">
      <scope ilk="namespace" name="Readline">
        <scope attributes="__classmethod__" ilk="function" name="basic_quote_characters" />
        <scope attributes="__classmethod__" ilk="function" name="basic_quote_characters=" />
        <scope attributes="__classmethod__" ilk="function" name="basic_word_break_characters" />
        <scope attributes="__classmethod__" ilk="function" name="basic_word_break_characters=" />
        <scope attributes="__classmethod__" ilk="function" name="completer_quote_characters" />
        <scope attributes="__classmethod__" ilk="function" name="completer_quote_characters=" />
        <scope attributes="__classmethod__" ilk="function" name="completer_word_break_characters" />
        <scope attributes="__classmethod__" ilk="function" name="completer_word_break_characters=" />
        <scope attributes="__classmethod__" ilk="function" name="completion_append_character" />
        <scope attributes="__classmethod__" ilk="function" name="completion_append_character=" />
        <scope attributes="__classmethod__" ilk="function" name="completion_case_fold" />
        <scope attributes="__classmethod__" ilk="function" name="completion_case_fold=" />
        <scope attributes="__classmethod__" ilk="function" name="completion_proc" />
        <scope attributes="__classmethod__" ilk="function" name="completion_proc=" />
        <scope attributes="__classmethod__" ilk="function" name="emacs_editing_mode" />
        <scope attributes="__classmethod__" ilk="function" name="filename_quote_characters" />
        <scope attributes="__classmethod__" ilk="function" name="filename_quote_characters=" />
        <scope attributes="__classmethod__" ilk="function" name="readline" />
        <scope attributes="__classmethod__" ilk="function" name="vi_editing_mode" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="basic_quote_characters" />
        <scope ilk="function" name="basic_quote_characters=" />
        <scope ilk="function" name="basic_word_break_characters" />
        <scope ilk="function" name="basic_word_break_characters=" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="completer_quote_characters" />
        <scope ilk="function" name="completer_quote_characters=" />
        <scope ilk="function" name="completer_word_break_characters" />
        <scope ilk="function" name="completer_word_break_characters=" />
        <scope ilk="function" name="completion_append_character" />
        <scope ilk="function" name="completion_append_character=" />
        <scope ilk="function" name="completion_case_fold" />
        <scope ilk="function" name="completion_case_fold=" />
        <scope ilk="function" name="completion_proc" />
        <scope ilk="function" name="completion_proc=" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="emacs_editing_mode" />
        <scope ilk="function" name="filename_quote_characters" />
        <scope ilk="function" name="filename_quote_characters=" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="readline" />
        <scope ilk="function" name="to_s" />
        <scope ilk="function" name="vi_editing_mode" />
        <variable attributes="__const__" citdl="Object" name="FILENAME_COMPLETION_PROC" />
        <variable attributes="__const__" citdl="Object" name="HISTORY" />
        <variable attributes="__const__" citdl="Object" name="USERNAME_COMPLETION_PROC" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="sdbm">
      <scope classrefs="Object" ilk="class" name="SDBM">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" ilk="function" name="open" />
        <scope ilk="function" name="[]" />
        <scope ilk="function" name="[]=" />
        <scope ilk="function" name="clear" />
        <scope ilk="function" name="close" />
        <scope ilk="function" name="closed?" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="delete_if" />
        <scope ilk="function" name="each" />
        <scope ilk="function" name="each_key" />
        <scope ilk="function" name="each_pair" />
        <scope ilk="function" name="each_value" />
        <scope ilk="function" name="empty?" />
        <scope ilk="function" name="fetch" />
        <scope ilk="function" name="has_key?" />
        <scope ilk="function" name="has_value?" />
        <scope ilk="function" name="index" />
        <scope ilk="function" name="indexes" />
        <scope ilk="function" name="indices" />
        <scope ilk="function" name="invert" />
        <scope ilk="function" name="key?" />
        <scope ilk="function" name="keys" />
        <scope ilk="function" name="length" />
        <scope ilk="function" name="member?" />
        <scope ilk="function" name="reject" />
        <scope ilk="function" name="reject!" />
        <scope ilk="function" name="replace" />
        <scope ilk="function" name="select" />
        <scope ilk="function" name="shift" />
        <scope ilk="function" name="size" />
        <scope ilk="function" name="store" />
        <scope ilk="function" name="to_hash" />
        <scope ilk="function" name="update" />
        <scope ilk="function" name="value?" />
        <scope ilk="function" name="values" />
        <scope ilk="function" name="values_at" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="SDBMError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="socket">
      <scope classrefs="IO" ilk="class" name="BasicSocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" ilk="function" name="do_not_reverse_lookup" />
        <scope attributes="__classmethod__" ilk="function" name="do_not_reverse_lookup=" />
        <scope attributes="__classmethod__" ilk="function" name="for_fd" />
        <scope ilk="function" name="close_read" />
        <scope ilk="function" name="close_write" />
        <scope ilk="function" name="getpeername" />
        <scope ilk="function" name="getsockname" />
        <scope ilk="function" name="getsockopt" />
        <scope ilk="function" name="recv" />
        <scope ilk="function" name="setsockopt" />
        <scope ilk="function" name="shutdown" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="BasicSocket" ilk="class" name="IPSocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" ilk="function" name="getaddress" />
        <scope ilk="function" name="addr" />
        <scope ilk="function" name="peeraddr" />
        <scope ilk="function" name="recvfrom" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="BasicSocket" ilk="class" name="IPsocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" ilk="function" name="getaddress" />
        <scope ilk="function" name="addr" />
        <scope ilk="function" name="peeraddr" />
        <scope ilk="function" name="recvfrom" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="BasicSocket" ilk="class" name="Socket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" ilk="function" name="getaddrinfo" />
        <scope attributes="__classmethod__" ilk="function" name="gethostbyaddr" />
        <scope attributes="__classmethod__" ilk="function" name="gethostbyname" />
        <scope attributes="__classmethod__" ilk="function" name="gethostname" />
        <scope attributes="__classmethod__" ilk="function" name="getnameinfo" />
        <scope attributes="__classmethod__" ilk="function" name="getservbyname" />
        <scope attributes="__classmethod__" ilk="function" name="pack_sockaddr_in" />
        <scope attributes="__classmethod__" ilk="function" name="pair" />
        <scope attributes="__classmethod__" ilk="function" name="sockaddr_in" />
        <scope attributes="__classmethod__" ilk="function" name="socketpair" />
        <scope attributes="__classmethod__" ilk="function" name="unpack_sockaddr_in" />
        <scope ilk="function" name="accept" />
        <scope ilk="function" name="bind" />
        <scope ilk="function" name="connect" />
        <scope ilk="function" name="listen" />
        <scope ilk="function" name="recvfrom" />
        <scope ilk="function" name="sysaccept" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_APPLETALK" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_CCITT" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_CHAOS" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_DATAKIT" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_DLI" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_ECMA" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_HYLINK" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_IMPLINK" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_INET" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_IPX" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_ISO" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_LAT" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_MAX" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_NETBIOS" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_NS" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_OSI" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_PUP" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_SNA" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_UNIX" />
        <variable attributes="__const__" citdl="Fixnum" name="AF_UNSPEC" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_ADDRCONFIG" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_ALL" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_CANONNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_DEFAULT" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_MASK" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_NUMERICHOST" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_PASSIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_V4MAPPED" />
        <variable attributes="__const__" citdl="Fixnum" name="AI_V4MAPPED_CFG" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_ADDRFAMILY" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_AGAIN" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_BADFLAGS" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_BADHINTS" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_FAIL" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_FAMILY" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_MAX" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_MEMORY" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_NODATA" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_NONAME" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_PROTOCOL" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_SERVICE" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_SOCKTYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="EAI_SYSTEM" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_ALLHOSTS_GROUP" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_ANY" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_BROADCAST" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_LOOPBACK" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_MAX_LOCAL_GROUP" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_NONE" />
        <variable attributes="__const__" citdl="Fixnum" name="INADDR_UNSPEC_GROUP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPORT_RESERVED" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPORT_USERRESERVED" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_GGP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_ICMP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_IDP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_IGMP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_IP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_MAX" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_ND" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_PUP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_RAW" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_TCP" />
        <variable attributes="__const__" citdl="Fixnum" name="IPPROTO_UDP" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_ADD_MEMBERSHIP" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_DEFAULT_MULTICAST_LOOP" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_DEFAULT_MULTICAST_TTL" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_DROP_MEMBERSHIP" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_MAX_MEMBERSHIPS" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_MULTICAST_IF" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_MULTICAST_LOOP" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_MULTICAST_TTL" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_OPTIONS" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_TOS" />
        <variable attributes="__const__" citdl="Fixnum" name="IP_TTL" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="MSG_DONTROUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="MSG_OOB" />
        <variable attributes="__const__" citdl="Fixnum" name="MSG_PEEK" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_DGRAM" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_MAXHOST" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_MAXSERV" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_NAMEREQD" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_NOFQDN" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_NUMERICHOST" />
        <variable attributes="__const__" citdl="Fixnum" name="NI_NUMERICSERV" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_APPLETALK" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_CCITT" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_CHAOS" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_DATAKIT" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_DLI" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_ECMA" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_HYLINK" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_IMPLINK" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_INET" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_IPX" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_ISO" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_LAT" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_MAX" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_NS" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_OSI" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_PUP" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_SNA" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_UNIX" />
        <variable attributes="__const__" citdl="Fixnum" name="PF_UNSPEC" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="SHUT_RD" />
        <variable attributes="__const__" citdl="Fixnum" name="SHUT_RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SHUT_WR" />
        <variable attributes="__const__" citdl="Fixnum" name="SOCK_DGRAM" />
        <variable attributes="__const__" citdl="Fixnum" name="SOCK_RAW" />
        <variable attributes="__const__" citdl="Fixnum" name="SOCK_RDM" />
        <variable attributes="__const__" citdl="Fixnum" name="SOCK_SEQPACKET" />
        <variable attributes="__const__" citdl="Fixnum" name="SOCK_STREAM" />
        <variable attributes="__const__" citdl="Fixnum" name="SOL_SOCKET" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_ACCEPTCONN" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_BROADCAST" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_DEBUG" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_DONTROUTE" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_ERROR" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_KEEPALIVE" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_LINGER" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_OOBINLINE" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_RCVBUF" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_RCVLOWAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_RCVTIMEO" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_REUSEADDR" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_SNDBUF" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_SNDLOWAT" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_SNDTIMEO" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_TYPE" />
        <variable attributes="__const__" citdl="Fixnum" name="SO_USELOOPBACK" />
        <variable attributes="__const__" citdl="Fixnum" name="TCP_NODELAY" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="SocketError" />
      <scope classrefs="TCPSocket" ilk="class" name="TCPServer">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope ilk="function" name="accept" />
        <scope ilk="function" name="listen" />
        <scope ilk="function" name="sysaccept" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="IPSocket" ilk="class" name="TCPSocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" ilk="function" name="gethostbyname" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="TCPSocket" ilk="class" name="TCPserver">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope ilk="function" name="accept" />
        <scope ilk="function" name="listen" />
        <scope ilk="function" name="sysaccept" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="IPSocket" ilk="class" name="TCPsocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope attributes="__classmethod__" ilk="function" name="gethostbyname" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="IPSocket" ilk="class" name="UDPSocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope ilk="function" name="bind" />
        <scope ilk="function" name="connect" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
      <scope classrefs="IPSocket" ilk="class" name="UDPsocket">
        <import symbol="Enumerable" />
        <import symbol="File::Constants" />
        <scope ilk="function" name="bind" />
        <scope ilk="function" name="connect" />
        <variable attributes="__const__" citdl="Fixnum" name="APPEND" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="CREAT" />
        <variable attributes="__const__" citdl="Fixnum" name="EXCL" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_CASEFOLD" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_DOTMATCH" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_NOESCAPE" />
        <variable attributes="__const__" citdl="Fixnum" name="FNM_PATHNAME" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_EX" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_NB" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_SH" />
        <variable attributes="__const__" citdl="Fixnum" name="LOCK_UN" />
        <variable attributes="__const__" citdl="Fixnum" name="NONBLOCK" />
        <variable attributes="__const__" citdl="Fixnum" name="RDONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="RDWR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_CUR" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_END" />
        <variable attributes="__const__" citdl="Fixnum" name="SEEK_SET" />
        <variable attributes="__const__" citdl="Fixnum" name="TRUNC" />
        <variable attributes="__const__" citdl="Fixnum" name="WRONLY" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="stringio">
      <scope classrefs="Data" doc="Pseudo I/O on String object." ilk="class" name="StringIO">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates new StringIO instance from with `string&apos; and `mode&apos;." ilk="function" name="new" signature=" StringIO.new(string=&quot;&quot;[, mode])" />
        <scope attributes="__classmethod__" doc="Equivalent to StringIO.new except that when it is called&#xA;with a block, it yields with the new instance and closes it,&#xA;and returns the result which returned from the block." ilk="function" name="open" signature=" StringIO.open(string=&quot;&quot;[, mode]) {|strio| ...}" />
        <scope doc="See IO#&lt;&lt;." ilk="function" name="&lt;&lt;" signature="strio &lt;&lt; obj     -&gt; strio" />
        <scope doc="Returns *strio* itself. Just for compatibility to IO." ilk="function" name="binmode" signature=" strio.binmode -&gt; true " />
        <scope doc="Closes strio. The *strio* is unavailable for any further&#xA;data operations; an IOError is raised if such an attempt is&#xA;made." ilk="function" name="close" signature="strio.close  -&gt; nil" />
        <scope doc="Closes the read end of a StringIO. Will raise an IOError if&#xA;the *strio* is not readable." ilk="function" name="close_read" signature="strio.close_read    -&gt; nil" />
        <scope doc="Closes the write end of a StringIO. Will raise an IOError if&#xA;the *strio* is not writeable." ilk="function" name="close_write" signature="strio.close_write    -&gt; nil" />
        <scope doc="Returns true if *strio* is completely closed, false&#xA;otherwise." ilk="function" name="closed?" signature="strio.closed?    -&gt; true or false" />
        <scope doc="Returns true if *strio* is not readable, false otherwise." ilk="function" name="closed_read?" signature="strio.closed_read?    -&gt; true or false" />
        <scope doc="Returns true if *strio* is not writable, false otherwise." ilk="function" name="closed_write?" signature="strio.closed_write?    -&gt; true or false" />
        <scope doc="See IO#each." ilk="function" name="each" signature="strio.each(sep_string=$/)      {|line| block }  -&gt; strio&#xA;strio.each_line(sep_string=$/) {|line| block }  -&gt; strio" />
        <scope doc="See IO#each_byte." ilk="function" name="each_byte" signature="strio.each_byte {|byte| block }  -&gt; strio" />
        <scope doc="See IO#each." ilk="function" name="each_line" signature="strio.each(sep_string=$/)      {|line| block }  -&gt; strio&#xA;strio.each_line(sep_string=$/) {|line| block }  -&gt; strio" />
        <scope doc="Returns true if *strio* is at end of file. The stringio must&#xA;be opened for reading or an IOError will be raised." ilk="function" name="eof" signature="strio.eof     -&gt; true or false&#xA;strio.eof?    -&gt; true or false" />
        <scope doc="Returns true if *strio* is at end of file. The stringio must&#xA;be opened for reading or an IOError will be raised." ilk="function" name="eof?" signature="strio.eof     -&gt; true or false&#xA;strio.eof?    -&gt; true or false" />
        <scope doc="Raises NotImplementedError." ilk="function" name="fcntl" signature=" strio.fcntl " />
        <scope doc="Returns nil. Just for compatibility to IO." ilk="function" name="fileno" signature=" strio.fileno -&gt; nil " />
        <scope doc="Returns *strio* itself. Just for compatibility to IO." ilk="function" name="flush" signature=" strio.flush -&gt; strio " />
        <scope doc="Returns 0. Just for compatibility to IO." ilk="function" name="fsync" signature=" strio.fsync -&gt; 0 " />
        <scope doc="See IO#getc." ilk="function" name="getc" signature="strio.getc   -&gt; fixnum or nil" />
        <scope doc="See IO#gets." ilk="function" name="gets" signature="strio.gets(sep_string=$/)   -&gt; string or nil" />
        <scope doc="Returns false. Just for compatibility to IO." ilk="function" name="isatty" signature="strio.isatty -&gt; nil&#xA;strio.tty? -&gt; nil" />
        <scope doc="Returns the size of the buffer string." ilk="function" name="length" signature="strio.size   -&gt; integer" />
        <scope doc="Returns the current line number in *strio*. The stringio&#xA;must be opened for reading." ilk="function" name="lineno" signature="strio.lineno    -&gt; integer" />
        <scope doc="Manually sets the current line number to the given value. $." ilk="function" name="lineno=" signature="strio.lineno = integer    -&gt; integer" />
        <scope doc="Returns nil. Just for compatibility to IO." ilk="function" name="path" signature=" strio.path -&gt; nil " />
        <scope doc="Returns nil. Just for compatibility to IO." ilk="function" name="pid" signature=" strio.pid -&gt; nil " />
        <scope doc="Returns the current offset (in bytes) of *strio*." ilk="function" name="pos" signature="strio.pos     -&gt; integer&#xA;strio.tell    -&gt; integer" />
        <scope doc="Seeks to the given position (in bytes) in *strio*." ilk="function" name="pos=" signature="strio.pos = integer    -&gt; integer" />
        <scope doc="See IO#print." ilk="function" name="print" signature="strio.print()             -&gt; nil&#xA;strio.print(obj, ...)     -&gt; nil" />
        <scope doc="See IO#printf." ilk="function" name="printf" signature="strio.printf(format_string [, obj, ...] )   -&gt; nil" />
        <scope doc="See IO#putc." ilk="function" name="putc" signature="strio.putc(obj)    -&gt; obj" />
        <scope doc="See IO#puts." ilk="function" name="puts" signature="strio.puts(obj, ...)    -&gt; nil" />
        <scope doc="See IO#read." ilk="function" name="read" signature="strio.read([length [, buffer]])    -&gt; string, buffer, or nil" />
        <scope doc="See IO#readchar." ilk="function" name="readchar" signature="strio.readchar   -&gt; fixnum" />
        <scope doc="See IO#readline." ilk="function" name="readline" signature="strio.readline(sep_string=$/)   -&gt; string" />
        <scope doc="See IO#readlines." ilk="function" name="readlines" signature="strio.readlines(sep_string=$/)  -&gt;   array" />
        <scope doc="Reinitializes *strio* with the given `other_StrIO&apos; or&#xA;`string&apos; and `mode&apos; (see StringIO#new)." ilk="function" name="reopen" signature="strio.reopen(other_StrIO)     -&gt; strio&#xA;strio.reopen(string, mode)    -&gt; strio" />
        <scope doc="Positions *strio* to the beginning of input, resetting&#xA;lineno to zero." ilk="function" name="rewind" signature="strio.rewind    -&gt; 0" />
        <scope doc="Seeks to a given offset `amount&apos; in the stream according to&#xA;the value of `whence&apos; (see IO#seek)." ilk="function" name="seek" signature="strio.seek(amount, whence=SEEK_SET) -&gt; 0" />
        <scope doc="Returns the size of the buffer string." ilk="function" name="size" signature="strio.size   -&gt; integer" />
        <scope doc="Returns underlying String object, the subject of IO." ilk="function" name="string" signature=" strio.string     -&gt; string" />
        <scope doc="Changes underlying String object, the subject of IO." ilk="function" name="string=" signature="strio.string = string  -&gt; string" />
        <scope doc="Returns true always." ilk="function" name="sync" signature="strio.sync    -&gt; true" />
        <scope doc="Returns the argument unchanged. Just for compatibility to&#xA;IO." ilk="function" name="sync=" signature=" strio.sync = boolean -&gt; boolean " />
        <scope doc="Similar to #read, but raises EOFError at end of string&#xA;instead of returning nil, as well as IO#sysread does." ilk="function" name="sysread" signature="strio.sysread(integer[, outbuf])    -&gt; string" />
        <scope doc="Appends the given string to the underlying buffer string of&#xA;*strio*. The stream must be opened for writing." ilk="function" name="syswrite" signature="strio.write(string)    -&gt; integer&#xA;strio.syswrite(string) -&gt; integer" />
        <scope doc="Returns the current offset (in bytes) of *strio*." ilk="function" name="tell" signature="strio.pos     -&gt; integer&#xA;strio.tell    -&gt; integer" />
        <scope doc="Truncates the buffer string to at most `integer&apos; bytes. The&#xA;*strio* must be opened for writing." ilk="function" name="truncate" signature="strio.truncate(integer)    -&gt; 0" />
        <scope doc="Returns false. Just for compatibility to IO." ilk="function" name="tty?" signature="strio.isatty -&gt; nil&#xA;strio.tty? -&gt; nil" />
        <scope doc="Pushes back one character (passed as a parameter) onto&#xA;*strio* such that a subsequent buffered read will return it.&#xA;Pushing back behind the beginning of the buffer string is&#xA;not possible." ilk="function" name="ungetc" signature="strio.ungetc(integer)   -&gt; nil" />
        <scope doc="Appends the given string to the underlying buffer string of&#xA;*strio*. The stream must be opened for writing." ilk="function" name="write" signature="strio.write(string)    -&gt; integer&#xA;strio.syswrite(string) -&gt; integer" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="strscan">
      <scope classrefs="StandardError" ilk="class" name="ScanError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="swin">
      <scope classrefs="Object" ilk="class" name="LWFactory">
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope ilk="function" name="application" />
        <scope ilk="function" name="canvasfromfile" />
        <scope ilk="function" name="cursorfromfile" />
        <scope ilk="function" name="iconfromfile" />
        <scope ilk="function" name="newcanvas" />
        <scope ilk="function" name="newcursor" />
        <scope ilk="function" name="newdialog" />
        <scope ilk="function" name="newfont" />
        <scope ilk="function" name="newimagelist" />
        <scope ilk="function" name="newmenu" />
        <scope ilk="function" name="newpopup" />
        <scope ilk="function" name="newwindow" />
        <scope ilk="function" name="openprinter" />
        <scope ilk="function" name="registerWinClass" />
      </scope>
      <scope classrefs="Object" ilk="class" name="SWIN">
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope ilk="function" name="addEvent" />
        <scope ilk="function" name="alive?" />
        <scope ilk="function" name="application" />
        <scope ilk="function" name="bitblt" />
        <scope ilk="function" name="caption" />
        <scope ilk="function" name="caption=" />
        <scope ilk="function" name="capturedEvents" />
        <scope ilk="function" name="classname" />
        <scope ilk="function" name="classname=" />
        <scope ilk="function" name="clearEventFilter" />
        <scope ilk="function" name="clientrect" />
        <scope ilk="function" name="close" />
        <scope ilk="function" name="create" />
        <scope ilk="function" name="delEvent" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="devicecap" />
        <scope ilk="function" name="disable" />
        <scope ilk="function" name="dndSourceStart" />
        <scope ilk="function" name="dndTargetStart" />
        <scope ilk="function" name="dndTargetStop" />
        <scope ilk="function" name="dopaint" />
        <scope ilk="function" name="dpi" />
        <scope ilk="function" name="drawBitmap" />
        <scope ilk="function" name="drawBkColor" />
        <scope ilk="function" name="drawBkColor=" />
        <scope ilk="function" name="drawChord" />
        <scope ilk="function" name="drawLine" />
        <scope ilk="function" name="drawText" />
        <scope ilk="function" name="eachFilter" />
        <scope ilk="function" name="enable" />
        <scope ilk="function" name="enabled" />
        <scope ilk="function" name="enabled=" />
        <scope ilk="function" name="enabled?" />
        <scope ilk="function" name="etc" />
        <scope ilk="function" name="etc=" />
        <scope ilk="function" name="exstyle" />
        <scope ilk="function" name="exstyle=" />
        <scope ilk="function" name="fillArc" />
        <scope ilk="function" name="fillEllipse" />
        <scope ilk="function" name="fillRect" />
        <scope ilk="function" name="fillRoundRect" />
        <scope ilk="function" name="floodfill" />
        <scope ilk="function" name="focus" />
        <scope ilk="function" name="focused?" />
        <scope ilk="function" name="getPixel" />
        <scope ilk="function" name="get_oleinterface" />
        <scope ilk="function" name="grLineTo" />
        <scope ilk="function" name="grMoveTo" />
        <scope ilk="function" name="h" />
        <scope ilk="function" name="hParent" />
        <scope ilk="function" name="hWnd" />
        <scope ilk="function" name="handle" />
        <scope ilk="function" name="hdc" />
        <scope ilk="function" name="hookedwndproc?" />
        <scope ilk="function" name="hookwndproc" />
        <scope ilk="function" name="messageBox" />
        <scope ilk="function" name="move" />
        <scope ilk="function" name="msghandler" />
        <scope ilk="function" name="opaque=" />
        <scope ilk="function" name="opaque?" />
        <scope ilk="function" name="physicalsize" />
        <scope ilk="function" name="popupMenu" />
        <scope ilk="function" name="postMessage" />
        <scope ilk="function" name="properties" />
        <scope ilk="function" name="psrect" />
        <scope ilk="function" name="refresh" />
        <scope ilk="function" name="releaseCapture" />
        <scope ilk="function" name="sendMessage" />
        <scope ilk="function" name="setBrush" />
        <scope ilk="function" name="setCapture" />
        <scope ilk="function" name="setFont" />
        <scope ilk="function" name="setMenu" />
        <scope ilk="function" name="setPen" />
        <scope ilk="function" name="setPixel" />
        <scope ilk="function" name="show" />
        <scope ilk="function" name="size" />
        <scope ilk="function" name="stretch" />
        <scope ilk="function" name="stretchBitmap" />
        <scope ilk="function" name="stretchmode" />
        <scope ilk="function" name="stretchmode=" />
        <scope ilk="function" name="style" />
        <scope ilk="function" name="style=" />
        <scope ilk="function" name="textColor" />
        <scope ilk="function" name="textColor=" />
        <scope ilk="function" name="textExtent" />
        <scope ilk="function" name="top" />
        <scope ilk="function" name="unhookwndproc" />
        <scope ilk="function" name="visible=" />
        <scope ilk="function" name="visible?" />
        <scope ilk="function" name="w" />
        <scope ilk="function" name="windowrect" />
        <scope ilk="function" name="x" />
        <scope ilk="function" name="y" />
      </scope>
      <scope ilk="namespace" name="SWin">
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="to_s" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
      </scope>
      <scope ilk="namespace" name="SWinApplication">
        <scope attributes="__classmethod__" ilk="function" name="acceptable_win32ole" />
        <scope attributes="__classmethod__" ilk="function" name="arg2cstructStr" />
        <scope attributes="__classmethod__" ilk="function" name="captionheight" />
        <scope attributes="__classmethod__" ilk="function" name="changebkbrush" />
        <scope attributes="__classmethod__" ilk="function" name="cstruct2array" />
        <scope attributes="__classmethod__" ilk="function" name="cursorsizes" />
        <scope attributes="__classmethod__" ilk="function" name="dlgborders" />
        <scope attributes="__classmethod__" ilk="function" name="doevents" />
        <scope attributes="__classmethod__" ilk="function" name="eachMsghandled" />
        <scope attributes="__classmethod__" ilk="function" name="getCursor" />
        <scope attributes="__classmethod__" ilk="function" name="getDesktop" />
        <scope attributes="__classmethod__" ilk="function" name="hInstance" />
        <scope attributes="__classmethod__" ilk="function" name="iconsizes" />
        <scope attributes="__classmethod__" ilk="function" name="iunknown_to_win32ole" />
        <scope attributes="__classmethod__" ilk="function" name="lasterror" />
        <scope attributes="__classmethod__" ilk="function" name="loadpicture" />
        <scope attributes="__classmethod__" ilk="function" name="messageBox" />
        <scope attributes="__classmethod__" ilk="function" name="messageloop" />
        <scope attributes="__classmethod__" ilk="function" name="pointer2string" />
        <scope attributes="__classmethod__" ilk="function" name="pokeMemory" />
        <scope attributes="__classmethod__" ilk="function" name="removeAccel" />
        <scope attributes="__classmethod__" ilk="function" name="resizeborders" />
        <scope attributes="__classmethod__" ilk="function" name="setAccel" />
        <scope attributes="__classmethod__" ilk="function" name="setCursor" />
        <scope attributes="__classmethod__" ilk="function" name="set_lasterror" />
        <scope attributes="__classmethod__" ilk="function" name="showCursor" />
        <scope attributes="__classmethod__" ilk="function" name="swinmodule" />
        <scope attributes="__classmethod__" ilk="function" name="thread_critical" />
        <scope attributes="__classmethod__" ilk="function" name="thread_critical=" />
        <scope attributes="__classmethod__" ilk="function" name="unpack" />
        <scope attributes="__classmethod__" ilk="function" name="waitmessage" />
        <scope attributes="__classmethod__" ilk="function" name="winborders" />
        <scope attributes="__classmethod__" ilk="function" name="windowcount" />
        <scope attributes="__classmethod__" ilk="function" name="winminimums" />
        <scope attributes="__classmethod__" ilk="function" name="winpath" />
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="acceptable_win32ole" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="arg2cstructStr" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="captionheight" />
        <scope ilk="function" name="changebkbrush" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="cstruct2array" />
        <scope ilk="function" name="cursorsizes" />
        <scope ilk="function" name="dlgborders" />
        <scope ilk="function" name="doevents" />
        <scope ilk="function" name="eachMsghandled" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="getCursor" />
        <scope ilk="function" name="getDesktop" />
        <scope ilk="function" name="hInstance" />
        <scope ilk="function" name="iconsizes" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="iunknown_to_win32ole" />
        <scope ilk="function" name="lasterror" />
        <scope ilk="function" name="loadpicture" />
        <scope ilk="function" name="messageBox" />
        <scope ilk="function" name="messageloop" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="pointer2string" />
        <scope ilk="function" name="pokeMemory" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="removeAccel" />
        <scope ilk="function" name="resizeborders" />
        <scope ilk="function" name="setAccel" />
        <scope ilk="function" name="setCursor" />
        <scope ilk="function" name="set_lasterror" />
        <scope ilk="function" name="showCursor" />
        <scope ilk="function" name="swinmodule" />
        <scope ilk="function" name="thread_critical" />
        <scope ilk="function" name="thread_critical=" />
        <scope ilk="function" name="to_s" />
        <scope ilk="function" name="unpack" />
        <scope ilk="function" name="waitmessage" />
        <scope ilk="function" name="winborders" />
        <scope ilk="function" name="windowcount" />
        <scope ilk="function" name="winminimums" />
        <scope ilk="function" name="winpath" />
      </scope>
      <scope classrefs="Object" ilk="class" name="SWinBitmap">
        <scope attributes="__classmethod__" ilk="function" name="_load" />
        <scope attributes="__classmethod__" ilk="function" name="createBitmap" />
        <scope attributes="__classmethod__" ilk="function" name="loadFile" />
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope attributes="__classmethod__" ilk="function" name="newBitmap" />
        <scope ilk="function" name="[]" />
        <scope ilk="function" name="[]=" />
        <scope ilk="function" name="_dump" />
        <scope ilk="function" name="bitcount" />
        <scope ilk="function" name="bmpStr" />
        <scope ilk="function" name="height" />
        <scope ilk="function" name="infoStr" />
        <scope ilk="function" name="infoandbmp" />
        <scope ilk="function" name="saveFile" />
        <scope ilk="function" name="to_fullcolor" />
        <scope ilk="function" name="width" />
      </scope>
      <scope classrefs="Object" ilk="class" name="SWinMSG">
        <scope ilk="function" name="hWnd" />
        <scope ilk="function" name="lParam" />
        <scope ilk="function" name="lParam=" />
        <scope ilk="function" name="msg" />
        <scope ilk="function" name="msg=" />
        <scope ilk="function" name="retval" />
        <scope ilk="function" name="retval=" />
        <scope ilk="function" name="wParam" />
        <scope ilk="function" name="wParam=" />
      </scope>
      <scope classrefs="Object" ilk="class" name="SWinMenu">
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope ilk="function" name="append" />
        <scope ilk="function" name="application" />
        <scope ilk="function" name="count" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="each_item" />
        <scope ilk="function" name="getState" />
        <scope ilk="function" name="handle" />
        <scope ilk="function" name="hmenu" />
        <scope ilk="function" name="insert" />
        <scope ilk="function" name="modify" />
        <scope ilk="function" name="setChecked" />
        <scope ilk="function" name="setState" />
      </scope>
      <scope classrefs="Interrupt" ilk="class" name="SWinMsgloopInterrupt" />
      <scope classrefs="SWin::ResourceNotExistError" ilk="class" name="WindowNotExistError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="syck">
      <scope ilk="namespace" name="YAML">
        <scope ilk="namespace" name="Syck">
          <scope classrefs="Object" ilk="class" name="BadAlias">
            <scope ilk="function" name="between?" />
            <scope ilk="function" name="name=" />
            <import symbol="Comparable" />
          </scope>
          <scope classrefs="Object" ilk="class" name="DefaultKey" />
          <scope classrefs="Object" ilk="class" name="Emitter">
            <scope ilk="function" name="emit" />
            <scope ilk="function" name="level" />
            <scope ilk="function" name="level=" />
            <scope ilk="function" name="node_export" />
            <scope ilk="function" name="reset" />
            <scope ilk="function" name="set_resolver" />
          </scope>
          <scope classrefs="YAML::Syck::Node" ilk="class" name="Map">
            <scope ilk="function" name="add" />
            <scope ilk="function" name="style=" />
            <scope ilk="function" name="value=" />
          </scope>
          <scope classrefs="Object" ilk="class" name="MergeKey" />
          <scope classrefs="Object" ilk="class" name="Node">
            <scope ilk="function" name="emitter" />
            <scope ilk="function" name="emitter=" />
            <scope ilk="function" name="kind" />
            <scope ilk="function" name="resolver" />
            <scope ilk="function" name="resolver=" />
            <scope ilk="function" name="transform" />
            <scope ilk="function" name="type_id" />
            <scope ilk="function" name="type_id=" />
            <scope ilk="function" name="value" />
          </scope>
          <scope classrefs="Object" ilk="class" name="Out">
            <scope ilk="function" name="emitter" />
            <scope ilk="function" name="emitter=" />
            <scope ilk="function" name="map" />
            <scope ilk="function" name="scalar" />
            <scope ilk="function" name="seq" />
          </scope>
          <scope classrefs="Object" ilk="class" name="Parser">
            <scope ilk="function" name="bufsize" />
            <scope ilk="function" name="bufsize=" />
            <scope ilk="function" name="input" />
            <scope ilk="function" name="input=" />
            <scope ilk="function" name="load" />
            <scope ilk="function" name="load_documents" />
            <scope ilk="function" name="options" />
            <scope ilk="function" name="options=" />
            <scope ilk="function" name="resolver" />
            <scope ilk="function" name="resolver=" />
            <scope ilk="function" name="set_resolver" />
          </scope>
          <scope classrefs="Object" ilk="class" name="Resolver">
            <scope ilk="function" name="add_type" />
            <scope ilk="function" name="detect_implicit" />
            <scope ilk="function" name="node_import" />
            <scope ilk="function" name="tags" />
            <scope ilk="function" name="tags=" />
            <scope ilk="function" name="tagurize" />
            <scope ilk="function" name="transfer" />
            <scope ilk="function" name="use_types_at" />
          </scope>
          <scope classrefs="YAML::Syck::Node" ilk="class" name="Scalar">
            <scope ilk="function" name="style=" />
            <scope ilk="function" name="value=" />
          </scope>
          <scope classrefs="YAML::Syck::Node" ilk="class" name="Seq">
            <scope ilk="function" name="add" />
            <scope ilk="function" name="style=" />
            <scope ilk="function" name="value=" />
          </scope>
          <scope ilk="function" name="compile" />
          <variable attributes="__const__" citdl="YAML::Syck::Resolver" name="DefaultResolver" />
          <variable attributes="__const__" citdl="YAML::Syck::Resolver" name="GenericResolver" />
          <variable attributes="__const__" citdl="String" name="VERSION" />
        </scope>
        <scope classrefs="Object" ilk="class" name="DomainType">
          <scope ilk="function" name="domain" />
          <scope ilk="function" name="domain=" />
          <scope ilk="function" name="type_id" />
          <scope ilk="function" name="type_id=" />
          <scope ilk="function" name="value" />
          <scope ilk="function" name="value=" />
        </scope>
        <scope ilk="class" name="Object">
          <scope ilk="function" name="==" />
          <scope ilk="function" name="===" />
          <scope ilk="function" name="=~" />
          <scope ilk="function" name="__id__" />
          <scope ilk="function" name="__send__" />
          <scope ilk="function" name="class" />
          <scope ilk="function" name="class=" />
          <scope ilk="function" name="clone" />
          <scope ilk="function" name="display" />
          <scope ilk="function" name="dup" />
          <scope ilk="function" name="eql?" />
          <scope ilk="function" name="equal?" />
          <scope ilk="function" name="extend" />
          <scope ilk="function" name="freeze" />
          <scope ilk="function" name="frozen?" />
          <scope ilk="function" name="hash" />
          <scope ilk="function" name="id" />
          <scope ilk="function" name="inspect" />
          <scope ilk="function" name="instance_eval" />
          <scope ilk="function" name="instance_of?" />
          <scope ilk="function" name="instance_variable_get" />
          <scope ilk="function" name="instance_variable_set" />
          <scope ilk="function" name="instance_variables" />
          <scope ilk="function" name="is_a?" />
          <scope ilk="function" name="ivars" />
          <scope ilk="function" name="ivars=" />
          <scope ilk="function" name="kind_of?" />
          <scope ilk="function" name="method" />
          <scope ilk="function" name="methods" />
          <scope ilk="function" name="nil?" />
          <scope ilk="function" name="object_id" />
          <scope ilk="function" name="private_methods" />
          <scope ilk="function" name="protected_methods" />
          <scope ilk="function" name="public_methods" />
          <scope ilk="function" name="respond_to?" />
          <scope ilk="function" name="send" />
          <scope ilk="function" name="singleton_methods" />
          <scope ilk="function" name="taint" />
          <scope ilk="function" name="tainted?" />
          <scope ilk="function" name="to_a" />
          <scope ilk="function" name="to_s" />
          <scope ilk="function" name="type" />
          <scope ilk="function" name="untaint" />
          <scope ilk="function" name="yaml_initialize" />
        </scope>
        <scope classrefs="Object" ilk="class" name="PrivateType">
          <scope ilk="function" name="type_id" />
          <scope ilk="function" name="type_id=" />
          <scope ilk="function" name="value" />
          <scope ilk="function" name="value=" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tcltklib">
      <scope ilk="namespace" name="TclTkLib">
        <scope ilk="namespace" name="EventFlag">
          <variable attributes="__const__" citdl="Fixnum" name="ALL" />
          <variable attributes="__const__" citdl="Fixnum" name="DONT_WAIT" />
          <variable attributes="__const__" citdl="Fixnum" name="FILE" />
          <variable attributes="__const__" citdl="Fixnum" name="IDLE" />
          <variable attributes="__const__" citdl="Fixnum" name="NONE" />
          <variable attributes="__const__" citdl="Fixnum" name="TIMER" />
          <variable attributes="__const__" citdl="Fixnum" name="WINDOW" />
        </scope>
        <scope ilk="namespace" name="VarAccessFlag">
          <variable attributes="__const__" citdl="Fixnum" name="APPEND_VALUE" />
          <variable attributes="__const__" citdl="Fixnum" name="GLOBAL_ONLY" />
          <variable attributes="__const__" citdl="Fixnum" name="LEAVE_ERR_MSG" />
          <variable attributes="__const__" citdl="Fixnum" name="LIST_ELEMENT" />
          <variable attributes="__const__" citdl="Fixnum" name="NAMESPACE_ONLY" />
          <variable attributes="__const__" citdl="Fixnum" name="NONE" />
          <variable attributes="__const__" citdl="Fixnum" name="PARSE_VARNAME" />
        </scope>
        <scope ilk="function" name="_conv_listelement" />
        <scope ilk="function" name="_fromUTF8" />
        <scope ilk="function" name="_merge_tklist" />
        <scope ilk="function" name="_split_tklist" />
        <scope ilk="function" name="_subst_Tcl_backslash" />
        <scope ilk="function" name="_subst_UTF_backslash" />
        <scope ilk="function" name="_toUTF8" />
        <scope ilk="function" name="do_one_event" />
        <scope ilk="function" name="do_thread_callback" />
        <scope ilk="function" name="encoding" />
        <scope ilk="function" name="encoding=" />
        <scope ilk="function" name="encoding_system" />
        <scope ilk="function" name="encoding_system=" />
        <scope ilk="function" name="get_eventloop_tick" />
        <scope ilk="function" name="get_eventloop_weight" />
        <scope ilk="function" name="get_no_event_wait" />
        <scope ilk="function" name="mainloop" />
        <scope ilk="function" name="mainloop_abort_on_exception" />
        <scope ilk="function" name="mainloop_abort_on_exception=" />
        <scope ilk="function" name="mainloop_thread?" />
        <scope ilk="function" name="mainloop_watchdog" />
        <scope ilk="function" name="num_of_mainwindows" />
        <scope ilk="function" name="set_eventloop_tick" />
        <scope ilk="function" name="set_eventloop_weight" />
        <scope ilk="function" name="set_max_block_time" />
        <scope ilk="function" name="set_no_event_wait" />
        <variable attributes="__const__" citdl="String" name="COMPILE_INFO" />
        <variable attributes="__const__" citdl="String" name="FINALIZE_PROC_NAME" />
        <variable attributes="__const__" citdl="String" name="RELEASE_DATE" />
      </scope>
      <scope classrefs="Object" ilk="class" name="TclTkIp">
        <scope ilk="function" name="_conv_listelement" />
        <scope ilk="function" name="_create_console" />
        <scope ilk="function" name="_eval" />
        <scope ilk="function" name="_fromUTF8" />
        <scope ilk="function" name="_get_global_var" />
        <scope ilk="function" name="_get_global_var2" />
        <scope ilk="function" name="_get_variable" />
        <scope ilk="function" name="_get_variable2" />
        <scope ilk="function" name="_immediate_invoke" />
        <scope ilk="function" name="_invoke" />
        <scope ilk="function" name="_merge_tklist" />
        <scope ilk="function" name="_return_value" />
        <scope ilk="function" name="_set_global_var" />
        <scope ilk="function" name="_set_global_var2" />
        <scope ilk="function" name="_set_variable" />
        <scope ilk="function" name="_set_variable2" />
        <scope ilk="function" name="_split_tklist" />
        <scope ilk="function" name="_thread_tkwait" />
        <scope ilk="function" name="_thread_vwait" />
        <scope ilk="function" name="_toUTF8" />
        <scope ilk="function" name="_unset_global_var" />
        <scope ilk="function" name="_unset_global_var2" />
        <scope ilk="function" name="_unset_variable" />
        <scope ilk="function" name="_unset_variable2" />
        <scope ilk="function" name="allow_ruby_exit=" />
        <scope ilk="function" name="allow_ruby_exit?" />
        <scope ilk="function" name="create_slave" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="deleted?" />
        <scope ilk="function" name="do_one_event" />
        <scope ilk="function" name="get_eventloop_tick" />
        <scope ilk="function" name="get_eventloop_weight" />
        <scope ilk="function" name="get_no_event_wait" />
        <scope ilk="function" name="has_mainwindow?" />
        <scope ilk="function" name="invalid_namespace?" />
        <scope ilk="function" name="mainloop" />
        <scope ilk="function" name="mainloop_abort_on_exception" />
        <scope ilk="function" name="mainloop_abort_on_exception=" />
        <scope ilk="function" name="mainloop_watchdog" />
        <scope ilk="function" name="make_safe" />
        <scope ilk="function" name="restart" />
        <scope ilk="function" name="safe?" />
        <scope ilk="function" name="set_eventloop_tick" />
        <scope ilk="function" name="set_eventloop_weight" />
        <scope ilk="function" name="set_max_block_time" />
        <scope ilk="function" name="set_no_event_wait" />
        <scope ilk="function" name="slave_of?" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="TkCallbackBreak" />
      <scope classrefs="StandardError" ilk="class" name="TkCallbackContinue" />
      <scope classrefs="TkLocalJumpError" ilk="class" name="TkCallbackRedo" />
      <scope classrefs="TkLocalJumpError" ilk="class" name="TkCallbackRetry" />
      <scope classrefs="StandardError" ilk="class" name="TkCallbackReturn" />
      <scope classrefs="TkLocalJumpError" ilk="class" name="TkCallbackThrow" />
      <scope classrefs="LocalJumpError" ilk="class" name="TkLocalJumpError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkutil">
      <scope ilk="namespace" name="TclTkLib">
        <scope ilk="namespace" name="EventFlag">
          <variable attributes="__const__" citdl="Fixnum" name="ALL" />
          <variable attributes="__const__" citdl="Fixnum" name="DONT_WAIT" />
          <variable attributes="__const__" citdl="Fixnum" name="FILE" />
          <variable attributes="__const__" citdl="Fixnum" name="IDLE" />
          <variable attributes="__const__" citdl="Fixnum" name="NONE" />
          <variable attributes="__const__" citdl="Fixnum" name="TIMER" />
          <variable attributes="__const__" citdl="Fixnum" name="WINDOW" />
        </scope>
        <scope ilk="namespace" name="VarAccessFlag">
          <variable attributes="__const__" citdl="Fixnum" name="APPEND_VALUE" />
          <variable attributes="__const__" citdl="Fixnum" name="GLOBAL_ONLY" />
          <variable attributes="__const__" citdl="Fixnum" name="LEAVE_ERR_MSG" />
          <variable attributes="__const__" citdl="Fixnum" name="LIST_ELEMENT" />
          <variable attributes="__const__" citdl="Fixnum" name="NAMESPACE_ONLY" />
          <variable attributes="__const__" citdl="Fixnum" name="NONE" />
          <variable attributes="__const__" citdl="Fixnum" name="PARSE_VARNAME" />
        </scope>
        <scope ilk="function" name="_conv_listelement" />
        <scope ilk="function" name="_fromUTF8" />
        <scope ilk="function" name="_merge_tklist" />
        <scope ilk="function" name="_split_tklist" />
        <scope ilk="function" name="_subst_Tcl_backslash" />
        <scope ilk="function" name="_subst_UTF_backslash" />
        <scope ilk="function" name="_toUTF8" />
        <scope ilk="function" name="do_one_event" />
        <scope ilk="function" name="do_thread_callback" />
        <scope ilk="function" name="encoding" />
        <scope ilk="function" name="encoding=" />
        <scope ilk="function" name="encoding_system" />
        <scope ilk="function" name="encoding_system=" />
        <scope ilk="function" name="get_eventloop_tick" />
        <scope ilk="function" name="get_eventloop_weight" />
        <scope ilk="function" name="get_no_event_wait" />
        <scope ilk="function" name="mainloop" />
        <scope ilk="function" name="mainloop_abort_on_exception" />
        <scope ilk="function" name="mainloop_abort_on_exception=" />
        <scope ilk="function" name="mainloop_thread?" />
        <scope ilk="function" name="mainloop_watchdog" />
        <scope ilk="function" name="num_of_mainwindows" />
        <scope ilk="function" name="set_eventloop_tick" />
        <scope ilk="function" name="set_eventloop_weight" />
        <scope ilk="function" name="set_max_block_time" />
        <scope ilk="function" name="set_no_event_wait" />
        <variable attributes="__const__" citdl="String" name="COMPILE_INFO" />
        <variable attributes="__const__" citdl="String" name="FINALIZE_PROC_NAME" />
        <variable attributes="__const__" citdl="String" name="RELEASE_DATE" />
      </scope>
      <scope ilk="namespace" name="TkUtil">
        <scope classrefs="Object" ilk="class" name="CallbackSubst">
          <scope classrefs="Object" ilk="class" name="Info" />
          <variable attributes="__const__" citdl="TkUtil::CallbackSubst::Info" name="SUBST_INFO" />
        </scope>
        <scope ilk="function" name="_conv_args" />
        <scope ilk="function" name="_fromUTF8" />
        <scope ilk="function" name="_get_eval_enc_str" />
        <scope ilk="function" name="_get_eval_string" />
        <scope ilk="function" name="_symbolkey2str" />
        <scope ilk="function" name="_toUTF8" />
        <scope ilk="function" name="bool" />
        <scope ilk="function" name="callback" />
        <scope ilk="function" name="eval_cmd" />
        <scope ilk="function" name="hash_kv" />
        <scope ilk="function" name="install_cmd" />
        <scope ilk="function" name="num_or_str" />
        <scope ilk="function" name="number" />
        <scope ilk="function" name="string" />
        <scope ilk="function" name="uninstall_cmd" />
        <variable attributes="__const__" citdl="Object" name="None" />
        <variable attributes="__const__" citdl="String" name="RELEASE_DATE" />
      </scope>
      <scope classrefs="Object" ilk="class" name="TclTkIp">
        <scope ilk="function" name="_conv_listelement" />
        <scope ilk="function" name="_create_console" />
        <scope ilk="function" name="_eval" />
        <scope ilk="function" name="_fromUTF8" />
        <scope ilk="function" name="_get_global_var" />
        <scope ilk="function" name="_get_global_var2" />
        <scope ilk="function" name="_get_variable" />
        <scope ilk="function" name="_get_variable2" />
        <scope ilk="function" name="_immediate_invoke" />
        <scope ilk="function" name="_invoke" />
        <scope ilk="function" name="_merge_tklist" />
        <scope ilk="function" name="_return_value" />
        <scope ilk="function" name="_set_global_var" />
        <scope ilk="function" name="_set_global_var2" />
        <scope ilk="function" name="_set_variable" />
        <scope ilk="function" name="_set_variable2" />
        <scope ilk="function" name="_split_tklist" />
        <scope ilk="function" name="_thread_tkwait" />
        <scope ilk="function" name="_thread_vwait" />
        <scope ilk="function" name="_toUTF8" />
        <scope ilk="function" name="_unset_global_var" />
        <scope ilk="function" name="_unset_global_var2" />
        <scope ilk="function" name="_unset_variable" />
        <scope ilk="function" name="_unset_variable2" />
        <scope ilk="function" name="allow_ruby_exit=" />
        <scope ilk="function" name="allow_ruby_exit?" />
        <scope ilk="function" name="create_slave" />
        <scope ilk="function" name="delete" />
        <scope ilk="function" name="deleted?" />
        <scope ilk="function" name="do_one_event" />
        <scope ilk="function" name="get_eventloop_tick" />
        <scope ilk="function" name="get_eventloop_weight" />
        <scope ilk="function" name="get_no_event_wait" />
        <scope ilk="function" name="has_mainwindow?" />
        <scope ilk="function" name="invalid_namespace?" />
        <scope ilk="function" name="mainloop" />
        <scope ilk="function" name="mainloop_abort_on_exception" />
        <scope ilk="function" name="mainloop_abort_on_exception=" />
        <scope ilk="function" name="mainloop_watchdog" />
        <scope ilk="function" name="make_safe" />
        <scope ilk="function" name="restart" />
        <scope ilk="function" name="safe?" />
        <scope ilk="function" name="set_eventloop_tick" />
        <scope ilk="function" name="set_eventloop_weight" />
        <scope ilk="function" name="set_max_block_time" />
        <scope ilk="function" name="set_no_event_wait" />
        <scope ilk="function" name="slave_of?" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="TkCallbackBreak" />
      <scope classrefs="StandardError" ilk="class" name="TkCallbackContinue" />
      <scope classrefs="TkKernel" ilk="class" name="TkCallbackEntry" />
      <scope classrefs="TkLocalJumpError" ilk="class" name="TkCallbackRedo" />
      <scope classrefs="TkLocalJumpError" ilk="class" name="TkCallbackRetry" />
      <scope classrefs="StandardError" ilk="class" name="TkCallbackReturn" />
      <scope classrefs="TkLocalJumpError" ilk="class" name="TkCallbackThrow" />
      <scope classrefs="Object" ilk="class" name="TkKernel" />
      <scope classrefs="LocalJumpError" ilk="class" name="TkLocalJumpError" />
      <scope classrefs="TkKernel" ilk="class" name="TkObject">
        <scope ilk="function" name="path" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="Win32API">
      <scope classrefs="Object" ilk="class" name="Win32API">
        <scope ilk="function" name="Call" />
        <scope ilk="function" name="call" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole">
      <scope classrefs="Object" doc="WIN32OLE objects represent OLE Automation object in Ruby." ilk="class" name="WIN32OLE">
        <scope ilk="namespace" name="VARIANT">
          <variable attributes="__const__" citdl="Fixnum" name="VT_ARRAY" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_BOOL" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_BSTR" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_BYREF" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_CY" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_DATE" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_DISPATCH" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_ERROR" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_I1" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_I2" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_I4" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_INT" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_PTR" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_R4" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_R8" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_UI1" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_UI2" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_UI4" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_UINT" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_UNKNOWN" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_USERDEFINED" />
          <variable attributes="__const__" citdl="Fixnum" name="VT_VARIANT" />
        </scope>
        <scope attributes="__classmethod__" doc="Returns current codepage." ilk="function" name="codepage" signature="WIN32OLE.codepage" />
        <scope attributes="__classmethod__" doc="Sets current codepage." ilk="function" name="codepage=" signature="WIN32OLE.codepage = CP" />
        <scope attributes="__classmethod__" doc="Returns running OLE Automation object or WIN32OLE object&#xA;from moniker. 1st argument should be OLE program id or class&#xA;id or moniker." ilk="function" name="connect" signature="WIN32OLE.connect( ole ) --&gt; aWIN32OLE" />
        <scope attributes="__classmethod__" doc="Defines the constants of OLE Automation server as mod&apos;s&#xA;constants. The first argument is WIN32OLE object or type&#xA;library name." ilk="function" name="const_load" signature="WIN32OLE.const_load( ole, mod = WIN32OLE)" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new WIN32OLE object(OLE Automation object). The&#xA;first argument server specifies OLE Automation server." ilk="function" name="new" signature="WIN32OLE.new(server, [host]) -&gt; WIN32OLE object" />
        <scope attributes="__classmethod__" doc="Invokes Release method of Dispatch interface of WIN32OLE&#xA;object. You should not use this method because this method&#xA;exists only for debugging WIN32OLE." ilk="function" name="ole_free" signature="WIN32OLE.ole_free(aWIN32OLE) --&gt; number" />
        <scope attributes="__classmethod__" doc="Returns reference counter of Dispatch interface of WIN32OLE&#xA;object. You should not use this method because this method&#xA;exists only for debugging WIN32OLE." ilk="function" name="ole_reference_count" signature="WIN32OLE.ole_reference_count(aWIN32OLE) --&gt; number" />
        <scope attributes="__classmethod__" doc="Displays helpfile. The 1st argument specifies WIN32OLE_TYPE&#xA;object or WIN32OLE_METHOD object or helpfile." ilk="function" name="ole_show_help" signature="WIN32OLE.ole_show_help(obj [,helpcontext])" />
        <scope doc="Returns property of OLE object." ilk="function" name="[]" signature="WIN32OLE[&apos;property&apos;] " />
        <scope doc="Sets property of OLE object. When you want to set property&#xA;with argument, you can use this method." ilk="function" name="[]=" signature="WIN32OLE[&apos;property&apos;]=val &#xA;WIN32OLE.setproperty(&apos;property&apos;, [arg1, arg2,...] val)" />
        <scope doc="Runs the early binding method to get property. The 1st&#xA;argument specifies dispatch ID, the 2nd argument specifies&#xA;the array of arguments, the 3rd argument specifies the array&#xA;of the type of arguments." ilk="function" name="_getproperty" signature="WIN32OLE#_getproperty(dispid, args, types)" />
        <scope doc="Runs the early binding method. The 1st argument specifies&#xA;dispatch ID, the 2nd argument specifies the array of&#xA;arguments, the 3rd argument specifies the array of the type&#xA;of arguments." ilk="function" name="_invoke" signature="WIN32OLE#_invoke(dispid, args, types)" />
        <scope doc="Runs the early binding method to set property. The 1st&#xA;argument specifies dispatch ID, the 2nd argument specifies&#xA;the array of arguments, the 3rd argument specifies the array&#xA;of the type of arguments." ilk="function" name="_setproperty" signature="WIN32OLE#_setproperty(dispid, args, types)" />
        <scope doc="Iterates over each item of OLE collection which has&#xA;IEnumVARIANT interface." ilk="function" name="each" signature="WIN32OLE#each {|i|...}" />
        <scope doc="Runs OLE method. The first argument specifies the method&#xA;name of OLE Automation object." ilk="function" name="invoke" signature="WIN32OLE#invoke(method, [arg1,...])  =&gt; return value of method." />
        <scope doc="Calls WIN32OLE#invoke method." ilk="function" name="method_missing" signature="WIN32OLE#method_missing(id [,arg1, arg2, ...])" />
        <scope doc="invokes Release method of Dispatch interface of WIN32OLE&#xA;object. Usually, you do not need to call this method because&#xA;Release method called automatically when WIN32OLE object&#xA;garbaged." ilk="function" name="ole_free" signature="WIN32OLE#ole_free" />
        <scope doc="Returns the array of WIN32OLE_METHOD object . The element of&#xA;the array is functional method of WIN32OLE object." ilk="function" name="ole_func_methods" signature="WIN32OLE#ole_func_methods" />
        <scope doc="Returns the array of WIN32OLE_METHOD object . The element of&#xA;the array is property (gettable) of WIN32OLE object." ilk="function" name="ole_get_methods" signature="WIN32OLE#ole_get_methods" />
        <scope doc="Returns WIN32OLE_METHOD object corresponding with method&#xA;specified by 1st argument." ilk="function" name="ole_method" signature="WIN32OLE#ole_method_help(method)" />
        <scope doc="Alias for #ole_method" ilk="function" name="ole_method_help" signature="(p1)" />
        <scope doc="Returns the array of WIN32OLE_METHOD object. The element is&#xA;OLE method of WIN32OLE object." ilk="function" name="ole_methods" signature="WIN32OLE#ole_methods" />
        <scope doc="Returns WIN32OLE_TYPE object." ilk="function" name="ole_obj_help" signature="WIN32OLE#ole_obj_help" />
        <scope doc="Returns the array of WIN32OLE_METHOD object . The element of&#xA;the array is property (settable) of WIN32OLE object." ilk="function" name="ole_put_methods" signature="WIN32OLE#ole_put_methods" />
        <scope doc="Sets property of OLE object. When you want to set property&#xA;with argument, you can use this method." ilk="function" name="setproperty" signature="WIN32OLE[&apos;property&apos;]=val &#xA;WIN32OLE.setproperty(&apos;property&apos;, [arg1, arg2,...] val)" />
        <variable attributes="__const__" citdl="Fixnum" name="CP_THREAD_ACP" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlparser">
      <scope ilk="namespace" name="XML">
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="to_s" />
      </scope>
      <scope classrefs="Object" ilk="class" name="XMLEncoding">
        <scope ilk="function" name="convert" />
        <scope ilk="function" name="map" />
      </scope>
      <scope classrefs="Object" ilk="class" name="XMLParser">
        <scope attributes="__classmethod__" ilk="function" name="expatVersion" />
        <scope attributes="__classmethod__" ilk="function" name="getFeatureList" />
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope ilk="function" name="byteCount" />
        <scope ilk="function" name="byteIndex" />
        <scope ilk="function" name="column" />
        <scope ilk="function" name="defaultCurrent" />
        <scope ilk="function" name="done" />
        <scope ilk="function" name="getBase" />
        <scope ilk="function" name="getIdAttribute" />
        <scope ilk="function" name="getInputContext" />
        <scope ilk="function" name="getSpecifiedAttributes" />
        <scope ilk="function" name="line" />
        <scope ilk="function" name="parse" />
        <scope ilk="function" name="reset" />
        <scope ilk="function" name="setBase" />
        <scope ilk="function" name="setParamEntityParsing" />
        <scope ilk="function" name="setReturnNSTriplet" />
        <scope ilk="function" name="useForeignDTD" />
        <variable attributes="__const__" citdl="Symbol" name="ATTLIST_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="CDATA" />
        <variable attributes="__const__" citdl="Symbol" name="COMMENT" />
        <variable attributes="__const__" citdl="Symbol" name="DEFAULT" />
        <variable attributes="__const__" citdl="Symbol" name="ELEMENT_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="END_CDATA" />
        <variable attributes="__const__" citdl="Symbol" name="END_DOCTYPE_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="END_ELEM" />
        <variable attributes="__const__" citdl="Symbol" name="END_NAMESPACE_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="ENTITY_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="EXTERNAL_ENTITY_REF" />
        <variable attributes="__const__" citdl="Symbol" name="NOTATION_DECL" />
        <variable attributes="__const__" citdl="TrueClass" name="PARAM_ENTITY_PARSING_ALWAYS" />
        <variable attributes="__const__" citdl="FalseClass" name="PARAM_ENTITY_PARSING_NEVER" />
        <variable attributes="__const__" citdl="Fixnum" name="PARAM_ENTITY_PARSING_UNLESS_STANDALONE" />
        <variable attributes="__const__" citdl="Symbol" name="PI" />
        <variable attributes="__const__" citdl="Symbol" name="SKIPPED_ENTITY" />
        <variable attributes="__const__" citdl="Symbol" name="START_CDATA" />
        <variable attributes="__const__" citdl="Symbol" name="START_DOCTYPE_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="START_ELEM" />
        <variable attributes="__const__" citdl="Symbol" name="START_NAMESPACE_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="UNPARSED_ENTITY_DECL" />
        <variable attributes="__const__" citdl="Symbol" name="XML_DECL" />
      </scope>
      <scope classrefs="StandardError" ilk="class" name="XMLParserError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="zlib">
      <scope doc="The Zlib module contains several classes for compressing and&#xA;decompressing streams, and for working with &quot;gzip&quot; files." ilk="namespace" name="Zlib">
        <scope classrefs="Zlib::ZStream" doc="Zlib:Inflate is the class for decompressing compressed data.&#xA;Unlike Zlib::Deflate, an instance of this class is not able&#xA;to duplicate (clone, dup) itself." ilk="class" name="Inflate">
          <scope attributes="__classmethod__" doc="Decompresses string. Raises a Zlib::NeedDict exception if a&#xA;preset dictionary is needed for decompression." ilk="function" name="inflate" signature=" Zlib::Inflate.inflate(string)" />
          <scope attributes="__classmethod__ __ctor__" doc="Creates a new inflate stream for decompression. See zlib.h&#xA;for details of the argument." ilk="function" name="new" signature=" Zlib::Inflate.new(window_bits)" />
          <scope doc="Same as IO." ilk="function" name="&lt;&lt;" signature="(p1)" />
          <scope doc="Inputs string into the inflate stream and returns the output&#xA;from the stream. Calling this method, both the input and the&#xA;output buffer of the stream are flushed." ilk="function" name="inflate" signature=" inflate(string)" />
          <scope doc="Sets the preset dictionary and returns string. This method&#xA;is available just only after a Zlib::NeedDict exception was&#xA;raised." ilk="function" name="set_dictionary" signature="(p1)" />
          <scope doc="Inputs string into the end of input buffer and skips data&#xA;until a full flush point can be found. If the point is found&#xA;in the buffer, this method flushes the buffer and returns&#xA;false." ilk="function" name="sync" signature=" sync(string)" />
          <scope doc="Quoted verbatim from original documentation:" ilk="function" name="sync_point?" signature="()" />
        </scope>
        <scope classrefs="Zlib::ZStream" doc="Zlib::Deflate is the class for compressing data. See&#xA;Zlib::Stream for more information." ilk="class" name="Deflate">
          <scope attributes="__classmethod__" doc="Compresses the given string. Valid values of level are&#xA;Zlib::NO_COMPRESSION, Zlib::BEST_SPEED,&#xA;Zlib::BEST_COMPRESSION, Zlib::DEFAULT_COMPRESSION, and an&#xA;integer from 0 to 9." ilk="function" name="deflate" signature=" Zlib::Deflate.deflate(string[, level])" />
          <scope attributes="__classmethod__ __ctor__" doc="Creates a new deflate stream for compression. See zlib.h for&#xA;details of each argument." ilk="function" name="new" signature=" Zlib::Deflate.new(level=nil, windowBits=nil, memlevel=nil, strategy=nil)" />
          <scope doc="Same as IO." ilk="function" name="&lt;&lt;" signature="(p1)" />
          <scope doc="Inputs string into the deflate stream and returns the output&#xA;from the stream. On calling this method, both the input and&#xA;the output buffers of the stream are flushed." ilk="function" name="deflate" signature=" deflate(string[, flush])" />
          <scope doc="This method is equivalent to deflate(&apos;&apos;, flush). If flush is&#xA;omitted, Zlib::SYNC_FLUSH is used as flush." ilk="function" name="flush" signature=" flush(flush)" />
          <scope doc="Duplicates the deflate stream." ilk="function" name="initialize_copy" signature="()" />
          <scope doc="Changes the parameters of the deflate stream. See zlib.h for&#xA;details." ilk="function" name="params" signature=" params(level, strategy)" />
          <scope doc="Sets the preset dictionary and returns string. This method&#xA;is available just only after Zlib::Deflate.new or&#xA;Zlib::ZStream#reset method was called." ilk="function" name="set_dictionary" signature=" set_dictionary(string)" />
        </scope>
        <scope classrefs="Zlib::Error" ilk="class" name="StreamError" />
        <scope classrefs="Zlib::Error" ilk="class" name="StreamEnd" />
        <scope classrefs="Zlib::Error" ilk="class" name="DataError" />
        <scope classrefs="StandardError" doc="The superclass for all exceptions raised by Ruby/zlib." ilk="class" name="Error" />
        <scope classrefs="Zlib::Error" ilk="class" name="MemError" />
        <scope classrefs="Zlib::Error" ilk="class" name="VersionError" />
        <scope classrefs="Zlib::GzipFile" doc="Zlib::GzipReader is the class for reading a gzipped file.&#xA;GzipReader should be used an IO, or -IO-lie, object." ilk="class" name="GzipReader">
          <import symbol="Enumerable" />
          <scope attributes="__classmethod__ __ctor__" doc="Creates a GzipReader object associated with io. The&#xA;GzipReader object reads gzipped data from io, and&#xA;parses/decompresses them." ilk="function" name="new" signature=" Zlib::GzipReader.new(io)" />
          <scope attributes="__classmethod__" doc="Opens a file specified by filename as a gzipped file, and&#xA;returns a GzipReader object associated with that file.&#xA;Further details of this method are in Zlib::GzipReader.new&#xA;and ZLib::GzipReader.wrap." ilk="function" name="open" signature=" Zlib::GzipReader.open(filename) {|gz| ... }" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="each" signature="(...)" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="each_byte" signature="()" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="each_line" signature="(...)" />
          <scope ilk="function" name="eof" signature="()" />
          <scope ilk="function" name="eof?" signature="()" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="getc" signature="()" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="gets" signature="(...)" />
          <scope ilk="function" name="lineno" signature="()" />
          <scope ilk="function" name="lineno=" signature="(p1)" />
          <scope ilk="function" name="pos" signature="()" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="read" signature="(...)" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="readchar" signature="()" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="readline" signature="(...)" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="readlines" signature="(...)" />
          <scope doc="Resets the position of the file pointer to the point created&#xA;the GzipReader object. The associated IO object needs to&#xA;respond to the seek method." ilk="function" name="rewind" signature="()" />
          <scope ilk="function" name="tell" signature="()" />
          <scope doc="See Zlib::GzipReader documentation for a description." ilk="function" name="ungetc" signature="(p1)" />
          <scope doc="Returns the rest of the data which had read for parsing gzip&#xA;format, or nil if the whole gzip file is not parsed yet." ilk="function" name="unused" signature="()" />
        </scope>
        <scope classrefs="Object" doc="Zlib::ZStream is the abstract class for the stream which&#xA;handles the compressed data. The operations are defined in&#xA;the subclasses: Zlib::Deflate for compression, and&#xA;Zlib::Inflate for decompression." ilk="class" name="ZStream">
          <scope doc="Returns the adler-32 checksum." ilk="function" name="adler" signature="()" />
          <scope doc="Returns bytes of data in the input buffer. Normally, returns&#xA;0." ilk="function" name="avail_in" signature="()" />
          <scope doc="Returns number of bytes of free spaces in output buffer.&#xA;Because the free space is allocated automatically, this&#xA;method returns 0 normally." ilk="function" name="avail_out" signature="()" />
          <scope doc="Allocates size bytes of free space in the output buffer. If&#xA;there are more than size bytes already in the buffer, the&#xA;buffer is truncated." ilk="function" name="avail_out=" signature="(p1)" />
          <scope doc="Closes the stream. All operations on the closed stream will&#xA;raise an exception." ilk="function" name="close" signature="()" />
          <scope doc="Returns true if the stream is closed." ilk="function" name="closed?" signature="()" />
          <scope doc="Guesses the type of the data which have been inputed into&#xA;the stream. The returned value is either Zlib::BINARY,&#xA;Zlib::ASCII, or Zlib::UNKNOWN." ilk="function" name="data_type" signature="()" />
          <scope doc="Closes the stream. All operations on the closed stream will&#xA;raise an exception." ilk="function" name="end" signature="()" />
          <scope doc="Returns true if the stream is closed." ilk="function" name="ended?" signature="()" />
          <scope doc="Finishes the stream and flushes output buffer. See&#xA;Zlib::Deflate#finish and Zlib::Inflate#finish for details of&#xA;this behavior." ilk="function" name="finish" signature="()" />
          <scope doc="Returns true if the stream is finished." ilk="function" name="finished?" signature="()" />
          <scope doc="Flushes input buffer and returns all data in that buffer." ilk="function" name="flush_next_in" signature="()" />
          <scope doc="Flushes output buffer and returns all data in that buffer." ilk="function" name="flush_next_out" signature="()" />
          <scope doc="Resets and initializes the stream. All data in both input&#xA;and output buffer are discarded." ilk="function" name="reset" signature="()" />
          <scope doc="Returns true if the stream is finished." ilk="function" name="stream_end?" signature="()" />
          <scope doc="Returns the total bytes of the input data to the stream." ilk="function" name="total_in" signature="()" />
          <scope doc="Returns the total bytes of the output data from the stream." ilk="function" name="total_out" signature="()" />
        </scope>
        <scope classrefs="Zlib::Error" ilk="class" name="BufError" />
        <scope classrefs="Zlib::GzipFile" doc="Zlib::GzipWriter is a class for writing gzipped files.&#xA;GzipWriter should be used with an instance of IO, or IO-&#xA;like, object." ilk="class" name="GzipWriter">
          <scope attributes="__classmethod__ __ctor__" doc="Creates a GzipWriter object associated with io. level and&#xA;strategy should be the same as the arguments of&#xA;Zlib::Deflate.new." ilk="function" name="new" signature=" Zlib::GzipWriter.new(io, level, strategy)" />
          <scope attributes="__classmethod__" doc="Opens a file specified by filename for writing gzip&#xA;compressed data, and returns a GzipWriter object associated&#xA;with that file. Further details of this method are found in&#xA;Zlib::GzipWriter.new and Zlib::GzipWriter#wrap." ilk="function" name="open" signature=" Zlib::GzipWriter.open(filename, level=nil, strategy=nil) { |gz| ... }" />
          <scope doc="Document-method: &lt;&lt; Same as IO." ilk="function" name="&lt;&lt;" signature="(p1)" />
          <scope ilk="function" name="comment=" signature="(p1)" />
          <scope doc="Flushes all the internal buffers of the GzipWriter object.&#xA;The meaning of flush is same as in Zlib::Deflate#deflate." ilk="function" name="flush" signature=" flush(flush=nil)" />
          <scope ilk="function" name="mtime=" signature="(p1)" />
          <scope ilk="function" name="orig_name=" signature="(p1)" />
          <scope ilk="function" name="pos" signature="()" />
          <scope doc="Document-method: print Same as IO." ilk="function" name="print" signature="(...)" />
          <scope doc="Document-method: printf Same as IO." ilk="function" name="printf" signature="(...)" />
          <scope doc="Same as IO." ilk="function" name="putc" signature="(p1)" />
          <scope doc="Document-method: puts Same as IO." ilk="function" name="puts" signature="(...)" />
          <scope ilk="function" name="tell" signature="()" />
          <scope doc="Same as IO." ilk="function" name="write" signature="(p1)" />
        </scope>
        <scope classrefs="Object" doc="Zlib::GzipFile is an abstract class for handling a gzip&#xA;formatted compressed file. The operations are defined in the&#xA;subclasses, Zlib::GzipReader for reading, and&#xA;Zlib::GzipWriter for writing." ilk="class" name="GzipFile">
          <scope classrefs="Zlib::GzipFile::Error" doc="Raised when the data length recorded in the gzip file footer&#xA;is not equivalent to the length of the actual uncompressed&#xA;data." ilk="class" name="LengthError" />
          <scope classrefs="Zlib::Error" doc="Base class of errors that occur when processing GZIP files." ilk="class" name="Error" />
          <scope classrefs="Zlib::GzipFile::Error" doc="Raised when the CRC checksum recorded in gzip file footer is&#xA;not equivalent to the CRC checksum of the actual&#xA;uncompressed data." ilk="class" name="CRCError" />
          <scope classrefs="Zlib::GzipFile::Error" doc="Raised when gzip file footer is not found." ilk="class" name="NoFooter" />
          <scope attributes="__classmethod__" doc="See Zlib::GzipReader#wrap and Zlib::GzipWriter#wrap." ilk="function" name="wrap" signature="(...)" />
          <scope doc="Closes the GzipFile object. This method calls close method&#xA;of the associated IO object." ilk="function" name="close" signature="()" />
          <scope doc="Same as IO." ilk="function" name="closed?" signature="()" />
          <scope doc="Returns comments recorded in the gzip file header, or nil if&#xA;the comments is not present." ilk="function" name="comment" signature="()" />
          <scope doc="Returns CRC value of the uncompressed data." ilk="function" name="crc" signature="()" />
          <scope doc="Closes the GzipFile object. Unlike Zlib::GzipFile#close,&#xA;this method never calls the close method of the associated&#xA;IO object." ilk="function" name="finish" signature="()" />
          <scope doc="Returns compression level." ilk="function" name="level" signature="()" />
          <scope doc="Returns last modification time recorded in the gzip file&#xA;header." ilk="function" name="mtime" signature="()" />
          <scope doc="Returns original filename recorded in the gzip file header,&#xA;or nil if original filename is not present." ilk="function" name="orig_name" signature="()" />
          <scope doc="Returns OS code number recorded in the gzip file header." ilk="function" name="os_code" signature="()" />
          <scope doc="Same as IO." ilk="function" name="sync" signature="()" />
          <scope doc="Same as IO. If flag is true, the associated IO object must&#xA;respond to the flush method." ilk="function" name="sync=" signature=" sync = flag" />
          <scope doc="Same as IO." ilk="function" name="to_io" signature="()" />
        </scope>
        <scope classrefs="Zlib::Error" ilk="class" name="NeedDict" />
        <scope doc="Calculates Alder-32 checksum for string, and returns updated&#xA;value of adler. If string is omitted, it returns the&#xA;Adler-32 initial value." ilk="function" name="adler32" signature=" Zlib.adler32(string, adler)" />
        <scope doc="Calculates CRC checksum for string, and returns updated&#xA;value of crc. If string is omitted, it returns the CRC&#xA;initial value." ilk="function" name="crc32" signature=" Zlib.crc32(string, adler)" />
        <scope doc="Returns the table for calculating CRC checksum as an array." ilk="function" name="crc_table" signature="()" />
        <scope doc="Returns the string which represents the version of zlib&#xA;library." ilk="function" name="zlib_version" signature="()" />
        <variable attributes="__const__" citdl="Fixnum" name="ASCII" />
        <variable attributes="__const__" citdl="Fixnum" name="BEST_COMPRESSION" />
        <variable attributes="__const__" citdl="Fixnum" name="BEST_SPEED" />
        <variable attributes="__const__" citdl="Fixnum" name="BINARY" />
        <variable attributes="__const__" citdl="Fixnum" name="DEFAULT_COMPRESSION" />
        <variable attributes="__const__" citdl="Fixnum" name="DEFAULT_STRATEGY" />
        <variable attributes="__const__" citdl="Fixnum" name="DEF_MEM_LEVEL" />
        <variable attributes="__const__" citdl="Fixnum" name="FILTERED" />
        <variable attributes="__const__" citdl="Fixnum" name="FINISH" />
        <variable attributes="__const__" citdl="Fixnum" name="FULL_FLUSH" />
        <variable attributes="__const__" citdl="Fixnum" name="HUFFMAN_ONLY" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_MEM_LEVEL" />
        <variable attributes="__const__" citdl="Fixnum" name="MAX_WBITS" />
        <variable attributes="__const__" citdl="Fixnum" name="NO_COMPRESSION" />
        <variable attributes="__const__" citdl="Fixnum" name="NO_FLUSH" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_AMIGA" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_ATARI" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_CODE" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_CPM" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_MACOS" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_MSDOS" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_OS2" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_QDOS" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_RISCOS" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_TOPS20" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_UNIX" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_UNKNOWN" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_VMCMS" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_VMS" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_WIN32" />
        <variable attributes="__const__" citdl="Fixnum" name="OS_ZSYSTEM" />
        <variable attributes="__const__" citdl="Fixnum" name="SYNC_FLUSH" />
        <variable attributes="__const__" citdl="Fixnum" name="UNKNOWN" />
        <variable attributes="__const__" citdl="String" name="VERSION" />
        <variable attributes="__const__" citdl="String" name="ZLIB_VERSION" />
      </scope>
    </scope>

    <scope ilk="blob" lang="Ruby" name="yaml">
      <scope ilk="namespace" name="YAML">
        <scope attributes="__classmethod__" doc="Add a transfer method for a builtin type" ilk="function" name="add_builtin_type" signature="( type_tag, &amp;transfer_proc )" />
        <scope attributes="__classmethod__" doc="Add a global handler for a YAML domain type." ilk="function" name="add_domain_type" signature="( domain, type_tag, &amp;transfer_proc )" />
        <scope attributes="__classmethod__" doc="Add a private document type" ilk="function" name="add_private_type" signature="( type_re, &amp;transfer_proc )" />
        <scope attributes="__classmethod__" doc="Add a transfer method for a builtin type" ilk="function" name="add_ruby_type" signature="( type_tag, &amp;transfer_proc )" />
        <scope attributes="__classmethod__" doc="Detect typing of a string" ilk="function" name="detect_implicit" signature="( val )" />
        <scope attributes="__classmethod__" doc="Converts `obj&apos; to YAML and writes the YAML result to `io&apos;." ilk="function" name="dump" signature="( obj, io = nil )" />
        <scope attributes="__classmethod__" doc="Returns a YAML stream containing each of the items in objs,&#xA;each having their own document." ilk="function" name="dump_stream" signature="( *objs )" />
        <scope attributes="__classmethod__" doc="Calls `block&apos; with each consecutive document in the YAML&#xA;stream contained in `io&apos;." ilk="function" name="each_document" signature="( io, &amp;block )" />
        <scope attributes="__classmethod__" doc="Calls `block&apos; with a tree of +YAML::BaseNodes+, one tree for&#xA;each consecutive document in the YAML stream contained in&#xA;`io&apos;." ilk="function" name="each_node" signature="( io, &amp;doc_proc )" />
        <scope attributes="__classmethod__" doc="Returns a new default emitter" ilk="function" name="emitter" signature="()" />
        <scope attributes="__classmethod__" doc="Returns a new generic parser" ilk="function" name="generic_parser" signature="()" />
        <scope attributes="__classmethod__" doc="Load a document from the current `io&apos; stream." ilk="function" name="load" signature="( io )" />
        <scope attributes="__classmethod__" doc="Calls `block&apos; with each consecutive document in the YAML&#xA;stream contained in `io&apos;." ilk="function" name="load_documents" signature="( io, &amp;doc_proc )" />
        <scope attributes="__classmethod__" doc="Load a document from the file located at `filepath&apos;." ilk="function" name="load_file" signature="( filepath )" />
        <scope attributes="__classmethod__" doc="Loads all documents from the current `io&apos; stream, returning&#xA;a +YAML::Stream+ object containing all loaded documents." ilk="function" name="load_stream" signature="( io )" />
        <scope attributes="__classmethod__" doc="Allocate blank object" ilk="function" name="object_maker" signature="( obj_class, val )" />
        <scope attributes="__classmethod__" doc="Parse the first document from the current `io&apos; stream" ilk="function" name="parse" signature="( io )" />
        <scope attributes="__classmethod__" doc="Calls `block&apos; with a tree of +YAML::BaseNodes+, one tree for&#xA;each consecutive document in the YAML stream contained in&#xA;`io&apos;." ilk="function" name="parse_documents" signature="( io, &amp;doc_proc )" />
        <scope attributes="__classmethod__" doc="Parse a document from the file located at `filepath&apos;." ilk="function" name="parse_file" signature="( filepath )" />
        <scope attributes="__classmethod__" doc="Returns a new default parser" ilk="function" name="parser" signature="()" />
        <scope attributes="__classmethod__" doc="Allocate an Emitter if needed" ilk="function" name="quick_emit" signature="( oid, opts = {}, &amp;e )" />
        <scope attributes="__classmethod__" doc="Method to extract colon-seperated type and class, returning&#xA;the type and the constant of the class" ilk="function" name="read_type_class" signature="( type, obj_class )" />
        <scope attributes="__classmethod__" doc="Returns the default resolver" ilk="function" name="resolver" signature="()" />
        <scope attributes="__classmethod__" doc="Convert a type_id to a taguri" ilk="function" name="tagurize" signature="( val )" />
        <scope attributes="__classmethod__" doc="Apply a transfer method to a Ruby object" ilk="function" name="transfer" signature="( type_id, obj )" />
        <scope attributes="__classmethod__" doc="Apply any implicit a node may qualify for" ilk="function" name="try_implicit" signature="( obj )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/ypath">
      <scope doc="YAML::YPath" ilk="namespace" line="5" lineend="52" name="YAML">
        <scope classrefs="Object" ilk="class" line="7" lineend="50" name="YPath">
          <scope ilk="function" line="8" lineend="8" name="segments" />
          <scope ilk="function" line="8" lineend="8" name="segments=" />
          <scope ilk="function" line="8" lineend="8" name="predicates" />
          <scope ilk="function" line="8" lineend="8" name="predicates=" />
          <scope ilk="function" line="8" lineend="8" name="flags" />
          <scope ilk="function" line="8" lineend="8" name="flags=" />
          <scope attributes="__ctor__" ilk="function" line="9" lineend="24" name="initialize" signature="initialize( str )" />
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="49" name="each_path" signature="YPath.each_path( str )" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/yamlnode">
      <import line="4" module="yaml/basenode" symbol="*" />
      <scope doc="YAML::YamlNode class" ilk="namespace" line="6" lineend="54" name="YAML">
        <scope classrefs="Object" doc="YAML Generic Model container" ilk="class" line="11" lineend="52" name="YamlNode">
          <scope ilk="function" line="13" lineend="13" name="kind" />
          <scope ilk="function" line="13" lineend="13" name="kind=" />
          <scope ilk="function" line="13" lineend="13" name="type_id" />
          <scope ilk="function" line="13" lineend="13" name="type_id=" />
          <scope ilk="function" line="13" lineend="13" name="value" />
          <scope ilk="function" line="13" lineend="13" name="value=" />
          <scope ilk="function" line="13" lineend="13" name="anchor" />
          <scope ilk="function" line="13" lineend="13" name="anchor=" />
          <scope attributes="__ctor__" ilk="function" line="14" lineend="29" name="initialize" signature="initialize( t, v )" />
          <scope doc="Transform this node fully into a native type" ilk="function" line="34" lineend="50" name="transform" signature="transform" />
          <import symbol="BaseNode" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/types">
      <scope doc="-*- mode: ruby; ruby-indent-level: 4 -*- vim: sw=4" ilk="namespace" line="6" lineend="194" name="YAML">
        <scope classrefs="Object" doc="Default private type" ilk="class" line="11" lineend="24" name="PrivateType">
          <scope attributes="__classmethod__" ilk="function" line="12" name="tag_subclasses?" signature="self.tag_subclasses?" />
          <scope ilk="function" line="13" lineend="13" name="type_id" />
          <scope ilk="function" line="13" lineend="13" name="type_id=" />
          <scope ilk="function" line="13" lineend="13" name="value" />
          <scope ilk="function" line="13" lineend="13" name="value=" />
          <scope attributes="__ctor__" ilk="function" line="15" lineend="18" name="initialize" signature="initialize( type, val )" />
          <scope ilk="function" line="19" lineend="21" name="to_yaml" signature="to_yaml( opts = {} )" />
        </scope>
        <scope classrefs="Object" doc="Default domain type" ilk="class" line="29" lineend="42" name="DomainType">
          <scope attributes="__classmethod__" ilk="function" line="30" name="tag_subclasses?" signature="self.tag_subclasses?" />
          <scope ilk="function" line="31" lineend="31" name="domain" />
          <scope ilk="function" line="31" lineend="31" name="domain=" />
          <scope ilk="function" line="31" lineend="31" name="type_id" />
          <scope ilk="function" line="31" lineend="31" name="type_id=" />
          <scope ilk="function" line="31" lineend="31" name="value" />
          <scope ilk="function" line="31" lineend="31" name="value=" />
          <scope attributes="__ctor__" ilk="function" line="33" lineend="36" name="initialize" signature="initialize( domain, type, val )" />
          <scope ilk="function" line="37" lineend="39" name="to_yaml" signature="to_yaml( opts = {} )" />
        </scope>
        <scope classrefs="Object" doc="Unresolved objects" ilk="class" line="47" lineend="58" name="Object">
          <scope attributes="__classmethod__" ilk="function" line="48" name="tag_subclasses?" signature="self.tag_subclasses?" />
          <scope ilk="function" line="49" lineend="57" name="to_yaml" signature="to_yaml( opts = {} )" />
        </scope>
        <scope classrefs="::Hash" doc="YAML Hash class to support comments and defaults" ilk="class" line="63" lineend="81" name="SpecialHash">
          <scope ilk="function" line="64" lineend="64" name="default" />
          <scope ilk="function" line="64" lineend="64" name="default=" />
          <scope ilk="function" line="65" lineend="67" name="inspect" signature="inspect" />
          <scope ilk="function" line="68" lineend="70" name="to_s" signature="to_s" />
          <scope ilk="function" line="71" lineend="76" name="update" signature="update( h )" />
          <scope ilk="function" line="77" lineend="80" name="to_yaml" signature="to_yaml( opts = {} )" />
        </scope>
        <scope classrefs="::Array" doc="Builtin collection: !omap" ilk="class" line="86" lineend="136" name="Omap">
          <scope ilk="function" line="88" lineend="101" name="yaml_initialize" signature="yaml_initialize( tag, val )" />
          <scope ilk="function" line="102" lineend="108" name="self" signature="self." />
          <scope ilk="function" line="109" lineend="111" name="[]" signature="[]( k" />
          <scope ilk="function" line="112" lineend="120" name="[]=" signature="[]=( k" />
          <scope ilk="function" line="121" lineend="123" name="has_key?" signature="has_key?( k )" />
          <scope ilk="function" line="124" lineend="126" name="is_complex_yaml?" signature="is_complex_yaml?" />
          <scope ilk="function" line="127" lineend="135" name="to_yaml" signature="to_yaml( opts = {} )" />
        </scope>
        <scope classrefs="::Array" doc="Builtin collection: !pairs" ilk="class" line="141" lineend="186" name="Pairs">
          <scope ilk="function" line="143" lineend="156" name="yaml_initialize" signature="yaml_initialize( tag, val )" />
          <scope ilk="function" line="157" lineend="163" name="self" signature="self." />
          <scope ilk="function" line="164" lineend="166" name="[]" signature="[]( k" />
          <scope ilk="function" line="167" lineend="170" name="[]=" signature="[]=( k" />
          <scope ilk="function" line="171" lineend="173" name="has_key?" signature="has_key?( k )" />
          <scope ilk="function" line="174" lineend="176" name="is_complex_yaml?" signature="is_complex_yaml?" />
          <scope ilk="function" line="177" lineend="185" name="to_yaml" signature="to_yaml( opts = {} )" />
        </scope>
        <scope classrefs="::Hash" doc="Builtin collection: !set" ilk="class" line="191" lineend="193" name="Set" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/tag">
      <scope doc="-*- mode: ruby; ruby-indent-level: 4; tab-width: 4 -*- vim:&#xA;sw=4 ts=4 $Id: tag.rb,v 1.1.2.2 2005/09/27 22:57:53 nobu Exp&#xA;$" ilk="namespace" line="8" lineend="51" name="YAML">
        <scope attributes="__classmethod__" doc="Associates a taguri _tag_ with a Ruby class _cls_." ilk="function" line="35" lineend="40" name="tag_class" signature="YAML.tag_class( tag, cls )" />
        <scope attributes="__classmethod__" doc="Returns the complete dictionary of taguris, paired with&#xA;classes." ilk="function" line="48" lineend="50" name="tagged_classes" signature="YAML.tagged_classes" />
      </scope>
      <scope classrefs="Object" ilk="class" line="53" lineend="89" name="Module">
        <scope doc=":nodoc: all Adds a taguri _tag_ to a class, used when&#xA;dumping or loading the class in YAML." ilk="function" line="57" lineend="78" name="yaml_as" signature="yaml_as( tag, sc = true )">
          <scope ilk="function" line="61" lineend="72" name="taguri" signature="taguri" />
          <scope attributes="__classmethod__" ilk="function" line="73" lineend="74" name="yaml_tag_subclasses?" signature="self.yaml_tag_subclasses?" />
        </scope>
        <scope doc="Transforms the subclass name into a name suitable for&#xA;display in a subclassed tag." ilk="function" line="81" lineend="83" name="yaml_tag_class_name" signature="yaml_tag_class_name" />
        <scope doc="Transforms the subclass name found in the tag into a Ruby&#xA;constant name." ilk="function" line="86" lineend="88" name="yaml_tag_read_class" signature="yaml_tag_read_class( name )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/syck">
      <import line="5" module="syck" symbol="*" />
      <import line="6" module="yaml/basenode" symbol="*" />
      <scope doc="YAML::Syck module .." ilk="namespace" line="8" lineend="19" name="YAML">
        <scope ilk="namespace" line="9" lineend="18" name="Syck">
          <scope classrefs="Object" doc="Mixin BaseNode functionality" ilk="class" line="14" lineend="16" name="Node">
            <import symbol="YAML::BaseNode" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/stringio">
      <import line="5" module="stringio" symbol="*" />
      <scope classrefs="Object" doc="StringIO based on code by MoonWolf" ilk="class" line="8" lineend="50" name="StringIO">
        <scope attributes="__ctor__" ilk="function" line="9" lineend="13" name="initialize" signature="initialize(string=&quot;&quot;)" />
        <scope ilk="function" line="14" lineend="16" name="pos" signature="pos" />
        <scope ilk="function" line="17" lineend="19" name="eof" signature="eof" />
        <scope ilk="function" line="21" lineend="34" name="readline" signature="readline(rs=$/)" />
        <scope ilk="function" line="35" lineend="37" name="rewind" signature="rewind" />
        <scope ilk="function" line="38" lineend="49" name="seek" signature="seek(offset,whence)" />
      </scope>
      <scope doc="Class method for creating streams" ilk="function" line="55" lineend="60" name="YAML.make_stream" signature="YAML.make_stream( io )" />
      <scope ilk="function" line="62" lineend="64" name="io.readline" signature="io.readline" />
      <scope ilk="function" line="65" lineend="69" name="io.check_unicode" signature="io.check_unicode" />
      <scope ilk="function" line="70" lineend="72" name="io.utf_encoding" signature="io.utf_encoding" />
      <scope ilk="function" line="75" lineend="77" name="io.utf_encoding" signature="io.utf_encoding" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/stream">
      <scope ilk="namespace" line="1" lineend="40" name="YAML">
        <scope classrefs="Object" doc="YAML::Stream -- for emitting many documents" ilk="class" line="6" name="Stream">
          <scope ilk="function" line="8" lineend="8" name="documents" />
          <scope ilk="function" line="8" lineend="8" name="documents=" />
          <scope ilk="function" line="8" lineend="8" name="options" />
          <scope ilk="function" line="8" lineend="8" name="options=" />
          <scope attributes="__ctor__" ilk="function" line="10" lineend="13" name="initialize" signature="initialize( opts = {} )" />
        </scope>
        <scope ilk="function" line="15" lineend="17" name="[]" signature="[]( i" />
        <scope ilk="function" line="19" lineend="21" name="add" signature="add( doc )" />
        <scope ilk="function" line="23" lineend="25" name="edit" signature="edit( doc_num, doc )" />
        <scope ilk="function" line="27" lineend="36" name="emit" signature="emit( io = nil )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/store">
      <import line="4" module="yaml" symbol="*" />
      <import line="5" module="pstore" symbol="*" />
      <scope classrefs="Object" doc="YAML::Store" ilk="class" line="7" lineend="29" name="YAML::Store&lt;">
        <scope attributes="__ctor__" ilk="function" line="8" lineend="16" name="initialize" signature="initialize( *o )" />
        <scope ilk="function" line="18" lineend="20" name="dump" signature="dump(table)" />
        <scope ilk="function" line="22" lineend="24" name="load" signature="load(content)" />
        <scope ilk="function" line="26" lineend="28" name="load_file" signature="load_file(file)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/rubytypes">
      <import line="2" module="date" symbol="*" />
      <scope classrefs="Object" doc="-*- mode: ruby; ruby-indent-level: 4; tab-width: 4 -*- vim:&#xA;sw=4 ts=4" ilk="class" line="4" lineend="8" name="Class">
        <scope ilk="function" line="5" lineend="7" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="10" lineend="23" name="Object">
        <scope ilk="function" line="12" name="to_yaml_style" signature="to_yaml_style" />
        <scope ilk="function" line="13" name="to_yaml_properties" signature="to_yaml_properties" />
        <scope ilk="function" line="14" lineend="21" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="25" lineend="46" name="Hash">
        <scope ilk="function" line="28" lineend="36" name="yaml_initialize" signature="yaml_initialize( tag, val )" />
        <scope ilk="function" line="37" lineend="44" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="48" lineend="100" name="Struct">
        <scope attributes="__classmethod__" ilk="function" line="50" name="yaml_tag_class_name" signature="self.yaml_tag_class_name" />
        <scope attributes="__classmethod__" ilk="function" line="51" name="yaml_tag_read_class" signature="self.yaml_tag_read_class( name )" />
        <scope attributes="__classmethod__" ilk="function" line="52" lineend="84" name="yaml_new" signature="self.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="85" lineend="98" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="102" lineend="115" name="Array">
        <scope ilk="function" line="105" name="yaml_initialize" signature="yaml_initialize( tag, val )" />
        <scope ilk="function" line="106" lineend="113" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="117" lineend="136" name="Exception">
        <scope attributes="__classmethod__" ilk="function" line="119" lineend="125" name="yaml_new" signature="Exception.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="126" lineend="134" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="138" lineend="179" name="String">
        <scope ilk="function" line="142" lineend="144" name="is_complex_yaml?" signature="is_complex_yaml?" />
        <scope ilk="function" line="145" lineend="147" name="is_binary_data?" signature="is_binary_data? ( self" />
        <scope attributes="__classmethod__" ilk="function" line="148" lineend="162" name="yaml_new" signature="String.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="163" lineend="177" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="181" lineend="197" name="Symbol">
        <scope attributes="__classmethod__" ilk="function" line="184" lineend="191" name="yaml_new" signature="Symbol.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="192" lineend="195" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="199" lineend="251" name="Range">
        <scope attributes="__classmethod__" ilk="function" line="201" lineend="228" name="yaml_new" signature="Range.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="229" lineend="249" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="253" lineend="298" name="Regexp">
        <scope attributes="__classmethod__" ilk="function" line="255" lineend="277" name="yaml_new" signature="Regexp.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="278" lineend="296" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="300" lineend="345" name="Time">
        <scope attributes="__classmethod__" ilk="function" line="303" lineend="311" name="yaml_new" signature="Time.yaml_new( klass, tag, val )" />
        <scope ilk="function" line="312" lineend="343" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="347" lineend="354" name="Date">
        <scope ilk="function" line="349" lineend="352" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="356" lineend="363" name="Integer">
        <scope ilk="function" line="358" lineend="361" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="365" lineend="380" name="Float">
        <scope ilk="function" line="367" lineend="378" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="382" lineend="389" name="TrueClass">
        <scope ilk="function" line="384" lineend="387" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="391" lineend="398" name="FalseClass">
        <scope ilk="function" line="393" lineend="396" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
      <scope classrefs="Object" ilk="class" line="400" lineend="407" name="NilClass">
        <scope ilk="function" line="402" lineend="405" name="to_yaml" signature="to_yaml( opts = {} )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/loader">
      <scope doc="YAML::Loader class .." ilk="namespace" line="5" lineend="14" name="YAML">
        <scope classrefs="Object" ilk="class" line="6" lineend="13" name="Loader" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/error">
      <scope doc="Error messages and exception class" ilk="namespace" line="5" lineend="34" name="YAML">
        <scope classrefs="StandardError" doc="YAML Error classes" ilk="class" line="30" lineend="30" name="Error" />
        <scope classrefs="Error" ilk="class" line="31" lineend="31" name="ParseError" />
        <scope classrefs="StandardError" ilk="class" line="32" lineend="32" name="TypeError" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/encoding">
      <scope doc="Handle Unicode-to-Internal conversion" ilk="namespace" line="5" lineend="33" name="YAML">
        <scope attributes="__classmethod__" doc="Escape the string, condensing common escapes" ilk="function" line="10" lineend="16" name="escape" signature="YAML.escape( value, skip = &quot;&quot; )" />
        <scope attributes="__classmethod__" doc="Unescape the condenses escapes" ilk="function" line="21" lineend="31" name="unescape" signature="YAML.unescape( value )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/dbm">
      <import line="1" module="yaml" symbol="*" />
      <import line="2" module="dbm" symbol="*" />
      <scope doc="YAML + DBM = YDBM - Same interface as DBM class" ilk="namespace" line="7" name="YAML" />
      <scope classrefs="::DBM" ilk="class" line="9" lineend="109" name="DBM">
        <scope ilk="function" line="11" lineend="13" name="[]" signature="[]( key" />
        <scope ilk="function" line="14" lineend="16" name="[]=" signature="[]=( key" />
        <scope ilk="function" line="17" lineend="28" name="fetch" signature="fetch( keystr, ifnone = nil )" />
        <scope ilk="function" line="29" lineend="31" name="index" signature="index( keystr )" />
        <scope ilk="function" line="32" lineend="34" name="values_at" signature="values_at( *keys )" />
        <scope ilk="function" line="35" lineend="41" name="delete" signature="delete( key )" />
        <scope ilk="function" line="42" lineend="47" name="delete_if" signature="delete_if" />
        <scope ilk="function" line="48" lineend="51" name="reject" signature="reject" />
        <scope ilk="function" line="52" lineend="55" name="each_pair" signature="each_pair" />
        <scope ilk="function" line="56" lineend="59" name="each_value" signature="each_value" />
        <scope ilk="function" line="60" lineend="62" name="values" signature="values" />
        <scope ilk="function" line="63" lineend="66" name="has_value?" signature="has_value?( val )" />
        <scope ilk="function" line="67" lineend="71" name="invert" signature="invert" />
        <scope ilk="function" line="72" lineend="75" name="replace" signature="replace( hsh )" />
        <scope ilk="function" line="76" lineend="80" name="shift" signature="shift" />
        <scope ilk="function" line="81" lineend="87" name="select" signature="select( *keys )" />
        <scope ilk="function" line="88" lineend="91" name="store" signature="store( key, val )" />
        <scope ilk="function" line="92" lineend="97" name="update" signature="update( hsh )" />
        <scope ilk="function" line="98" lineend="102" name="to_a" signature="to_a" />
        <scope ilk="function" line="103" lineend="107" name="to_hash" signature="to_hash" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/constants">
      <scope doc="Constants used throughout the library" ilk="namespace" line="4" lineend="45" name="YAML" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/basenode">
      <import line="4" module="yaml/ypath" symbol="*" />
      <scope doc="YAML::BaseNode class" ilk="namespace" line="6" lineend="215" name="YAML">
        <scope doc="YAML Generic Model container" ilk="namespace" line="11" lineend="213" name="BaseNode">
          <scope doc="Search for YPath entry and return qualified nodes." ilk="function" line="17" lineend="30" name="select" signature="select( ypath_str )" />
          <scope doc="Search for YPath entry and return transformed nodes." ilk="function" line="36" lineend="49" name="select!" signature="select!( ypath_str )" />
          <scope doc="Search for YPath entry and return a list of qualified paths." ilk="function" line="55" lineend="67" name="search" signature="search( ypath_str )" />
          <scope ilk="function" line="69" lineend="75" name="at" signature="at( seg )" />
          <scope doc="YPath search returning a complete depth array" ilk="function" line="80" lineend="88" name="match_path" signature="match_path( ypath_str )" />
          <scope doc="Search a node for a single YPath segment" ilk="function" line="93" lineend="179" name="match_segment" signature="match_segment( ypath, depth )" />
          <scope doc="We want the node to act like as Hash if it is." ilk="function" line="185" lineend="192" name="[]" signature="[]( *key" />
          <scope ilk="function" line="194" lineend="200" name="children" signature="children" />
          <scope ilk="function" line="202" lineend="208" name="children_with_index" signature="children_with_index" />
          <scope ilk="function" line="210" lineend="212" name="emit" signature="emit" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="yaml/baseemitter">
      <import line="5" module="yaml/constants" symbol="*" />
      <import line="6" module="yaml/encoding" symbol="*" />
      <import line="7" module="yaml/error" symbol="*" />
      <scope doc="BaseEmitter" ilk="namespace" line="9" lineend="247" name="YAML">
        <scope ilk="namespace" line="11" lineend="230" name="BaseEmitter">
          <scope ilk="function" line="13" lineend="19" name="options" signature="options( opt = nil )" />
          <scope ilk="function" line="21" lineend="23" name="options=" signature="options=( opt )" />
          <scope doc="Emit binary data" ilk="function" line="28" lineend="31" name="binary_base64" signature="binary_base64( value )" />
          <scope doc="Emit plain, normal flowing text" ilk="function" line="36" lineend="47" name="node_text" signature="node_text( value, block = nil )" />
          <scope doc="Emit a simple, unqouted string" ilk="function" line="81" lineend="84" name="simple" signature="simple( value )" />
          <scope doc="Emit double-quoted string" ilk="function" line="89" lineend="91" name="double" signature="double( value )" />
          <scope doc="Emit single-quoted string" ilk="function" line="96" lineend="98" name="single" signature="single( value )" />
          <scope doc="Write a text block with the current indent" ilk="function" line="103" lineend="108" name="indent_text" signature="indent_text( text, mod, first_line = true )" />
          <scope doc="Write a current indent" ilk="function" line="113" name="indent" signature="indent( mod = nil )">
            <scope doc="Add indent to the buffer" ilk="function" line="127" lineend="129" name="indent!" signature="indent!" />
            <scope doc="Folding paragraphs within a column" ilk="function" line="134" lineend="137" name="fold" signature="fold( value )" />
          </scope>
          <scope ilk="function" line="143" lineend="184" name="map" signature="map( type, &amp;e )" />
          <scope ilk="function" line="186" lineend="195" name="seq_map_shortcut" signature="seq_map_shortcut" />
          <scope doc="Quick sequence" ilk="function" line="200" lineend="228" name="seq" signature="seq( type, &amp;e )" />
        </scope>
        <scope classrefs="Array" doc="Emitter helper classes" ilk="class" line="235" lineend="239" name="Mapping">
          <scope ilk="function" line="236" lineend="238" name="add" signature="add( k, v )" />
        </scope>
        <scope classrefs="Array" ilk="class" line="241" lineend="245" name="Sequence">
          <scope ilk="function" line="242" lineend="244" name="add" signature="add( v )" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/xmlparser">
      <import line="9" module="xsd/xmlparser/parser" symbol="*" />
      <scope doc="XSD4R - XML Instance parser library." ilk="namespace" line="12" name="XSD" />
      <scope ilk="namespace" line="15" lineend="39" name="XMLParser">
        <scope ilk="function" line="16" lineend="18" name="create_parser" signature="create_parser(host, opt)" />
        <scope doc="$1 is necessary." ilk="function" line="24" lineend="37" name="filter_ns" signature="filter_ns(ns, attrs)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/xmlparser/xmlscanner">
      <import line="9" module="xsd/xmlparser" symbol="*" />
      <import line="10" module="xmlscan/scanner" symbol="*" />
      <scope doc="XSD4R - XMLScan XML parser library." ilk="namespace" line="13" name="XSD" />
      <scope ilk="namespace" line="14" name="XMLParser" />
      <scope classrefs="XSD::XMLParser::" ilk="class" line="17" lineend="143" name="XMLScanner">
        <scope ilk="function" line="20" lineend="26" name="do_parse" signature="do_parse(string_or_readable)" />
        <scope ilk="function" line="28" lineend="31" name="scanner_kcode=" signature="scanner_kcode=(charset)" />
        <scope ilk="function" line="41" lineend="43" name="parse_error" signature="parse_error(msg)" />
        <scope ilk="function" line="45" lineend="47" name="wellformed_error" signature="wellformed_error(msg)" />
        <scope ilk="function" line="49" lineend="51" name="valid_error" signature="valid_error(msg)" />
        <scope ilk="function" line="53" lineend="55" name="warning" signature="warning(msg)" />
        <scope doc="def on_xmldecl; end" ilk="function" line="59" lineend="61" name="on_xmldecl_version" signature="on_xmldecl_version(str)" />
        <scope ilk="function" line="63" lineend="65" name="on_xmldecl_encoding" signature="on_xmldecl_encoding(str)" />
        <scope doc="def on_xmldecl_standalone(str); end def&#xA;on_xmldecl_other(name, value); end def on_xmldecl_end; end&#xA;def on_doctype(root, pubid, sysid); end def&#xA;on_prolog_space(str); end" ilk="function" line="81" lineend="83" name="on_chardata" signature="on_chardata(str)" />
        <scope doc="def on_cdata(str); end" ilk="function" line="87" lineend="89" name="on_etag" signature="on_etag(name)" />
        <scope ilk="function" line="91" lineend="93" name="on_entityref" signature="on_entityref(ref)" />
        <scope ilk="function" line="95" lineend="97" name="on_charref" signature="on_charref(code)" />
        <scope ilk="function" line="99" lineend="101" name="on_charref_hex" signature="on_charref_hex(code)" />
        <scope doc="def on_start_document; end def on_end_document; end" ilk="function" line="107" lineend="109" name="on_stag" signature="on_stag(name)" />
        <scope ilk="function" line="111" lineend="113" name="on_attribute" signature="on_attribute(name)" />
        <scope ilk="function" line="115" lineend="117" name="on_attr_value" signature="on_attr_value(str)" />
        <scope ilk="function" line="119" lineend="121" name="on_attr_entityref" signature="on_attr_entityref(ref)" />
        <scope ilk="function" line="123" lineend="125" name="on_attr_charref" signature="on_attr_charref(code)" />
        <scope ilk="function" line="127" lineend="129" name="on_attr_charref_hex" signature="on_attr_charref_hex(code)" />
        <scope doc="def on_attribute_end(name); end" ilk="function" line="133" lineend="136" name="on_stag_end_empty" signature="on_stag_end_empty(name)" />
        <scope ilk="function" line="138" lineend="140" name="on_stag_end" signature="on_stag_end(name)" />
        <import symbol="XMLScan::Visitor" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/xmlparser/xmlparser">
      <import line="9" module="xsd/xmlparser" symbol="*" />
      <import line="10" module="xml/parser" symbol="*" />
      <scope doc="XSD4R - XMLParser XML parser library." ilk="namespace" line="13" name="XSD" />
      <scope ilk="namespace" line="14" name="XMLParser" />
      <scope classrefs="XSD::XMLParser::" ilk="class" line="17" lineend="46" name="XMLParser">
        <scope classrefs="XML::Parser" ilk="class" line="18" lineend="25" name="Listener">
          <import line="20" module="xml/encoding-ja" symbol="*" />
          <import symbol="XML::Encoding_ja" />
        </scope>
        <scope ilk="function" line="27" lineend="43" name="do_parse" signature="do_parse(string_or_readable)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/xmlparser/rexmlparser">
      <import line="9" module="xsd/xmlparser" symbol="*" />
      <import line="10" module="rexml/streamlistener" symbol="*" />
      <import line="11" module="rexml/document" symbol="*" />
      <scope doc="XSD4R - REXMLParser XML parser library." ilk="namespace" line="14" name="XSD" />
      <scope ilk="namespace" line="15" name="XMLParser" />
      <scope classrefs="XSD::XMLParser::" ilk="class" line="18" lineend="50" name="REXMLParser">
        <scope ilk="function" line="21" lineend="28" name="do_parse" signature="do_parse(string_or_readable)" />
        <scope ilk="function" line="30" lineend="31" name="epilogue" signature="epilogue" />
        <scope ilk="function" line="33" lineend="35" name="tag_start" signature="tag_start(name, attrs)" />
        <scope ilk="function" line="37" lineend="39" name="tag_end" signature="tag_end(name)" />
        <scope ilk="function" line="41" lineend="43" name="text" signature="text(text)" />
        <scope ilk="function" line="45" lineend="47" name="xmldecl" signature="xmldecl(version, encoding, standalone)" />
        <import symbol="REXML::StreamListener" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/xmlparser/parser">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="xsd/ns" symbol="*" />
      <import line="11" module="xsd/charset" symbol="*" />
      <scope doc="XSD4R - XML Instance parser library." ilk="namespace" line="14" name="XSD" />
      <scope ilk="namespace" line="15" name="XMLParser" />
      <scope classrefs="Object" ilk="class" line="18" lineend="92" name="Parser">
        <scope classrefs="Error" ilk="class" line="19" lineend="19" name="ParseError" />
        <scope classrefs="ParseError" ilk="class" line="20" lineend="20" name="FormatDecodeError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="21" lineend="21" name="UnknownElementError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="22" lineend="22" name="UnknownAttributeError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="23" lineend="23" name="UnexpectedElementError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="24" lineend="24" name="ElementConstraintError" />
        <scope attributes="__classmethod__" ilk="function" line="28" lineend="30" name="factory" signature="self.factory" />
        <scope attributes="__classmethod__" ilk="function" line="32" lineend="34" name="create_parser" signature="self.create_parser(host, opt = {})" />
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="41" name="add_factory" signature="self.add_factory(factory)" />
        <scope ilk="function" line="45" lineend="45" name="charset" />
        <scope ilk="function" line="45" lineend="45" name="charset=" />
        <scope attributes="__ctor__" ilk="function" line="47" lineend="50" name="initialize" signature="initialize(host, opt = {})" />
        <scope ilk="function" line="52" lineend="57" name="parse" signature="parse(string_or_readable)" />
        <scope ilk="function" line="61" lineend="64" name="do_parse" signature="do_parse(string_or_readable)" />
        <scope ilk="function" line="66" lineend="68" name="start_element" signature="start_element(name, attrs)" />
        <scope ilk="function" line="70" lineend="72" name="characters" signature="characters(text)" />
        <scope ilk="function" line="74" lineend="76" name="end_element" signature="end_element(name)" />
        <scope ilk="function" line="78" lineend="79" name="prologue" signature="prologue" />
        <scope ilk="function" line="81" lineend="82" name="epilogue" signature="epilogue" />
        <scope ilk="function" line="84" lineend="91" name="xmldecl_encoding=" signature="xmldecl_encoding=(charset)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/qname">
      <scope doc="XSD4R - XML QName definition." ilk="namespace" line="9" name="XSD" />
      <scope classrefs="Object" ilk="class" line="12" lineend="75" name="QName">
        <scope ilk="function" line="13" lineend="13" name="namespace" />
        <scope ilk="function" line="13" lineend="13" name="namespace=" />
        <scope ilk="function" line="14" lineend="14" name="name" />
        <scope ilk="function" line="14" lineend="14" name="name=" />
        <scope ilk="function" line="15" lineend="15" name="source" />
        <scope ilk="function" line="15" lineend="15" name="source=" />
        <scope attributes="__ctor__" ilk="function" line="17" lineend="21" name="initialize" signature="initialize(namespace = nil, name = nil)" />
        <scope ilk="function" line="23" lineend="25" name="dup_name" signature="dup_name(name)" />
        <scope ilk="function" line="27" lineend="31" name="dump" signature="dump" />
        <scope ilk="function" line="33" lineend="41" name="match" signature="match(rhs)" />
        <scope ilk="function" line="43" lineend="45" name="==" signature="==(rhs" />
        <scope ilk="function" line="47" lineend="49" name="===" signature="===(rhs" />
        <scope ilk="function" line="51" lineend="53" name="eql?" signature="eql?(rhs)" />
        <scope ilk="function" line="55" lineend="57" name="hash" signature="hash" />
        <scope ilk="function" line="59" lineend="61" name="to_s" signature="to_s" />
        <scope ilk="function" line="63" lineend="66" name="inspect" signature="inspect" />
        <scope ilk="function" line="69" lineend="72" name="parse" signature="parse(str)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/ns">
      <import line="9" module="xsd/datatypes" symbol="*" />
      <scope doc="XSD4R - XML Schema Namespace library Copyright (C)&#xA;2000-2003, 2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="XSD" />
      <scope classrefs="Object" ilk="class" line="15" lineend="137" name="NS">
        <scope classrefs="Object" ilk="class" line="16" lineend="25" name="Assigner">
          <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
          <scope ilk="function" line="21" lineend="24" name="assign" signature="assign(ns)" />
        </scope>
        <scope ilk="function" line="27" lineend="27" name="default_namespace" />
        <scope classrefs="Error" ilk="class" line="29" lineend="29" name="FormatError" />
        <scope attributes="__ctor__" ilk="function" line="33" lineend="41" name="initialize" signature="initialize(tag2ns = {})" />
        <scope ilk="function" line="43" lineend="54" name="assign" signature="assign(ns, tag = nil)" />
        <scope ilk="function" line="56" lineend="58" name="assigned?" signature="assigned?(ns)" />
        <scope ilk="function" line="60" lineend="62" name="assigned_tag?" signature="assigned_tag?(tag)" />
        <scope ilk="function" line="64" lineend="69" name="clone_ns" signature="clone_ns" />
        <scope ilk="function" line="71" lineend="79" name="name" signature="name(name)" />
        <scope ilk="function" line="81" lineend="91" name="compare" signature="compare(ns, name, rhs)" />
        <scope doc="$1 and $2 are necessary." ilk="function" line="96" lineend="103" name="parse" signature="parse(str, local = false)" />
        <scope doc="For local attribute key parsing &lt;foo xmlns=&quot;urn:a&quot;&#xA;xmlns:n1=&quot;urn:a&quot; bar=&quot;1&quot; n1:baz=&quot;2&quot; /&gt; =&gt; {}bar, {urn:a}baz" ilk="function" line="109" lineend="124" name="parse_local" signature="parse_local(elem)" />
        <scope ilk="function" line="126" lineend="130" name="each_ns" signature="each_ns" />
        <scope ilk="function" line="134" lineend="136" name="assigner=" signature="assigner=(assigner)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/namedelements">
      <scope doc="XSD4R - WSDL named element collection." ilk="namespace" line="9" name="XSD" />
      <scope classrefs="Object" ilk="class" line="12" lineend="93" name="NamedElements">
        <scope attributes="__ctor__" ilk="function" line="15" lineend="18" name="initialize" signature="initialize" />
        <scope ilk="function" line="20" lineend="24" name="dup" signature="dup" />
        <scope ilk="function" line="26" lineend="30" name="freeze" signature="freeze" />
        <scope ilk="function" line="32" lineend="34" name="empty?" signature="empty?" />
        <scope ilk="function" line="36" lineend="38" name="size" signature="size" />
        <scope ilk="function" line="40" lineend="46" name="[]" signature="[](idx" />
        <scope ilk="function" line="48" lineend="50" name="find_name" signature="find_name(name)" />
        <scope ilk="function" line="52" lineend="54" name="keys" signature="keys" />
        <scope ilk="function" line="56" lineend="60" name="each" signature="each" />
        <scope ilk="function" line="62" lineend="65" name="&lt;&lt;" signature="&lt;&lt;(rhs" />
        <scope ilk="function" line="67" lineend="69" name="delete" signature="delete(rhs)" />
        <scope ilk="function" line="71" lineend="75" name="+" signature="+(rhs" />
        <scope ilk="function" line="77" lineend="80" name="concat" signature="concat(rhs)" />
        <scope ilk="function" line="86" lineend="88" name="elements=" signature="elements=(rhs)" />
        <scope ilk="function" line="90" lineend="92" name="elements" signature="elements" />
        <import symbol="Enumerable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/mapping">
      <import line="9" module="soap/parser" symbol="*" />
      <import line="10" module="soap/encodingstyle/literalHandler" symbol="*" />
      <import line="11" module="soap/generator" symbol="*" />
      <import line="12" module="soap/mapping" symbol="*" />
      <import line="13" module="soap/mapping/wsdlliteralregistry" symbol="*" />
      <scope doc="XSD4R - XML Mapping for Ruby Copyright (C) 2005  NAKAMURA,&#xA;Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="16" name="XSD" />
      <scope ilk="namespace" line="19" lineend="39" name="Mapping">
        <scope attributes="__classmethod__" ilk="function" line="23" lineend="32" name="obj2xml" signature="self.obj2xml(obj, elename = nil, io = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="34" lineend="38" name="xml2obj" signature="self.xml2obj(stream)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/iconvcharset">
      <import line="9" module="iconv" symbol="*" />
      <scope doc="XSD4R - Charset handling with iconv." ilk="namespace" line="12" name="XSD" />
      <scope classrefs="Object" ilk="class" line="15" lineend="30" name="IconvCharset">
        <scope attributes="__classmethod__" ilk="function" line="16" lineend="29" name="safe_iconv" signature="self.safe_iconv(to, from, str)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/datatypes1999">
      <import line="9" module="xsd/datatypes" symbol="*" />
      <scope doc="XSD4R - XML Schema Datatype 1999 support Copyright (C) 2001,&#xA;2003  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" lineend="20" name="XSD" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/datatypes">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="xsd/charset" symbol="*" />
      <import line="11" module="uri" symbol="*" />
      <import line="492" module="rational" symbol="*" />
      <import line="493" module="date" symbol="*" />
      <scope doc="XMLSchamaDatatypes general definitions." ilk="namespace" line="17" name="XSD" />
      <scope classrefs="StandardError" ilk="class" line="80" lineend="80" name="Error" />
      <scope classrefs="Error" ilk="class" line="81" lineend="81" name="ValueSpaceError" />
      <scope classrefs="Object" doc="The base class of all datatypes with Namespace." ilk="class" line="87" lineend="106" name="NSDBase">
        <scope ilk="function" line="90" lineend="90" name="type" />
        <scope ilk="function" line="90" lineend="90" name="type=" />
        <scope attributes="__classmethod__" ilk="function" line="92" lineend="94" name="inherited" signature="self.inherited(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="96" lineend="98" name="types" signature="self.types" />
        <scope attributes="__ctor__" ilk="function" line="100" lineend="101" name="initialize" signature="initialize" />
        <scope ilk="function" line="103" lineend="105" name="init" signature="init(type)" />
      </scope>
      <scope classrefs="NSDBase" doc="The base class of XSD datatypes." ilk="class" line="112" lineend="172" name="XSDAnySimpleType">
        <scope ilk="function" line="117" lineend="117" name="data" />
        <scope ilk="function" line="119" lineend="119" name="is_nil" />
        <scope ilk="function" line="119" lineend="119" name="is_nil=" />
        <scope attributes="__ctor__" doc="@is_nil represents this data is nil or not." ilk="function" line="121" lineend="123" name="initialize" signature="initialize(value = nil)" />
        <scope doc="true or raise" ilk="function" line="126" lineend="129" name="check_lexical_format" signature="check_lexical_format(value)" />
        <scope doc="set accepts a string which follows lexical space (ex." ilk="function" line="133" lineend="142" name="set" signature="set(value)" />
        <scope doc="to_s creates a string which follows lexical space (ex.&#xA;String: &quot;123&quot;)." ilk="function" line="145" lineend="151" name="to_s" signature="to_s()" />
        <scope ilk="function" line="155" lineend="158" name="init" signature="init(type, value)" />
        <scope doc="raises ValueSpaceError if check failed" ilk="function" line="161" lineend="163" name="screen_data" signature="screen_data(value)" />
        <scope ilk="function" line="165" lineend="167" name="_set" signature="_set(value)" />
        <scope ilk="function" line="169" lineend="171" name="_to_s" signature="_to_s" />
        <import symbol="XSD" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="174" lineend="181" name="XSDNil">
        <scope attributes="__ctor__" ilk="function" line="178" lineend="180" name="initialize" signature="initialize(value = nil)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" doc="Primitive datatypes." ilk="class" line="187" lineend="202" name="XSDString">
        <scope attributes="__ctor__" ilk="function" line="190" lineend="192" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="196" lineend="201" name="screen_data" signature="screen_data(value)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="204" lineend="227" name="XSDBoolean">
        <scope attributes="__ctor__" ilk="function" line="207" lineend="209" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="213" lineend="226" name="screen_data" signature="screen_data(value)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="229" lineend="291" name="XSDDecimal">
        <scope attributes="__ctor__" ilk="function" line="232" lineend="234" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="236" lineend="238" name="nonzero?" signature="nonzero? (@number" />
        <scope ilk="function" line="242" lineend="248" name="screen_data" signature="screen_data(d)" />
        <scope ilk="function" line="250" lineend="271" name="screen_data_str" signature="screen_data_str(str)" />
        <scope ilk="function" line="273" lineend="281" name="_set" signature="_set(data)" />
        <scope doc="0.0 -&gt; 0; right?" ilk="function" line="284" lineend="290" name="_to_s" signature="_to_s" />
      </scope>
      <scope ilk="namespace" line="293" lineend="300" name="FloatConstants" />
      <scope classrefs="XSDAnySimpleType" ilk="class" line="302" lineend="365" name="XSDFloat">
        <scope attributes="__ctor__" ilk="function" line="306" lineend="308" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="312" lineend="336" name="screen_data" signature="screen_data(value)" />
        <scope ilk="function" line="338" lineend="349" name="_to_s" signature="_to_s" />
        <scope doc="Convert to single-precision 32-bit floating point value." ilk="function" line="352" lineend="360" name="narrow32bit" signature="narrow32bit(f)" />
        <scope attributes="__classmethod__" ilk="function" line="362" lineend="364" name="positive?" signature="self.positive?(value)" />
        <import symbol="FloatConstants" />
      </scope>
      <scope classrefs="XSDAnySimpleType" doc="Ruby&apos;s Float is double-precision 64-bit floating point&#xA;value." ilk="class" line="368" lineend="420" name="XSDDouble">
        <scope attributes="__ctor__" ilk="function" line="372" lineend="374" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="378" lineend="406" name="screen_data" signature="screen_data(value)" />
        <scope ilk="function" line="408" lineend="419" name="_to_s" signature="_to_s" />
        <import symbol="FloatConstants" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="422" lineend="489" name="XSDDuration">
        <scope ilk="function" line="425" lineend="425" name="sign" />
        <scope ilk="function" line="425" lineend="425" name="sign=" />
        <scope ilk="function" line="426" lineend="426" name="year" />
        <scope ilk="function" line="426" lineend="426" name="year=" />
        <scope ilk="function" line="427" lineend="427" name="month" />
        <scope ilk="function" line="427" lineend="427" name="month=" />
        <scope ilk="function" line="428" lineend="428" name="day" />
        <scope ilk="function" line="428" lineend="428" name="day=" />
        <scope ilk="function" line="429" lineend="429" name="hour" />
        <scope ilk="function" line="429" lineend="429" name="hour=" />
        <scope ilk="function" line="430" lineend="430" name="min" />
        <scope ilk="function" line="430" lineend="430" name="min=" />
        <scope ilk="function" line="431" lineend="431" name="sec" />
        <scope ilk="function" line="431" lineend="431" name="sec=" />
        <scope attributes="__ctor__" ilk="function" line="433" lineend="435" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="439" lineend="456" name="screen_data" signature="screen_data(value)" />
        <scope ilk="function" line="458" lineend="466" name="_set" signature="_set(data)" />
        <scope ilk="function" line="468" lineend="488" name="_to_s" signature="_to_s" />
      </scope>
      <scope ilk="namespace" line="495" lineend="585" name="XSDDateTimeImpl">
        <scope doc="24 * 60 * 60" ilk="function" line="498" lineend="508" name="to_obj" signature="to_obj(klass)" />
        <scope ilk="function" line="510" lineend="524" name="to_time" signature="to_time" />
        <scope ilk="function" line="526" lineend="528" name="to_date" signature="to_date" />
        <scope ilk="function" line="530" lineend="532" name="to_datetime" signature="to_datetime" />
        <scope ilk="function" line="534" lineend="549" name="tz2of" signature="tz2of(str)" />
        <scope ilk="function" line="551" lineend="559" name="of2tz" signature="of2tz(offset)" />
        <scope ilk="function" line="561" lineend="580" name="screen_data" signature="screen_data(t)" />
        <scope ilk="function" line="582" lineend="584" name="add_tz" signature="add_tz(s)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="587" lineend="648" name="XSDDateTime">
        <scope attributes="__ctor__" ilk="function" line="591" lineend="593" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="597" lineend="624" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="626" lineend="632" name="_set" signature="_set(data)" />
        <scope ilk="function" line="634" lineend="647" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="650" lineend="698" name="XSDTime">
        <scope attributes="__ctor__" ilk="function" line="654" lineend="656" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="660" lineend="676" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="678" lineend="684" name="_set" signature="_set(data)" />
        <scope ilk="function" line="686" lineend="697" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="700" lineend="730" name="XSDDate">
        <scope attributes="__ctor__" ilk="function" line="704" lineend="706" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="710" lineend="723" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="725" lineend="729" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="732" lineend="761" name="XSDGYearMonth">
        <scope attributes="__ctor__" ilk="function" line="736" lineend="738" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="742" lineend="754" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="756" lineend="760" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="763" lineend="791" name="XSDGYear">
        <scope attributes="__ctor__" ilk="function" line="767" lineend="769" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="773" lineend="784" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="786" lineend="790" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="793" lineend="818" name="XSDGMonthDay">
        <scope attributes="__ctor__" ilk="function" line="797" lineend="799" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="803" lineend="812" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="814" lineend="817" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="820" lineend="844" name="XSDGDay">
        <scope attributes="__ctor__" ilk="function" line="824" lineend="826" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="830" lineend="838" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="840" lineend="843" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="846" lineend="870" name="XSDGMonth">
        <scope attributes="__ctor__" ilk="function" line="850" lineend="852" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="856" lineend="864" name="screen_data_str" signature="screen_data_str(t)" />
        <scope ilk="function" line="866" lineend="869" name="_to_s" signature="_to_s" />
        <import symbol="XSDDateTimeImpl" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="872" lineend="897" name="XSDHexBinary">
        <scope attributes="__ctor__" doc="String in Ruby could be a binary." ilk="function" line="876" lineend="878" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="880" lineend="886" name="set_encoded" signature="set_encoded(value)" />
        <scope ilk="function" line="888" lineend="890" name="string" signature="string" />
        <scope ilk="function" line="894" lineend="896" name="screen_data" signature="screen_data(value)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="899" lineend="924" name="XSDBase64Binary">
        <scope attributes="__ctor__" doc="String in Ruby could be a binary." ilk="function" line="903" lineend="905" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="907" lineend="913" name="set_encoded" signature="set_encoded(value)" />
        <scope ilk="function" line="915" lineend="917" name="string" signature="string" />
        <scope ilk="function" line="921" lineend="923" name="screen_data" signature="screen_data(value)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="926" lineend="942" name="XSDAnyURI">
        <scope attributes="__ctor__" ilk="function" line="929" lineend="931" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="935" lineend="941" name="screen_data" signature="screen_data(value)" />
      </scope>
      <scope classrefs="XSDAnySimpleType" ilk="class" line="944" lineend="980" name="XSDQName">
        <scope attributes="__ctor__" ilk="function" line="947" lineend="949" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="953" lineend="961" name="screen_data" signature="screen_data(value)" />
        <scope ilk="function" line="963" lineend="971" name="_set" signature="_set(data)" />
        <scope ilk="function" line="973" lineend="979" name="_to_s" signature="_to_s" />
      </scope>
      <scope classrefs="XSDString" doc="Derived types" ilk="class" line="986" lineend="1001" name="XSDNormalizedString">
        <scope attributes="__ctor__" ilk="function" line="989" lineend="991" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="995" lineend="1000" name="screen_data" signature="screen_data(value)" />
      </scope>
      <scope classrefs="XSDDecimal" ilk="class" line="1003" lineend="1050" name="XSDInteger">
        <scope attributes="__ctor__" ilk="function" line="1006" lineend="1008" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="10121501212" lineend="1022" name="screen_data_str" signature="screen_data_str(str)" />
        <scope ilk="function" line="1024" lineend="1026" name="_set" signature="_set(value)" />
        <scope ilk="function" line="1028" lineend="1030" name="_to_s" signature="_to_s()" />
        <scope ilk="function" line="1032" lineend="1036" name="validate" signature="validate(v)" />
        <scope ilk="function" line="1038" lineend="1040" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1042" lineend="1044" name="mininclusive" signature="mininclusive" />
        <scope ilk="function" line="1047" lineend="1049" name="positive" signature="positive(v)" />
      </scope>
      <scope classrefs="XSDInteger" ilk="class" line="1052" lineend="1068" name="XSDNonPositiveInteger">
        <scope attributes="__ctor__" ilk="function" line="1055" lineend="1057" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1061" lineend="1063" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1065" lineend="1067" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDNonPositiveInteger" ilk="class" line="1070" lineend="1086" name="XSDNegativeInteger">
        <scope attributes="__ctor__" ilk="function" line="1073" lineend="1075" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1079" lineend="1081" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1083" lineend="1085" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDInteger" ilk="class" line="1088" lineend="1104" name="XSDLong">
        <scope attributes="__ctor__" ilk="function" line="1091" lineend="1093" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1097" lineend="1099" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1101" lineend="1103" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDLong" ilk="class" line="1106" lineend="1122" name="XSDInt">
        <scope attributes="__ctor__" ilk="function" line="1109" lineend="1111" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1115" lineend="1117" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1119" lineend="1121" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDInt" ilk="class" line="1124" lineend="1140" name="XSDShort">
        <scope attributes="__ctor__" ilk="function" line="1127" lineend="1129" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1133" lineend="1135" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1137" lineend="1139" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDShort" ilk="class" line="1142" lineend="1158" name="XSDByte">
        <scope attributes="__ctor__" ilk="function" line="1145" lineend="1147" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1151" lineend="1153" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1155" lineend="1157" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDInteger" ilk="class" line="1160" lineend="1176" name="XSDNonNegativeInteger">
        <scope attributes="__ctor__" ilk="function" line="1163" lineend="1165" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1169" lineend="1171" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1173" lineend="1175" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDNonNegativeInteger" ilk="class" line="1178" lineend="1194" name="XSDUnsignedLong">
        <scope attributes="__ctor__" ilk="function" line="1181" lineend="1183" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1187" lineend="1189" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1191" lineend="1193" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDUnsignedLong" ilk="class" line="1196" lineend="1212" name="XSDUnsignedInt">
        <scope attributes="__ctor__" ilk="function" line="1199" lineend="1201" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1205" lineend="1207" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1209" lineend="1211" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDUnsignedInt" ilk="class" line="1214" lineend="1230" name="XSDUnsignedShort">
        <scope attributes="__ctor__" ilk="function" line="1217" lineend="1219" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1223" lineend="1225" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1227" lineend="1229" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDUnsignedShort" ilk="class" line="1232" lineend="1248" name="XSDUnsignedByte">
        <scope attributes="__ctor__" ilk="function" line="1235" lineend="1237" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1241" lineend="1243" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1245" lineend="1247" name="mininclusive" signature="mininclusive" />
      </scope>
      <scope classrefs="XSDNonNegativeInteger" ilk="class" line="1250" lineend="1266" name="XSDPositiveInteger">
        <scope attributes="__ctor__" ilk="function" line="1253" lineend="1255" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="1259" lineend="1261" name="maxinclusive" signature="maxinclusive" />
        <scope ilk="function" line="1263" lineend="1265" name="mininclusive" signature="mininclusive" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/codegen">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <import line="10" module="xsd/codegen/moduledef" symbol="*" />
      <import line="11" module="xsd/codegen/classdef" symbol="*" />
      <import line="12" module="xsd/codegen/methoddef" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/codegen/moduledef">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <import line="10" module="xsd/codegen/methoddef" symbol="*" />
      <import line="11" module="xsd/codegen/commentdef" symbol="*" />
      <import line="169" module="xsd/codegen/moduledef" symbol="*" />
      <scope doc="XSD4R - Generating module definition code Copyright (C) 2004&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="14" name="XSD" />
      <scope ilk="namespace" line="15" name="CodeGen" />
      <scope classrefs="Object" ilk="class" line="18" lineend="161" name="ModuleDef">
        <scope attributes="__ctor__" ilk="function" line="22" lineend="29" name="initialize" signature="initialize(name)" />
        <scope ilk="function" line="31" lineend="33" name="def_require" signature="def_require(path)" />
        <scope ilk="function" line="35" lineend="40" name="def_const" signature="def_const(const, value)" />
        <scope ilk="function" line="42" lineend="44" name="def_code" signature="def_code(code)" />
        <scope ilk="function" line="46" lineend="48" name="def_method" signature="def_method(name, *params)" />
        <scope ilk="function" line="51" lineend="54" name="def_protectedmethod" signature="def_protectedmethod(name, *params)" />
        <scope ilk="function" line="56" lineend="58" name="def_privatemethod" signature="def_privatemethod(name, *params)" />
        <scope ilk="function" line="60" lineend="62" name="add_method" signature="add_method(m, visibility = :public)" />
        <scope ilk="function" line="64" lineend="93" name="dump" signature="dump" />
        <scope ilk="function" line="97" lineend="103" name="dump_requirepath" signature="dump_requirepath" />
        <scope ilk="function" line="105" lineend="111" name="dump_const" signature="dump_const" />
        <scope ilk="function" line="113" lineend="115" name="dump_code" signature="dump_code" />
        <scope ilk="function" line="117" lineend="119" name="dump_static" signature="dump_static(str)" />
        <scope ilk="function" line="121" lineend="135" name="dump_methods" signature="dump_methods" />
        <scope ilk="function" line="137" lineend="143" name="dump_value" signature="dump_value(value)" />
        <scope ilk="function" line="145" lineend="147" name="dump_package_def" signature="dump_package_def(package)" />
        <scope ilk="function" line="149" lineend="151" name="dump_package_def_end" signature="dump_package_def_end(package)" />
        <scope ilk="function" line="153" lineend="156" name="dump_module_def" signature="dump_module_def" />
        <scope ilk="function" line="158" lineend="160" name="dump_module_def_end" signature="dump_module_def_end" />
        <import symbol="GenSupport" />
        <import symbol="CommentDef" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/codegen/methoddef">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <import line="10" module="xsd/codegen/commentdef" symbol="*" />
      <scope doc="XSD4R - Generating method definition code Copyright (C) 2004&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="13" name="XSD" />
      <scope ilk="namespace" line="14" name="CodeGen" />
      <scope classrefs="Object" ilk="class" line="17" lineend="59" name="MethodDef">
        <scope ilk="function" line="21" lineend="21" name="definition" />
        <scope ilk="function" line="21" lineend="21" name="definition=" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="31" name="initialize" signature="initialize(name, *params)" />
        <scope ilk="function" line="33" lineend="40" name="dump" signature="dump" />
        <scope ilk="function" line="44" lineend="50" name="dump_method_def" signature="dump_method_def" />
        <scope ilk="function" line="52" lineend="54" name="dump_method_def_end" signature="dump_method_def_end" />
        <scope ilk="function" line="56" lineend="58" name="dump_definition" signature="dump_definition" />
        <import symbol="GenSupport" />
        <import symbol="CommentDef" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/codegen/gensupport">
      <scope doc="XSD4R - Code generation support Copyright (C) 2004, 2005&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="9" name="XSD" />
      <scope ilk="namespace" line="10" name="CodeGen" />
      <scope ilk="namespace" line="57" lineend="162" name="GenSupport">
        <scope ilk="function" line="58" lineend="60" name="capitalize" signature="capitalize(target)" />
        <scope ilk="function" line="63" lineend="65" name="uncapitalize" signature="uncapitalize(target)" />
        <scope ilk="function" line="68" lineend="76" name="safeconstname" signature="safeconstname(name)" />
        <scope ilk="function" line="79" lineend="81" name="safeconstname?" signature="safeconstname?(name)" />
        <scope ilk="function" line="84" lineend="91" name="safemethodname" signature="safemethodname(name)" />
        <scope ilk="function" line="94" lineend="96" name="safemethodname?" signature="safemethodname?(name)" />
        <scope ilk="function" line="99" lineend="106" name="safevarname" signature="safevarname(name)" />
        <scope ilk="function" line="109" lineend="111" name="safevarname?" signature="safevarname?(name)" />
        <scope ilk="function" line="114" lineend="116" name="keyword?" signature="keyword?(word)" />
        <scope ilk="function" line="119" lineend="127" name="format" signature="format(str, indent = nil)" />
        <scope ilk="function" line="131" lineend="135" name="trim_eol" signature="trim_eol(str)" />
        <scope ilk="function" line="137" lineend="150" name="trim_indent" signature="trim_indent(str)" />
        <scope ilk="function" line="152" lineend="157" name="untab" signature="untab(line, ts = 8)" />
        <scope ilk="function" line="159" lineend="161" name="dump_emptyline" signature="dump_emptyline" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/codegen/commentdef">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <scope doc="XSD4R - Generating comment definition code Copyright (C)&#xA;2004  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="XSD" />
      <scope ilk="namespace" line="13" name="CodeGen" />
      <scope ilk="namespace" line="16" lineend="30" name="CommentDef">
        <scope ilk="function" line="23" lineend="29" name="dump_comment" signature="dump_comment" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/codegen/classdef">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <import line="10" module="xsd/codegen/moduledef" symbol="*" />
      <import line="11" module="xsd/codegen/methoddef" symbol="*" />
      <import line="152" module="xsd/codegen/classdef" symbol="*" />
      <scope doc="XSD4R - Generating class definition code Copyright (C) 2004&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="14" name="XSD" />
      <scope ilk="namespace" line="15" name="CodeGen" />
      <scope classrefs="ModuleDef" ilk="class" line="18" lineend="144" name="ClassDef">
        <scope attributes="__ctor__" ilk="function" line="21" lineend="26" name="initialize" signature="initialize(name, baseclass = nil)" />
        <scope ilk="function" line="28" lineend="34" name="def_classvar" signature="def_classvar(var, value)" />
        <scope ilk="function" line="36" lineend="41" name="def_attr" signature="def_attr(attrname, writable = true, varname = nil)" />
        <scope ilk="function" line="43" lineend="81" name="dump" signature="dump" />
        <scope ilk="function" line="85" lineend="92" name="dump_class_def" signature="dump_class_def" />
        <scope ilk="function" line="94" lineend="96" name="dump_class_def_end" signature="dump_class_def_end" />
        <scope ilk="function" line="98" lineend="104" name="dump_classvar" signature="dump_classvar" />
        <scope ilk="function" line="106" lineend="122" name="dump_attributes" signature="dump_attributes" />
        <scope ilk="function" line="124" lineend="130" name="dump_accessor" signature="dump_accessor(attrname, writable)" />
        <scope ilk="function" line="132" lineend="143" name="dump_attribute" signature="dump_attribute(attrname, writable, varname)" />
        <import symbol="GenSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xsd/charset">
      <scope doc="XSD4R - Charset handling library." ilk="namespace" line="9" name="XSD" />
      <scope ilk="namespace" line="12" lineend="184" name="Charset">
        <scope classrefs="StandardError" ilk="class" line="15" lineend="15" name="XSDError" />
        <scope classrefs="XSDError" ilk="class" line="16" lineend="16" name="CharsetError" />
        <scope classrefs="CharsetError" ilk="class" line="17" lineend="17" name="UnknownCharsetError" />
        <scope classrefs="CharsetError" ilk="class" line="18" lineend="18" name="CharsetConversionError" />
        <scope attributes="__classmethod__" doc="Maps" ilk="function" line="26" lineend="68" name="init" signature="Charset.init">
          <import line="32" module="xsd/iconvcharset" symbol="*" />
          <import line="50" module="nkf" symbol="*" />
          <import line="59" module="uconv" symbol="*" />
        </scope>
        <scope attributes="__classmethod__" doc="handlers" ilk="function" line="84" lineend="86" name="encoding" signature="Charset.encoding" />
        <scope attributes="__classmethod__" ilk="function" line="88" lineend="91" name="encoding=" signature="Charset.encoding=(encoding)" />
        <scope attributes="__classmethod__" ilk="function" line="93" lineend="95" name="xml_encoding_label" signature="Charset.xml_encoding_label" />
        <scope attributes="__classmethod__" ilk="function" line="97" lineend="99" name="encoding_to_xml" signature="Charset.encoding_to_xml(str, charset)" />
        <scope attributes="__classmethod__" ilk="function" line="101" lineend="103" name="encoding_from_xml" signature="Charset.encoding_from_xml(str, charset)" />
        <scope attributes="__classmethod__" ilk="function" line="105" lineend="114" name="encoding_conv" signature="Charset.encoding_conv(str, enc_from, enc_to)" />
        <scope attributes="__classmethod__" ilk="function" line="116" lineend="118" name="charset_label" signature="Charset.charset_label(encoding)" />
        <scope attributes="__classmethod__" ilk="function" line="120" lineend="126" name="charset_str" signature="Charset.charset_str(label)" />
        <scope attributes="__classmethod__" doc="11110uuu 10uuuzzz 10yyyyyy 10xxxxxx" ilk="function" line="154" lineend="156" name="is_us_ascii" signature="Charset.is_us_ascii(str)" />
        <scope attributes="__classmethod__" ilk="function" line="158" lineend="160" name="is_utf8" signature="Charset.is_utf8(str)" />
        <scope attributes="__classmethod__" ilk="function" line="162" lineend="164" name="is_euc" signature="Charset.is_euc(str)" />
        <scope attributes="__classmethod__" ilk="function" line="166" lineend="168" name="is_sjis" signature="Charset.is_sjis(str)" />
        <scope attributes="__classmethod__" ilk="function" line="170" lineend="183" name="is_ces" signature="Charset.is_ces(str, code = $KCODE)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/utils">
      <scope doc="Defines ParserWriterChooseMixin, which makes it possible to&#xA;choose a different XML writer and/or XML parser then the&#xA;default one." ilk="namespace" line="12" lineend="164" name="XMLRPC">
        <scope doc="This module enables a user-class to be marshalled by XML-RPC&#xA;for Ruby into a Hash, with one additional key/value pair&#xA;&quot;___class___&quot; =&gt; ClassName" ilk="namespace" line="19" lineend="20" name="Marshallable" />
        <scope ilk="namespace" line="23" lineend="53" name="ParserWriterChooseMixin">
          <scope ilk="function" line="25" lineend="28" name="set_writer" signature="set_writer(writer)" />
          <scope ilk="function" line="30" lineend="33" name="set_parser" signature="set_parser(parser)" />
          <scope ilk="function" line="37" lineend="43" name="create" signature="create" />
          <scope ilk="function" line="45" lineend="51" name="parser" signature="parser" />
        </scope>
        <scope doc="module ParserWriterChooseMixin" ilk="namespace" line="56" name="Service" />
        <scope classrefs="Object" ilk="class" line="63" lineend="99" name="BasicInterface">
          <scope ilk="function" line="64" lineend="64" name="prefix" />
          <scope ilk="function" line="64" lineend="64" name="methods" />
          <scope attributes="__ctor__" ilk="function" line="66" lineend="69" name="initialize" signature="initialize(prefix)" />
          <scope ilk="function" line="71" lineend="83" name="add_method" signature="add_method(sig, help=nil, meth_name=nil)" />
          <scope doc="---------------------------------" ilk="function" line="87" lineend="97" name="parse_sig" signature="parse_sig(sig)" />
        </scope>
        <scope classrefs="BasicInterface" doc="class BasicInterface" ilk="class" line="105" lineend="125" name="Interface">
          <scope attributes="__ctor__" ilk="function" line="106" lineend="110" name="initialize" signature="initialize(prefix, &amp;p)" />
          <scope ilk="function" line="112" lineend="117" name="get_methods" signature="get_methods(obj, delim=&quot;.&quot;)" />
          <scope doc="---------------------------------" ilk="function" line="121" lineend="123" name="meth" signature="meth(*a)" />
        </scope>
        <scope classrefs="BasicInterface" doc="class Interface" ilk="class" line="127" lineend="138" name="PublicInstanceMethodsInterface">
          <scope attributes="__ctor__" ilk="function" line="128" lineend="130" name="initialize" signature="initialize(prefix)" />
          <scope ilk="function" line="132" lineend="137" name="get_methods" signature="get_methods(obj, delim=&quot;.&quot;)" />
        </scope>
        <scope attributes="__classmethod__" doc="module Service" ilk="function" line="147" lineend="149" name="interface" signature="self.interface(prefix, &amp;p)" />
        <scope attributes="__classmethod__" doc="short-cut for creating a PublicInstanceMethodsInterface" ilk="function" line="152" lineend="154" name="iPIMethods" signature="self.iPIMethods(prefix)" />
        <scope ilk="namespace" line="157" lineend="162" name="ParseContentType">
          <scope ilk="function" line="158" lineend="161" name="parse_content_type" signature="parse_content_type(str)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/server">
      <import line="145" module="xmlrpc/parser" symbol="*" />
      <import line="146" module="xmlrpc/create" symbol="*" />
      <import line="147" module="xmlrpc/config" symbol="*" />
      <import line="148" module="xmlrpc/utils" symbol="*" />
      <scope doc="ParserWriterChooseMixin" ilk="namespace" line="152" name="XMLRPC" />
      <scope classrefs="Object" ilk="class" line="155" lineend="382" name="BasicServer">
        <scope attributes="__ctor__" ilk="function" line="170" lineend="181" name="initialize" signature="initialize(class_delim=&quot;.&quot;)" />
        <scope ilk="function" line="183" lineend="201" name="add_handler" signature="add_handler(prefix, obj_or_signature=nil, help=nil, &amp;block)" />
        <scope ilk="function" line="203" lineend="205" name="get_service_hook" signature="get_service_hook" />
        <scope ilk="function" line="207" lineend="210" name="set_service_hook" signature="set_service_hook(&amp;handler)" />
        <scope ilk="function" line="212" lineend="214" name="get_default_handler" signature="get_default_handler" />
        <scope ilk="function" line="216" lineend="219" name="set_default_handler" signature="set_default_handler (&amp;handler)" />
        <scope ilk="function" line="221" lineend="261" name="add_multicall" signature="add_multicall" />
        <scope ilk="function" line="263" lineend="304" name="add_introspection" signature="add_introspection" />
        <scope ilk="function" line="308" lineend="311" name="process" signature="process(data)" />
        <scope doc="------------------------------------------------------------&#xA;--" ilk="function" line="315" lineend="317" name="multicall_fault" signature="multicall_fault(nr, str)" />
        <scope doc="method dispatch" ilk="function" line="322" lineend="346" name="dispatch" signature="dispatch(methodname, *args)" />
        <scope doc="returns true, if the arity of &quot;obj&quot; matches" ilk="function" line="352" lineend="360" name="check_arity" signature="check_arity(obj, n_args)" />
        <scope ilk="function" line="364" lineend="372" name="call_method" signature="call_method(methodname, *args)" />
        <scope ilk="function" line="377" lineend="379" name="handle" signature="handle(methodname, *args)" />
        <import symbol="ParserWriterChooseMixin" />
        <import symbol="ParseContentType" />
      </scope>
      <scope classrefs="BasicServer" ilk="class" line="433" lineend="497" name="CGIServer">
        <scope attributes="__classmethod__" ilk="function" line="436" lineend="439" name="new" signature="CGIServer.new(*a)" />
        <scope attributes="__ctor__" ilk="function" line="441" lineend="443" name="initialize" signature="initialize(*a)" />
        <scope ilk="function" line="445" lineend="461" name="serve" signature="serve" />
        <scope ilk="function" line="466" lineend="482" name="http_error" signature="http_error(status, message)" />
        <scope ilk="function" line="484" lineend="495" name="http_write" signature="http_write(body, header)" />
      </scope>
      <scope classrefs="BasicServer" ilk="class" line="510" lineend="573" name="ModRubyServer">
        <scope attributes="__ctor__" ilk="function" line="512" lineend="515" name="initialize" signature="initialize(*a)" />
        <scope ilk="function" line="517" lineend="536" name="serve" signature="serve" />
        <scope ilk="function" line="541" lineend="557" name="http_error" signature="http_error(status, message)" />
        <scope ilk="function" line="559" lineend="571" name="http_write" signature="http_write(body, status, header)" />
      </scope>
      <scope classrefs="BasicServer" ilk="class" line="628" lineend="628" name="WEBrickServlet" />
      <scope classrefs="WEBrickServlet" doc="forward declaration" ilk="class" line="630" lineend="655" name="Server">
        <scope attributes="__ctor__" ilk="function" line="632" lineend="638" name="initialize" signature="initialize(port=8080, host=&quot;127.0.0.1&quot;, maxConnections=4, stdlog=$stdout, audit=true, debug=true, *a)">
          <import line="634" module="webrick" symbol="*" />
        </scope>
        <scope ilk="function" line="640" lineend="649" name="serve" signature="serve" />
        <scope ilk="function" line="651" lineend="653" name="shutdown" signature="shutdown" />
      </scope>
      <scope classrefs="BasicServer" ilk="class" line="705" lineend="770" name="WEBrickServlet">
        <scope attributes="__ctor__" ilk="function" line="706" lineend="710" name="initialize" signature="initialize(*a)">
          <import line="708" module="webrick/httpstatus" symbol="*" />
        </scope>
        <scope doc="deprecated from WEBrick/1.2.2." ilk="function" line="714" lineend="716" name="require_path_info?" signature="require_path_info?" />
        <scope ilk="function" line="718" lineend="721" name="get_instance" signature="get_instance(config, *options)" />
        <scope ilk="function" line="723" lineend="729" name="set_valid_ip" signature="set_valid_ip(*ip_addr)" />
        <scope ilk="function" line="731" lineend="733" name="get_valid_ip" signature="get_valid_ip" />
        <scope ilk="function" line="735" lineend="769" name="service" signature="service(request, response)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/parser">
      <import line="10" module="date" symbol="*" />
      <import line="11" module="xmlrpc/base64" symbol="*" />
      <import line="12" module="xmlrpc/datetime" symbol="*" />
      <scope doc="add some methods to NQXML::Node" ilk="namespace" line="16" lineend="50" name="NQXML">
        <scope classrefs="Object" ilk="class" line="17" lineend="49" name="Node">
          <scope ilk="function" line="19" lineend="21" name="removeChild" signature="removeChild(node)" />
          <scope ilk="function" line="22" lineend="24" name="childNodes" signature="childNodes" />
          <scope ilk="function" line="25" lineend="27" name="hasChildNodes" signature="hasChildNodes" />
          <scope ilk="function" line="28" lineend="30" name="[]" signature="[] (index" />
          <scope ilk="function" line="32" lineend="39" name="nodeType" signature="nodeType" />
          <scope ilk="function" line="41" lineend="44" name="nodeValue" signature="nodeValue" />
          <scope ilk="function" line="45" lineend="48" name="nodeName" signature="nodeName" />
        </scope>
      </scope>
      <scope doc="module NQXML" ilk="namespace" line="52" lineend="812" name="XMLRPC">
        <scope classrefs="StandardError" ilk="class" line="54" lineend="68" name="FaultException">
          <scope ilk="function" line="55" lineend="55" name="faultCode" />
          <scope ilk="function" line="55" lineend="55" name="faultString" />
          <scope attributes="__ctor__" ilk="function" line="59" lineend="62" name="initialize" signature="initialize(faultCode, faultString)" />
          <scope doc="returns a hash" ilk="function" line="65" lineend="67" name="to_h" signature="to_h" />
        </scope>
        <scope ilk="namespace" line="70" lineend="156" name="Convert">
          <scope attributes="__classmethod__" ilk="function" line="71" lineend="73" name="int" signature="self.int(str)" />
          <scope attributes="__classmethod__" ilk="function" line="75" lineend="82" name="boolean" signature="self.boolean(str)" />
          <scope attributes="__classmethod__" ilk="function" line="84" lineend="86" name="double" signature="self.double(str)" />
          <scope attributes="__classmethod__" ilk="function" line="88" lineend="116" name="dateTime" signature="self.dateTime(str)" />
          <scope attributes="__classmethod__" ilk="function" line="118" lineend="120" name="base64" signature="self.base64(str)" />
          <scope attributes="__classmethod__" ilk="function" line="122" lineend="143" name="struct" signature="self.struct(hash)" />
          <scope attributes="__classmethod__" ilk="function" line="145" lineend="154" name="fault" signature="self.fault(hash)" />
        </scope>
        <scope doc="module Convert" ilk="namespace" line="158" lineend="809" name="XMLParser">
          <scope classrefs="Object" ilk="class" line="160" lineend="455" name="AbstractTreeParser">
            <scope ilk="function" line="162" lineend="164" name="parseMethodResponse" signature="parseMethodResponse(str)" />
            <scope ilk="function" line="166" lineend="168" name="parseMethodCall" signature="parseMethodCall(str)" />
            <scope doc="remove all whitespaces but in the tags i4, int, boolean...." ilk="function" line="176" lineend="201" name="removeWhitespacesAndComments" signature="removeWhitespacesAndComments(node)" />
            <scope ilk="function" line="204" lineend="219" name="nodeMustBe" signature="nodeMustBe(node, name)" />
            <scope doc="returns, when successfully the only child-node" ilk="function" line="224" lineend="231" name="hasOnlyOneChild" signature="hasOnlyOneChild(node, name=nil)" />
            <scope ilk="function" line="234" lineend="238" name="assert" signature="assert(b)" />
            <scope doc="the node `node` has empty string or string" ilk="function" line="241" lineend="251" name="text_zero_one" signature="text_zero_one(node)" />
            <scope ilk="function" line="254" lineend="261" name="integer" signature="integer(node)" />
            <scope ilk="function" line="263" lineend="268" name="boolean" signature="boolean(node)" />
            <scope ilk="function" line="270" lineend="274" name="v_nil" signature="v_nil(node)" />
            <scope ilk="function" line="276" lineend="279" name="string" signature="string(node)" />
            <scope ilk="function" line="281" lineend="288" name="double" signature="double(node)" />
            <scope ilk="function" line="290" lineend="295" name="dateTime" signature="dateTime(node)" />
            <scope ilk="function" line="297" lineend="302" name="base64" signature="base64(node)" />
            <scope ilk="function" line="304" lineend="309" name="member" signature="member(node)" />
            <scope ilk="function" line="311" lineend="315" name="name" signature="name(node)" />
            <scope ilk="function" line="317" lineend="321" name="array" signature="array(node)" />
            <scope ilk="function" line="323" lineend="329" name="data" signature="data(node)" />
            <scope ilk="function" line="331" lineend="335" name="param" signature="param(node)" />
            <scope ilk="function" line="337" lineend="351" name="methodResponse" signature="methodResponse(node)" />
            <scope ilk="function" line="353" lineend="357" name="methodName" signature="methodName(node)" />
            <scope ilk="function" line="359" lineend="370" name="params" signature="params(node, call=true)" />
            <scope ilk="function" line="372" lineend="377" name="fault" signature="fault(node)" />
            <scope doc="_nodeType is defined in the subclass" ilk="function" line="382" lineend="388" name="text" signature="text(node)" />
            <scope ilk="function" line="390" lineend="400" name="struct" signature="struct(node)" />
            <scope ilk="function" line="403" lineend="440" name="value" signature="value(node)" />
            <scope ilk="function" line="442" lineend="453" name="methodCall" signature="methodCall(node)" />
          </scope>
          <scope classrefs="Object" doc="module TreeParserMixin" ilk="class" line="457" lineend="479" name="AbstractStreamParser">
            <scope ilk="function" line="458" lineend="471" name="parseMethodResponse" signature="parseMethodResponse(str)" />
            <scope ilk="function" line="473" lineend="478" name="parseMethodCall" signature="parseMethodCall(str)" />
          </scope>
          <scope ilk="namespace" line="481" lineend="577" name="StreamParserMixin">
            <scope attributes="__ctor__" ilk="function" line="486" lineend="502" name="initialize" signature="initialize(*a)" />
            <scope ilk="function" line="504" lineend="522" name="startElement" signature="startElement(name, attrs=[])" />
            <scope ilk="function" line="524" lineend="567" name="endElement" signature="endElement(name)" />
            <scope ilk="function" line="569" lineend="575" name="character" signature="character(data)" />
          </scope>
          <scope classrefs="AbstractStreamParser" doc="module StreamParserMixin -----------------------------------&#xA;----------------------------------------" ilk="class" line="580" lineend="587" name="XMLStreamParser">
            <scope attributes="__ctor__" ilk="function" line="581" lineend="586" name="initialize" signature="initialize">
              <import line="582" module="xmlparser" symbol="*" />
            </scope>
          </scope>
          <scope classrefs="AbstractStreamParser" doc="class XMLStreamParser --------------------------------------&#xA;-------------------------------------" ilk="class" line="589" lineend="616" name="NQXMLStreamParser">
            <scope attributes="__ctor__" ilk="function" line="590" lineend="593" name="initialize" signature="initialize">
              <import line="591" module="nqxml/streamingparser" symbol="*" />
            </scope>
            <scope classrefs="Object" ilk="class" line="595" lineend="614" name="XMLRPCParser">
              <scope ilk="function" line="598" lineend="613" name="parse" signature="parse(str)" />
              <import symbol="StreamParserMixin" />
            </scope>
          </scope>
          <scope classrefs="AbstractTreeParser" doc="class NQXMLStreamParser ------------------------------------&#xA;---------------------------------------" ilk="class" line="618" lineend="668" name="XMLTreeParser">
            <scope attributes="__ctor__" ilk="function" line="620" lineend="633" name="initialize" signature="initialize">
              <import line="621" module="xmltreebuilder" symbol="*" />
            </scope>
            <scope ilk="function" line="637" lineend="644" name="_nodeType" signature="_nodeType(node)" />
            <scope ilk="function" line="647" lineend="652" name="methodResponse_document" signature="methodResponse_document(node)" />
            <scope ilk="function" line="654" lineend="659" name="methodCall_document" signature="methodCall_document(node)" />
            <scope ilk="function" line="661" lineend="666" name="createCleanedTree" signature="createCleanedTree(str)" />
          </scope>
          <scope classrefs="AbstractTreeParser" doc="class XMLParser --------------------------------------------&#xA;-------------------------------" ilk="class" line="670" lineend="696" name="NQXMLTreeParser">
            <scope attributes="__ctor__" ilk="function" line="672" lineend="674" name="initialize" signature="initialize">
              <import line="673" module="nqxml/treeparser" symbol="*" />
            </scope>
            <scope ilk="function" line="678" lineend="680" name="_nodeType" signature="_nodeType(node)" />
            <scope ilk="function" line="682" lineend="684" name="methodResponse_document" signature="methodResponse_document(node)" />
            <scope ilk="function" line="686" lineend="688" name="methodCall_document" signature="methodCall_document(node)" />
            <scope ilk="function" line="690" lineend="694" name="createCleanedTree" signature="createCleanedTree(str)" />
          </scope>
          <scope classrefs="AbstractStreamParser" doc="class NQXMLTreeParser --------------------------------------&#xA;-------------------------------------" ilk="class" line="698" lineend="721" name="REXMLStreamParser">
            <scope attributes="__ctor__" ilk="function" line="699" lineend="702" name="initialize" signature="initialize">
              <import line="700" module="rexml/document" symbol="*" />
            </scope>
            <scope classrefs="Object" ilk="class" line="704" lineend="719" name="StreamListener">
              <scope ilk="function" line="712" lineend="714" name="method_missing" signature="method_missing(*a)" />
              <scope ilk="function" line="716" lineend="718" name="parse" signature="parse(str)" />
              <import symbol="StreamParserMixin" />
            </scope>
          </scope>
          <scope classrefs="AbstractStreamParser" doc="------------------------------------------------------------&#xA;---------------" ilk="class" line="723" lineend="790" name="XMLScanStreamParser">
            <scope attributes="__ctor__" ilk="function" line="724" lineend="727" name="initialize" signature="initialize">
              <import line="725" module="xmlscan/parser" symbol="*" />
            </scope>
            <scope classrefs="Object" ilk="class" line="729" lineend="789" name="XMLScanParser">
              <scope ilk="function" line="740" lineend="743" name="parse" signature="parse(str)" />
              <scope ilk="function" line="748" name="on_stag_end" signature="on_stag_end(name)" />
              <scope ilk="function" line="750" lineend="753" name="on_stag_end_empty" signature="on_stag_end_empty(name)" />
              <scope ilk="function" line="755" lineend="757" name="on_chardata" signature="on_chardata(str)" />
              <scope ilk="function" line="759" lineend="761" name="on_cdata" signature="on_cdata(str)" />
              <scope ilk="function" line="763" lineend="770" name="on_entityref" signature="on_entityref(ent)" />
              <scope ilk="function" line="772" lineend="774" name="on_charref" signature="on_charref(code)" />
              <scope ilk="function" line="776" lineend="778" name="on_charref_hex" signature="on_charref_hex(code)" />
              <scope ilk="function" line="780" lineend="781" name="method_missing" signature="method_missing(*a)" />
              <import symbol="StreamParserMixin" />
            </scope>
          </scope>
          <scope attributes="__classmethod__" doc="yields an instance of each installed parser" ilk="function" line="800" lineend="807" name="each_installed_parser" signature="self.each_installed_parser" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/marshal">
      <import line="9" module="xmlrpc/parser" symbol="*" />
      <import line="10" module="xmlrpc/create" symbol="*" />
      <import line="11" module="xmlrpc/config" symbol="*" />
      <import line="12" module="xmlrpc/utils" symbol="*" />
      <scope doc="Marshalling of XML-RPC methodCall and methodResponse" ilk="namespace" line="14" lineend="75" name="XMLRPC">
        <scope classrefs="Object" ilk="class" line="16" lineend="73" name="Marshal">
          <scope classrefs="Object" doc="class methods -------------------------------" ilk="class" line="21" lineend="42" name="self">
            <scope ilk="function" line="23" lineend="25" name="dump_call" signature="dump_call( methodName, *params )" />
            <scope ilk="function" line="27" lineend="29" name="dump_response" signature="dump_response( param )" />
            <scope ilk="function" line="31" lineend="33" name="load_call" signature="load_call( stringOrReadable )" />
            <scope ilk="function" line="35" lineend="37" name="load_response" signature="load_response( stringOrReadable )" />
          </scope>
          <scope attributes="__ctor__" doc="class self instance methods ----------------------------" ilk="function" line="46" lineend="49" name="initialize" signature="initialize( parser = nil, writer = nil )" />
          <scope ilk="function" line="51" lineend="53" name="dump_call" signature="dump_call( methodName, *params )" />
          <scope ilk="function" line="55" lineend="57" name="dump_response" signature="dump_response( param )" />
          <scope doc="returns [ methodname, params ]" ilk="function" line="62" lineend="64" name="load_call" signature="load_call( stringOrReadable )" />
          <scope doc="returns paramOrFault" ilk="function" line="69" lineend="71" name="load_response" signature="load_response( stringOrReadable )" />
          <import symbol="ParserWriterChooseMixin" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/httpserver">
      <import line="11" module="gserver" symbol="*" />
      <scope classrefs="GServer" doc="Implements a simple HTTP-server by using John W." ilk="class" line="13" lineend="177" name="HttpServer">
        <scope attributes="__ctor__" doc="handle_obj specifies the object, that receives calls to&#xA;request_handler and ip_auth_handler" ilk="function" line="18" lineend="22" name="initialize" signature="initialize(handle_obj, port = 8080, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stdout, audit = true, debug = true)" />
        <scope classrefs="Object" doc="Classes -------------------------------------------------" ilk="class" line="50" lineend="64" name="Request">
          <scope ilk="function" line="51" lineend="51" name="data" />
          <scope ilk="function" line="51" lineend="51" name="header" />
          <scope ilk="function" line="51" lineend="51" name="method" />
          <scope ilk="function" line="51" lineend="51" name="path" />
          <scope ilk="function" line="51" lineend="51" name="proto" />
          <scope attributes="__ctor__" ilk="function" line="53" lineend="56" name="initialize" signature="initialize(data, method=nil, path=nil, proto=nil)" />
          <scope ilk="function" line="58" lineend="62" name="content_length" signature="content_length" />
        </scope>
        <scope classrefs="Object" ilk="class" line="66" lineend="75" name="Response">
          <scope ilk="function" line="67" lineend="67" name="header" />
          <scope ilk="function" line="68" lineend="68" name="body" />
          <scope ilk="function" line="68" lineend="68" name="body=" />
          <scope ilk="function" line="68" lineend="68" name="status" />
          <scope ilk="function" line="68" lineend="68" name="status=" />
          <scope ilk="function" line="68" lineend="68" name="status_message" />
          <scope ilk="function" line="68" lineend="68" name="status_message=" />
          <scope attributes="__ctor__" ilk="function" line="70" lineend="74" name="initialize" signature="initialize(status=200)" />
        </scope>
        <scope classrefs="Object" doc="a case-insensitive Hash class for HTTP header" ilk="class" line="81" lineend="109" name="Table">
          <scope attributes="__ctor__" ilk="function" line="84" lineend="87" name="initialize" signature="initialize(hash={})" />
          <scope ilk="function" line="89" lineend="91" name="[]" signature="[](key" />
          <scope ilk="function" line="93" lineend="95" name="[]=" signature="[]=(key" />
          <scope ilk="function" line="97" lineend="100" name="update" signature="update(hash)" />
          <scope ilk="function" line="102" lineend="104" name="each" signature="each" />
          <scope ilk="function" line="106" lineend="108" name="writeTo" signature="writeTo(port)" />
          <import symbol="Enumerable" />
        </scope>
        <scope doc="class Table Helper Methods&#xA;------------------------------------------" ilk="function" line="114" lineend="122" name="http_header" signature="http_header(header=nil)" />
        <scope ilk="function" line="124" lineend="126" name="http_date" signature="http_date( aTime )" />
        <scope ilk="function" line="128" lineend="137" name="http_resp" signature="http_resp(status_code, status_message=nil, header=nil, body=nil)" />
        <scope doc="Main Serve Loop -----------------------------------------" ilk="function" line="141" lineend="175" name="serve" signature="serve(io)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/datetime">
      <import line="66" module="date" symbol="*" />
      <scope ilk="namespace" line="68" name="XMLRPC" />
      <scope classrefs="Object" ilk="class" line="70" lineend="133" name="DateTime">
        <scope ilk="function" line="72" lineend="72" name="year" />
        <scope ilk="function" line="72" lineend="72" name="month" />
        <scope ilk="function" line="72" lineend="72" name="day" />
        <scope ilk="function" line="72" lineend="72" name="hour" />
        <scope ilk="function" line="72" lineend="72" name="min" />
        <scope ilk="function" line="72" lineend="72" name="sec" />
        <scope ilk="function" line="74" lineend="77" name="year=" signature="year= (value)" />
        <scope ilk="function" line="79" lineend="82" name="month=" signature="month= (value)" />
        <scope ilk="function" line="84" lineend="87" name="day=" signature="day= (value)" />
        <scope ilk="function" line="89" lineend="92" name="hour=" signature="hour= (value)" />
        <scope ilk="function" line="94" lineend="97" name="min=" signature="min= (value)" />
        <scope ilk="function" line="99" lineend="102" name="sec=" signature="sec= (value)" />
        <scope attributes="__ctor__" ilk="function" line="108" lineend="111" name="initialize" signature="initialize(year, month, day, hour, min, sec)" />
        <scope ilk="function" line="113" lineend="119" name="to_time" signature="to_time" />
        <scope ilk="function" line="121" lineend="123" name="to_date" signature="to_date" />
        <scope ilk="function" line="125" lineend="127" name="to_a" signature="to_a" />
        <scope ilk="function" line="129" lineend="131" name="==" signature="==(o" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/create">
      <import line="9" module="date" symbol="*" />
      <import line="10" module="xmlrpc/base64" symbol="*" />
      <scope doc="Creates XML-RPC call/response documents" ilk="namespace" line="12" lineend="294" name="XMLRPC">
        <scope ilk="namespace" line="14" lineend="101" name="XMLWriter">
          <scope classrefs="Object" ilk="class" line="16" lineend="24" name="Abstract">
            <scope ilk="function" line="17" lineend="19" name="ele" signature="ele(name, *children)" />
            <scope ilk="function" line="21" lineend="23" name="tag" signature="tag(name, txt)" />
          </scope>
          <scope classrefs="Abstract" ilk="class" line="27" lineend="58" name="Simple">
            <scope ilk="function" line="29" lineend="31" name="document_to_str" signature="document_to_str(doc)" />
            <scope ilk="function" line="33" lineend="35" name="document" signature="document(*params)" />
            <scope ilk="function" line="37" lineend="39" name="pi" signature="pi(name, *params)" />
            <scope ilk="function" line="41" lineend="48" name="element" signature="element(name, attrs, *children)" />
            <scope ilk="function" line="50" lineend="56" name="text" signature="text(txt)" />
          </scope>
          <scope classrefs="Abstract" doc="class Simple" ilk="class" line="61" lineend="87" name="XMLParser">
            <scope attributes="__ctor__" ilk="function" line="63" lineend="65" name="initialize" signature="initialize">
              <import line="64" module="xmltreebuilder" symbol="*" />
            </scope>
            <scope ilk="function" line="67" lineend="69" name="document_to_str" signature="document_to_str(doc)" />
            <scope ilk="function" line="71" lineend="73" name="document" signature="document(*params)" />
            <scope ilk="function" line="75" lineend="77" name="pi" signature="pi(name, *params)" />
            <scope ilk="function" line="79" lineend="81" name="element" signature="element(name, attrs, *children)" />
            <scope ilk="function" line="83" lineend="85" name="text" signature="text(txt)" />
          </scope>
          <scope attributes="__classmethod__" doc="yields an instance of each installed XML writer" ilk="function" line="92" lineend="99" name="each_installed_writer" signature="self.each_installed_writer" />
        </scope>
        <scope classrefs="Object" doc="module XMLWriter" ilk="class" line="103" lineend="292" name="Create">
          <scope attributes="__ctor__" ilk="function" line="105" lineend="107" name="initialize" signature="initialize(xml_writer = nil)" />
          <scope ilk="function" line="110" lineend="130" name="methodCall" signature="methodCall(name, *params)" />
          <scope doc="generates a XML-RPC methodResponse document" ilk="function" line="144" lineend="166" name="methodResponse" signature="methodResponse(is_ret, *params)" />
          <scope doc="converts a Ruby object into a XML-RPC &lt;value&gt; tag" ilk="function" line="178" lineend="285" name="conv2value" signature="conv2value(param)" />
          <scope ilk="function" line="287" lineend="289" name="wrong_type" signature="wrong_type(value)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/config">
      <scope doc="$Id: config.rb,v 1.1 2003/07/19 10:05:54 matz Exp $&#xA;Configuration file for XML-RPC for Ruby" ilk="namespace" line="6" lineend="39" name="XMLRPC">
        <scope ilk="namespace" line="8" lineend="37" name="Config" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/client">
      <import line="277" module="xmlrpc/parser" symbol="*" />
      <import line="278" module="xmlrpc/create" symbol="*" />
      <import line="279" module="xmlrpc/config" symbol="*" />
      <import line="280" module="xmlrpc/utils" symbol="*" />
      <import line="281" module="net/http" symbol="*" />
      <scope doc="ParserWriterChooseMixin" ilk="namespace" line="283" lineend="615" name="XMLRPC">
        <scope classrefs="Object" ilk="class" line="285" lineend="613" name="Client">
          <scope attributes="__ctor__" doc="Constructors -----------------------------------------------&#xA;--------------------" ilk="function" line="295" lineend="335" name="initialize" signature="initialize(host=nil, path=nil, port=nil, proxy_host=nil, proxy_port=nil, user=nil, password=nil, use_ssl=nil, timeout=nil)">
            <import line="312" module="net/https" symbol="*" />
          </scope>
          <scope classrefs="Object" ilk="class" line="338" name="self" />
          <scope ilk="function" line="340" lineend="358" name="new2" signature="new2(uri, proxy=nil, timeout=nil)" />
          <scope ilk="function" line="362" lineend="370" name="new3" signature="new3(hash={})" />
          <scope ilk="function" line="380" lineend="380" name="http_header_extra" />
          <scope ilk="function" line="380" lineend="380" name="http_header_extra=" />
          <scope ilk="function" line="383" lineend="383" name="http_last_response" />
          <scope ilk="function" line="386" lineend="386" name="cookie" />
          <scope ilk="function" line="386" lineend="386" name="cookie=" />
          <scope ilk="function" line="389" lineend="389" name="timeout" />
          <scope ilk="function" line="389" lineend="389" name="user" />
          <scope ilk="function" line="389" lineend="389" name="password" />
          <scope doc="Cookie support" ilk="function" line="391" lineend="395" name="timeout=" signature="timeout=(new_timeout)" />
          <scope ilk="function" line="397" lineend="400" name="user=" signature="user=(new_user)" />
          <scope ilk="function" line="402" lineend="405" name="password=" signature="password=(new_password)" />
          <scope doc="Call methods -----------------------------------------------&#xA;---------------" ilk="function" line="409" lineend="416" name="call" signature="call(method, *args)" />
          <scope ilk="function" line="418" lineend="422" name="call2" signature="call2(method, *args)" />
          <scope ilk="function" line="424" lineend="431" name="call_async" signature="call_async(method, *args)" />
          <scope ilk="function" line="433" lineend="437" name="call2_async" signature="call2_async(method, *args)" />
          <scope doc="Multicall methods ------------------------------------------&#xA;--------------------" ilk="function" line="442" lineend="449" name="multicall" signature="multicall(*methods)" />
          <scope ilk="function" line="451" lineend="453" name="multicall2" signature="multicall2(*methods)" />
          <scope ilk="function" line="455" lineend="462" name="multicall_async" signature="multicall_async(*methods)" />
          <scope ilk="function" line="464" lineend="466" name="multicall2_async" signature="multicall2_async(*methods)" />
          <scope doc="Proxy generating methods&#xA;------------------------------------------" ilk="function" line="471" lineend="473" name="proxy" signature="proxy(prefix=nil, *args)" />
          <scope ilk="function" line="475" lineend="477" name="proxy2" signature="proxy2(prefix=nil, *args)" />
          <scope ilk="function" line="479" lineend="481" name="proxy_async" signature="proxy_async(prefix=nil, *args)" />
          <scope ilk="function" line="483" lineend="485" name="proxy2_async" signature="proxy2_async(prefix=nil, *args)" />
          <scope doc="----------------------------------------------------------" ilk="function" line="490" lineend="498" name="set_auth" signature="set_auth" />
          <scope ilk="function" line="500" lineend="569" name="do_rpc" signature="do_rpc(request, async=false)" />
          <scope ilk="function" line="571" lineend="592" name="gen_multicall" signature="gen_multicall(methods=[], async=false)" />
          <scope classrefs="Object" ilk="class" line="596" lineend="611" name="Proxy">
            <scope attributes="__ctor__" ilk="function" line="598" lineend="603" name="initialize" signature="initialize(server, prefix, args=[], meth=:call, delim=&quot;.&quot;)" />
            <scope ilk="function" line="605" lineend="609" name="method_missing" signature="method_missing(mid, *args)" />
          </scope>
          <import symbol="ParserWriterChooseMixin" />
          <import symbol="ParseContentType" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="xmlrpc/base64">
      <scope ilk="namespace" line="40" name="XMLRPC" />
      <scope classrefs="Object" ilk="class" line="42" lineend="72" name="Base64">
        <scope attributes="__ctor__" ilk="function" line="44" lineend="53" name="initialize" signature="initialize(str, state = :dec)" />
        <scope ilk="function" line="55" lineend="57" name="decoded" signature="decoded" />
        <scope ilk="function" line="59" lineend="61" name="encoded" signature="encoded" />
        <scope attributes="__classmethod__" ilk="function" line="64" lineend="66" name="decode" signature="Base64.decode(str)" />
        <scope attributes="__classmethod__" ilk="function" line="68" lineend="70" name="encode" signature="Base64.encode(str)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/xsd2ruby">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <import line="10" module="wsdl/xmlSchema/importer" symbol="*" />
      <import line="11" module="wsdl/soap/classDefCreator" symbol="*" />
      <scope doc="XSD4R - XSD to ruby mapping library." ilk="namespace" line="14" name="WSDL" />
      <scope ilk="namespace" line="15" name="XMLSchema" />
      <scope classrefs="Object" ilk="class" line="18" lineend="103" name="XSD2Ruby">
        <scope ilk="function" line="19" lineend="19" name="location" />
        <scope ilk="function" line="19" lineend="19" name="location=" />
        <scope ilk="function" line="20" lineend="20" name="opt" />
        <scope ilk="function" line="21" lineend="21" name="logger" />
        <scope ilk="function" line="21" lineend="21" name="logger=" />
        <scope ilk="function" line="22" lineend="22" name="basedir" />
        <scope ilk="function" line="22" lineend="22" name="basedir=" />
        <scope ilk="function" line="24" lineend="31" name="run" signature="run" />
        <scope attributes="__ctor__" ilk="function" line="35" lineend="42" name="initialize" signature="initialize" />
        <scope ilk="function" line="44" lineend="46" name="create_file" signature="create_file" />
        <scope ilk="function" line="48" lineend="55" name="create_classdef" signature="create_classdef" />
        <scope ilk="function" line="57" lineend="64" name="write_file" signature="write_file(filename)" />
        <scope ilk="function" line="66" lineend="86" name="check_file" signature="check_file(filename)" />
        <scope ilk="function" line="88" lineend="98" name="create_classname" signature="create_classname(xsd)" />
        <scope ilk="function" line="100" lineend="102" name="import" signature="import(location)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/unique">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema unique element." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="30" name="Unique">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
        <scope ilk="function" line="21" lineend="24" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="26" lineend="29" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/simpleType">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema simpleType definition for WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="69" name="SimpleType">
        <scope ilk="function" line="18" lineend="18" name="name" />
        <scope ilk="function" line="18" lineend="18" name="name=" />
        <scope ilk="function" line="19" lineend="19" name="restriction" />
        <scope ilk="function" line="21" lineend="27" name="check_lexical_format" signature="check_lexical_format(value)" />
        <scope ilk="function" line="29" lineend="35" name="base" signature="base" />
        <scope attributes="__ctor__" ilk="function" line="37" lineend="41" name="initialize" signature="initialize(name = nil)" />
        <scope ilk="function" line="43" lineend="45" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="47" lineend="53" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="55" lineend="60" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="64" lineend="68" name="check_restriction" signature="check_restriction(value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/simpleRestriction">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema simpleContent restriction definition for&#xA;WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="69" name="SimpleRestriction">
        <scope ilk="function" line="18" lineend="18" name="base" />
        <scope ilk="function" line="19" lineend="19" name="enumeration" />
        <scope ilk="function" line="20" lineend="20" name="length" />
        <scope ilk="function" line="20" lineend="20" name="length=" />
        <scope ilk="function" line="21" lineend="21" name="pattern" />
        <scope ilk="function" line="21" lineend="21" name="pattern=" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="29" name="initialize" signature="initialize" />
        <scope ilk="function" line="31" lineend="36" name="valid?" signature="valid?(value)" />
        <scope ilk="function" line="38" lineend="47" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="49" lineend="54" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="58" lineend="60" name="check_restriction" signature="check_restriction(value)" />
        <scope ilk="function" line="62" lineend="64" name="check_length" signature="check_length(value)" />
        <scope ilk="function" line="66" lineend="68" name="check_pattern" signature="check_pattern(value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/simpleExtension">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema simpleType extension definition for WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="50" name="SimpleExtension">
        <scope ilk="function" line="18" lineend="18" name="base" />
        <scope ilk="function" line="19" lineend="19" name="attributes" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="25" name="initialize" signature="initialize" />
        <scope ilk="function" line="27" lineend="29" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="31" lineend="33" name="valid?" signature="valid?(value)" />
        <scope ilk="function" line="35" lineend="42" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="44" lineend="49" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/simpleContent">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema simpleContent definition for WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="61" name="SimpleContent">
        <scope ilk="function" line="18" lineend="18" name="restriction" />
        <scope ilk="function" line="19" lineend="19" name="extension" />
        <scope ilk="function" line="21" lineend="23" name="check_lexical_format" signature="check_lexical_format(value)" />
        <scope attributes="__ctor__" ilk="function" line="25" lineend="29" name="initialize" signature="initialize" />
        <scope ilk="function" line="31" lineend="33" name="base" signature="base" />
        <scope ilk="function" line="35" lineend="37" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="39" lineend="48" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="52" lineend="54" name="content" signature="content" />
        <scope ilk="function" line="56" lineend="60" name="check" signature="check(value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/sequence">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema complexType definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="65" name="Sequence">
        <scope ilk="function" line="17" lineend="17" name="minoccurs" />
        <scope ilk="function" line="18" lineend="18" name="maxoccurs" />
        <scope ilk="function" line="19" lineend="19" name="elements" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="26" name="initialize" signature="initialize" />
        <scope ilk="function" line="28" lineend="30" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="32" lineend="34" name="elementformdefault" signature="elementformdefault" />
        <scope ilk="function" line="36" lineend="38" name="&lt;&lt;" signature="&lt;&lt;(element" />
        <scope ilk="function" line="40" lineend="53" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="55" lineend="64" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/schema">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema schema definition for WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="139" name="Schema">
        <scope ilk="function" line="18" lineend="18" name="targetnamespace" />
        <scope ilk="function" line="19" lineend="19" name="complextypes" />
        <scope ilk="function" line="20" lineend="20" name="simpletypes" />
        <scope ilk="function" line="21" lineend="21" name="elements" />
        <scope ilk="function" line="22" lineend="22" name="attributes" />
        <scope ilk="function" line="23" lineend="23" name="imports" />
        <scope ilk="function" line="24" lineend="24" name="attributeformdefault" />
        <scope ilk="function" line="24" lineend="24" name="attributeformdefault=" />
        <scope ilk="function" line="25" lineend="25" name="elementformdefault" />
        <scope ilk="function" line="25" lineend="25" name="elementformdefault=" />
        <scope ilk="function" line="27" lineend="27" name="importedschema" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="29" lineend="42" name="initialize" signature="initialize" />
        <scope ilk="function" line="44" lineend="46" name="location" signature="location" />
        <scope ilk="function" line="48" lineend="50" name="location=" signature="location=(location)" />
        <scope ilk="function" line="52" lineend="81" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="83" lineend="94" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="96" lineend="103" name="collect_attributes" signature="collect_attributes" />
        <scope ilk="function" line="105" lineend="112" name="collect_elements" signature="collect_elements" />
        <scope ilk="function" line="114" lineend="121" name="collect_complextypes" signature="collect_complextypes" />
        <scope ilk="function" line="123" lineend="130" name="collect_simpletypes" signature="collect_simpletypes" />
        <scope attributes="__classmethod__" ilk="function" line="132" lineend="138" name="parse_element" signature="self.parse_element(element)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/pattern">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema pattern definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="32" name="Pattern">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
        <scope ilk="function" line="21" lineend="23" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="25" lineend="31" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/parser">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="xsd/ns" symbol="*" />
      <import line="11" module="xsd/charset" symbol="*" />
      <import line="12" module="xsd/datatypes" symbol="*" />
      <import line="13" module="xsd/xmlparser" symbol="*" />
      <import line="14" module="wsdl/xmlSchema/data" symbol="*" />
      <scope doc="WSDL4R - WSDL XML Instance parser library." ilk="namespace" line="17" name="WSDL" />
      <scope ilk="namespace" line="18" name="XMLSchema" />
      <scope classrefs="Object" ilk="class" line="21" lineend="162" name="Parser">
        <scope classrefs="Error" ilk="class" line="24" lineend="24" name="ParseError" />
        <scope classrefs="ParseError" ilk="class" line="25" lineend="25" name="FormatDecodeError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="26" lineend="26" name="UnknownElementError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="27" lineend="27" name="UnknownAttributeError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="28" lineend="28" name="UnexpectedElementError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="29" lineend="29" name="ElementConstraintError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="30" lineend="30" name="AttributeConstraintError" />
        <scope classrefs="Object" ilk="class" line="34" lineend="46" name="ParseFrame">
          <scope ilk="function" line="35" lineend="35" name="ns" />
          <scope ilk="function" line="36" lineend="36" name="name" />
          <scope ilk="function" line="37" lineend="37" name="node" />
          <scope ilk="function" line="37" lineend="37" name="node=" />
          <scope attributes="__ctor__" ilk="function" line="41" lineend="45" name="initialize" signature="initialize(ns, name, node)" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="50" lineend="57" name="initialize" signature="initialize(opt = {})" />
        <scope ilk="function" line="59" lineend="65" name="parse" signature="parse(string_or_readable)" />
        <scope ilk="function" line="67" lineend="69" name="charset" signature="charset" />
        <scope ilk="function" line="71" lineend="84" name="start_element" signature="start_element(name, attrs)" />
        <scope ilk="function" line="86" lineend="95" name="characters" signature="characters(text)" />
        <scope ilk="function" line="97" lineend="104" name="end_element" signature="end_element(name)" />
        <scope ilk="function" line="108" lineend="153" name="decode_tag" signature="decode_tag(ns, name, attrs, parent)" />
        <scope ilk="function" line="155" lineend="157" name="decode_tag_end" signature="decode_tag_end(ns, node)" />
        <scope ilk="function" line="159" lineend="161" name="decode_text" signature="decode_text(ns, text)" />
        <import symbol="XSD" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/length">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema length definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="31" name="Length">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
        <scope ilk="function" line="21" lineend="23" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="25" lineend="30" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/include">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/xmlSchema/importer" symbol="*" />
      <scope doc="WSDL4R - XMLSchema include definition." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="50" name="Include">
        <scope ilk="function" line="18" lineend="18" name="schemalocation" />
        <scope ilk="function" line="19" lineend="19" name="content" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="25" name="initialize" signature="initialize" />
        <scope ilk="function" line="27" lineend="29" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="31" lineend="43" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="47" lineend="49" name="import" signature="import(location)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/importer">
      <import line="9" module="soap/httpconfigloader" symbol="*" />
      <import line="10" module="wsdl/xmlSchema/parser" symbol="*" />
      <scope doc="WSDL4R - XSD importer library." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Object" ilk="class" line="17" lineend="83" name="Importer">
        <scope attributes="__classmethod__" ilk="function" line="18" lineend="20" name="import" signature="self.import(location, originalroot = nil)" />
        <scope attributes="__ctor__" ilk="function" line="22" lineend="24" name="initialize" signature="initialize" />
        <scope ilk="function" line="26" lineend="33" name="import" signature="import(location, originalroot = nil)" />
        <scope ilk="function" line="37" lineend="43" name="parse" signature="parse(content, location, originalroot)" />
        <scope ilk="function" line="45" lineend="67" name="fetch" signature="fetch(location)" />
        <scope ilk="function" line="69" lineend="82" name="web_client" signature="web_client">
          <import line="71" module="http-access2" symbol="*" />
          <import line="78" module="soap/netHttpClient" symbol="*" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/import">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/xmlSchema/importer" symbol="*" />
      <scope doc="WSDL4R - XMLSchema import definition." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="61" name="Import">
        <scope ilk="function" line="18" lineend="18" name="namespace" />
        <scope ilk="function" line="19" lineend="19" name="schemalocation" />
        <scope ilk="function" line="20" lineend="20" name="content" />
        <scope attributes="__ctor__" ilk="function" line="22" lineend="27" name="initialize" signature="initialize" />
        <scope ilk="function" line="29" lineend="31" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="33" lineend="54" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="58" lineend="60" name="import" signature="import(location)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/enumeration">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema enumeration definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="32" name="Enumeration">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
        <scope ilk="function" line="21" lineend="23" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="25" lineend="31" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/element">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema element definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="150" name="Element">
        <scope classrefs="Object" ilk="class" line="17" lineend="36" name="self">
          <scope ilk="function" line="19" lineend="25" name="attr_reader_ref" signature="attr_reader_ref(symbol)" />
          <scope ilk="function" line="27" lineend="34" name="attr_reader_ref" signature="attr_reader_ref(symbol)" />
        </scope>
        <scope ilk="function" line="38" lineend="38" name="name=" />
        <scope ilk="function" line="39" lineend="39" name="form=" />
        <scope ilk="function" line="40" lineend="40" name="type=" />
        <scope ilk="function" line="41" lineend="41" name="local_simpletype=" />
        <scope ilk="function" line="42" lineend="42" name="local_complextype=" />
        <scope ilk="function" line="43" lineend="43" name="constraint=" />
        <scope ilk="function" line="44" lineend="44" name="maxoccurs=" />
        <scope ilk="function" line="45" lineend="45" name="minoccurs=" />
        <scope ilk="function" line="46" lineend="46" name="nillable=" />
        <scope ilk="function" line="58" lineend="58" name="ref" />
        <scope ilk="function" line="58" lineend="58" name="ref=" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="60" lineend="72" name="initialize" signature="initialize(name = nil, type = nil)" />
        <scope ilk="function" line="74" lineend="76" name="refelement" signature="refelement" />
        <scope ilk="function" line="78" lineend="80" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="82" lineend="84" name="elementformdefault" signature="elementformdefault" />
        <scope ilk="function" line="86" lineend="88" name="elementform" signature="elementform" />
        <scope ilk="function" line="90" lineend="105" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="107" lineend="143" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="147" lineend="149" name="directelement?" signature="directelement?" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/data">
      <import line="9" module="xsd/datatypes" symbol="*" />
      <import line="10" module="wsdl/xmlSchema/annotation" symbol="*" />
      <import line="11" module="wsdl/xmlSchema/schema" symbol="*" />
      <import line="12" module="wsdl/xmlSchema/import" symbol="*" />
      <import line="13" module="wsdl/xmlSchema/include" symbol="*" />
      <import line="14" module="wsdl/xmlSchema/simpleType" symbol="*" />
      <import line="15" module="wsdl/xmlSchema/simpleRestriction" symbol="*" />
      <import line="16" module="wsdl/xmlSchema/simpleExtension" symbol="*" />
      <import line="17" module="wsdl/xmlSchema/complexType" symbol="*" />
      <import line="18" module="wsdl/xmlSchema/complexContent" symbol="*" />
      <import line="19" module="wsdl/xmlSchema/simpleContent" symbol="*" />
      <import line="20" module="wsdl/xmlSchema/any" symbol="*" />
      <import line="21" module="wsdl/xmlSchema/element" symbol="*" />
      <import line="22" module="wsdl/xmlSchema/all" symbol="*" />
      <import line="23" module="wsdl/xmlSchema/choice" symbol="*" />
      <import line="24" module="wsdl/xmlSchema/sequence" symbol="*" />
      <import line="25" module="wsdl/xmlSchema/attribute" symbol="*" />
      <import line="26" module="wsdl/xmlSchema/unique" symbol="*" />
      <import line="27" module="wsdl/xmlSchema/enumeration" symbol="*" />
      <import line="28" module="wsdl/xmlSchema/length" symbol="*" />
      <import line="29" module="wsdl/xmlSchema/pattern" symbol="*" />
      <scope doc="WSDL4R - XMLSchema data definitions." ilk="namespace" line="31" name="WSDL" />
      <scope ilk="namespace" line="32" lineend="79" name="XMLSchema" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/content">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema complexType definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="92" name="Content">
        <scope ilk="function" line="17" lineend="17" name="final" />
        <scope ilk="function" line="17" lineend="17" name="final=" />
        <scope ilk="function" line="18" lineend="18" name="mixed" />
        <scope ilk="function" line="18" lineend="18" name="mixed=" />
        <scope ilk="function" line="19" lineend="19" name="type" />
        <scope ilk="function" line="19" lineend="19" name="type=" />
        <scope ilk="function" line="20" lineend="20" name="contents" />
        <scope ilk="function" line="21" lineend="21" name="elements" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="30" name="initialize" signature="initialize" />
        <scope ilk="function" line="32" lineend="34" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="36" lineend="39" name="&lt;&lt;" signature="&lt;&lt;(content" />
        <scope ilk="function" line="41" lineend="45" name="each" signature="each" />
        <scope ilk="function" line="47" lineend="65" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="67" lineend="76" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="78" lineend="80" name="parse_epilogue" signature="parse_epilogue" />
        <scope ilk="function" line="84" lineend="91" name="update_elements" signature="update_elements" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/complexType">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/xmlSchema/content" symbol="*" />
      <import line="11" module="wsdl/xmlSchema/element" symbol="*" />
      <import line="12" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema complexType definition for WSDL." ilk="namespace" line="15" name="WSDL" />
      <scope ilk="namespace" line="16" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="19" lineend="135" name="ComplexType">
        <scope ilk="function" line="20" lineend="20" name="name" />
        <scope ilk="function" line="20" lineend="20" name="name=" />
        <scope ilk="function" line="21" lineend="21" name="complexcontent" />
        <scope ilk="function" line="21" lineend="21" name="complexcontent=" />
        <scope ilk="function" line="22" lineend="22" name="simplecontent" />
        <scope ilk="function" line="22" lineend="22" name="simplecontent=" />
        <scope ilk="function" line="23" lineend="23" name="content" />
        <scope ilk="function" line="24" lineend="24" name="final" />
        <scope ilk="function" line="24" lineend="24" name="final=" />
        <scope ilk="function" line="25" lineend="25" name="mixed" />
        <scope ilk="function" line="25" lineend="25" name="mixed=" />
        <scope ilk="function" line="26" lineend="26" name="attributes" />
        <scope attributes="__ctor__" ilk="function" line="28" lineend="37" name="initialize" signature="initialize(name = nil)" />
        <scope ilk="function" line="39" lineend="43" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="45" lineend="47" name="elementformdefault" signature="elementformdefault" />
        <scope ilk="function" line="50" lineend="60" name="each_element" signature="each_element" />
        <scope ilk="function" line="62" lineend="73" name="find_element" signature="find_element(name)" />
        <scope ilk="function" line="75" lineend="86" name="find_element_by_name" signature="find_element_by_name(name)" />
        <scope ilk="function" line="88" lineend="93" name="sequence_elements=" signature="sequence_elements=(elements)" />
        <scope ilk="function" line="95" lineend="100" name="all_elements=" signature="all_elements=(elements)" />
        <scope ilk="function" line="102" lineend="121" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="123" lineend="134" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/complexContent">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - XMLSchema complexContent definition for WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="88" name="ComplexContent">
        <scope ilk="function" line="18" lineend="18" name="base" />
        <scope ilk="function" line="18" lineend="18" name="base=" />
        <scope ilk="function" line="19" lineend="19" name="derivetype" />
        <scope ilk="function" line="20" lineend="20" name="content" />
        <scope ilk="function" line="21" lineend="21" name="attributes" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="30" name="initialize" signature="initialize" />
        <scope ilk="function" line="32" lineend="34" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="36" lineend="38" name="elementformdefault" signature="elementformdefault" />
        <scope ilk="function" line="40" lineend="42" name="basetype" signature="basetype" />
        <scope ilk="function" line="44" lineend="75" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="77" lineend="87" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/choice">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema complexType definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="65" name="Choice">
        <scope ilk="function" line="17" lineend="17" name="minoccurs" />
        <scope ilk="function" line="18" lineend="18" name="maxoccurs" />
        <scope ilk="function" line="19" lineend="19" name="elements" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="26" name="initialize" signature="initialize" />
        <scope ilk="function" line="28" lineend="30" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="32" lineend="34" name="elementformdefault" signature="elementformdefault" />
        <scope ilk="function" line="36" lineend="38" name="&lt;&lt;" signature="&lt;&lt;(element" />
        <scope ilk="function" line="40" lineend="53" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="55" lineend="64" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/attribute">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema attribute definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="123" name="Attribute">
        <scope classrefs="Object" ilk="class" line="17" lineend="36" name="self">
          <scope ilk="function" line="19" lineend="25" name="attr_reader_ref" signature="attr_reader_ref(symbol)" />
          <scope ilk="function" line="27" lineend="34" name="attr_reader_ref" signature="attr_reader_ref(symbol)" />
        </scope>
        <scope ilk="function" line="38" lineend="38" name="use=" />
        <scope ilk="function" line="39" lineend="39" name="form=" />
        <scope ilk="function" line="40" lineend="40" name="name=" />
        <scope ilk="function" line="41" lineend="41" name="type=" />
        <scope ilk="function" line="42" lineend="42" name="local_simpletype=" />
        <scope ilk="function" line="43" lineend="43" name="default=" />
        <scope ilk="function" line="44" lineend="44" name="fixed=" />
        <scope ilk="function" line="54" lineend="54" name="ref" />
        <scope ilk="function" line="54" lineend="54" name="ref=" />
        <scope ilk="function" line="55" lineend="55" name="arytype" />
        <scope ilk="function" line="55" lineend="55" name="arytype=" />
        <scope attributes="__ctor__" ilk="function" line="57" lineend="69" name="initialize" signature="initialize" />
        <scope ilk="function" line="71" lineend="73" name="refelement" signature="refelement" />
        <scope ilk="function" line="75" lineend="77" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="79" lineend="85" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="87" lineend="116" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="120" lineend="122" name="directelement?" signature="directelement?" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/any">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema any definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="52" name="Any">
        <scope ilk="function" line="17" lineend="17" name="maxoccurs" />
        <scope ilk="function" line="17" lineend="17" name="maxoccurs=" />
        <scope ilk="function" line="18" lineend="18" name="minoccurs" />
        <scope ilk="function" line="18" lineend="18" name="minoccurs=" />
        <scope ilk="function" line="19" lineend="19" name="namespace" />
        <scope ilk="function" line="19" lineend="19" name="namespace=" />
        <scope ilk="function" line="20" lineend="20" name="process_contents" />
        <scope ilk="function" line="20" lineend="20" name="process_contents=" />
        <scope attributes="__ctor__" ilk="function" line="22" lineend="28" name="initialize" signature="initialize" />
        <scope ilk="function" line="30" lineend="32" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="34" lineend="36" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="38" lineend="51" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/annotation">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP documentation element." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="30" name="Annotation">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
        <scope ilk="function" line="21" lineend="24" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="26" lineend="29" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/xmlSchema/all">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - XMLSchema complexType definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="65" name="All">
        <scope ilk="function" line="17" lineend="17" name="minoccurs" />
        <scope ilk="function" line="18" lineend="18" name="maxoccurs" />
        <scope ilk="function" line="19" lineend="19" name="elements" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="26" name="initialize" signature="initialize" />
        <scope ilk="function" line="28" lineend="30" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="32" lineend="34" name="elementformdefault" signature="elementformdefault" />
        <scope ilk="function" line="36" lineend="38" name="&lt;&lt;" signature="&lt;&lt;(element" />
        <scope ilk="function" line="40" lineend="53" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="55" lineend="64" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/wsdl">
      <import line="9" module="xsd/qname" symbol="*" />
      <scope doc="WSDL4R - Base definitions." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="StandardError" ilk="class" line="20" lineend="20" name="Error" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/types">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL types definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="40" name="Types">
        <scope ilk="function" line="16" lineend="16" name="schemas" />
        <scope attributes="__ctor__" ilk="function" line="18" lineend="21" name="initialize" signature="initialize" />
        <scope ilk="function" line="23" lineend="35" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="37" lineend="39" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/wsdl2ruby">
      <import line="9" module="logger" symbol="*" />
      <import line="10" module="xsd/qname" symbol="*" />
      <import line="11" module="wsdl/importer" symbol="*" />
      <import line="12" module="wsdl/soap/classDefCreator" symbol="*" />
      <import line="13" module="wsdl/soap/servantSkeltonCreator" symbol="*" />
      <import line="14" module="wsdl/soap/driverCreator" symbol="*" />
      <import line="15" module="wsdl/soap/clientSkeltonCreator" symbol="*" />
      <import line="16" module="wsdl/soap/standaloneServerStubCreator" symbol="*" />
      <import line="17" module="wsdl/soap/cgiStubCreator" symbol="*" />
      <scope doc="WSDL4R - WSDL to ruby mapping library." ilk="namespace" line="20" name="WSDL" />
      <scope ilk="namespace" line="21" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="24" lineend="172" name="WSDL2Ruby">
        <scope ilk="function" line="25" lineend="25" name="location" />
        <scope ilk="function" line="25" lineend="25" name="location=" />
        <scope ilk="function" line="26" lineend="26" name="opt" />
        <scope ilk="function" line="27" lineend="27" name="logger" />
        <scope ilk="function" line="27" lineend="27" name="logger=" />
        <scope ilk="function" line="28" lineend="28" name="basedir" />
        <scope ilk="function" line="28" lineend="28" name="basedir=" />
        <scope ilk="function" line="30" lineend="37" name="run" signature="run" />
        <scope attributes="__ctor__" ilk="function" line="41" lineend="48" name="initialize" signature="initialize" />
        <scope ilk="function" line="50" lineend="57" name="create_file" signature="create_file" />
        <scope ilk="function" line="59" lineend="66" name="create_classdef" signature="create_classdef" />
        <scope ilk="function" line="68" lineend="79" name="create_client_skelton" signature="create_client_skelton(servicename)" />
        <scope ilk="function" line="81" lineend="90" name="create_servant_skelton" signature="create_servant_skelton(porttypename)" />
        <scope ilk="function" line="92" lineend="104" name="create_cgi_stub" signature="create_cgi_stub(servicename)" />
        <scope ilk="function" line="106" lineend="117" name="create_standalone_server_stub" signature="create_standalone_server_stub(servicename)" />
        <scope ilk="function" line="119" lineend="128" name="create_driver" signature="create_driver(porttypename)" />
        <scope ilk="function" line="130" lineend="137" name="write_file" signature="write_file(filename)" />
        <scope ilk="function" line="139" lineend="159" name="check_file" signature="check_file(filename)" />
        <scope ilk="function" line="161" lineend="163" name="shbang" signature="shbang" />
        <scope ilk="function" line="165" lineend="167" name="create_name" signature="create_name(name)" />
        <scope ilk="function" line="169" lineend="171" name="import" signature="import(location)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/standaloneServerStubCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/mappingRegistryCreator" symbol="*" />
      <import line="11" module="wsdl/soap/methodDefCreator" symbol="*" />
      <import line="12" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <scope doc="WSDL4R - Creating standalone server stub code from WSDL." ilk="namespace" line="15" name="WSDL" />
      <scope ilk="namespace" line="16" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="19" lineend="81" name="StandaloneServerStubCreator">
        <scope ilk="function" line="22" lineend="22" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="24" lineend="26" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="28" lineend="33" name="dump" signature="dump(service_name)" />
        <scope ilk="function" line="37" lineend="80" name="dump_porttype" signature="dump_porttype(name)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/servantSkeltonCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <import line="11" module="xsd/codegen" symbol="*" />
      <scope doc="WSDL4R - Creating servant skelton code from WSDL." ilk="namespace" line="14" name="WSDL" />
      <scope ilk="namespace" line="15" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="18" lineend="63" name="ServantSkeltonCreator">
        <scope ilk="function" line="22" lineend="22" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="24" lineend="26" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="28" lineend="39" name="dump" signature="dump(porttype = nil)" />
        <scope ilk="function" line="43" lineend="62" name="dump_porttype" signature="dump_porttype(name)" />
        <import symbol="ClassDefCreatorSupport" />
        <import symbol="XSD::CodeGen::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/operation">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP operation definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="118" name="Operation">
        <scope classrefs="Object" ilk="class" line="17" lineend="35" name="OperationInfo">
          <scope ilk="function" line="18" lineend="18" name="style" />
          <scope ilk="function" line="19" lineend="19" name="op_name" />
          <scope ilk="function" line="20" lineend="20" name="optype_name" />
          <scope ilk="function" line="21" lineend="21" name="headerparts" />
          <scope ilk="function" line="22" lineend="22" name="bodyparts" />
          <scope ilk="function" line="23" lineend="23" name="faultpart" />
          <scope ilk="function" line="24" lineend="24" name="soapaction" />
          <scope attributes="__ctor__" ilk="function" line="26" lineend="34" name="initialize" signature="initialize(style, op_name, optype_name, headerparts, bodyparts, faultpart, soapaction)" />
        </scope>
        <scope ilk="function" line="37" lineend="37" name="soapaction" />
        <scope ilk="function" line="38" lineend="38" name="style" />
        <scope attributes="__ctor__" ilk="function" line="40" lineend="44" name="initialize" signature="initialize" />
        <scope ilk="function" line="46" lineend="48" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="50" lineend="64" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="66" lineend="69" name="input_info" signature="input_info" />
        <scope ilk="function" line="71" lineend="74" name="output_info" signature="output_info" />
        <scope ilk="function" line="76" lineend="82" name="operation_style" signature="operation_style" />
        <scope ilk="function" line="86" lineend="88" name="parent_binding" signature="parent_binding" />
        <scope ilk="function" line="90" lineend="117" name="param_info" signature="param_info(name_info, param)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/methodDefCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <import line="11" module="soap/rpc/element" symbol="*" />
      <scope doc="WSDL4R - Creating driver code from WSDL." ilk="namespace" line="14" name="WSDL" />
      <scope ilk="namespace" line="15" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="18" lineend="224" name="MethodDefCreator">
        <scope ilk="function" line="21" lineend="21" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="29" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="31" lineend="44" name="dump" signature="dump(porttype)" />
        <scope ilk="function" line="46" lineend="64" name="collect_rpcparameter" signature="collect_rpcparameter(operation)" />
        <scope ilk="function" line="66" lineend="77" name="collect_documentparameter" signature="collect_documentparameter(operation)" />
        <scope ilk="function" line="81" lineend="117" name="dump_method" signature="dump_method(operation, binding)" />
        <scope ilk="function" line="119" lineend="146" name="rpcdefinedtype" signature="rpcdefinedtype(part)" />
        <scope ilk="function" line="148" lineend="160" name="documentdefinedtype" signature="documentdefinedtype(part)" />
        <scope ilk="function" line="162" lineend="174" name="elementqualified" signature="elementqualified(part)" />
        <scope ilk="function" line="176" lineend="178" name="param_set" signature="param_set(io_type, name, type, ele = nil)" />
        <scope ilk="function" line="180" lineend="189" name="collect_type" signature="collect_type(type)" />
        <scope ilk="function" line="191" lineend="200" name="param2str" signature="param2str(params)" />
        <scope ilk="function" line="202" lineend="208" name="type2str" signature="type2str(type)" />
        <scope ilk="function" line="210" lineend="217" name="ele2str" signature="ele2str(ele)" />
        <scope ilk="function" line="219" lineend="223" name="cdr" signature="cdr(ary)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/mappingRegistryCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <scope doc="WSDL4R - Creating MappingRegistry code from WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="17" lineend="88" name="MappingRegistryCreator">
        <scope ilk="function" line="20" lineend="20" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="22" lineend="26" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="28" lineend="43" name="dump" signature="dump(types)" />
        <scope ilk="function" line="47" lineend="60" name="dump_typemap" signature="dump_typemap(type)" />
        <scope ilk="function" line="62" lineend="72" name="dump_struct_typemap" signature="dump_struct_typemap(definedtype)" />
        <scope ilk="function" line="74" lineend="87" name="dump_array_typemap" signature="dump_array_typemap(definedtype)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/headerfault">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP body definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="52" name="HeaderFault">
        <scope ilk="function" line="17" lineend="17" name="message" />
        <scope ilk="function" line="18" lineend="18" name="part" />
        <scope ilk="function" line="19" lineend="19" name="use" />
        <scope ilk="function" line="20" lineend="20" name="encodingstyle" />
        <scope ilk="function" line="21" lineend="21" name="namespace" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="23" lineend="30" name="initialize" signature="initialize" />
        <scope ilk="function" line="32" lineend="34" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="36" lineend="51" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/header">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP body definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="82" name="Header">
        <scope ilk="function" line="17" lineend="17" name="headerfault" />
        <scope ilk="function" line="19" lineend="19" name="message" />
        <scope ilk="function" line="20" lineend="20" name="part" />
        <scope ilk="function" line="21" lineend="21" name="use" />
        <scope ilk="function" line="22" lineend="22" name="encodingstyle" />
        <scope ilk="function" line="23" lineend="23" name="namespace" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="25" lineend="33" name="initialize" signature="initialize" />
        <scope ilk="function" line="35" lineend="37" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="39" lineend="41" name="find_message" signature="find_message" />
        <scope ilk="function" line="43" lineend="50" name="find_part" signature="find_part" />
        <scope ilk="function" line="52" lineend="61" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="63" lineend="81" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/fault">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP body definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="52" name="Fault">
        <scope ilk="function" line="17" lineend="17" name="name" />
        <scope ilk="function" line="18" lineend="18" name="use" />
        <scope ilk="function" line="19" lineend="19" name="encodingstyle" />
        <scope ilk="function" line="20" lineend="20" name="namespace" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="22" lineend="28" name="initialize" signature="initialize" />
        <scope ilk="function" line="30" lineend="32" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="34" lineend="36" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="38" lineend="51" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/element">
      <import line="9" module="wsdl/xmlSchema/element" symbol="*" />
      <scope doc="WSDL4R - XMLSchema element definition for WSDL." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="16" lineend="24" name="Element">
        <scope ilk="function" line="17" lineend="19" name="map_as_array?" signature="map_as_array?" />
        <scope ilk="function" line="21" lineend="23" name="attributes" signature="attributes" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/driverCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/mappingRegistryCreator" symbol="*" />
      <import line="11" module="wsdl/soap/methodDefCreator" symbol="*" />
      <import line="12" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <import line="13" module="xsd/codegen" symbol="*" />
      <scope doc="WSDL4R - Creating driver code from WSDL." ilk="namespace" line="16" name="WSDL" />
      <scope ilk="namespace" line="17" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="20" lineend="91" name="DriverCreator">
        <scope ilk="function" line="23" lineend="23" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="25" lineend="27" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="29" lineend="40" name="dump" signature="dump(porttype = nil)" />
        <scope ilk="function" line="44" lineend="90" name="dump_porttype" signature="dump_porttype(name)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/definitions">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <import line="11" module="soap/mapping" symbol="*" />
      <scope doc="WSDL4R - WSDL additional definitions for SOAP." ilk="namespace" line="14" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="17" lineend="146" name="Definitions">
        <scope attributes="__classmethod__" ilk="function" line="18" lineend="24" name="soap_rpc_complextypes" signature="self.soap_rpc_complextypes" />
        <scope attributes="__classmethod__" ilk="function" line="26" lineend="37" name="array_complextype" signature="self.array_complextype" />
        <scope attributes="__classmethod__" ilk="function" line="49" lineend="60" name="fault_complextype" signature="self.fault_complextype" />
        <scope attributes="__classmethod__" ilk="function" line="62" lineend="71" name="exception_complextype" signature="self.exception_complextype" />
        <scope ilk="function" line="73" lineend="76" name="soap_rpc_complextypes" signature="soap_rpc_complextypes(binding)" />
        <scope ilk="function" line="78" lineend="90" name="collect_faulttypes" signature="collect_faulttypes" />
        <scope ilk="function" line="94" lineend="106" name="collect_fault_messages" signature="collect_fault_messages" />
        <scope ilk="function" line="108" lineend="128" name="rpc_operation_complextypes" signature="rpc_operation_complextypes(binding)" />
        <scope ilk="function" line="130" lineend="132" name="op_bind_rpc?" signature="op_bind_rpc?(op_bind)" />
        <scope ilk="function" line="134" lineend="145" name="elements_from_message" signature="elements_from_message(message)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/data">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="wsdl/soap/definitions" symbol="*" />
      <import line="11" module="wsdl/soap/binding" symbol="*" />
      <import line="12" module="wsdl/soap/operation" symbol="*" />
      <import line="13" module="wsdl/soap/body" symbol="*" />
      <import line="14" module="wsdl/soap/element" symbol="*" />
      <import line="15" module="wsdl/soap/header" symbol="*" />
      <import line="16" module="wsdl/soap/headerfault" symbol="*" />
      <import line="17" module="wsdl/soap/fault" symbol="*" />
      <import line="18" module="wsdl/soap/address" symbol="*" />
      <import line="19" module="wsdl/soap/complexType" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP binding data definitions." ilk="namespace" line="22" name="WSDL" />
      <scope ilk="namespace" line="23" lineend="41" name="SOAP" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/complexType">
      <import line="9" module="wsdl/xmlSchema/complexType" symbol="*" />
      <import line="10" module="soap/mapping" symbol="*" />
      <scope doc="WSDL4R - SOAP complexType definition for WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="XMLSchema" />
      <scope classrefs="Info" ilk="class" line="17" lineend="157" name="ComplexType">
        <scope ilk="function" line="18" lineend="20" name="compoundtype" signature="compoundtype" />
        <scope ilk="function" line="22" lineend="47" name="check_type" signature="check_type" />
        <scope ilk="function" line="49" lineend="72" name="child_type" signature="child_type(name = nil)" />
        <scope ilk="function" line="74" lineend="96" name="child_defined_complextype" signature="child_defined_complextype(name)" />
        <scope ilk="function" line="98" lineend="115" name="find_arytype" signature="find_arytype" />
        <scope ilk="function" line="117" lineend="129" name="find_aryelement" signature="find_aryelement" />
        <scope ilk="function" line="133" lineend="141" name="element_simpletype" signature="element_simpletype(element)" />
        <scope ilk="function" line="143" lineend="146" name="check_array_content" signature="check_array_content(content)" />
        <scope ilk="function" line="148" lineend="156" name="content_arytype" signature="content_arytype" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/clientSkeltonCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <scope doc="WSDL4R - Creating client skelton code from WSDL." ilk="namespace" line="13" name="WSDL" />
      <scope ilk="namespace" line="14" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="17" lineend="74" name="ClientSkeltonCreator">
        <scope ilk="function" line="20" lineend="20" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="22" lineend="24" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="26" lineend="33" name="dump" signature="dump(service_name)" />
        <scope ilk="function" line="37" lineend="55" name="dump_porttype" signature="dump_porttype(name)" />
        <scope ilk="function" line="57" lineend="61" name="dump_operation" signature="dump_operation(operation)" />
        <scope ilk="function" line="63" lineend="73" name="dump_input_init" signature="dump_input_init(input)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/classDefCreatorSupport">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="soap/mapping" symbol="*" />
      <import line="11" module="soap/mapping/typeMap" symbol="*" />
      <import line="12" module="xsd/codegen/gensupport" symbol="*" />
      <scope doc="WSDL4R - Creating class code support from WSDL." ilk="namespace" line="15" name="WSDL" />
      <scope ilk="namespace" line="16" name="SOAP" />
      <scope ilk="namespace" line="19" lineend="122" name="ClassDefCreatorSupport">
        <scope ilk="function" line="22" lineend="28" name="create_class_name" signature="create_class_name(qname)" />
        <scope ilk="function" line="30" lineend="32" name="basetype_mapped_class" signature="basetype_mapped_class(name)" />
        <scope ilk="function" line="34" lineend="60" name="dump_method_signature" signature="dump_method_signature(operation)" />
        <scope ilk="function" line="62" lineend="64" name="dq" signature="dq(ele)" />
        <scope ilk="function" line="66" lineend="68" name="ndq" signature="ndq(ele)" />
        <scope ilk="function" line="70" lineend="72" name="sym" signature="sym(ele)" />
        <scope ilk="function" line="74" lineend="76" name="dqname" signature="dqname(qname)" />
        <scope ilk="function" line="80" lineend="99" name="dump_inout_type" signature="dump_inout_type(param)" />
        <scope ilk="function" line="101" lineend="113" name="dump_inputparam" signature="dump_inputparam(input)" />
        <scope ilk="function" line="115" lineend="121" name="add_at" signature="add_at(base, str, pos)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/classDefCreator">
      <import line="9" module="wsdl/data" symbol="*" />
      <import line="10" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <import line="11" module="xsd/codegen" symbol="*" />
      <scope doc="WSDL4R - Creating class definition from WSDL Copyright (C)&#xA;2002, 2003, 2004  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="14" name="WSDL" />
      <scope ilk="namespace" line="15" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="18" lineend="310" name="ClassDefCreator">
        <scope attributes="__ctor__" ilk="function" line="21" lineend="29" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="31" lineend="53" name="dump" signature="dump(type = nil)" />
        <scope ilk="function" line="57" lineend="68" name="dump_element" signature="dump_element" />
        <scope ilk="function" line="70" lineend="74" name="dump_simpletype" signature="dump_simpletype" />
        <scope ilk="function" line="76" lineend="93" name="dump_complextype" signature="dump_complextype" />
        <scope ilk="function" line="95" lineend="111" name="dump_simpletypedef" signature="dump_simpletypedef(qname, simpletype)" />
        <scope ilk="function" line="113" lineend="119" name="dump_simpleclassdef" signature="dump_simpleclassdef(type_or_element)" />
        <scope ilk="function" line="121" lineend="192" name="dump_classdef" signature="dump_classdef(qname, typedef, qualified = false)" />
        <scope ilk="function" line="194" lineend="202" name="element_basetype" signature="element_basetype(ele)" />
        <scope ilk="function" line="204" lineend="212" name="attribute_basetype" signature="attribute_basetype(attr)" />
        <scope ilk="function" line="214" lineend="221" name="basetype_class" signature="basetype_class(type)" />
        <scope ilk="function" line="223" lineend="250" name="define_attribute" signature="define_attribute(c, attributes)" />
        <scope ilk="function" line="252" lineend="256" name="name_element" signature="name_element(element)" />
        <scope ilk="function" line="258" lineend="262" name="name_attribute" signature="name_attribute(attribute)" />
        <scope ilk="function" line="266" lineend="309" name="dump_arraydef" signature="dump_arraydef(complextype)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/cgiStubCreator">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/soap/mappingRegistryCreator" symbol="*" />
      <import line="11" module="wsdl/soap/methodDefCreator" symbol="*" />
      <import line="12" module="wsdl/soap/classDefCreatorSupport" symbol="*" />
      <scope doc="WSDL4R - Creating CGI stub code from WSDL." ilk="namespace" line="15" name="WSDL" />
      <scope ilk="namespace" line="16" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="19" lineend="72" name="CGIStubCreator">
        <scope ilk="function" line="22" lineend="22" name="definitions" />
        <scope attributes="__ctor__" ilk="function" line="24" lineend="26" name="initialize" signature="initialize(definitions)" />
        <scope ilk="function" line="28" lineend="32" name="dump" signature="dump(service_name)" />
        <scope ilk="function" line="36" lineend="71" name="dump_porttype" signature="dump_porttype(name)" />
        <import symbol="ClassDefCreatorSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/body">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP body definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="52" name="Body">
        <scope ilk="function" line="17" lineend="17" name="parts" />
        <scope ilk="function" line="18" lineend="18" name="use" />
        <scope ilk="function" line="19" lineend="19" name="encodingstyle" />
        <scope ilk="function" line="20" lineend="20" name="namespace" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="22" lineend="28" name="initialize" signature="initialize" />
        <scope ilk="function" line="30" lineend="32" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="34" lineend="51" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/binding">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP binding definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="45" name="Binding">
        <scope ilk="function" line="17" lineend="17" name="style" />
        <scope ilk="function" line="18" lineend="18" name="transport" />
        <scope attributes="__ctor__" ilk="function" line="20" lineend="24" name="initialize" signature="initialize" />
        <scope ilk="function" line="26" lineend="28" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="30" lineend="44" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/soap/address">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP address definition." ilk="namespace" line="12" name="WSDL" />
      <scope ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="Info" ilk="class" line="16" lineend="36" name="Address">
        <scope ilk="function" line="17" lineend="17" name="location" />
        <scope attributes="__ctor__" ilk="function" line="19" lineend="22" name="initialize" signature="initialize" />
        <scope ilk="function" line="24" lineend="26" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="28" lineend="35" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/service">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - WSDL service definition." ilk="namespace" line="13" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="16" lineend="58" name="Service">
        <scope ilk="function" line="17" lineend="17" name="name" />
        <scope ilk="function" line="18" lineend="18" name="ports" />
        <scope ilk="function" line="19" lineend="19" name="soap_address" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="21" lineend="26" name="initialize" signature="initialize" />
        <scope ilk="function" line="28" lineend="30" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="32" lineend="48" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="50" lineend="57" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/portType">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - WSDL portType definition." ilk="namespace" line="13" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="16" lineend="70" name="PortType">
        <scope ilk="function" line="17" lineend="17" name="name" />
        <scope ilk="function" line="18" lineend="18" name="operations" />
        <scope doc="required" ilk="function" line="20" lineend="22" name="targetnamespace" signature="targetnamespace" />
        <scope attributes="__ctor__" ilk="function" line="24" lineend="28" name="initialize" signature="initialize" />
        <scope ilk="function" line="30" lineend="33" name="find_binding" signature="find_binding" />
        <scope ilk="function" line="35" lineend="46" name="locations" signature="locations" />
        <scope ilk="function" line="48" lineend="60" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="62" lineend="69" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/port">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL port definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="81" name="Port">
        <scope ilk="function" line="16" lineend="16" name="name" />
        <scope ilk="function" line="17" lineend="17" name="binding" />
        <scope ilk="function" line="18" lineend="18" name="soap_address" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="20" lineend="25" name="initialize" signature="initialize" />
        <scope ilk="function" line="27" lineend="29" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="31" lineend="33" name="porttype" signature="porttype" />
        <scope ilk="function" line="35" lineend="37" name="find_binding" signature="find_binding" />
        <scope ilk="function" line="39" lineend="46" name="inputoperation_map" signature="inputoperation_map" />
        <scope ilk="function" line="48" lineend="55" name="outputoperation_map" signature="outputoperation_map" />
        <scope ilk="function" line="57" lineend="69" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="71" lineend="80" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/part">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL part definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="49" name="Part">
        <scope ilk="function" line="16" lineend="16" name="name" />
        <scope ilk="function" line="17" lineend="17" name="element" />
        <scope ilk="function" line="18" lineend="18" name="type" />
        <scope attributes="__ctor__" doc="optional" ilk="function" line="20" lineend="25" name="initialize" signature="initialize" />
        <scope ilk="function" line="27" lineend="35" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="37" lineend="48" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/parser">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="xsd/ns" symbol="*" />
      <import line="11" module="xsd/charset" symbol="*" />
      <import line="12" module="xsd/datatypes" symbol="*" />
      <import line="13" module="xsd/xmlparser" symbol="*" />
      <import line="14" module="wsdl/wsdl" symbol="*" />
      <import line="15" module="wsdl/data" symbol="*" />
      <import line="16" module="wsdl/xmlSchema/data" symbol="*" />
      <import line="17" module="wsdl/soap/data" symbol="*" />
      <scope doc="WSDL4R - WSDL XML Instance parser library." ilk="namespace" line="20" name="WSDL" />
      <scope classrefs="Object" ilk="class" line="23" lineend="160" name="Parser">
        <scope classrefs="Error" ilk="class" line="26" lineend="26" name="ParseError" />
        <scope classrefs="ParseError" ilk="class" line="27" lineend="27" name="FormatDecodeError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="28" lineend="28" name="UnknownElementError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="29" lineend="29" name="UnknownAttributeError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="30" lineend="30" name="UnexpectedElementError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="31" lineend="31" name="ElementConstraintError" />
        <scope classrefs="FormatDecodeError" ilk="class" line="32" lineend="32" name="AttributeConstraintError" />
        <scope classrefs="Object" ilk="class" line="36" lineend="48" name="ParseFrame">
          <scope ilk="function" line="37" lineend="37" name="ns" />
          <scope ilk="function" line="38" lineend="38" name="name" />
          <scope ilk="function" line="39" lineend="39" name="node" />
          <scope ilk="function" line="39" lineend="39" name="node=" />
          <scope attributes="__ctor__" ilk="function" line="43" lineend="47" name="initialize" signature="initialize(ns, name, node)" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="52" lineend="59" name="initialize" signature="initialize(opt = {})" />
        <scope ilk="function" line="61" lineend="67" name="parse" signature="parse(string_or_readable)" />
        <scope ilk="function" line="69" lineend="71" name="charset" signature="charset" />
        <scope ilk="function" line="73" lineend="86" name="start_element" signature="start_element(name, attrs)" />
        <scope ilk="function" line="88" lineend="97" name="characters" signature="characters(text)" />
        <scope ilk="function" line="99" lineend="106" name="end_element" signature="end_element(name)" />
        <scope ilk="function" line="110" lineend="151" name="decode_tag" signature="decode_tag(ns, name, attrs, parent)" />
        <scope ilk="function" line="153" lineend="155" name="decode_tag_end" signature="decode_tag_end(ns, node)" />
        <scope ilk="function" line="157" lineend="159" name="decode_text" signature="decode_text(ns, text)" />
        <import symbol="WSDL" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/param">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL param definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="82" name="Param">
        <scope ilk="function" line="16" lineend="16" name="message" />
        <scope ilk="function" line="17" lineend="17" name="name" />
        <scope ilk="function" line="18" lineend="18" name="soapbody" />
        <scope ilk="function" line="19" lineend="19" name="soapheader" />
        <scope ilk="function" line="20" lineend="20" name="soapfault" />
        <scope attributes="__ctor__" doc="optional but required for fault." ilk="function" line="22" lineend="29" name="initialize" signature="initialize" />
        <scope ilk="function" line="31" lineend="33" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="35" lineend="37" name="find_message" signature="find_message" />
        <scope ilk="function" line="39" lineend="45" name="soapbody_use" signature="soapbody_use" />
        <scope ilk="function" line="47" lineend="67" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="69" lineend="81" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/operationBinding">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL bound operation definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="105" name="OperationBinding">
        <scope ilk="function" line="16" lineend="16" name="name" />
        <scope ilk="function" line="17" lineend="17" name="input" />
        <scope ilk="function" line="18" lineend="18" name="output" />
        <scope ilk="function" line="19" lineend="19" name="fault" />
        <scope ilk="function" line="20" lineend="20" name="soapoperation" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="22" lineend="29" name="initialize" signature="initialize" />
        <scope ilk="function" line="31" lineend="33" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="35" lineend="37" name="porttype" signature="porttype" />
        <scope ilk="function" line="39" lineend="41" name="find_operation" signature="find_operation" />
        <scope ilk="function" line="43" lineend="49" name="soapoperation_name" signature="soapoperation_name" />
        <scope ilk="function" line="51" lineend="61" name="soapoperation_style" signature="soapoperation_style" />
        <scope ilk="function" line="63" lineend="69" name="soapaction" signature="soapaction" />
        <scope ilk="function" line="71" lineend="95" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="97" lineend="104" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/operation">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL operation definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="127" name="Operation">
        <scope classrefs="Object" ilk="class" line="16" lineend="25" name="NameInfo">
          <scope ilk="function" line="17" lineend="17" name="op_name" />
          <scope ilk="function" line="18" lineend="18" name="optype_name" />
          <scope ilk="function" line="19" lineend="19" name="parts" />
          <scope attributes="__ctor__" ilk="function" line="20" lineend="24" name="initialize" signature="initialize(op_name, optype_name, parts)" />
        </scope>
        <scope ilk="function" line="27" lineend="27" name="name" />
        <scope ilk="function" line="28" lineend="28" name="parameter_order" />
        <scope ilk="function" line="29" lineend="29" name="input" />
        <scope ilk="function" line="30" lineend="30" name="output" />
        <scope ilk="function" line="31" lineend="31" name="fault" />
        <scope ilk="function" line="32" lineend="32" name="type" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="34" lineend="42" name="initialize" signature="initialize" />
        <scope ilk="function" line="44" lineend="46" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="48" lineend="51" name="input_info" signature="input_info" />
        <scope ilk="function" line="53" lineend="56" name="output_info" signature="output_info" />
        <scope ilk="function" line="58" lineend="60" name="inputparts" signature="inputparts" />
        <scope ilk="function" line="62" lineend="64" name="inputname" signature="inputname" />
        <scope ilk="function" line="66" lineend="68" name="outputparts" signature="outputparts" />
        <scope ilk="function" line="70" lineend="73" name="outputname" signature="outputname" />
        <scope ilk="function" line="75" lineend="95" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="97" lineend="108" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="112" lineend="126" name="sort_parts" signature="sort_parts(parts)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/message">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL message definition." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="51" name="Message">
        <scope ilk="function" line="16" lineend="16" name="name" />
        <scope ilk="function" line="17" lineend="17" name="parts" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="19" lineend="23" name="initialize" signature="initialize" />
        <scope ilk="function" line="25" lineend="27" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="29" lineend="41" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="43" lineend="50" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/info">
      <scope doc="WSDL4R - WSDL information base." ilk="namespace" line="9" name="WSDL" />
      <scope classrefs="Object" ilk="class" line="12" lineend="36" name="Info">
        <scope ilk="function" line="13" lineend="13" name="root" />
        <scope ilk="function" line="13" lineend="13" name="root=" />
        <scope ilk="function" line="14" lineend="14" name="parent" />
        <scope ilk="function" line="14" lineend="14" name="parent=" />
        <scope ilk="function" line="15" lineend="15" name="id" />
        <scope ilk="function" line="15" lineend="15" name="id=" />
        <scope attributes="__ctor__" ilk="function" line="17" lineend="21" name="initialize" signature="initialize" />
        <scope ilk="function" line="23" lineend="29" name="inspect" signature="inspect" />
        <scope ilk="function" line="31" name="parse_element" signature="parse_element(element)" />
        <scope doc="abstract" ilk="function" line="33" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope doc="abstract" ilk="function" line="35" name="parse_epilogue" signature="parse_epilogue" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/importer">
      <import line="9" module="wsdl/xmlSchema/importer" symbol="*" />
      <import line="10" module="wsdl/parser" symbol="*" />
      <scope doc="WSDL4R - WSDL importer library." ilk="namespace" line="13" name="WSDL" />
      <scope classrefs="WSDL::XMLSchema::" ilk="class" line="16" lineend="35" name="Importer">
        <scope attributes="__classmethod__" ilk="function" line="17" lineend="19" name="import" signature="self.import(location, originalroot = nil)" />
        <scope ilk="function" line="23" lineend="33" name="parse" signature="parse(content, location, originalroot)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/import">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="wsdl/importer" symbol="*" />
      <scope doc="WSDL4R - WSDL import definition." ilk="namespace" line="13" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="16" lineend="77" name="Import">
        <scope ilk="function" line="17" lineend="17" name="namespace" />
        <scope ilk="function" line="18" lineend="18" name="location" />
        <scope ilk="function" line="19" lineend="19" name="content" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="27" name="initialize" signature="initialize" />
        <scope ilk="function" line="29" lineend="37" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="39" lineend="70" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope ilk="function" line="74" lineend="76" name="import" signature="import(location)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/documentation">
      <import line="9" module="wsdl/info" symbol="*" />
      <scope doc="WSDL4R - WSDL SOAP documentation element." ilk="namespace" line="12" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="15" lineend="29" name="Documentation">
        <scope attributes="__ctor__" ilk="function" line="16" lineend="18" name="initialize" signature="initialize" />
        <scope ilk="function" line="20" lineend="23" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="25" lineend="28" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/definitions">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - WSDL definitions." ilk="namespace" line="13" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="16" lineend="247" name="Definitions">
        <scope ilk="function" line="17" lineend="17" name="name" />
        <scope ilk="function" line="18" lineend="18" name="targetnamespace" />
        <scope ilk="function" line="19" lineend="19" name="imports" />
        <scope ilk="function" line="21" lineend="21" name="location" />
        <scope ilk="function" line="21" lineend="21" name="location=" />
        <scope ilk="function" line="22" lineend="22" name="importedschema" />
        <scope attributes="__ctor__" ilk="function" line="24" lineend="40" name="initialize" signature="initialize" />
        <scope ilk="function" line="42" lineend="44" name="inspect" signature="inspect" />
        <scope ilk="function" line="46" lineend="51" name="targetnamespace=" signature="targetnamespace=(targetnamespace)" />
        <scope ilk="function" line="53" lineend="64" name="collect_attributes" signature="collect_attributes" />
        <scope ilk="function" line="66" lineend="77" name="collect_elements" signature="collect_elements" />
        <scope ilk="function" line="79" lineend="90" name="collect_complextypes" signature="collect_complextypes" />
        <scope ilk="function" line="92" lineend="103" name="collect_simpletypes" signature="collect_simpletypes" />
        <scope doc="ToDo: simpletype must be accepted..." ilk="function" line="106" lineend="108" name="add_type" signature="add_type(complextype)" />
        <scope ilk="function" line="110" lineend="116" name="messages" signature="messages" />
        <scope ilk="function" line="118" lineend="124" name="porttypes" signature="porttypes" />
        <scope ilk="function" line="126" lineend="132" name="bindings" signature="bindings" />
        <scope ilk="function" line="134" lineend="140" name="services" signature="services" />
        <scope ilk="function" line="142" lineend="150" name="message" signature="message(name)" />
        <scope ilk="function" line="152" lineend="160" name="porttype" signature="porttype(name)" />
        <scope ilk="function" line="162" lineend="170" name="binding" signature="binding(name)" />
        <scope ilk="function" line="172" lineend="180" name="service" signature="service(name)" />
        <scope ilk="function" line="182" lineend="190" name="porttype_binding" signature="porttype_binding(name)" />
        <scope ilk="function" line="192" lineend="224" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="226" lineend="235" name="parse_attr" signature="parse_attr(attr, value)" />
        <scope attributes="__classmethod__" ilk="function" line="237" lineend="243" name="parse_element" signature="self.parse_element(element)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/data">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="wsdl/documentation" symbol="*" />
      <import line="11" module="wsdl/definitions" symbol="*" />
      <import line="12" module="wsdl/types" symbol="*" />
      <import line="13" module="wsdl/message" symbol="*" />
      <import line="14" module="wsdl/part" symbol="*" />
      <import line="15" module="wsdl/portType" symbol="*" />
      <import line="16" module="wsdl/operation" symbol="*" />
      <import line="17" module="wsdl/param" symbol="*" />
      <import line="18" module="wsdl/binding" symbol="*" />
      <import line="19" module="wsdl/operationBinding" symbol="*" />
      <import line="20" module="wsdl/service" symbol="*" />
      <import line="21" module="wsdl/port" symbol="*" />
      <import line="22" module="wsdl/import" symbol="*" />
      <scope doc="WSDL4R - WSDL data definitions." ilk="namespace" line="25" lineend="64" name="WSDL" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="wsdl/binding">
      <import line="9" module="wsdl/info" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <scope doc="WSDL4R - WSDL binding definition." ilk="namespace" line="13" name="WSDL" />
      <scope classrefs="Info" ilk="class" line="16" lineend="62" name="Binding">
        <scope ilk="function" line="17" lineend="17" name="name" />
        <scope ilk="function" line="18" lineend="18" name="type" />
        <scope ilk="function" line="19" lineend="19" name="operations" />
        <scope ilk="function" line="20" lineend="20" name="soapbinding" />
        <scope attributes="__ctor__" doc="required" ilk="function" line="22" lineend="28" name="initialize" signature="initialize" />
        <scope ilk="function" line="30" lineend="32" name="targetnamespace" signature="targetnamespace" />
        <scope ilk="function" line="34" lineend="50" name="parse_element" signature="parse_element(element)" />
        <scope ilk="function" line="52" lineend="61" name="parse_attr" signature="parse_attr(attr, value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole/property">
      <scope classrefs="Object" doc="OLEProperty helper class of Property with arguments." ilk="class" line="3" lineend="16" name="OLEProperty">
        <scope attributes="__ctor__" ilk="function" line="4" lineend="9" name="initialize" signature="initialize(obj, dispid, gettypes, settypes)" />
        <scope ilk="function" line="10" lineend="12" name="[]" signature="[](*args" />
        <scope ilk="function" line="13" lineend="15" name="[]=" signature="[]=(*args" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32/resolv">
      <import line="6" module="win32/registry" symbol="*" />
      <scope ilk="namespace" line="8" lineend="363" name="Win32">
        <scope ilk="namespace" line="9" lineend="363" name="Resolv">
          <scope attributes="__classmethod__" ilk="function" line="12" lineend="16" name="get_hosts_path" signature="self.get_hosts_path" />
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="34" name="get_resolv_info" signature="self.get_resolv_info" />
          <scope classrefs="Object" doc="VER_PLATFORM_WIN32_NT ======================================&#xA;============================== Windows NT ==================&#xA;==================================================" ilk="class" line="46" lineend="113" name="self">
            <scope ilk="function" line="48" lineend="52" name="get_hosts_dir" signature="get_hosts_dir" />
            <scope ilk="function" line="54" lineend="112" name="get_info" signature="get_info" />
          </scope>
          <scope classrefs="Object" doc="============================================================&#xA;======== Windows 9x ========================================&#xA;============================" ilk="class" line="124" lineend="251" name="self">
            <scope doc="private" ilk="function" line="127" lineend="131" name="get_hosts_dir" signature="get_hosts_dir" />
            <scope ilk="function" line="133" lineend="154" name="get_info" signature="get_info" />
            <scope ilk="function" line="156" lineend="185" name="get_dhcpinfo" signature="get_dhcpinfo" />
            <scope ilk="function" line="187" lineend="196" name="get_dhcpinfo_95" signature="get_dhcpinfo_95(reg)" />
            <scope ilk="function" line="198" lineend="206" name="get_dhcpinfo_98" signature="get_dhcpinfo_98(reg)" />
            <scope ilk="function" line="208" lineend="250" name="get_dhcpinfo_key" signature="get_dhcpinfo_key(version, reg, iflist)" />
          </scope>
          <scope ilk="namespace" line="253" lineend="361" name="WsControl">
            <scope attributes="__classmethod__" ilk="function" line="273" lineend="296" name="wsctl" signature="self.wsctl(tei_entity, tei_instance, toi_class, toi_type, toi_id, buffsize)" />
            <scope attributes="__classmethod__" ilk="function" line="299" lineend="360" name="get_iflist" signature="self.get_iflist" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32/registry">
      <import line="264" module="Win32API" symbol="*" />
      <scope ilk="namespace" line="266" lineend="831" name="Win32">
        <scope classrefs="Object" ilk="class" line="267" lineend="830" name="Registry">
          <scope ilk="namespace" line="268" lineend="329" name="Constants" />
          <scope classrefs="::StandardError" doc="Error" ilk="class" line="336" lineend="345" name="Error">
            <scope attributes="__ctor__" ilk="function" line="338" lineend="343" name="initialize" signature="initialize(code)" />
            <scope ilk="function" line="344" lineend="344" name="code" />
          </scope>
          <scope classrefs="Registry" doc="Predefined Keys" ilk="class" line="350" lineend="372" name="PredefinedKey">
            <scope attributes="__ctor__" ilk="function" line="351" lineend="356" name="initialize" signature="initialize(hkey, keyname)" />
            <scope doc="Predefined keys cannot be closed" ilk="function" line="359" lineend="361" name="close" signature="close" />
            <scope doc="Fake class for Registry#open, Registry#create" ilk="function" line="364" lineend="366" name="class" signature="class" />
          </scope>
          <scope doc="Win32 APIs" ilk="namespace" line="377" lineend="490" name="API">
            <scope ilk="function" line="396" lineend="398" name="check" signature="check(result)" />
            <scope ilk="function" line="400" lineend="402" name="packdw" signature="packdw(dw)" />
            <scope ilk="function" line="404" lineend="407" name="unpackdw" signature="unpackdw(dw)" />
            <scope ilk="function" line="409" lineend="411" name="packqw" signature="packqw(qw)" />
            <scope ilk="function" line="413" lineend="416" name="unpackqw" signature="unpackqw(qw)" />
            <scope ilk="function" line="418" lineend="422" name="OpenKey" signature="OpenKey(hkey, name, opt, desired)" />
            <scope ilk="function" line="424" lineend="430" name="CreateKey" signature="CreateKey(hkey, name, opt, desired)" />
            <scope ilk="function" line="432" lineend="437" name="EnumValue" signature="EnumValue(hkey, index)" />
            <scope ilk="function" line="439" lineend="445" name="EnumKey" signature="EnumKey(hkey, index)" />
            <scope ilk="function" line="447" lineend="454" name="QueryValue" signature="QueryValue(hkey, name)" />
            <scope ilk="function" line="456" lineend="458" name="SetValue" signature="SetValue(hkey, name, type, data, size)" />
            <scope ilk="function" line="460" lineend="462" name="DeleteValue" signature="DeleteValue(hkey, name)" />
            <scope ilk="function" line="464" lineend="466" name="DeleteKey" signature="DeleteKey(hkey, name)" />
            <scope ilk="function" line="468" lineend="470" name="FlushKey" signature="FlushKey(hkey)" />
            <scope ilk="function" line="472" lineend="474" name="CloseKey" signature="CloseKey(hkey)" />
            <scope ilk="function" line="476" lineend="489" name="QueryInfoKey" signature="QueryInfoKey(hkey)" />
          </scope>
          <scope attributes="__classmethod__" doc="utility functions" ilk="function" line="495" lineend="497" name="expand_environ" signature="self.expand_environ(str)" />
          <scope attributes="__classmethod__" ilk="function" line="509" lineend="511" name="type2name" signature="self.type2name(type)" />
          <scope attributes="__classmethod__" ilk="function" line="513" lineend="515" name="wtime2time" signature="self.wtime2time(wtime)" />
          <scope attributes="__classmethod__" ilk="function" line="517" lineend="519" name="time2wtime" signature="self.time2wtime(time)" />
          <scope attributes="__classmethod__" doc="constructors" ilk="function" line="526" lineend="539" name="open" signature="self.open(hkey, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)" />
          <scope attributes="__classmethod__" ilk="function" line="541" lineend="553" name="create" signature="self.create(hkey, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)" />
          <scope attributes="__ctor__" doc="initialize" ilk="function" line="563" lineend="570" name="initialize" signature="initialize(hkey, parent, keyname, disposition)" />
          <scope ilk="function" line="571" lineend="571" name="hkey" />
          <scope ilk="function" line="571" lineend="571" name="parent" />
          <scope ilk="function" line="571" lineend="571" name="keyname" />
          <scope ilk="function" line="571" lineend="571" name="disposition" />
          <scope doc="attributes" ilk="function" line="576" lineend="578" name="created?" signature="created?" />
          <scope ilk="function" line="580" lineend="582" name="open?" signature="open?" />
          <scope ilk="function" line="584" lineend="591" name="name" signature="name" />
          <scope ilk="function" line="593" lineend="595" name="inspect" signature="inspect" />
          <scope doc="marshalling" ilk="function" line="600" lineend="602" name="_dump" signature="_dump(depth)" />
          <scope doc="open/close" ilk="function" line="607" lineend="609" name="open" signature="open(subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED, &amp;blk)" />
          <scope ilk="function" line="611" lineend="613" name="create" signature="create(subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED, &amp;blk)" />
          <scope ilk="function" line="615" lineend="619" name="close" signature="close" />
          <scope doc="iterator" ilk="function" line="624" lineend="641" name="each_value" signature="each_value" />
          <scope ilk="function" line="644" lineend="656" name="each_key" signature="each_key" />
          <scope ilk="function" line="658" lineend="662" name="keys" signature="keys" />
          <scope doc="reader" ilk="function" line="667" lineend="688" name="read" signature="read(name, *rtype)" />
          <scope ilk="function" line="690" lineend="700" name="[]" signature="[](name" />
          <scope ilk="function" line="702" lineend="704" name="read_s" signature="read_s(name)" />
          <scope ilk="function" line="706" lineend="713" name="read_s_expand" signature="read_s_expand(name)" />
          <scope ilk="function" line="715" lineend="717" name="read_i" signature="read_i(name)" />
          <scope ilk="function" line="719" lineend="721" name="read_bin" signature="read_bin(name)" />
          <scope doc="writer" ilk="function" line="726" lineend="744" name="write" signature="write(name, type, data)" />
          <scope ilk="function" line="746" lineend="762" name="[]=" signature="[]=(name" />
          <scope ilk="function" line="764" lineend="766" name="write_s" signature="write_s(name, value)" />
          <scope ilk="function" line="768" lineend="770" name="write_i" signature="write_i(name, value)" />
          <scope ilk="function" line="772" lineend="774" name="write_bin" signature="write_bin(name, value)" />
          <scope doc="delete" ilk="function" line="779" lineend="781" name="delete_value" signature="delete_value(name)" />
          <scope ilk="function" line="784" lineend="804" name="delete_key" signature="delete_key(name, recursive = false)" />
          <scope doc="flush" ilk="function" line="809" lineend="811" name="flush" signature="flush" />
          <scope doc="key information" ilk="function" line="816" lineend="818" name="info" signature="info" />
          <import symbol="Constants" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick">
      <import line="11" module="webrick/compat.rb" symbol="*" />
      <import line="13" module="webrick/version.rb" symbol="*" />
      <import line="14" module="webrick/config.rb" symbol="*" />
      <import line="15" module="webrick/log.rb" symbol="*" />
      <import line="16" module="webrick/server.rb" symbol="*" />
      <import line="17" module="webrick/utils.rb" symbol="*" />
      <import line="18" module="webrick/accesslog" symbol="*" />
      <import line="20" module="webrick/htmlutils.rb" symbol="*" />
      <import line="21" module="webrick/httputils.rb" symbol="*" />
      <import line="22" module="webrick/cookie.rb" symbol="*" />
      <import line="23" module="webrick/httpversion.rb" symbol="*" />
      <import line="24" module="webrick/httpstatus.rb" symbol="*" />
      <import line="25" module="webrick/httprequest.rb" symbol="*" />
      <import line="26" module="webrick/httpresponse.rb" symbol="*" />
      <import line="27" module="webrick/httpserver.rb" symbol="*" />
      <import line="28" module="webrick/httpservlet.rb" symbol="*" />
      <import line="29" module="webrick/httpauth.rb" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/version">
      <scope doc="version.rb -- version and release date" ilk="namespace" line="11" lineend="13" name="WEBrick" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/utils">
      <import line="11" module="socket" symbol="*" />
      <import line="12" module="fcntl" symbol="*" />
      <import line="14" module="etc" symbol="*" />
      <scope doc="utils.rb -- Miscellaneous utilities" ilk="namespace" line="19" lineend="100" name="WEBrick">
        <scope ilk="namespace" line="20" lineend="99" name="Utils">
          <scope ilk="function" line="21" lineend="27" name="set_non_blocking" signature="set_non_blocking(io)" />
          <scope ilk="function" line="30" lineend="34" name="set_close_on_exec" signature="set_close_on_exec(io)" />
          <scope ilk="function" line="37" lineend="46" name="su" signature="su(user)" />
          <scope ilk="function" line="49" lineend="56" name="getservername" signature="getservername" />
          <scope ilk="function" line="59" lineend="84" name="create_listeners" signature="create_listeners(address, port, logger=nil)" />
          <scope ilk="function" line="91" lineend="96" name="random_string" signature="random_string(len)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/ssl">
      <import line="8" module="webrick" symbol="*" />
      <import line="9" module="openssl" symbol="*" />
      <scope doc="ssl.rb -- SSL/TLS enhancement for GenericServer" ilk="namespace" line="11" lineend="126" name="WEBrick">
        <scope ilk="namespace" line="12" lineend="36" name="Config" />
        <scope ilk="namespace" line="38" lineend="79" name="Utils">
          <scope ilk="function" line="39" lineend="77" name="create_self_signed_cert" signature="create_self_signed_cert(bits, cn, comment)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="81" lineend="125" name="GenericServer">
          <scope ilk="function" line="82" lineend="84" name="ssl_context" signature="ssl_context" />
          <scope ilk="function" line="86" lineend="100" name="listen" signature="listen(address, port)" />
          <scope ilk="function" line="102" lineend="124" name="setup_ssl_context" signature="setup_ssl_context(config)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/server">
      <import line="11" module="thread" symbol="*" />
      <import line="12" module="socket" symbol="*" />
      <import line="13" module="timeout" symbol="*" />
      <import line="14" module="webrick/config" symbol="*" />
      <import line="15" module="webrick/log" symbol="*" />
      <scope doc="server.rb -- GenericServer Class" ilk="namespace" line="17" lineend="200" name="WEBrick">
        <scope classrefs="StandardError" ilk="class" line="19" lineend="19" name="ServerError" />
        <scope classrefs="Object" ilk="class" line="21" lineend="25" name="SimpleServer">
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="24" name="start" signature="SimpleServer.start" />
        </scope>
        <scope classrefs="Object" ilk="class" line="27" lineend="39" name="Daemon">
          <scope attributes="__classmethod__" ilk="function" line="28" lineend="38" name="start" signature="Daemon.start" />
        </scope>
        <scope classrefs="Object" ilk="class" line="41" lineend="199" name="GenericServer">
          <scope ilk="function" line="42" lineend="42" name="status" />
          <scope ilk="function" line="42" lineend="42" name="config" />
          <scope ilk="function" line="42" lineend="42" name="logger" />
          <scope ilk="function" line="42" lineend="42" name="tokens" />
          <scope ilk="function" line="42" lineend="42" name="listeners" />
          <scope attributes="__ctor__" ilk="function" line="44" lineend="68" name="initialize" signature="initialize(config={}, default=Config::General)" />
          <scope ilk="function" line="70" lineend="72" name="[]" signature="[](key" />
          <scope ilk="function" line="74" lineend="76" name="listen" signature="listen(address, port)" />
          <scope ilk="function" line="78" lineend="118" name="start" signature="start(&amp;block)" />
          <scope ilk="function" line="120" lineend="124" name="stop" signature="stop" />
          <scope ilk="function" line="126" lineend="136" name="shutdown" signature="shutdown" />
          <scope ilk="function" line="138" lineend="140" name="run" signature="run(sock)" />
          <scope ilk="function" line="144" lineend="159" name="accept_client" signature="accept_client(svr)" />
          <scope ilk="function" line="161" lineend="192" name="start_thread" signature="start_thread(sock, &amp;block)" />
          <scope ilk="function" line="194" lineend="198" name="call_callback" signature="call_callback(callback_name, *args)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/log">
      <scope doc="log.rb -- Log Class" ilk="namespace" line="11" lineend="88" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="12" lineend="72" name="BasicLog">
          <scope ilk="function" line="16" lineend="16" name="level" />
          <scope ilk="function" line="16" lineend="16" name="level=" />
          <scope attributes="__ctor__" doc="log-level constant" ilk="function" line="18" lineend="30" name="initialize" signature="initialize(log_file=nil, level=nil)" />
          <scope ilk="function" line="32" lineend="35" name="close" signature="close" />
          <scope ilk="function" line="37" lineend="42" name="log" signature="log(level, data)" />
          <scope ilk="function" line="44" lineend="46" name="&lt;&lt;" signature="&lt;&lt;(obj" />
          <scope ilk="function" line="48" name="fatal" signature="fatal(msg)" />
          <scope ilk="function" line="49" name="error" signature="error(msg)" />
          <scope ilk="function" line="50" name="warn" signature="warn(msg)" />
          <scope ilk="function" line="51" name="info" signature="info(msg)" />
          <scope ilk="function" line="52" name="debug" signature="debug(msg)" />
          <scope ilk="function" line="54" name="fatal?" signature="fatal?" />
          <scope ilk="function" line="55" name="error?" signature="error?" />
          <scope ilk="function" line="56" name="warn?" signature="warn?" />
          <scope ilk="function" line="57" name="info?" signature="info?" />
          <scope ilk="function" line="58" name="debug?" signature="debug?" />
          <scope ilk="function" line="62" lineend="71" name="format" signature="format(arg)" />
        </scope>
        <scope classrefs="BasicLog" ilk="class" line="74" lineend="87" name="Log">
          <scope ilk="function" line="75" lineend="75" name="time_format" />
          <scope ilk="function" line="75" lineend="75" name="time_format=" />
          <scope attributes="__ctor__" ilk="function" line="77" lineend="80" name="initialize" signature="initialize(log_file=nil, level=nil)" />
          <scope ilk="function" line="82" lineend="86" name="log" signature="log(level, data)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpversion">
      <scope doc="HTTPVersion.rb -- presentation of HTTP version" ilk="namespace" line="10" lineend="49" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="11" lineend="48" name="HTTPVersion">
          <scope ilk="function" line="14" lineend="14" name="major" />
          <scope ilk="function" line="14" lineend="14" name="major=" />
          <scope ilk="function" line="14" lineend="14" name="minor" />
          <scope ilk="function" line="14" lineend="14" name="minor=" />
          <scope attributes="__classmethod__" ilk="function" line="16" lineend="18" name="convert" signature="self.convert(version)" />
          <scope attributes="__ctor__" ilk="function" line="20" lineend="33" name="initialize" signature="initialize(version)" />
          <scope ilk="function" line="35" lineend="43" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
          <scope ilk="function" line="45" lineend="47" name="to_s" signature="to_s" />
          <import symbol="Comparable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httputils">
      <import line="11" module="socket" symbol="*" />
      <import line="12" module="tempfile" symbol="*" />
      <scope doc="httputils.rb -- HTTPUtils Module" ilk="namespace" line="14" lineend="399" name="WEBrick">
        <scope ilk="namespace" line="19" lineend="398" name="HTTPUtils">
          <scope ilk="function" line="21" lineend="39" name="normalize_path" signature="normalize_path(path)" />
          <scope doc="Load Apache compatible mime.types file." ilk="function" line="101" lineend="114" name="load_mime_types" signature="load_mime_types(file)" />
          <scope ilk="function" line="117" lineend="121" name="mime_type" signature="mime_type(filename, mime_tab)" />
          <scope ilk="function" line="126" lineend="153" name="parse_header" signature="parse_header(raw)" />
          <scope ilk="function" line="156" lineend="159" name="split_header_value" signature="split_header_value(str)" />
          <scope ilk="function" line="162" lineend="174" name="parse_range_header" signature="parse_range_header(ranges_specifier)" />
          <scope ilk="function" line="177" lineend="192" name="parse_qvalues" signature="parse_qvalues(value)" />
          <scope ilk="function" line="197" lineend="201" name="dequote" signature="dequote(str)" />
          <scope ilk="function" line="204" lineend="206" name="quote" signature="quote(str)" />
          <scope classrefs="String" ilk="class" line="211" lineend="291" name="FormData">
            <scope ilk="function" line="215" lineend="215" name="name" />
            <scope ilk="function" line="215" lineend="215" name="name=" />
            <scope ilk="function" line="215" lineend="215" name="filename" />
            <scope ilk="function" line="215" lineend="215" name="filename=" />
            <scope ilk="function" line="215" lineend="215" name="next_data" />
            <scope ilk="function" line="215" lineend="215" name="next_data=" />
            <scope attributes="__ctor__" ilk="function" line="218" lineend="232" name="initialize" signature="initialize(*args)" />
            <scope ilk="function" line="234" lineend="240" name="[]" signature="[](*key" />
            <scope ilk="function" line="242" lineend="255" name="&lt;&lt;" signature="&lt;&lt;(str" />
            <scope ilk="function" line="257" lineend="267" name="append_data" signature="append_data(data)" />
            <scope ilk="function" line="269" lineend="276" name="each_data" signature="each_data" />
            <scope ilk="function" line="278" lineend="284" name="list" signature="list" />
            <scope ilk="function" line="288" lineend="290" name="to_s" signature="to_s" />
          </scope>
          <scope ilk="function" line="293" lineend="311" name="parse_query" signature="parse_query(str)" />
          <scope ilk="function" line="314" lineend="339" name="parse_form_data" signature="parse_form_data(io, boundary)" />
          <scope ilk="function" line="358" name="_make_regex" signature="_make_regex(str)" />
          <scope ilk="function" line="359" name="_make_regex!" signature="_make_regex!(str)" />
          <scope ilk="function" line="360" name="_escape" signature="_escape(str, regex)" />
          <scope ilk="function" line="361" name="_unescape" signature="_unescape(str, regex)" />
          <scope ilk="function" line="369" lineend="371" name="escape" signature="escape(str)" />
          <scope ilk="function" line="373" lineend="375" name="unescape" signature="unescape(str)" />
          <scope ilk="function" line="377" lineend="381" name="escape_form" signature="escape_form(str)" />
          <scope ilk="function" line="383" lineend="385" name="unescape_form" signature="unescape_form(str)" />
          <scope ilk="function" line="387" lineend="393" name="escape_path" signature="escape_path(str)" />
          <scope ilk="function" line="395" lineend="397" name="escape8bit" signature="escape8bit(str)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpstatus">
      <scope doc="httpstatus.rb -- HTTPStatus Class" ilk="namespace" line="11" lineend="126" name="WEBrick">
        <scope ilk="namespace" line="13" lineend="125" name="HTTPStatus">
          <scope classrefs="StandardError" ilk="class" line="15" lineend="15" name="Status" />
          <scope classrefs="Status" ilk="class" line="16" lineend="16" name="Info" />
          <scope classrefs="Status" ilk="class" line="17" lineend="17" name="Success" />
          <scope classrefs="Status" ilk="class" line="18" lineend="18" name="Redirect" />
          <scope classrefs="Status" ilk="class" line="19" lineend="19" name="Error" />
          <scope classrefs="Error" ilk="class" line="20" lineend="20" name="ClientError" />
          <scope classrefs="Error" ilk="class" line="21" lineend="21" name="ServerError" />
          <scope classrefs="StandardError" ilk="class" line="23" lineend="23" name="EOFError" />
          <scope ilk="function" line="96" lineend="98" name="reason_phrase" signature="reason_phrase(code)" />
          <scope ilk="function" line="99" lineend="101" name="info?" signature="info?(code)" />
          <scope ilk="function" line="102" lineend="104" name="success?" signature="success?(code)" />
          <scope ilk="function" line="105" lineend="107" name="redirect?" signature="redirect?(code)" />
          <scope ilk="function" line="108" lineend="110" name="error?" signature="error?(code)" />
          <scope ilk="function" line="111" lineend="113" name="client_error?" signature="client_error?(code)" />
          <scope ilk="function" line="114" lineend="116" name="server_error?" signature="server_error?(code)" />
          <scope ilk="function" line="118" lineend="120" name="self" signature="self." />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet">
      <import line="11" module="webrick/httpservlet/abstract" symbol="*" />
      <import line="12" module="webrick/httpservlet/filehandler" symbol="*" />
      <import line="13" module="webrick/httpservlet/cgihandler" symbol="*" />
      <import line="14" module="webrick/httpservlet/erbhandler" symbol="*" />
      <import line="15" module="webrick/httpservlet/prochandler" symbol="*" />
      <scope doc="httpservlet.rb -- HTTPServlet Utility File" ilk="namespace" line="17" lineend="22" name="WEBrick">
        <scope ilk="namespace" line="18" lineend="21" name="HTTPServlet" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet/prochandler">
      <import line="11" module="webrick/httpservlet/abstract.rb" symbol="*" />
      <scope doc="prochandler.rb -- ProcHandler Class" ilk="namespace" line="13" lineend="33" name="WEBrick">
        <scope ilk="namespace" line="14" lineend="32" name="HTTPServlet">
          <scope classrefs="AbstractServlet" ilk="class" line="16" lineend="30" name="ProcHandler">
            <scope ilk="function" line="17" lineend="19" name="get_instance" signature="get_instance(server, *options)" />
            <scope attributes="__ctor__" ilk="function" line="21" lineend="23" name="initialize" signature="initialize(proc)" />
            <scope ilk="function" line="25" lineend="27" name="do_GET" signature="do_GET(request, response)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet/filehandler">
      <import line="11" module="thread" symbol="*" />
      <import line="12" module="time" symbol="*" />
      <import line="14" module="webrick/htmlutils" symbol="*" />
      <import line="15" module="webrick/httputils" symbol="*" />
      <import line="16" module="webrick/httpstatus" symbol="*" />
      <scope doc="filehandler.rb -- FileHandler Module" ilk="namespace" line="18" lineend="398" name="WEBrick">
        <scope ilk="namespace" line="19" lineend="397" name="HTTPServlet">
          <scope classrefs="AbstractServlet" ilk="class" line="21" lineend="126" name="DefaultFileHandler">
            <scope attributes="__ctor__" ilk="function" line="22" lineend="25" name="initialize" signature="initialize(server, local_path)" />
            <scope ilk="function" line="27" lineend="45" name="do_GET" signature="do_GET(req, res)" />
            <scope ilk="function" line="47" lineend="70" name="not_modified?" signature="not_modified?(req, res, mtime, etag)" />
            <scope ilk="function" line="72" lineend="117" name="make_partial_content" signature="make_partial_content(req, res, filename, filesize)" />
            <scope ilk="function" line="119" lineend="125" name="prepare_range" signature="prepare_range(range, filesize)" />
          </scope>
          <scope classrefs="AbstractServlet" ilk="class" line="128" lineend="396" name="FileHandler">
            <scope attributes="__classmethod__" ilk="function" line="131" lineend="133" name="add_handler" signature="self.add_handler(suffix, handler)" />
            <scope attributes="__classmethod__" ilk="function" line="135" lineend="137" name="remove_handler" signature="self.remove_handler(suffix)" />
            <scope attributes="__ctor__" ilk="function" line="139" lineend="147" name="initialize" signature="initialize(server, root, options={}, default=Config::FileHandler)" />
            <scope ilk="function" line="149" lineend="167" name="service" signature="service(req, res)" />
            <scope ilk="function" line="169" lineend="173" name="do_GET" signature="do_GET(req, res)" />
            <scope ilk="function" line="175" lineend="179" name="do_POST" signature="do_POST(req, res)" />
            <scope ilk="function" line="181" lineend="185" name="do_OPTIONS" signature="do_OPTIONS(req, res)" />
            <scope doc="ToDo RFC2518: HTTP Extensions for Distributed Authoring --&#xA;WEBDAV" ilk="function" line="201" lineend="212" name="exec_handler" signature="exec_handler(req, res)" />
            <scope ilk="function" line="214" lineend="221" name="get_handler" signature="get_handler(req)" />
            <scope ilk="function" line="223" lineend="255" name="set_filename" signature="set_filename(req, res)" />
            <scope ilk="function" line="257" lineend="264" name="check_filename" signature="check_filename(req, res, name)" />
            <scope ilk="function" line="266" lineend="272" name="shift_path_info" signature="shift_path_info(req, res, path_info, base=nil)" />
            <scope ilk="function" line="274" lineend="281" name="search_index_file" signature="search_index_file(req, res)" />
            <scope ilk="function" line="283" lineend="303" name="search_file" signature="search_file(req, res, basename)" />
            <scope ilk="function" line="305" lineend="309" name="call_callback" signature="call_callback(callback_name, req, res)" />
            <scope ilk="function" line="311" lineend="318" name="nondisclosure_name?" signature="nondisclosure_name?(name)" />
            <scope ilk="function" line="320" lineend="394" name="set_dir_list" signature="set_dir_list(req, res)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet/erbhandler">
      <import line="11" module="webrick/httpservlet/abstract.rb" symbol="*" />
      <import line="13" module="erb" symbol="*" />
      <scope doc="erbhandler.rb -- ERBHandler Class" ilk="namespace" line="15" lineend="54" name="WEBrick">
        <scope ilk="namespace" line="16" lineend="53" name="HTTPServlet">
          <scope classrefs="AbstractServlet" ilk="class" line="18" lineend="52" name="ERBHandler">
            <scope attributes="__ctor__" ilk="function" line="19" lineend="22" name="initialize" signature="initialize(server, name)" />
            <scope ilk="function" line="24" lineend="40" name="do_GET" signature="do_GET(req, res)" />
            <scope ilk="function" line="45" lineend="51" name="evaluate" signature="evaluate(erb, servlet_request, servlet_response)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet/cgi_runner">
      <scope doc="cgi_runner.rb -- CGI launcher." ilk="function" line="11" lineend="19" name="sysread" signature="sysread(io, size)" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet/cgihandler">
      <import line="11" module="rbconfig" symbol="*" />
      <import line="12" module="tempfile" symbol="*" />
      <import line="13" module="webrick/config" symbol="*" />
      <import line="14" module="webrick/httpservlet/abstract" symbol="*" />
      <scope doc="cgihandler.rb -- CGIHandler Class" ilk="namespace" line="16" lineend="104" name="WEBrick">
        <scope ilk="namespace" line="17" lineend="103" name="HTTPServlet">
          <scope classrefs="AbstractServlet" ilk="class" line="19" lineend="101" name="CGIHandler">
            <scope attributes="__ctor__" ilk="function" line="25" lineend="30" name="initialize" signature="initialize(server, name)" />
            <scope ilk="function" line="32" lineend="99" name="do_GET" signature="do_GET(req, res)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpservlet/abstract">
      <import line="11" module="thread" symbol="*" />
      <import line="13" module="webrick/htmlutils" symbol="*" />
      <import line="14" module="webrick/httputils" symbol="*" />
      <import line="15" module="webrick/httpstatus" symbol="*" />
      <scope doc="httpservlet.rb -- HTTPServlet Module" ilk="namespace" line="17" lineend="71" name="WEBrick">
        <scope ilk="namespace" line="18" lineend="70" name="HTTPServlet">
          <scope classrefs="StandardError" ilk="class" line="19" lineend="19" name="HTTPServletError" />
          <scope classrefs="Object" ilk="class" line="21" lineend="68" name="AbstractServlet">
            <scope attributes="__classmethod__" ilk="function" line="22" lineend="24" name="get_instance" signature="self.get_instance(config, *options)" />
            <scope attributes="__ctor__" ilk="function" line="26" lineend="30" name="initialize" signature="initialize(server, *options)" />
            <scope ilk="function" line="32" lineend="40" name="service" signature="service(req, res)" />
            <scope ilk="function" line="42" lineend="44" name="do_GET" signature="do_GET(req, res)" />
            <scope ilk="function" line="46" lineend="48" name="do_HEAD" signature="do_HEAD(req, res)" />
            <scope ilk="function" line="50" lineend="55" name="do_OPTIONS" signature="do_OPTIONS(req, res)" />
            <scope ilk="function" line="59" lineend="67" name="redirect_to_directory_uri" signature="redirect_to_directory_uri(req, res)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpserver">
      <import line="11" module="webrick/server" symbol="*" />
      <import line="12" module="webrick/httputils" symbol="*" />
      <import line="13" module="webrick/httpstatus" symbol="*" />
      <import line="14" module="webrick/httprequest" symbol="*" />
      <import line="15" module="webrick/httpresponse" symbol="*" />
      <import line="16" module="webrick/httpservlet" symbol="*" />
      <import line="17" module="webrick/accesslog" symbol="*" />
      <scope doc="httpserver.rb -- HTTPServer Class" ilk="namespace" line="19" lineend="210" name="WEBrick">
        <scope classrefs="ServerError" ilk="class" line="20" lineend="20" name="HTTPServerError" />
        <scope classrefs="::WEBrick::GenericServer" ilk="class" line="22" lineend="209" name="HTTPServer">
          <scope attributes="__ctor__" ilk="function" line="23" lineend="41" name="initialize" signature="initialize(config={}, default=Config::HTTP)" />
          <scope ilk="function" line="43" lineend="87" name="run" signature="run(sock)" />
          <scope ilk="function" line="89" lineend="105" name="service" signature="service(req, res)" />
          <scope ilk="function" line="107" lineend="109" name="do_OPTIONS" signature="do_OPTIONS(req, res)" />
          <scope ilk="function" line="111" lineend="114" name="mount" signature="mount(dir, servlet, *options)" />
          <scope ilk="function" line="116" lineend="120" name="mount_proc" signature="mount_proc(dir, proc=nil, &amp;block)" />
          <scope ilk="function" line="122" lineend="125" name="unmount" signature="unmount(dir)" />
          <scope ilk="function" line="128" lineend="134" name="search_servlet" signature="search_servlet(path)" />
          <scope ilk="function" line="136" lineend="145" name="virtual_host" signature="virtual_host(server)" />
          <scope ilk="function" line="147" lineend="154" name="lookup_server" signature="lookup_server(req)" />
          <scope ilk="function" line="156" lineend="161" name="access_log" signature="access_log(config, req, res)" />
          <scope classrefs="Object" ilk="class" line="163" lineend="208" name="MountTable">
            <scope attributes="__ctor__" ilk="function" line="164" lineend="167" name="initialize" signature="initialize" />
            <scope ilk="function" line="169" lineend="172" name="[]" signature="[](dir" />
            <scope ilk="function" line="174" lineend="179" name="[]=" signature="[]=(dir" />
            <scope ilk="function" line="181" lineend="186" name="delete" signature="delete(dir)" />
            <scope ilk="function" line="188" lineend="191" name="scan" signature="scan(path)" />
            <scope ilk="function" line="195" lineend="201" name="compile" signature="compile" />
            <scope ilk="function" line="203" lineend="207" name="normalize" signature="normalize(dir)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/https">
      <import line="11" module="webrick/ssl" symbol="*" />
      <scope doc="https.rb -- SSL/TLS enhancement for HTTPServer" ilk="namespace" line="13" lineend="63" name="WEBrick">
        <scope ilk="namespace" line="14" lineend="16" name="Config" />
        <scope classrefs="Object" ilk="class" line="18" lineend="62" name="HTTPRequest">
          <scope ilk="function" line="19" lineend="19" name="cipher" />
          <scope ilk="function" line="19" lineend="19" name="server_cert" />
          <scope ilk="function" line="19" lineend="19" name="client_cert" />
          <scope ilk="function" line="23" lineend="31" name="parse" signature="parse(socket=nil)" />
          <scope ilk="function" line="35" lineend="40" name="parse_uri" signature="parse_uri(str, scheme=&quot;https&quot;)" />
          <scope ilk="function" line="44" lineend="61" name="meta_vars" signature="meta_vars" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpresponse">
      <import line="11" module="time" symbol="*" />
      <import line="12" module="webrick/httpversion" symbol="*" />
      <import line="13" module="webrick/htmlutils" symbol="*" />
      <import line="14" module="webrick/httputils" symbol="*" />
      <import line="15" module="webrick/httpstatus" symbol="*" />
      <scope doc="httpresponse.rb -- HTTPResponse Class" ilk="namespace" line="17" lineend="327" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="18" lineend="326" name="HTTPResponse">
          <scope ilk="function" line="21" lineend="21" name="http_version" />
          <scope ilk="function" line="21" lineend="21" name="status" />
          <scope ilk="function" line="21" lineend="21" name="header" />
          <scope ilk="function" line="22" lineend="22" name="cookies" />
          <scope ilk="function" line="23" lineend="23" name="reason_phrase" />
          <scope ilk="function" line="23" lineend="23" name="reason_phrase=" />
          <scope ilk="function" line="24" lineend="24" name="body" />
          <scope ilk="function" line="24" lineend="24" name="body=" />
          <scope ilk="function" line="26" lineend="26" name="request_method" />
          <scope ilk="function" line="26" lineend="26" name="request_method=" />
          <scope ilk="function" line="26" lineend="26" name="request_uri" />
          <scope ilk="function" line="26" lineend="26" name="request_uri=" />
          <scope ilk="function" line="26" lineend="26" name="request_http_version" />
          <scope ilk="function" line="26" lineend="26" name="request_http_version=" />
          <scope ilk="function" line="27" lineend="27" name="filename" />
          <scope ilk="function" line="27" lineend="27" name="filename=" />
          <scope ilk="function" line="28" lineend="28" name="keep_alive" />
          <scope ilk="function" line="28" lineend="28" name="keep_alive=" />
          <scope ilk="function" line="29" lineend="29" name="config" />
          <scope ilk="function" line="29" lineend="29" name="sent_size" />
          <scope attributes="__ctor__" ilk="function" line="31" lineend="47" name="initialize" signature="initialize(config)" />
          <scope ilk="function" line="49" lineend="51" name="status_line" signature="status_line" />
          <scope ilk="function" line="53" lineend="56" name="status=" signature="status=(status)" />
          <scope ilk="function" line="58" lineend="60" name="[]" signature="[](field" />
          <scope ilk="function" line="62" lineend="64" name="[]=" signature="[]=(field" />
          <scope ilk="function" line="66" lineend="70" name="content_length" signature="content_length" />
          <scope ilk="function" line="72" lineend="74" name="content_length=" signature="content_length=(len)" />
          <scope ilk="function" line="76" lineend="78" name="content_type" signature="content_type" />
          <scope ilk="function" line="80" lineend="82" name="content_type=" signature="content_type=(type)" />
          <scope ilk="function" line="84" lineend="86" name="each" signature="each" />
          <scope ilk="function" line="88" lineend="90" name="chunked?" signature="chunked?" />
          <scope ilk="function" line="92" lineend="94" name="chunked=" signature="chunked=(val)" />
          <scope ilk="function" line="96" lineend="98" name="keep_alive?" signature="keep_alive?" />
          <scope ilk="function" line="100" lineend="112" name="send_response" signature="send_response(socket)" />
          <scope ilk="function" line="114" lineend="167" name="setup_header" signature="setup_header()" />
          <scope ilk="function" line="169" lineend="182" name="send_header" signature="send_header(socket)" />
          <scope ilk="function" line="184" lineend="189" name="send_body" signature="send_body(socket)" />
          <scope ilk="function" line="191" lineend="195" name="to_s" signature="to_s" />
          <scope ilk="function" line="197" lineend="201" name="set_redirect" signature="set_redirect(status, url)" />
          <scope ilk="function" line="203" lineend="252" name="set_error" signature="set_error(ex, backtrace=false)" />
          <scope ilk="function" line="256" lineend="278" name="send_body_io" signature="send_body_io(socket)" />
          <scope ilk="function" line="280" lineend="300" name="send_body_string" signature="send_body_string(socket)" />
          <scope ilk="function" line="302" lineend="321" name="_send_file" signature="_send_file(output, input, offset, size)" />
          <scope ilk="function" line="323" lineend="325" name="_write_data" signature="_write_data(socket, data)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httprequest">
      <import line="11" module="timeout" symbol="*" />
      <import line="12" module="uri" symbol="*" />
      <import line="14" module="webrick/httpversion" symbol="*" />
      <import line="15" module="webrick/httpstatus" symbol="*" />
      <import line="16" module="webrick/httputils" symbol="*" />
      <import line="17" module="webrick/cookie" symbol="*" />
      <scope doc="httprequest.rb -- HTTPRequest Class" ilk="namespace" line="19" lineend="364" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="21" lineend="363" name="HTTPRequest">
          <scope ilk="function" line="26" lineend="26" name="request_line" />
          <scope ilk="function" line="27" lineend="27" name="request_method" />
          <scope ilk="function" line="27" lineend="27" name="unparsed_uri" />
          <scope ilk="function" line="27" lineend="27" name="http_version" />
          <scope ilk="function" line="30" lineend="30" name="request_uri" />
          <scope ilk="function" line="30" lineend="30" name="host" />
          <scope ilk="function" line="30" lineend="30" name="port" />
          <scope ilk="function" line="30" lineend="30" name="path" />
          <scope ilk="function" line="31" lineend="31" name="script_name" />
          <scope ilk="function" line="31" lineend="31" name="script_name=" />
          <scope ilk="function" line="31" lineend="31" name="path_info" />
          <scope ilk="function" line="31" lineend="31" name="path_info=" />
          <scope ilk="function" line="31" lineend="31" name="query_string" />
          <scope ilk="function" line="31" lineend="31" name="query_string=" />
          <scope ilk="function" line="34" lineend="34" name="raw_header" />
          <scope ilk="function" line="34" lineend="34" name="header" />
          <scope ilk="function" line="34" lineend="34" name="cookies" />
          <scope ilk="function" line="35" lineend="35" name="accept" />
          <scope ilk="function" line="35" lineend="35" name="accept_charset" />
          <scope ilk="function" line="36" lineend="36" name="accept_encoding" />
          <scope ilk="function" line="36" lineend="36" name="accept_language" />
          <scope ilk="function" line="39" lineend="39" name="user" />
          <scope ilk="function" line="39" lineend="39" name="user=" />
          <scope ilk="function" line="40" lineend="40" name="addr" />
          <scope ilk="function" line="40" lineend="40" name="peeraddr" />
          <scope ilk="function" line="41" lineend="41" name="attributes" />
          <scope ilk="function" line="42" lineend="42" name="keep_alive" />
          <scope ilk="function" line="43" lineend="43" name="request_time" />
          <scope attributes="__ctor__" doc="Misc" ilk="function" line="45" lineend="75" name="initialize" signature="initialize(config)" />
          <scope ilk="function" line="77" lineend="122" name="parse" signature="parse(socket=nil)" />
          <scope ilk="function" line="124" lineend="128" name="body" signature="body(&amp;block)" />
          <scope ilk="function" line="130" lineend="135" name="query" signature="query" />
          <scope ilk="function" line="137" lineend="139" name="content_length" signature="content_length" />
          <scope ilk="function" line="141" lineend="143" name="content_type" signature="content_type" />
          <scope ilk="function" line="145" lineend="150" name="[]" signature="[](header_name" />
          <scope ilk="function" line="152" lineend="157" name="each" signature="each" />
          <scope ilk="function" line="159" lineend="161" name="keep_alive?" signature="keep_alive?" />
          <scope ilk="function" line="163" lineend="169" name="to_s" signature="to_s" />
          <scope ilk="function" line="171" lineend="181" name="fixup" signature="fixup()" />
          <scope ilk="function" line="183" lineend="220" name="meta_vars" signature="meta_vars" />
          <scope ilk="function" line="224" lineend="236" name="read_request_line" signature="read_request_line(socket)" />
          <scope ilk="function" line="238" lineend="250" name="read_header" signature="read_header(socket)" />
          <scope ilk="function" line="252" lineend="269" name="parse_uri" signature="parse_uri(str, scheme=&quot;http&quot;)" />
          <scope ilk="function" line="271" lineend="293" name="read_body" signature="read_body(socket, block)" />
          <scope ilk="function" line="295" lineend="304" name="read_chunk_size" signature="read_chunk_size(socket)" />
          <scope ilk="function" line="306" lineend="325" name="read_chunked" signature="read_chunked(socket, block)" />
          <scope ilk="function" line="327" lineend="337" name="_read_data" signature="_read_data(io, method, arg)" />
          <scope ilk="function" line="339" lineend="341" name="read_line" signature="read_line(io)" />
          <scope ilk="function" line="343" lineend="345" name="read_data" signature="read_data(io, size)" />
          <scope ilk="function" line="347" lineend="362" name="parse_query" signature="parse_query()" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpproxy">
      <import line="12" module="webrick/httpserver" symbol="*" />
      <import line="13" module="net/http" symbol="*" />
      <scope doc="httpproxy.rb -- HTTPProxy Class" ilk="namespace" line="17" lineend="254" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="19" lineend="24" name="NullReader">
          <scope ilk="function" line="20" lineend="22" name="read" signature="read(*args)" />
        </scope>
        <scope classrefs="HTTPServer" ilk="class" line="26" lineend="253" name="HTTPProxyServer">
          <scope attributes="__ctor__" ilk="function" line="27" lineend="31" name="initialize" signature="initialize(config)" />
          <scope ilk="function" line="33" lineend="41" name="service" signature="service(req, res)" />
          <scope ilk="function" line="43" lineend="48" name="proxy_auth" signature="proxy_auth(req, res)" />
          <scope doc="Some header fields shuold not be transfered." ilk="function" line="54" name="split_field" signature="split_field(f)" />
          <scope ilk="function" line="56" lineend="68" name="choose_header" signature="choose_header(src, dst)" />
          <scope doc="Net::HTTP is stupid about the multiple header fields." ilk="function" line="72" lineend="86" name="set_cookie" signature="set_cookie(src, dst)" />
          <scope ilk="function" line="88" lineend="96" name="set_via" signature="set_via(h)" />
          <scope ilk="function" line="98" lineend="100" name="proxy_uri" signature="proxy_uri(req, res)" />
          <scope ilk="function" line="102" lineend="167" name="proxy_service" signature="proxy_service(req, res)" />
          <scope ilk="function" line="169" lineend="248" name="proxy_connect" signature="proxy_connect(req, res)" />
          <scope ilk="function" line="250" lineend="252" name="do_OPTIONS" signature="do_OPTIONS(req, res)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth">
      <import line="11" module="webrick/httpauth/basicauth" symbol="*" />
      <import line="12" module="webrick/httpauth/digestauth" symbol="*" />
      <import line="13" module="webrick/httpauth/htpasswd" symbol="*" />
      <import line="14" module="webrick/httpauth/htdigest" symbol="*" />
      <import line="15" module="webrick/httpauth/htgroup" symbol="*" />
      <scope doc="httpauth.rb -- HTTP access authentication" ilk="namespace" line="17" lineend="45" name="WEBrick">
        <scope ilk="namespace" line="18" lineend="44" name="HTTPAuth">
          <scope ilk="function" line="21" lineend="33" name="_basic_auth" signature="_basic_auth(req, res, realm, req_field, res_field, err_type, block)" />
          <scope ilk="function" line="35" lineend="38" name="basic_auth" signature="basic_auth(req, res, realm, &amp;block)" />
          <scope ilk="function" line="40" lineend="43" name="proxy_basic_auth" signature="proxy_basic_auth(req, res, realm, &amp;block)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/userdb">
      <scope doc="httpauth/userdb.rb -- UserDB mix-in module." ilk="namespace" line="10" lineend="29" name="WEBrick">
        <scope ilk="namespace" line="11" lineend="28" name="HTTPAuth">
          <scope ilk="namespace" line="12" lineend="27" name="UserDB">
            <scope doc="BasicAuth or DigestAuth" ilk="function" line="15" lineend="17" name="make_passwd" signature="make_passwd(realm, user, pass)" />
            <scope ilk="function" line="19" lineend="21" name="set_passwd" signature="set_passwd(realm, user, pass)" />
            <scope ilk="function" line="23" lineend="26" name="get_passwd" signature="get_passwd(realm, user, reload_db=false)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/htpasswd">
      <import line="10" module="webrick/httpauth/userdb" symbol="*" />
      <import line="11" module="webrick/httpauth/basicauth" symbol="*" />
      <import line="12" module="tempfile" symbol="*" />
      <scope doc="httpauth/htpasswd -- Apache compatible htpasswd file" ilk="namespace" line="14" lineend="83" name="WEBrick">
        <scope ilk="namespace" line="15" lineend="82" name="HTTPAuth">
          <scope classrefs="Object" ilk="class" line="16" lineend="81" name="Htpasswd">
            <scope attributes="__ctor__" ilk="function" line="19" lineend="26" name="initialize" signature="initialize(path)" />
            <scope ilk="function" line="28" lineend="49" name="reload" signature="reload" />
            <scope ilk="function" line="51" lineend="61" name="flush" signature="flush(output=nil)" />
            <scope ilk="function" line="63" lineend="66" name="get_passwd" signature="get_passwd(realm, user, reload_db)" />
            <scope ilk="function" line="68" lineend="70" name="set_passwd" signature="set_passwd(realm, user, pass)" />
            <scope ilk="function" line="72" lineend="74" name="delete_passwd" signature="delete_passwd(realm, user)" />
            <scope ilk="function" line="76" lineend="80" name="each" signature="each" />
            <import symbol="UserDB" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/htgroup">
      <import line="10" module="tempfile" symbol="*" />
      <scope doc="httpauth/htgroup.rb -- Apache compatible htgroup file" ilk="namespace" line="12" lineend="61" name="WEBrick">
        <scope ilk="namespace" line="13" lineend="60" name="HTTPAuth">
          <scope classrefs="Object" ilk="class" line="14" lineend="59" name="Htgroup">
            <scope attributes="__ctor__" ilk="function" line="15" lineend="21" name="initialize" signature="initialize(path)" />
            <scope ilk="function" line="23" lineend="35" name="reload" signature="reload" />
            <scope ilk="function" line="37" lineend="49" name="flush" signature="flush(output=nil)" />
            <scope ilk="function" line="51" lineend="54" name="members" signature="members(group)" />
            <scope ilk="function" line="56" lineend="58" name="add" signature="add(group, members)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/htdigest">
      <import line="10" module="webrick/httpauth/userdb" symbol="*" />
      <import line="11" module="webrick/httpauth/digestauth" symbol="*" />
      <import line="12" module="tempfile" symbol="*" />
      <scope doc="httpauth/htdigest.rb -- Apache compatible htdigest file" ilk="namespace" line="14" lineend="91" name="WEBrick">
        <scope ilk="namespace" line="15" lineend="90" name="HTTPAuth">
          <scope classrefs="Object" ilk="class" line="16" lineend="89" name="Htdigest">
            <scope attributes="__ctor__" ilk="function" line="19" lineend="27" name="initialize" signature="initialize(path)" />
            <scope ilk="function" line="29" lineend="45" name="reload" signature="reload" />
            <scope ilk="function" line="47" lineend="57" name="flush" signature="flush(output=nil)" />
            <scope ilk="function" line="59" lineend="64" name="get_passwd" signature="get_passwd(realm, user, reload_db)" />
            <scope ilk="function" line="66" lineend="73" name="set_passwd" signature="set_passwd(realm, user, pass)" />
            <scope ilk="function" line="75" lineend="79" name="delete_passwd" signature="delete_passwd(realm, user)" />
            <scope ilk="function" line="81" lineend="88" name="each" signature="each" />
            <import symbol="UserDB" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/digestauth">
      <import line="14" module="webrick/config" symbol="*" />
      <import line="15" module="webrick/httpstatus" symbol="*" />
      <import line="16" module="webrick/httpauth/authenticator" symbol="*" />
      <import line="17" module="digest/md5" symbol="*" />
      <import line="18" module="digest/sha1" symbol="*" />
      <scope doc="httpauth/digestauth.rb -- HTTP digest access authentication" ilk="namespace" line="20" lineend="343" name="WEBrick">
        <scope ilk="namespace" line="21" lineend="342" name="HTTPAuth">
          <scope classrefs="Object" ilk="class" line="22" lineend="333" name="DigestAuth">
            <scope ilk="function" line="27" lineend="27" name="algorithm" />
            <scope ilk="function" line="27" lineend="27" name="qop" />
            <scope attributes="__classmethod__" ilk="function" line="29" lineend="32" name="make_passwd" signature="self.make_passwd(realm, user, pass)" />
            <scope attributes="__ctor__" ilk="function" line="34" lineend="63" name="initialize" signature="initialize(config, default=Config::DigestAuth)" />
            <scope ilk="function" line="65" lineend="73" name="authenticate" signature="authenticate(req, res)" />
            <scope ilk="function" line="75" lineend="95" name="challenge" signature="challenge(req, res, stale=false)" />
            <scope ilk="function" line="102" lineend="228" name="_authenticate" signature="_authenticate(req, res)" />
            <scope ilk="function" line="230" lineend="251" name="split_param_value" signature="split_param_value(string)" />
            <scope ilk="function" line="253" lineend="258" name="generate_next_nonce" signature="generate_next_nonce(req)" />
            <scope ilk="function" line="260" lineend="284" name="check_nonce" signature="check_nonce(req, auth_req)" />
            <scope ilk="function" line="286" lineend="301" name="generate_opaque" signature="generate_opaque(req)" />
            <scope ilk="function" line="303" lineend="317" name="check_opaque" signature="check_opaque(opaque_struct, req, auth_req)" />
            <scope ilk="function" line="319" lineend="328" name="check_uri" signature="check_uri(req, auth_req)" />
            <scope ilk="function" line="330" lineend="332" name="hexdigest" signature="hexdigest(*args)" />
            <import symbol="Authenticator" />
          </scope>
          <scope classrefs="DigestAuth" ilk="class" line="335" lineend="341" name="ProxyDigestAuth">
            <scope ilk="function" line="338" lineend="340" name="check_uri" signature="check_uri(req, auth_req)" />
            <import symbol="ProxyAuthenticator" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/basicauth">
      <import line="10" module="webrick/config" symbol="*" />
      <import line="11" module="webrick/httpstatus" symbol="*" />
      <import line="12" module="webrick/httpauth/authenticator" symbol="*" />
      <scope doc="httpauth/basicauth.rb -- HTTP basic access authentication" ilk="namespace" line="14" lineend="65" name="WEBrick">
        <scope ilk="namespace" line="15" lineend="64" name="HTTPAuth">
          <scope classrefs="Object" ilk="class" line="16" lineend="59" name="BasicAuth">
            <scope attributes="__classmethod__" ilk="function" line="21" lineend="24" name="make_passwd" signature="self.make_passwd(realm, user, pass)" />
            <scope ilk="function" line="26" lineend="26" name="realm" />
            <scope ilk="function" line="26" lineend="26" name="userdb" />
            <scope ilk="function" line="26" lineend="26" name="logger" />
            <scope attributes="__ctor__" ilk="function" line="28" lineend="31" name="initialize" signature="initialize(config, default=Config::BasicAuth)" />
            <scope ilk="function" line="33" lineend="53" name="authenticate" signature="authenticate(req, res)" />
            <scope ilk="function" line="55" lineend="58" name="challenge" signature="challenge(req, res)" />
            <import symbol="Authenticator" />
          </scope>
          <scope classrefs="BasicAuth" ilk="class" line="61" lineend="63" name="ProxyBasicAuth">
            <import symbol="ProxyAuthenticator" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/httpauth/authenticator">
      <scope doc="httpauth/authenticator.rb -- Authenticator mix-in module." ilk="namespace" line="10" lineend="79" name="WEBrick">
        <scope ilk="namespace" line="11" lineend="78" name="HTTPAuth">
          <scope ilk="namespace" line="12" lineend="70" name="Authenticator">
            <scope doc="must override by the derived class" ilk="function" line="23" lineend="38" name="check_init" signature="check_init(config)">
              <scope classrefs="Object" ilk="class" line="33" name="::" />
              <scope classrefs="Object" ilk="class" line="34" name="::" />
              <scope classrefs="Object" ilk="class" line="35" name="::" />
              <scope classrefs="Object" ilk="class" line="36" name="::" />
              <scope classrefs="Object" ilk="class" line="37" lineend="38" name="::" />
            </scope>
            <scope ilk="function" line="40" lineend="51" name="check_scheme" signature="check_scheme(req)" />
            <scope ilk="function" line="53" lineend="57" name="log" signature="log(meth, fmt, *args)" />
            <scope ilk="function" line="59" lineend="63" name="error" signature="error(fmt, *args)" />
            <scope ilk="function" line="65" lineend="69" name="info" signature="info(fmt, *args)" />
          </scope>
          <scope ilk="namespace" line="72" lineend="77" name="ProxyAuthenticator" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/htmlutils">
      <scope doc="htmlutils.rb -- HTMLUtils Module" ilk="namespace" line="11" lineend="25" name="WEBrick">
        <scope ilk="namespace" line="12" lineend="24" name="HTMLUtils">
          <scope ilk="function" line="14" lineend="21" name="escape" signature="escape(string)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/cookie">
      <import line="11" module="time" symbol="*" />
      <import line="12" module="webrick/httputils" symbol="*" />
      <scope doc="cookie.rb -- Cookie class" ilk="namespace" line="14" lineend="104" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="15" lineend="103" name="Cookie">
          <scope ilk="function" line="17" lineend="17" name="name" />
          <scope ilk="function" line="18" lineend="18" name="value" />
          <scope ilk="function" line="18" lineend="18" name="value=" />
          <scope ilk="function" line="18" lineend="18" name="version" />
          <scope ilk="function" line="18" lineend="18" name="version=" />
          <scope ilk="function" line="19" lineend="19" name="domain" />
          <scope ilk="function" line="19" lineend="19" name="domain=" />
          <scope ilk="function" line="19" lineend="19" name="path" />
          <scope ilk="function" line="19" lineend="19" name="path=" />
          <scope ilk="function" line="19" lineend="19" name="secure" />
          <scope ilk="function" line="19" lineend="19" name="secure=" />
          <scope ilk="function" line="20" lineend="20" name="comment" />
          <scope ilk="function" line="20" lineend="20" name="comment=" />
          <scope ilk="function" line="20" lineend="20" name="max_age" />
          <scope ilk="function" line="20" lineend="20" name="max_age=" />
          <scope attributes="__ctor__" doc="attr_accessor :comment_url, :discard, :port" ilk="function" line="23" lineend="30" name="initialize" signature="initialize(name, value)" />
          <scope ilk="function" line="32" lineend="34" name="expires=" signature="expires=(t)" />
          <scope ilk="function" line="36" lineend="38" name="expires" signature="expires" />
          <scope ilk="function" line="40" lineend="51" name="to_s" signature="to_s" />
          <scope attributes="__classmethod__" doc="Cookie::parse() It parses Cookie field sent from the user&#xA;agent." ilk="function" line="55" lineend="77" name="parse" signature="self.parse(str)" />
          <scope attributes="__classmethod__" ilk="function" line="79" lineend="102" name="parse_set_cookie" signature="self.parse_set_cookie(str)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/config">
      <import line="11" module="webrick/version" symbol="*" />
      <import line="12" module="webrick/httpversion" symbol="*" />
      <import line="13" module="webrick/httputils" symbol="*" />
      <import line="14" module="webrick/utils" symbol="*" />
      <import line="15" module="webrick/log" symbol="*" />
      <scope doc="config.rb -- Default configurations." ilk="namespace" line="17" lineend="97" name="WEBrick">
        <scope ilk="namespace" line="18" lineend="96" name="Config" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/compat">
      <scope doc="compat.rb -- cross platform compatibility" ilk="namespace" line="11" lineend="15" name="Errno">
        <scope classrefs="SystemCallError" ilk="class" line="12" lineend="12" name="EPROTO" />
        <scope classrefs="SystemCallError" ilk="class" line="13" lineend="13" name="ECONNRESET" />
        <scope classrefs="SystemCallError" ilk="class" line="14" lineend="14" name="ECONNABORTED" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/cgi">
      <import line="10" module="webrick/httprequest" symbol="*" />
      <import line="11" module="webrick/httpresponse" symbol="*" />
      <import line="12" module="webrick/config" symbol="*" />
      <import line="13" module="stringio" symbol="*" />
      <scope doc="cgi.rb -- Yet another CGI library" ilk="namespace" line="15" lineend="257" name="WEBrick">
        <scope classrefs="Object" ilk="class" line="16" lineend="256" name="CGI">
          <scope ilk="function" line="19" lineend="19" name="config" />
          <scope ilk="function" line="19" lineend="19" name="logger" />
          <scope attributes="__ctor__" ilk="function" line="21" lineend="42" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="44" lineend="46" name="[]" signature="[](key" />
          <scope ilk="function" line="48" lineend="109" name="start" signature="start(env=ENV, stdin=$stdin, stdout=$stdout)">
            <scope ilk="function" line="53" lineend="59" name="res.setup_header" signature="res.setup_header" />
            <scope ilk="function" line="60" lineend="62" name="res.status_line" signature="res.status_line" />
          </scope>
          <scope ilk="function" line="111" lineend="119" name="service" signature="service(req, res)" />
          <scope classrefs="Object" ilk="class" line="121" lineend="255" name="Socket">
            <scope attributes="__ctor__" ilk="function" line="126" lineend="149" name="initialize" signature="initialize(config, env, stdin, stdout)" />
            <scope ilk="function" line="151" lineend="166" name="request_line" signature="request_line" />
            <scope ilk="function" line="168" lineend="176" name="setup_header" signature="setup_header" />
            <scope ilk="function" line="178" lineend="184" name="add_header" signature="add_header(envname, hdrname)" />
            <scope ilk="function" line="186" lineend="188" name="input" signature="input" />
            <scope ilk="function" line="192" lineend="194" name="peeraddr" signature="peeraddr" />
            <scope ilk="function" line="196" lineend="198" name="addr" signature="addr" />
            <scope ilk="function" line="200" lineend="202" name="gets" signature="gets(eol=LF)" />
            <scope ilk="function" line="204" lineend="206" name="read" signature="read(size=nil)" />
            <scope ilk="function" line="208" lineend="210" name="each" signature="each" />
            <scope ilk="function" line="212" lineend="214" name="&lt;&lt;" signature="&lt;&lt;(data" />
            <scope ilk="function" line="216" lineend="221" name="cert" signature="cert" />
            <scope ilk="function" line="223" lineend="228" name="peer_cert" signature="peer_cert" />
            <scope ilk="function" line="230" lineend="243" name="peer_cert_chain" signature="peer_cert_chain" />
            <scope ilk="function" line="245" lineend="254" name="cipher" signature="cipher" />
            <import symbol="Enumerable" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="webrick/accesslog">
      <scope doc="accesslog.rb -- Access log handling utilities" ilk="namespace" line="10" lineend="67" name="WEBrick">
        <scope ilk="namespace" line="11" lineend="66" name="AccessLog">
          <scope classrefs="StandardError" ilk="class" line="12" lineend="12" name="AccessLogError" />
          <scope doc="This format specification is a subset of mod_log_config of&#xA;Apache." ilk="function" line="25" lineend="47" name="setup_params" signature="setup_params(config, req, res)" />
          <scope ilk="function" line="49" lineend="65" name="format" signature="format(format_string, params)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="weakref">
      <import line="12" module="delegate" symbol="*" />
      <import line="76" module="thread" symbol="*" />
      <scope classrefs="Delegator" doc="Weak Reference class that does not bother GCing." ilk="class" line="14" lineend="73" name="WeakRef">
        <scope classrefs="StandardError" ilk="class" line="16" lineend="17" name="RefError" />
        <scope attributes="__ctor__" doc="ref -&gt; obj" ilk="function" line="43" lineend="57" name="initialize" signature="initialize(orig)" />
        <scope ilk="function" line="59" lineend="68" name="__getobj__" signature="__getobj__" />
        <scope ilk="function" line="70" lineend="72" name="weakref_alive?" signature="weakref_alive?" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri">
      <scope ilk="namespace" name="URI">
        <scope classrefs="Generic" doc="RFC1738 section 3.2." ilk="class" name="FTP">
          <scope attributes="__classmethod__" ilk="function" name="build" signature="(args)" />
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(*arg)" />
          <scope attributes="__classmethod__" ilk="function" name="new2" signature="(user, password, host, port, path, typecode = nil, arg_check = true)" />
          <scope attributes="private" ilk="function" name="check_typecode" signature="(v)" />
          <scope ilk="function" name="set_typecode" signature="(v)" />
          <scope ilk="function" name="to_s" signature="()" />
          <scope ilk="function" name="typecode" />
          <scope ilk="function" name="typecode=" signature="(typecode)" />
        </scope>
        <scope classrefs="Error" doc="URI is valid, bad usage is not." ilk="class" name="BadURIError" />
        <scope classrefs="Generic" doc="RFC1738 section 3.3." ilk="class" name="HTTP">
          <scope attributes="__classmethod__" ilk="function" name="build" signature="(args)" />
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(*arg)" />
          <scope ilk="function" name="request_uri" signature="()" />
        </scope>
        <scope ilk="namespace" name="Escape">
          <import symbol="REGEXP" />
          <scope doc="Alias for #unescape" ilk="function" name="decode" signature="(str)" />
          <scope doc="Alias for #escape" ilk="function" name="encode" signature="(str, unsafe = UNSAFE)" />
          <scope ilk="function" name="escape" signature="(str, unsafe = UNSAFE)" />
          <scope ilk="function" name="unescape" signature="(str)" />
        </scope>
        <scope ilk="namespace" name="REGEXP">
          <scope doc="Patterns used to parse URI&apos;s" ilk="namespace" name="PATTERN" />
        </scope>
        <scope classrefs="Object" doc="Base class for all URI classes." ilk="class" name="Generic">
          <import symbol="REGEXP" />
          <import symbol="URI" />
          <scope attributes="__classmethod__" ilk="function" name="build" signature="(args)" />
          <scope attributes="__classmethod__" ilk="function" name="build2" signature="(args)" />
          <scope attributes="__classmethod__" doc="Components of the URI in the order." ilk="function" name="component" signature="()" />
          <scope attributes="__classmethod__" doc="Returns default port" ilk="function" name="default_port" signature="()" />
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)" />
          <scope attributes="__classmethod__" doc="DOC: FIXME!" ilk="function" name="use_registry" signature="()" />
          <scope doc="Alias for #merge" ilk="function" name="+" signature="(oth)" />
          <scope doc="Compares to URI&apos;s" ilk="function" name="==" signature="(oth)" />
          <scope doc="Alias for #absolute?" ilk="function" name="absolute" signature="()" />
          <scope doc="Checks if URI is an absolute one" ilk="function" name="absolute?" signature="()" />
          <scope attributes="private" ilk="function" name="check_fragment" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_host" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_opaque" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_password" signature="(v, user = @user)" />
          <scope attributes="private" ilk="function" name="check_path" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_port" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_query" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_registry" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_scheme" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_user" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_userinfo" signature="(user, password = nil)" />
          <scope ilk="function" name="coerce" signature="(oth)" />
          <scope ilk="function" name="component" signature="()" />
          <scope ilk="function" name="component_ary" signature="()" />
          <scope ilk="function" name="default_port" signature="()" />
          <scope ilk="function" name="eql?" signature="(oth)" />
          <scope attributes="private" ilk="function" name="escape_userpass" signature="(v)" />
          <scope ilk="function" name="fragment" />
          <scope ilk="function" name="fragment=" signature="(v)" />
          <scope ilk="function" name="hash" signature="()" />
          <scope doc="Checks if URI has a path" ilk="function" name="hierarchical?" signature="()" />
          <scope ilk="function" name="host" />
          <scope ilk="function" name="host=" signature="(v)" />
          <scope ilk="function" name="inspect" signature="()" />
          <scope ilk="function" name="merge" signature="(oth)" />
          <scope ilk="function" name="merge!" signature="(oth)" />
          <scope attributes="private" doc="return base and rel. you can modify `base&apos;, but can not&#xA;`rel&apos;." ilk="function" name="merge0" signature="(oth)" />
          <scope attributes="private" ilk="function" name="merge_path" signature="(base, rel)" />
          <scope doc="Returns normalized URI" ilk="function" name="normalize" signature="()" />
          <scope doc="Destructive version of #normalize" ilk="function" name="normalize!" signature="()" />
          <scope ilk="function" name="opaque" />
          <scope ilk="function" name="opaque=" signature="(v)" />
          <scope ilk="function" name="password" signature="()" />
          <scope ilk="function" name="password=" signature="(password)" />
          <scope ilk="function" name="path" />
          <scope ilk="function" name="path=" signature="(v)" />
          <scope attributes="private" ilk="function" name="path_query" signature="()" />
          <scope ilk="function" name="port" />
          <scope ilk="function" name="port=" signature="(v)" />
          <scope ilk="function" name="query" />
          <scope ilk="function" name="query=" signature="(v)" />
          <scope ilk="function" name="registry" />
          <scope ilk="function" name="registry=" signature="(v)" />
          <scope doc="Checks if URI is relative" ilk="function" name="relative?" signature="()" />
          <scope attributes="private" doc="replace self by other URI object" ilk="function" name="replace!" signature="(oth)" />
          <scope ilk="function" name="route_from" signature="(oth)" />
          <scope attributes="private" ilk="function" name="route_from0" signature="(oth)" />
          <scope attributes="private" ilk="function" name="route_from_path" signature="(src, dst)" />
          <scope ilk="function" name="route_to" signature="(oth)" />
          <scope ilk="function" name="scheme" />
          <scope ilk="function" name="scheme=" signature="(v)" />
          <scope ilk="function" name="select" signature="(*components)" />
          <scope ilk="function" name="set_fragment" signature="(v)" />
          <scope ilk="function" name="set_host" signature="(v)" />
          <scope ilk="function" name="set_opaque" signature="(v)" />
          <scope ilk="function" name="set_password" signature="(v)" />
          <scope ilk="function" name="set_path" signature="(v)" />
          <scope ilk="function" name="set_port" signature="(v)" />
          <scope ilk="function" name="set_query" signature="(v)" />
          <scope ilk="function" name="set_registry" signature="(v)" />
          <scope ilk="function" name="set_scheme" signature="(v)" />
          <scope ilk="function" name="set_user" signature="(v)" />
          <scope ilk="function" name="set_userinfo" signature="(user, password = nil)" />
          <scope attributes="private" ilk="function" name="split_path" signature="(path)" />
          <scope attributes="private" ilk="function" name="split_userinfo" signature="(ui)" />
          <scope doc="Constructs String from URI" ilk="function" name="to_s" signature="()" />
          <scope ilk="function" name="user" signature="()" />
          <scope ilk="function" name="user=" signature="(user)" />
          <scope ilk="function" name="userinfo" signature="()" />
          <scope doc="Sets userinfo, argument is string like &apos;name:pass&apos;" ilk="function" name="userinfo=" signature="(userinfo)" />
        </scope>
        <scope classrefs="Error" doc="Not a URI." ilk="class" name="InvalidURIError" />
        <scope classrefs="HTTP" ilk="class" name="HTTPS" />
        <scope ilk="namespace" name="Util" />
        <scope classrefs="StandardError" doc="Base class for all URI exceptions." ilk="class" name="Error" />
        <scope classrefs="Generic" doc="RFC2368, The mailto URL scheme" ilk="class" name="MailTo">
          <import symbol="REGEXP" />
          <scope attributes="__classmethod__" ilk="function" name="build" signature="(args)" />
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(*arg)" />
          <scope attributes="private" ilk="function" name="check_headers" signature="(v)" />
          <scope attributes="private" ilk="function" name="check_to" signature="(v)" />
          <scope ilk="function" name="headers" />
          <scope ilk="function" name="headers=" signature="(v)" />
          <scope ilk="function" name="set_headers" signature="(v)" />
          <scope ilk="function" name="set_to" signature="(v)" />
          <scope ilk="function" name="to" />
          <scope ilk="function" name="to=" signature="(v)" />
          <scope ilk="function" name="to_mailtext" signature="()" />
          <scope doc="Alias for #to_mailtext" ilk="function" name="to_rfc822text" signature="()" />
          <scope ilk="function" name="to_s" signature="()" />
        </scope>
        <scope classrefs="Error" doc="Not a URI component." ilk="class" name="InvalidComponentError" />
        <scope classrefs="Generic" doc="LDAP URI SCHEMA (described in RFC2255) ldap://&lt;host&gt;/&lt;dn&gt;[?&lt;&#xA;attrs&gt;[?&lt;scope&gt;[?&lt;filter&gt;[?&lt;extensions&gt;]]]]" ilk="class" name="LDAP">
          <scope attributes="__classmethod__" ilk="function" name="build" signature="(args)" />
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(*arg)" />
          <scope ilk="function" name="attributes" signature="()" />
          <scope ilk="function" name="attributes=" signature="(val)" />
          <scope attributes="private" ilk="function" name="build_path_query" signature="()" />
          <scope ilk="function" name="dn" signature="()" />
          <scope ilk="function" name="dn=" signature="(val)" />
          <scope ilk="function" name="extensions" signature="()" />
          <scope ilk="function" name="extensions=" signature="(val)" />
          <scope ilk="function" name="filter" signature="()" />
          <scope ilk="function" name="filter=" signature="(val)" />
          <scope ilk="function" name="hierarchical?" signature="()" />
          <scope attributes="private" ilk="function" name="parse_dn" signature="()" />
          <scope attributes="private" ilk="function" name="parse_query" signature="()" />
          <scope ilk="function" name="scope" signature="()" />
          <scope ilk="function" name="scope=" signature="(val)" />
          <scope ilk="function" name="set_attributes" signature="(val)" />
          <scope ilk="function" name="set_dn" signature="(val)" />
          <scope ilk="function" name="set_extensions" signature="(val)" />
          <scope ilk="function" name="set_filter" signature="(val)" />
          <scope ilk="function" name="set_scope" signature="(val)" />
        </scope>
        <import symbol="REGEXP" />
        <scope attributes="__classmethod__" ilk="function" name="extract" signature="(str, schemes = nil, &amp;block) {|$&amp;| ...}" />
        <scope attributes="__classmethod__" ilk="function" name="join" signature="(*str)" />
        <scope attributes="__classmethod__" ilk="function" name="parse" signature="(uri)" />
        <scope attributes="__classmethod__" ilk="function" name="regexp" signature="(schemes = nil)" />
        <scope attributes="__classmethod__" ilk="function" name="split" signature="(uri)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/mailto">
      <import line="9" module="uri/generic" symbol="*" />
      <scope doc="= uri/mailto.rb" ilk="namespace" line="11" lineend="239" name="URI">
        <scope classrefs="Generic" doc="RFC2368, The mailto URL scheme" ilk="class" line="16" lineend="236" name="MailTo">
          <scope attributes="__classmethod__" doc=":startdoc:" ilk="function" line="70" lineend="102" name="build" signature="self.build(args)" />
          <scope attributes="__ctor__" doc="== Description" ilk="function" line="111" lineend="130" name="initialize" signature="initialize(*arg)" />
          <scope ilk="function" line="131" lineend="131" name="to" />
          <scope ilk="function" line="132" lineend="132" name="headers" />
          <scope ilk="function" line="134" lineend="144" name="check_to" signature="check_to(v)" />
          <scope ilk="function" line="147" lineend="149" name="set_to" signature="set_to(v)" />
          <scope ilk="function" line="152" lineend="156" name="to=" signature="to=(v)" />
          <scope ilk="function" line="158" lineend="169" name="check_headers" signature="check_headers(v)" />
          <scope ilk="function" line="172" lineend="179" name="set_headers" signature="set_headers(v)" />
          <scope ilk="function" line="182" lineend="186" name="headers=" signature="headers=(v)" />
          <scope ilk="function" line="188" lineend="205" name="to_s" signature="to_s" />
          <scope doc="== Usage require &apos;uri&apos;" ilk="function" line="214" lineend="234" name="to_mailtext" signature="to_mailtext" />
          <import symbol="REGEXP" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/ldap">
      <import line="13" module="uri/generic" symbol="*" />
      <scope doc="= uri/ldap.rb" ilk="namespace" line="15" lineend="190" name="URI">
        <scope classrefs="Generic" doc="LDAP URI SCHEMA (described in RFC2255) ldap://&lt;host&gt;/&lt;dn&gt;[?&lt;&#xA;attrs&gt;[?&lt;scope&gt;[?&lt;filter&gt;[?&lt;extensions&gt;]]]]" ilk="class" line="21" lineend="187" name="LDAP">
          <scope attributes="__classmethod__" ilk="function" line="41" lineend="57" name="build" signature="self.build(args)" />
          <scope attributes="__ctor__" ilk="function" line="59" lineend="68" name="initialize" signature="initialize(*arg)" />
          <scope ilk="function" line="70" lineend="72" name="parse_dn" signature="parse_dn" />
          <scope ilk="function" line="75" lineend="89" name="parse_query" signature="parse_query" />
          <scope ilk="function" line="92" lineend="101" name="build_path_query" signature="build_path_query" />
          <scope ilk="function" line="104" lineend="106" name="dn" signature="dn" />
          <scope ilk="function" line="108" lineend="112" name="set_dn" signature="set_dn(val)" />
          <scope ilk="function" line="115" lineend="118" name="dn=" signature="dn=(val)" />
          <scope ilk="function" line="120" lineend="122" name="attributes" signature="attributes" />
          <scope ilk="function" line="124" lineend="128" name="set_attributes" signature="set_attributes(val)" />
          <scope ilk="function" line="131" lineend="134" name="attributes=" signature="attributes=(val)" />
          <scope ilk="function" line="136" lineend="138" name="scope" signature="scope" />
          <scope ilk="function" line="140" lineend="144" name="set_scope" signature="set_scope(val)" />
          <scope ilk="function" line="147" lineend="150" name="scope=" signature="scope=(val)" />
          <scope ilk="function" line="152" lineend="154" name="filter" signature="filter" />
          <scope ilk="function" line="156" lineend="160" name="set_filter" signature="set_filter(val)" />
          <scope ilk="function" line="163" lineend="166" name="filter=" signature="filter=(val)" />
          <scope ilk="function" line="168" lineend="170" name="extensions" signature="extensions" />
          <scope ilk="function" line="172" lineend="176" name="set_extensions" signature="set_extensions(val)" />
          <scope ilk="function" line="179" lineend="182" name="extensions=" signature="extensions=(val)" />
          <scope ilk="function" line="184" lineend="186" name="hierarchical?" signature="hierarchical?" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/https">
      <import line="9" module="uri/http" symbol="*" />
      <scope doc="= uri/https.rb" ilk="namespace" line="11" lineend="16" name="URI">
        <scope classrefs="HTTP" ilk="class" line="12" lineend="14" name="HTTPS" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/http">
      <import line="9" module="uri/generic" symbol="*" />
      <scope doc="= uri/http.rb" ilk="namespace" line="11" lineend="65" name="URI">
        <scope classrefs="Generic" doc="RFC1738 section 3.3." ilk="class" line="16" lineend="62" name="HTTP">
          <scope attributes="__classmethod__" doc="== Description" ilk="function" line="34" lineend="37" name="build" signature="self.build(args)" />
          <scope attributes="__ctor__" doc="== Description" ilk="function" line="45" lineend="47" name="initialize" signature="initialize(*arg)" />
          <scope doc="== Description" ilk="function" line="54" lineend="61" name="request_uri" signature="request_uri" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/generic">
      <import line="9" module="uri/common" symbol="*" />
      <scope doc="= uri/generic.rb" ilk="namespace" line="11" lineend="1118" name="URI">
        <scope classrefs="Object" doc="Base class for all URI classes." ilk="class" line="16" lineend="1117" name="Generic">
          <scope attributes="__classmethod__" doc="Returns default port" ilk="function" line="25" lineend="27" name="default_port" signature="self.default_port" />
          <scope ilk="function" line="29" lineend="31" name="default_port" signature="default_port" />
          <scope attributes="__classmethod__" doc="Components of the URI in the order." ilk="function" line="44" lineend="46" name="component" signature="self.component" />
          <scope attributes="__classmethod__" doc="DOC: FIXME!" ilk="function" line="53" lineend="55" name="use_registry" signature="self.use_registry" />
          <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="69" lineend="93" name="build2" signature="self.build2(args)" />
          <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="107" lineend="126" name="build" signature="self.build(args)" />
          <scope attributes="__ctor__" doc="== Args" ilk="function" line="155" lineend="201" name="initialize" signature="initialize(scheme, userinfo, host, port, registry, path, opaque, query, fragment, arg_check = false)" />
          <scope ilk="function" line="202" lineend="202" name="scheme" />
          <scope ilk="function" line="203" lineend="203" name="host" />
          <scope ilk="function" line="204" lineend="204" name="port" />
          <scope ilk="function" line="205" lineend="205" name="registry" />
          <scope ilk="function" line="206" lineend="206" name="path" />
          <scope ilk="function" line="207" lineend="207" name="query" />
          <scope ilk="function" line="208" lineend="208" name="opaque" />
          <scope ilk="function" line="209" lineend="209" name="fragment" />
          <scope doc="replace self by other URI object" ilk="function" line="212" lineend="220" name="replace!" signature="replace!(oth)" />
          <scope ilk="function" line="223" lineend="225" name="component" signature="component" />
          <scope ilk="function" line="227" lineend="234" name="check_scheme" signature="check_scheme(v)" />
          <scope ilk="function" line="237" lineend="239" name="set_scheme" signature="set_scheme(v)" />
          <scope ilk="function" line="242" lineend="246" name="scheme=" signature="scheme=(v)" />
          <scope ilk="function" line="248" lineend="256" name="check_userinfo" signature="check_userinfo(user, password = nil)" />
          <scope ilk="function" line="259" lineend="273" name="check_user" signature="check_user(v)" />
          <scope ilk="function" line="276" lineend="294" name="check_password" signature="check_password(v, user = @user)" />
          <scope doc="Sets userinfo, argument is string like &apos;name:pass&apos;" ilk="function" line="300" lineend="307" name="userinfo=" signature="userinfo=(userinfo)" />
          <scope ilk="function" line="309" lineend="313" name="user=" signature="user=(user)" />
          <scope ilk="function" line="315" lineend="319" name="password=" signature="password=(password)" />
          <scope ilk="function" line="321" lineend="329" name="set_userinfo" signature="set_userinfo(user, password = nil)" />
          <scope ilk="function" line="332" lineend="335" name="set_user" signature="set_user(v)" />
          <scope ilk="function" line="338" lineend="341" name="set_password" signature="set_password(v)" />
          <scope ilk="function" line="344" lineend="349" name="split_userinfo" signature="split_userinfo(ui)" />
          <scope ilk="function" line="352" lineend="354" name="escape_userpass" signature="escape_userpass(v)" />
          <scope ilk="function" line="357" lineend="363" name="userinfo" signature="userinfo" />
          <scope ilk="function" line="365" lineend="367" name="user" signature="user" />
          <scope ilk="function" line="369" lineend="371" name="password" signature="password" />
          <scope ilk="function" line="373" lineend="385" name="check_host" signature="check_host(v)" />
          <scope ilk="function" line="388" lineend="390" name="set_host" signature="set_host(v)" />
          <scope ilk="function" line="393" lineend="397" name="host=" signature="host=(v)" />
          <scope ilk="function" line="399" lineend="411" name="check_port" signature="check_port(v)" />
          <scope ilk="function" line="414" lineend="423" name="set_port" signature="set_port(v)" />
          <scope ilk="function" line="426" lineend="430" name="port=" signature="port=(v)" />
          <scope ilk="function" line="432" lineend="447" name="check_registry" signature="check_registry(v)" />
          <scope ilk="function" line="450" lineend="452" name="set_registry" signature="set_registry(v)" />
          <scope ilk="function" line="455" lineend="459" name="registry=" signature="registry=(v)" />
          <scope ilk="function" line="461" lineend="483" name="check_path" signature="check_path(v)" />
          <scope ilk="function" line="486" lineend="488" name="set_path" signature="set_path(v)" />
          <scope ilk="function" line="491" lineend="495" name="path=" signature="path=(v)" />
          <scope ilk="function" line="497" lineend="514" name="check_query" signature="check_query(v)" />
          <scope ilk="function" line="517" lineend="519" name="set_query" signature="set_query(v)" />
          <scope ilk="function" line="522" lineend="526" name="query=" signature="query=(v)" />
          <scope ilk="function" line="528" lineend="543" name="check_opaque" signature="check_opaque(v)" />
          <scope ilk="function" line="546" lineend="548" name="set_opaque" signature="set_opaque(v)" />
          <scope ilk="function" line="551" lineend="555" name="opaque=" signature="opaque=(v)" />
          <scope ilk="function" line="557" lineend="566" name="check_fragment" signature="check_fragment(v)" />
          <scope ilk="function" line="569" lineend="571" name="set_fragment" signature="set_fragment(v)" />
          <scope ilk="function" line="574" lineend="578" name="fragment=" signature="fragment=(v)" />
          <scope doc="Checks if URI has a path" ilk="function" line="583" lineend="589" name="hierarchical?" signature="hierarchical?" />
          <scope doc="Checks if URI is an absolute one" ilk="function" line="594" lineend="600" name="absolute?" signature="absolute?" />
          <scope doc="Checks if URI is relative" ilk="function" line="606" lineend="608" name="relative?" signature="relative?" />
          <scope ilk="function" line="610" lineend="612" name="split_path" signature="split_path(path)" />
          <scope ilk="function" line="615" lineend="675" name="merge_path" signature="merge_path(base, rel)" />
          <scope doc="== Args" ilk="function" line="697" lineend="705" name="merge!" signature="merge!(oth)" />
          <scope doc="== Args" ilk="function" line="725" lineend="763" name="merge" signature="merge(oth)" />
          <scope doc="return base and rel." ilk="function" line="768" lineend="795" name="merge0" signature="merge0(oth)" />
          <scope ilk="function" line="798" lineend="836" name="route_from_path" signature="route_from_path(src, dst)" />
          <scope ilk="function" line="839" lineend="891" name="route_from0" signature="route_from0(oth)" />
          <scope doc="== Args" ilk="function" line="911" lineend="929" name="route_from" signature="route_from(oth)" />
          <scope doc="== Args" ilk="function" line="951" lineend="962" name="route_to" signature="route_to(oth)" />
          <scope doc="Returns normalized URI" ilk="function" line="967" lineend="971" name="normalize" signature="normalize" />
          <scope doc="Destructive version of #normalize" ilk="function" line="976" lineend="983" name="normalize!" signature="normalize!" />
          <scope ilk="function" line="985" lineend="991" name="path_query" signature="path_query" />
          <scope doc="Constructs String from URI" ilk="function" line="997" lineend="1036" name="to_s" signature="to_s" />
          <scope doc="Compares to URI&apos;s" ilk="function" line="1041" lineend="1047" name="==" signature="==(oth" />
          <scope ilk="function" line="1049" lineend="1051" name="hash" signature="hash" />
          <scope ilk="function" line="1053" lineend="1055" name="eql?" signature="eql?(oth)" />
          <scope doc="def ===(oth) raise NotImplementedError end" ilk="function" line="1068" lineend="1072" name="component_ary" signature="component_ary" />
          <scope doc="== Args" ilk="function" line="1092" lineend="1101" name="select" signature="select(*components)" />
          <scope ilk="function" line="1103" lineend="1105" name="inspect" signature="inspect" />
          <scope ilk="function" line="1107" lineend="1116" name="coerce" signature="coerce(oth)" />
          <import symbol="URI" />
          <import symbol="REGEXP" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/ftp">
      <import line="9" module="uri/generic" symbol="*" />
      <scope doc="= uri/ftp.rb" ilk="namespace" line="11" lineend="148" name="URI">
        <scope classrefs="Generic" doc="RFC1738 section 3.2." ilk="class" line="16" lineend="146" name="FTP">
          <scope attributes="__classmethod__" doc="Typecode is, &quot;a&quot;, &quot;i&quot; or &quot;d&quot;." ilk="function" line="35" lineend="50" name="new2" signature="self.new2(user, password, host, port, path, typecode = nil, arg_check = true)" />
          <scope attributes="__classmethod__" doc="== Description" ilk="function" line="59" lineend="70" name="build" signature="self.build(args)" />
          <scope attributes="__ctor__" doc="== Description" ilk="function" line="86" lineend="100" name="initialize" signature="initialize(*arg)" />
          <scope ilk="function" line="101" lineend="101" name="typecode" />
          <scope ilk="function" line="103" lineend="110" name="check_typecode" signature="check_typecode(v)" />
          <scope ilk="function" line="113" lineend="115" name="set_typecode" signature="set_typecode(v)" />
          <scope ilk="function" line="118" lineend="122" name="typecode=" signature="typecode=(typecode)" />
          <scope ilk="function" line="124" lineend="131" name="merge" signature="merge(oth)" />
          <scope ilk="function" line="133" lineend="145" name="to_s" signature="to_s" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="uri/common">
      <scope doc="= uri/common.rb" ilk="namespace" line="9" lineend="597" name="URI">
        <scope ilk="namespace" line="10" lineend="215" name="REGEXP">
          <scope doc="Patterns used to parse URI&apos;s" ilk="namespace" line="14" lineend="183" name="PATTERN" />
        </scope>
        <scope doc="REGEXP" ilk="namespace" line="217" lineend="247" name="Util">
          <scope doc=":nodoc:" ilk="function" line="218" lineend="245" name="make_components_hash" signature="make_components_hash(klass, array_hash)" />
        </scope>
        <scope ilk="namespace" line="249" lineend="321" name="Escape">
          <scope doc="== Synopsis" ilk="function" line="280" lineend="292" name="escape" signature="escape(str, unsafe = UNSAFE)" />
          <scope doc="== Synopsis" ilk="function" line="315" lineend="319" name="unescape" signature="unescape(str)" />
        </scope>
        <scope classrefs="StandardError" doc="Base class for all URI exceptions." ilk="class" line="331" lineend="331" name="Error" />
        <scope classrefs="Error" doc="Not a URI." ilk="class" line="335" lineend="335" name="InvalidURIError" />
        <scope classrefs="Error" doc="Not a URI component." ilk="class" line="339" lineend="339" name="InvalidComponentError" />
        <scope classrefs="Error" doc="URI is valid, bad usage is not." ilk="class" line="343" lineend="343" name="BadURIError" />
        <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="376" lineend="446" name="split" signature="self.split(uri)" />
        <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="479" lineend="492" name="parse" signature="self.parse(uri)" />
        <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="515" lineend="521" name="join" signature="self.join(*str)" />
        <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="547" lineend="556" name="extract" signature="self.extract(str, schemes = nil, &amp;block)" />
        <scope attributes="__classmethod__" doc="== Synopsis" ilk="function" line="589" lineend="595" name="regexp" signature="self.regexp(schemes = nil)" />
      </scope>
      <scope ilk="namespace" line="599" lineend="607" name="Kernel">
        <scope doc="alias for URI.parse." ilk="function" line="603" lineend="605" name="URI" signature="URI(uri_str)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="un">
      <import line="24" module="fileutils" symbol="*" />
      <import line="25" module="optparse" symbol="*" />
      <scope doc="= un.rb" ilk="namespace" line="27" lineend="30" name="FileUtils" />
      <scope ilk="function" line="32" lineend="56" name="setup" signature="setup(options = &quot;&quot;)" />
      <scope doc="Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY" ilk="function" line="68" lineend="77" name="cp" signature="cp" />
      <scope doc="Create a link to the specified TARGET with LINK_NAME." ilk="function" line="89" lineend="98" name="ln" signature="ln" />
      <scope doc="Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY." ilk="function" line="108" lineend="114" name="mv" signature="mv" />
      <scope doc="Remove the FILE" ilk="function" line="126" lineend="133" name="rm" signature="rm" />
      <scope doc="Create the DIR, if they do not already exist." ilk="function" line="144" lineend="150" name="mkdir" signature="mkdir" />
      <scope doc="Remove the DIR." ilk="function" line="160" lineend="164" name="rmdir" signature="rmdir" />
      <scope doc="Copy SOURCE to DEST." ilk="function" line="177" lineend="185" name="install" signature="install" />
      <scope doc="Change the mode of each FILE to OCTAL-MODE." ilk="function" line="195" lineend="200" name="chmod" signature="chmod" />
      <scope doc="Update the access and modification times of each FILE to the&#xA;current time." ilk="function" line="210" lineend="214" name="touch" signature="touch" />
      <scope doc="Display help message." ilk="function" line="222" lineend="235" name="help" signature="help" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tsort">
      <import line="245" module="test/unit" symbol="*" />
      <scope doc="!/usr/bin/env ruby -- tsort.rb - provides a module for&#xA;topological sorting and strongly connected components." ilk="namespace" line="122" lineend="242" name="TSort">
        <scope classrefs="StandardError" ilk="class" line="123" lineend="124" name="Cyclic" />
        <scope doc="Returns a topologically sorted array of nodes." ilk="function" line="133" lineend="137" name="tsort" signature="tsort" />
        <scope doc="The iterator version of the #tsort method." ilk="function" line="147" lineend="155" name="tsort_each" signature="tsort_each" />
        <scope doc="Returns strongly connected components as an array of arrays&#xA;of nodes." ilk="function" line="162" lineend="166" name="strongly_connected_components" signature="strongly_connected_components" />
        <scope doc="The iterator version of the #strongly_connected_components&#xA;method." ilk="function" line="177" lineend="188" name="each_strongly_connected_component" signature="each_strongly_connected_component" />
        <scope doc="Iterates over strongly connected component in the subgraph&#xA;reachable from _node_." ilk="function" line="198" lineend="223" name="each_strongly_connected_component_from" signature="each_strongly_connected_component_from(node, id_map={}, stack=[])" />
        <scope doc="Should be implemented by a extended class." ilk="function" line="230" lineend="232" name="tsort_each_node" signature="tsort_each_node" />
        <scope doc="Should be implemented by a extended class." ilk="function" line="239" lineend="241" name="tsort_each_child" signature="tsort_each_child(node)" />
      </scope>
      <scope classrefs="Hash" ilk="class" line="247" lineend="253" name="TSortHash">
        <scope doc=":nodoc:" ilk="function" line="250" lineend="252" name="tsort_each_child" signature="tsort_each_child(node, &amp;block)" />
        <import symbol="TSort" />
      </scope>
      <scope classrefs="Array" ilk="class" line="255" lineend="261" name="TSortArray">
        <scope doc=":nodoc:" ilk="function" line="258" lineend="260" name="tsort_each_child" signature="tsort_each_child(node, &amp;block)" />
        <import symbol="TSort" />
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="263" lineend="286" name="TSortTest">
        <scope doc=":nodoc:" ilk="function" line="264" lineend="268" name="test_dag" signature="test_dag" />
        <scope ilk="function" line="270" lineend="275" name="test_cycle" signature="test_cycle" />
        <scope ilk="function" line="277" lineend="285" name="test_array" signature="test_array" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tracer">
      <scope classrefs="Object" doc="tracer.rb - $Release Version: 0.2$ $Revision: 1.8 $ $Date:&#xA;1998/05/19 03:42:49 $ by Keiju ISHITSUKA(Nippon Rational&#xA;Inc.)" ilk="class" line="16" lineend="154" name="Tracer">
        <scope classrefs="Object" ilk="class" line="21" lineend="25" name="self">
          <scope ilk="function" line="22" lineend="22" name="verbose" />
          <scope ilk="function" line="24" lineend="24" name="stdout" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="37" lineend="48" name="initialize" signature="initialize" />
        <scope ilk="function" line="50" lineend="52" name="stdout" signature="stdout" />
        <scope ilk="function" line="54" lineend="66" name="on" signature="on" />
        <scope ilk="function" line="68" lineend="71" name="off" signature="off" />
        <scope ilk="function" line="73" lineend="75" name="add_filter" signature="add_filter(p = proc)" />
        <scope ilk="function" line="77" lineend="79" name="set_get_line_procs" signature="set_get_line_procs(file, p = proc)" />
        <scope ilk="function" line="81" lineend="104" name="get_line" signature="get_line(file, line)" />
        <scope ilk="function" line="106" lineend="112" name="get_thread_no" signature="get_thread_no" />
        <scope ilk="function" line="114" lineend="131" name="trace_func" signature="trace_func(event, file, line, id, binding, klass, *)" />
        <scope attributes="__classmethod__" ilk="function" line="134" lineend="140" name="on" signature="Tracer.on" />
        <scope attributes="__classmethod__" ilk="function" line="142" lineend="144" name="off" signature="Tracer.off" />
        <scope attributes="__classmethod__" ilk="function" line="146" lineend="148" name="set_get_line_procs" signature="Tracer.set_get_line_procs(file_name, p = proc)" />
        <scope attributes="__classmethod__" ilk="function" line="150" lineend="152" name="add_filter" signature="Tracer.add_filter(p = proc)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tmpdir">
      <scope classrefs="Object" doc="tmpdir - retrieve temporary directory path" ilk="class" line="7" lineend="45" name="Dir">
        <import line="12" module="Win32API" symbol="*" />
        <scope attributes="__classmethod__" doc="Returns the operating system&apos;s temporary file path." ilk="function" line="30" lineend="44" name="tmpdir" signature="Dir::tmpdir" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkwinpkg">
      <import line="4" module="tk/winpkg" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkvirtevent">
      <import line="4" module="tk/virtevent" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tktext">
      <import line="4" module="tk/text" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkscrollbox">
      <import line="4" module="tk/scrollbox" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkpalette">
      <import line="4" module="tk/palette" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkmngfocus">
      <import line="4" module="tk/mngfocus" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkmenubar">
      <import line="4" module="tk/menubar" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkmacpkg">
      <import line="4" module="tk/macpkg" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkfont">
      <import line="4" module="tk/font" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/winico">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tktable/setup.rb" symbol="*" />
      <import line="14" module="tkextlib/winico/winico" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/winico/winico">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/winico/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;winico&apos;, &apos;0.5&apos;)&#xA;TkPackage.require(&apos;winico&apos;, &apos;0.6&apos;)" ilk="namespace" line="18" lineend="33" name="Tk">
        <scope classrefs="TkObject" ilk="class" line="19" lineend="32" name="Winico">
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="23" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="31" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="189" name="Tk::Winico">
        <scope attributes="__classmethod__" ilk="function" line="39" lineend="41" name="id2obj" signature="self.id2obj(id)" />
        <scope attributes="__classmethod__" ilk="function" line="43" lineend="47" name="info" signature="self.info" />
        <scope attributes="__classmethod__" ilk="function" line="49" lineend="54" name="icon_info" signature="self.icon_info(id)" />
        <scope attributes="__classmethod__" ilk="function" line="58" lineend="60" name="new_from_file" signature="self.new_from_file(file_name)" />
        <scope attributes="__classmethod__" ilk="function" line="62" lineend="64" name="new_from_resource" signature="self.new_from_resource(resource_name, file_name = nil)" />
        <scope attributes="__ctor__" ilk="function" line="66" lineend="85" name="initialize" signature="initialize(file_name, resource_name=nil, winico_id=nil)" />
        <scope ilk="function" line="87" lineend="89" name="id" signature="id" />
        <scope ilk="function" line="91" lineend="95" name="set_window" signature="set_window(win_id, *opts)" />
        <scope ilk="function" line="97" lineend="101" name="delete" signature="delete" />
        <scope ilk="function" line="104" lineend="106" name="info" signature="info" />
        <scope classrefs="TkValidateCommand" ilk="class" line="110" lineend="148" name="Winico_callback">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="111" lineend="143" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="140" lineend="142" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="145" lineend="147" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope ilk="function" line="152" lineend="165" name="add_to_taskbar" signature="add_to_taskbar(keys = {})" />
        <scope ilk="function" line="168" lineend="181" name="modify_taskbar" signature="modify_taskbar(keys = {})" />
        <scope ilk="function" line="184" lineend="187" name="delete_from_taskbar" signature="delete_from_taskbar" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/winico/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/vu/setup.rb" symbol="*" />
      <scope doc="autoload" ilk="namespace" line="19" lineend="48" name="Tk">
        <scope ilk="namespace" line="20" lineend="47" name="Vu">
          <scope attributes="__classmethod__" ilk="function" line="24" lineend="26" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="28" lineend="34" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu/spinbox">
      <import line="8" module="tk" symbol="*" />
      <import line="13" module="tkextlib/vu.rb" symbol="*" />
      <scope doc="call setup script  --  &lt;libdir&gt;/tkextlib/vu.rb" ilk="namespace" line="18" lineend="22" name="Tk">
        <scope ilk="namespace" line="19" lineend="21" name="Vu" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu/pie">
      <import line="5" module="tk" symbol="*" />
      <import line="22" module="tkextlib/vu.rb" symbol="*" />
      <scope doc="create module/class" ilk="namespace" line="8" lineend="19" name="Tk">
        <scope ilk="namespace" line="9" lineend="18" name="Vu">
          <scope ilk="namespace" line="10" lineend="11" name="PieSliceConfigMethod" />
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="Pie" />
          <scope classrefs="TkObject" ilk="class" line="14" lineend="15" name="PieSlice" />
          <scope classrefs="PieSlice" ilk="class" line="16" lineend="17" name="NamedPieSlice" />
        </scope>
      </scope>
      <scope doc="call setup script  --  &lt;libdir&gt;/tkextlib/vu.rb" ilk="namespace" line="24" lineend="35" name="Tk::Vu::">
        <scope ilk="function" line="27" lineend="33" name="__item_pathname" signature="__item_pathname(tagOrId)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="37" lineend="115" name="Tk::Vu::">
        <scope ilk="function" line="42" lineend="44" name="__destroy_hook__" signature="__destroy_hook__" />
        <scope ilk="function" line="50" lineend="57" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="61" lineend="64" name="delete" signature="delete(*glob_pats)" />
        <scope ilk="function" line="66" lineend="69" name="explode" signature="explode(slice, *args)" />
        <scope ilk="function" line="71" lineend="73" name="explode_value" signature="explode_value(slice)" />
        <scope ilk="function" line="75" lineend="78" name="lower" signature="lower(slice, below=None)" />
        <scope ilk="function" line="80" lineend="82" name="names" signature="names(*glob_pats)" />
        <scope ilk="function" line="85" lineend="88" name="order" signature="order(*args)" />
        <scope ilk="function" line="90" lineend="93" name="raise" signature="raise(slice, above=None)" />
        <scope ilk="function" line="95" lineend="98" name="swap" signature="swap(slice1, slice2)" />
        <scope ilk="function" line="100" lineend="102" name="set" signature="set(slice, *args)" />
        <scope ilk="function" line="107" lineend="109" name="slice_value" signature="slice_value(slice)" />
        <scope ilk="function" line="111" lineend="113" name="value" signature="value(val = None)" />
        <import symbol="Tk::Vu::" />
      </scope>
      <scope classrefs="Object" ilk="class" line="117" lineend="208" name="Tk::Vu::">
        <scope attributes="__classmethod__" ilk="function" line="122" lineend="126" name="id2obj" signature="self.id2obj(pie, id)" />
        <scope attributes="__ctor__" ilk="function" line="128" lineend="144" name="initialize" signature="initialize(parent, *args)" />
        <scope ilk="function" line="146" lineend="148" name="id" signature="id" />
        <scope ilk="function" line="150" lineend="152" name="[]" signature="[](key" />
        <scope ilk="function" line="154" lineend="157" name="[]=" signature="[]=(key" />
        <scope ilk="function" line="159" lineend="161" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="163" lineend="166" name="configure" signature="configure(*args)" />
        <scope ilk="function" line="168" lineend="170" name="configinfo" signature="configinfo(*args)" />
        <scope ilk="function" line="172" lineend="174" name="current_configinfo" signature="current_configinfo(*args)" />
        <scope ilk="function" line="176" lineend="178" name="delete" signature="delete" />
        <scope ilk="function" line="180" lineend="183" name="explode" signature="explode(value)" />
        <scope ilk="function" line="185" lineend="187" name="explode_value" signature="explode_value" />
        <scope ilk="function" line="189" lineend="192" name="lower" signature="lower(other=None)" />
        <scope ilk="function" line="194" lineend="197" name="raise" signature="raise(other=None)" />
        <scope ilk="function" line="199" lineend="202" name="set" signature="set(value)" />
        <scope ilk="function" line="205" lineend="207" name="value" signature="value" />
      </scope>
      <scope classrefs="Object" ilk="class" line="210" lineend="235" name="Tk::Vu::">
        <scope attributes="__classmethod__" ilk="function" line="211" lineend="217" name="new" signature="self.new(parent, name, *args)" />
        <scope attributes="__ctor__" ilk="function" line="219" lineend="234" name="initialize" signature="initialize(parent, name, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu/dial">
      <import line="5" module="tk" symbol="*" />
      <import line="16" module="tkextlib/vu.rb" symbol="*" />
      <scope doc="create module/class" ilk="namespace" line="8" lineend="13" name="Tk">
        <scope ilk="namespace" line="9" lineend="12" name="Vu">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="Dial" />
        </scope>
      </scope>
      <scope classrefs="Object" doc="define module/class" ilk="class" line="19" lineend="102" name="Tk::Vu::">
        <scope ilk="function" line="26" lineend="28" name="__methodcall_optkeys" signature="__methodcall_optkeys" />
        <scope ilk="function" line="33" lineend="40" name="coords" signature="coords(val = nil)" />
        <scope ilk="function" line="42" lineend="44" name="constrain" signature="constrain(val = None)" />
        <scope ilk="function" line="46" lineend="48" name="get" signature="get(*args)" />
        <scope ilk="function" line="50" lineend="52" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="54" lineend="64" name="get_label" signature="get_label(val=nil)" />
        <scope ilk="function" line="66" lineend="69" name="set_label" signature="set_label(val, str, *args)" />
        <scope ilk="function" line="71" lineend="74" name="set_label_constrain" signature="set_label_constrain(val, str, *args)" />
        <scope ilk="function" line="76" lineend="86" name="get_tag" signature="get_tag(val=nil)" />
        <scope ilk="function" line="88" lineend="91" name="set_tag" signature="set_tag(val, str, *args)" />
        <scope ilk="function" line="93" lineend="96" name="set_tag_constrain" signature="set_tag_constrain(val, str, *args)" />
        <scope ilk="function" line="98" lineend="101" name="set" signature="set(val = None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu/charts">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tk/canvas" symbol="*" />
      <import line="9" module="tkextlib/vu.rb" symbol="*" />
      <scope doc="call setup script  --  &lt;libdir&gt;/tkextlib/vu.rb" ilk="namespace" line="11" lineend="53" name="Tk">
        <scope ilk="namespace" line="12" lineend="52" name="Vu">
          <scope ilk="namespace" line="13" lineend="30" name="ChartsConfig">
            <scope ilk="function" line="15" lineend="17" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
            <scope ilk="function" line="20" lineend="23" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
            <scope ilk="function" line="26" lineend="28" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
          </scope>
          <scope classrefs="TkcItem" ilk="class" line="32" lineend="37" name="TkcSticker">
            <import symbol="ChartsConfig" />
          </scope>
          <scope classrefs="TkcItem" ilk="class" line="39" lineend="44" name="TkcStripchart">
            <import symbol="ChartsConfig" />
          </scope>
          <scope classrefs="TkcItem" ilk="class" line="46" lineend="51" name="TkcBarchart">
            <import symbol="ChartsConfig" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/vu/bargraph">
      <import line="5" module="tk" symbol="*" />
      <import line="17" module="tkextlib/vu.rb" symbol="*" />
      <scope doc="create module/class" ilk="namespace" line="8" lineend="13" name="Tk">
        <scope ilk="namespace" line="9" lineend="12" name="Vu">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="Bargraph" />
        </scope>
      </scope>
      <scope classrefs="Object" doc="call setup script  --  &lt;libdir&gt;/tkextlib/vu.rb" ilk="class" line="19" lineend="61" name="Tk::Vu::">
        <scope ilk="function" line="26" lineend="28" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="31" lineend="38" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="41" lineend="43" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="46" lineend="48" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="53" lineend="56" name="set" signature="set(val = None)" />
        <scope ilk="function" line="58" lineend="60" name="get" signature="get()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/trofs">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/trofs/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/trofs/trofs.rb" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/trofs/trofs">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/trofs/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;trofs&apos;, &apos;0.4&apos;)" ilk="namespace" line="17" lineend="51" name="Tk">
        <scope ilk="namespace" line="18" lineend="50" name="Trofs">
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="24" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="26" lineend="32" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="36" lineend="39" name="create_archive" signature="self.create_archive(dir, archive)" />
          <scope attributes="__classmethod__" ilk="function" line="41" lineend="44" name="mount" signature="self.mount(archive, mountpoint=None)" />
          <scope attributes="__classmethod__" ilk="function" line="46" lineend="49" name="umount" signature="self.umount(mountpoint)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/trofs/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/treectrl">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/treectrl/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/treectrl/tktreectrl" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/treectrl/tktreectrl">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/treectrl/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;treectrl&apos;, &apos;1.0&apos;)&#xA;TkPackage.require(&apos;treectrl&apos;, &apos;1.1&apos;)" ilk="namespace" line="18" lineend="72" name="Tk">
        <scope classrefs="TkWindow" ilk="class" line="19" lineend="70" name="TreeCtrl">
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="27" lineend="33" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" doc="dummy :: pkgIndex.tcl of TreeCtrl-1.0 doesn&apos;t support&#xA;auto_load for &apos;loupe&apos; command (probably it is bug, I think)." ilk="function" line="47" lineend="55" name="loupe" signature="self.loupe(img, x, y, w, h, zoom)" />
          <scope attributes="__classmethod__" ilk="function" line="57" lineend="59" name="text_layout" signature="self.text_layout(font, text, keys={})" />
          <scope attributes="__classmethod__" ilk="function" line="61" lineend="63" name="image_tint" signature="self.image_tint(img, color, alpha)" />
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="65" lineend="66" name="NotifyEvent" />
          <scope ilk="namespace" line="68" lineend="69" name="ConfigMethod" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="76" lineend="153" name="Tk::TreeCtrl::" />
      <scope ilk="namespace" line="157" lineend="532" name="Tk::TreeCtrl::">
        <scope ilk="function" line="160" lineend="202" name="treectrl_tagid" signature="treectrl_tagid(key, obj)" />
        <scope ilk="function" line="204" lineend="216" name="tagid" signature="tagid(mixed_id)" />
        <scope ilk="function" line="218" lineend="234" name="__item_cget_cmd" signature="__item_cget_cmd(mixed_id)" />
        <scope ilk="function" line="237" lineend="253" name="__item_config_cmd" signature="__item_config_cmd(mixed_id)" />
        <scope ilk="function" line="256" lineend="271" name="__item_pathname" signature="__item_pathname(id)" />
        <scope ilk="function" line="274" lineend="282" name="__item_configinfo_struct" signature="__item_configinfo_struct(id)" />
        <scope ilk="function" line="286" lineend="293" name="__item_font_optkeys" signature="__item_font_optkeys(id)" />
        <scope ilk="function" line="296" lineend="302" name="__item_numstrval_optkeys" signature="__item_numstrval_optkeys(id)" />
        <scope ilk="function" line="305" lineend="339" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="342" lineend="361" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="364" lineend="383" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
        <scope ilk="function" line="386" lineend="396" name="__item_keyonly_optkeys" signature="__item_keyonly_optkeys(id)" />
        <scope ilk="function" line="399" lineend="401" name="column_cget" signature="column_cget(tagOrId, option)" />
        <scope ilk="function" line="402" lineend="404" name="column_configure" signature="column_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="405" lineend="407" name="column_configinfo" signature="column_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="408" lineend="410" name="current_column_configinfo" signature="current_column_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="412" lineend="414" name="column_dragcget" signature="column_dragcget(option)" />
        <scope ilk="function" line="415" lineend="417" name="column_dragconfigure" signature="column_dragconfigure(slot, value=None)" />
        <scope ilk="function" line="418" lineend="420" name="column_dragconfiginfo" signature="column_dragconfiginfo(slot=nil)" />
        <scope ilk="function" line="421" lineend="423" name="current_column_dragconfiginfo" signature="current_column_dragconfiginfo(slot=nil)" />
        <scope ilk="function" line="425" lineend="427" name="debug_cget" signature="debug_cget(option)" />
        <scope ilk="function" line="428" lineend="430" name="debug_configure" signature="debug_configure(slot, value=None)" />
        <scope ilk="function" line="431" lineend="433" name="debug_configinfo" signature="debug_configinfo(slot=nil)" />
        <scope ilk="function" line="434" lineend="436" name="current_debug_configinfo" signature="current_debug_configinfo(slot=nil)" />
        <scope ilk="function" line="438" lineend="440" name="dragimage_cget" signature="dragimage_cget(option)" />
        <scope ilk="function" line="441" lineend="443" name="dragimage_configure" signature="dragimage_configure(slot, value=None)" />
        <scope ilk="function" line="444" lineend="446" name="dragimage_configinfo" signature="dragimage_configinfo(slot=nil)" />
        <scope ilk="function" line="447" lineend="449" name="current_dragimage_configinfo" signature="current_dragimage_configinfo(slot=nil)" />
        <scope ilk="function" line="451" lineend="453" name="element_cget" signature="element_cget(tagOrId, option)" />
        <scope ilk="function" line="454" lineend="456" name="element_configure" signature="element_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="457" lineend="459" name="element_configinfo" signature="element_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="460" lineend="462" name="current_element_configinfo" signature="current_element_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="464" lineend="466" name="item_cget" signature="item_cget(tagOrId, option)" />
        <scope ilk="function" line="467" lineend="469" name="item_configure" signature="item_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="470" lineend="472" name="item_configinfo" signature="item_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="473" lineend="475" name="current_item_configinfo" signature="current_item_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="477" lineend="479" name="item_element_cget" signature="item_element_cget(item, column, elem, option)" />
        <scope ilk="function" line="480" lineend="482" name="item_element_configure" signature="item_element_configure(item, column, elem, slot, value=None)" />
        <scope ilk="function" line="483" lineend="485" name="item_element_configinfo" signature="item_element_configinfo(item, column, elem, slot=nil)" />
        <scope ilk="function" line="486" lineend="488" name="current_item_element_configinfo" signature="current_item_element_configinfo(item, column, elem, slot=nil)" />
        <scope ilk="function" line="490" lineend="492" name="marquee_cget" signature="marquee_cget(option)" />
        <scope ilk="function" line="493" lineend="495" name="marquee_configure" signature="marquee_configure(slot, value=None)" />
        <scope ilk="function" line="496" lineend="498" name="marquee_configinfo" signature="marquee_configinfo(slot=nil)" />
        <scope ilk="function" line="499" lineend="501" name="current_marquee_configinfo" signature="current_marquee_configinfo(slot=nil)" />
        <scope ilk="function" line="503" lineend="506" name="notify_cget" signature="notify_cget(win, pattern, option)" />
        <scope ilk="function" line="507" lineend="510" name="notify_configure" signature="notify_configure(win, pattern, slot, value=None)" />
        <scope ilk="function" line="511" lineend="514" name="notify_configinfo" signature="notify_configinfo(win, pattern, slot=nil)" />
        <scope ilk="function" line="517" lineend="519" name="style_cget" signature="style_cget(tagOrId, option)" />
        <scope ilk="function" line="520" lineend="522" name="style_configure" signature="style_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="523" lineend="525" name="style_configinfo" signature="style_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="526" lineend="528" name="current_style_configinfo" signature="current_style_configinfo(tagOrId, slot=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="536" lineend="1605" name="Tk::TreeCtrl">
        <scope ilk="function" line="546" lineend="551" name="__destroy_hook__" signature="__destroy_hook__" />
        <scope ilk="function" line="555" lineend="559" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="562" lineend="568" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="571" lineend="573" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="578" lineend="580" name="install_bind" signature="install_bind(cmd, *args)" />
        <scope ilk="function" line="584" lineend="591" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="596" lineend="599" name="activate" signature="activate(desc)" />
        <scope ilk="function" line="601" lineend="603" name="canvasx" signature="canvasx(x)" />
        <scope ilk="function" line="605" lineend="607" name="canvasy" signature="canvasy(y)" />
        <scope ilk="function" line="609" lineend="612" name="collapse" signature="collapse(*dsc)" />
        <scope ilk="function" line="614" lineend="618" name="collapse_recurse" signature="collapse_recurse(*dsc)" />
        <scope ilk="function" line="620" lineend="622" name="column_bbox" signature="column_bbox(idx)" />
        <scope ilk="function" line="624" lineend="626" name="column_compare" signature="column_compare(column1, op, column2)" />
        <scope ilk="function" line="628" lineend="630" name="column_count" signature="column_count" />
        <scope ilk="function" line="632" lineend="638" name="column_create" signature="column_create(keys=nil)" />
        <scope ilk="function" line="640" lineend="646" name="column_delete" signature="column_delete(idx)" />
        <scope ilk="function" line="648" lineend="650" name="column_index" signature="column_index(idx)" />
        <scope ilk="function" line="652" lineend="654" name="column_id" signature="column_id(idx)" />
        <scope ilk="function" line="656" lineend="662" name="column_list" signature="column_list(visible=false)" />
        <scope ilk="function" line="663" lineend="665" name="column_visible_list" signature="column_visible_list" />
        <scope ilk="function" line="667" lineend="670" name="column_move" signature="column_move(idx, before)" />
        <scope ilk="function" line="672" lineend="674" name="column_needed_width" signature="column_needed_width(idx)" />
        <scope ilk="function" line="677" lineend="683" name="column_order" signature="column_order(column, visible=false)" />
        <scope ilk="function" line="684" lineend="686" name="column_visible_order" signature="column_visible_order(column)" />
        <scope ilk="function" line="688" lineend="690" name="column_width" signature="column_width(idx)" />
        <scope ilk="function" line="692" lineend="694" name="compare" signature="compare(item1, op, item2)" />
        <scope ilk="function" line="696" lineend="698" name="contentbox" signature="contentbox()" />
        <scope ilk="function" line="700" lineend="702" name="depth" signature="depth(item=None)" />
        <scope ilk="function" line="704" lineend="707" name="dragimage_add" signature="dragimage_add(item, *args)" />
        <scope ilk="function" line="709" lineend="712" name="dragimage_clear" signature="dragimage_clear()" />
        <scope ilk="function" line="714" lineend="721" name="dragimage_offset" signature="dragimage_offset(*args)" />
        <scope ilk="function" line="723" lineend="730" name="dragimage_visible" signature="dragimage_visible(*args)" />
        <scope ilk="function" line="731" lineend="733" name="dragimage_visible?" signature="dragimage_visible?" />
        <scope ilk="function" line="735" lineend="738" name="debug_dinfo" signature="debug_dinfo" />
        <scope ilk="function" line="740" lineend="742" name="debug_scroll" signature="debug_scroll" />
        <scope ilk="function" line="744" lineend="750" name="element_create" signature="element_create(elem, type, keys=nil)" />
        <scope ilk="function" line="752" lineend="760" name="element_delete" signature="element_delete(*elems)" />
        <scope ilk="function" line="762" lineend="766" name="element_names" signature="element_names()" />
        <scope ilk="function" line="768" lineend="777" name="_conv_element_perstate_val" signature="_conv_element_perstate_val(opt, val)" />
        <scope ilk="function" line="780" lineend="782" name="element_perstate" signature="element_perstate(elem, opt, st_list)" />
        <scope ilk="function" line="784" lineend="786" name="element_type" signature="element_type(elem)" />
        <scope ilk="function" line="788" lineend="790" name="element_class" signature="element_class(elem)" />
        <scope ilk="function" line="792" lineend="795" name="expand" signature="expand(*dsc)" />
        <scope ilk="function" line="797" lineend="800" name="expand_recurse" signature="expand_recurse(*dsc)" />
        <scope ilk="function" line="802" lineend="834" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="836" lineend="838" name="index" signature="index(idx)" />
        <scope ilk="function" line="840" lineend="844" name="item_ancestors" signature="item_ancestors(item)" />
        <scope ilk="function" line="846" lineend="848" name="item_bbox" signature="item_bbox(item, *args)" />
        <scope ilk="function" line="850" lineend="854" name="item_children" signature="item_children(item)" />
        <scope ilk="function" line="856" lineend="859" name="item_collapse" signature="item_collapse(item)" />
        <scope ilk="function" line="861" lineend="865" name="item_collapse_recurse" signature="item_collapse_recurse(item)" />
        <scope ilk="function" line="867" lineend="869" name="item_compare" signature="item_compare(item1, op, item2)" />
        <scope ilk="function" line="871" lineend="876" name="item_complex" signature="item_complex(item, *args)" />
        <scope ilk="function" line="878" lineend="880" name="item_count" signature="item_count" />
        <scope ilk="function" line="882" lineend="884" name="item_create" signature="item_create(keys={})" />
        <scope ilk="function" line="886" lineend="889" name="_erase_children" signature="_erase_children(item)" />
        <scope ilk="function" line="892" lineend="906" name="item_delete" signature="item_delete(first, last=None)" />
        <scope ilk="function" line="908" lineend="910" name="item_dump" signature="item_dump(item)" />
        <scope ilk="function" line="912" lineend="914" name="item_dump_hash" signature="item_dump_hash(item)" />
        <scope ilk="function" line="916" lineend="918" name="item_element_actual" signature="item_element_actual(item, column, elem, key)" />
        <scope ilk="function" line="920" lineend="922" name="item_element_perstate" signature="item_element_perstate(elem, opt, st_list)" />
        <scope ilk="function" line="924" lineend="927" name="item_expand" signature="item_expand(item)" />
        <scope ilk="function" line="929" lineend="932" name="item_expand_recurse" signature="item_expand_recurse(item)" />
        <scope ilk="function" line="934" lineend="945" name="item_firstchild" signature="item_firstchild(parent, child=nil)" />
        <scope ilk="function" line="948" lineend="958" name="item_hasbutton" signature="item_hasbutton(item, st=None)" />
        <scope ilk="function" line="961" lineend="963" name="item_hasbutton?" signature="item_hasbutton?(item)" />
        <scope ilk="function" line="966" lineend="968" name="item_id" signature="item_id(item)" />
        <scope ilk="function" line="970" lineend="984" name="item_image" signature="item_image(item, column=nil, *args)" />
        <scope ilk="function" line="985" lineend="987" name="get_item_image" signature="get_item_image(item, column=nil)" />
        <scope ilk="function" line="988" lineend="990" name="set_item_image" signature="set_item_image(item, col, img, *args)" />
        <scope ilk="function" line="992" lineend="994" name="item_index" signature="item_index(item)" />
        <scope ilk="function" line="996" lineend="998" name="item_isancestor" signature="item_isancestor(item, des)" />
        <scope ilk="function" line="1003" lineend="1005" name="item_isopen" signature="item_isopen(item)" />
        <scope ilk="function" line="10121501212" lineend="1023" name="item_lastchild" signature="item_lastchild(parent, child=nil)" />
        <scope ilk="function" line="1026" lineend="1034" name="item_nextsibling" signature="item_nextsibling(sibling, nxt=nil)" />
        <scope ilk="function" line="1037" lineend="1040" name="item_numchildren" signature="item_numchildren(item)" />
        <scope ilk="function" line="1044" lineend="1052" name="item_order" signature="item_order(item, visible=false)" />
        <scope ilk="function" line="1053" lineend="1055" name="item_visible_order" signature="item_visible_order(item)" />
        <scope ilk="function" line="1057" lineend="1060" name="item_parent" signature="item_parent(item)" />
        <scope ilk="function" line="1062" lineend="1070" name="item_prevsibling" signature="item_prevsibling(sibling, prev=nil)" />
        <scope ilk="function" line="1073" lineend="1075" name="item_range" signature="item_range(first, last)" />
        <scope ilk="function" line="1077" lineend="1080" name="item_remove" signature="item_remove(item)" />
        <scope ilk="function" line="1082" lineend="1084" name="item_rnc" signature="item_rnc(item)" />
        <scope ilk="function" line="1086" lineend="1139" name="_item_sort_core" signature="_item_sort_core(real_sort, item, *opts)" />
        <scope ilk="function" line="1142" lineend="1144" name="item_sort" signature="item_sort(item, *opts)" />
        <scope ilk="function" line="1145" lineend="1147" name="item_sort_not_really" signature="item_sort_not_really(item, *opts)" />
        <scope ilk="function" line="1149" lineend="1160" name="item_span" signature="item_span(item, column=nil, *args)" />
        <scope ilk="function" line="1161" lineend="1163" name="get_item_span" signature="get_item_span(item, column=nil)" />
        <scope ilk="function" line="1164" lineend="1166" name="set_item_span" signature="set_item_span(item, col, num, *args)" />
        <scope ilk="function" line="1168" lineend="1170" name="item_state_forcolumn" signature="item_state_forcolumn(item, column, *args)" />
        <scope ilk="function" line="1173" lineend="1179" name="item_state_get" signature="item_state_get(item, *args)" />
        <scope ilk="function" line="1181" lineend="1183" name="item_state_set" signature="item_state_set(item, *args)" />
        <scope ilk="function" line="1185" lineend="1189" name="item_style_elements" signature="item_style_elements(item, column)" />
        <scope ilk="function" line="1191" lineend="1194" name="item_style_map" signature="item_style_map(item, column, style, map)" />
        <scope ilk="function" line="1196" lineend="1218" name="item_style_set" signature="item_style_set(item, column=nil, *args)" />
        <scope ilk="function" line="1220" lineend="1232" name="item_text" signature="item_text(item, column, txt=nil, *args)" />
        <scope ilk="function" line="1234" lineend="1237" name="item_toggle" signature="item_toggle(item)" />
        <scope ilk="function" line="1239" lineend="1242" name="item_toggle_recurse" signature="item_toggle_recurse(item)" />
        <scope ilk="function" line="1244" lineend="1251" name="item_visible" signature="item_visible(item, st=None)" />
        <scope ilk="function" line="1252" lineend="1254" name="item_visible?" signature="item_visible?(item)" />
        <scope ilk="function" line="1256" lineend="1263" name="marquee_anchor" signature="marquee_anchor(*args)" />
        <scope ilk="function" line="1265" lineend="1272" name="marquee_coords" signature="marquee_coords(*args)" />
        <scope ilk="function" line="1274" lineend="1281" name="marquee_corner" signature="marquee_corner(*args)" />
        <scope ilk="function" line="1283" lineend="1287" name="marquee_identify" signature="marquee_identify()" />
        <scope ilk="function" line="1289" lineend="1296" name="marquee_visible" signature="marquee_visible(st=None)" />
        <scope ilk="function" line="1297" lineend="1299" name="marquee_visible?" signature="marquee_visible?()" />
        <scope doc="def notify_bind(obj, event, cmd=Proc.new, *args)&#xA;_bind([@path, &apos;notify&apos;, &apos;bind&apos;, obj], event, cmd, *args)&#xA;self end" ilk="function" line="1305" lineend="1314" name="notify_bind" signature="notify_bind(obj, event, *args)" />
        <scope doc="def notify_bind_append(obj, event, cmd=Proc.new, *args)&#xA;_bind_append([@path, &apos;notify&apos;, &apos;bind&apos;, obj], event, cmd,&#xA;*args) self end" ilk="function" line="1320" lineend="1329" name="notify_bind_append" signature="notify_bind_append(obj, event, *args)" />
        <scope ilk="function" line="1331" lineend="1334" name="notify_bind_remove" signature="notify_bind_remove(obj, event)" />
        <scope ilk="function" line="1336" lineend="1338" name="notify_bindinfo" signature="notify_bindinfo(obj, event=nil)" />
        <scope ilk="function" line="1340" lineend="1342" name="notify_detailnames" signature="notify_detailnames(event)" />
        <scope ilk="function" line="1344" lineend="1346" name="notify_eventnames" signature="notify_eventnames()" />
        <scope ilk="function" line="1348" lineend="1352" name="notify_generate" signature="notify_generate(pattern, char_map=None, percents_cmd=None)" />
        <scope ilk="function" line="1354" lineend="1362" name="notify_install" signature="notify_install(pattern, percents_cmd=nil, &amp;b)" />
        <scope ilk="function" line="1364" lineend="1371" name="notify_install_detail" signature="notify_install_detail(event, detail, percents_cmd=nil, &amp;b)" />
        <scope ilk="function" line="1373" lineend="1380" name="notify_install_event" signature="notify_install_event(event, percents_cmd=nil, &amp;b)" />
        <scope ilk="function" line="1382" lineend="1406" name="notify_linkage" signature="notify_linkage(pattern, detail=None)" />
        <scope ilk="function" line="1408" lineend="1415" name="notify_unbind" signature="notify_unbind(pattern=nil)" />
        <scope ilk="function" line="1417" lineend="1421" name="notify_uninstall" signature="notify_uninstall(pattern)" />
        <scope ilk="function" line="1423" lineend="1426" name="notify_uninstall_detail" signature="notify_uninstall_detail(event, detail)" />
        <scope ilk="function" line="1428" lineend="1431" name="notify_uninstall_event" signature="notify_uninstall_event(event)" />
        <scope ilk="function" line="1433" lineend="1435" name="numcolumns" signature="numcolumns()" />
        <scope ilk="function" line="1439" lineend="1441" name="numitems" signature="numitems()" />
        <scope ilk="function" line="1445" lineend="1449" name="orphans" signature="orphans()" />
        <scope ilk="function" line="1451" lineend="1455" name="range" signature="range(first, last)" />
        <scope ilk="function" line="1457" lineend="1460" name="state_define" signature="state_define(name)" />
        <scope ilk="function" line="1462" lineend="1464" name="state_linkage" signature="state_linkage(name)" />
        <scope ilk="function" line="1466" lineend="1468" name="state_names" signature="state_names()" />
        <scope ilk="function" line="1470" lineend="1473" name="state_undefine" signature="state_undefine(*names)" />
        <scope ilk="function" line="1475" lineend="1478" name="see" signature="see(item)" />
        <scope ilk="function" line="1480" lineend="1483" name="selection_add" signature="selection_add(first, last=None)" />
        <scope ilk="function" line="1485" lineend="1488" name="selection_anchor" signature="selection_anchor(item=None)" />
        <scope ilk="function" line="1490" lineend="1493" name="selection_clear" signature="selection_clear(*args)" />
        <scope ilk="function" line="1495" lineend="1497" name="selection_count" signature="selection_count()" />
        <scope ilk="function" line="1499" lineend="1503" name="selection_get" signature="selection_get()" />
        <scope ilk="function" line="1505" lineend="1507" name="selection_includes" signature="selection_includes(item)" />
        <scope ilk="function" line="1509" lineend="1512" name="selection_modify" signature="selection_modify(sel, desel)" />
        <scope ilk="function" line="1514" lineend="1520" name="style_create" signature="style_create(style, keys=None)" />
        <scope ilk="function" line="1522" lineend="1530" name="style_delete" signature="style_delete(*args)" />
        <scope ilk="function" line="1532" lineend="1541" name="style_elements" signature="style_elements(style, *elems)" />
        <scope ilk="function" line="1543" lineend="1557" name="_conv_style_layout_val" signature="_conv_style_layout_val(sty, val)" />
        <scope ilk="function" line="1560" lineend="1578" name="style_layout" signature="style_layout(style, elem, keys=None)" />
        <scope ilk="function" line="1579" lineend="1581" name="get_style_layout" signature="get_style_layout(style, elem, opt=None)" />
        <scope ilk="function" line="1582" lineend="1588" name="set_style_layout" signature="set_style_layout(style, elem, slot, value=None)" />
        <scope ilk="function" line="1590" lineend="1594" name="style_names" signature="style_names()" />
        <scope ilk="function" line="1596" lineend="1599" name="toggle" signature="toggle(*items)" />
        <scope ilk="function" line="1601" lineend="1604" name="toggle_recurse" signature="toggle_recurse()" />
        <import symbol="Tk::TreeCtrl::" />
        <import symbol="Scrollable" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1609" lineend="1689" name="Tk::TreeCtrl::">
        <scope attributes="__classmethod__" ilk="function" line="1615" lineend="1620" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__ctor__" ilk="function" line="1622" lineend="1641" name="initialize" signature="initialize(parent, keys={})" />
        <scope ilk="function" line="1643" lineend="1645" name="id" signature="id" />
        <scope ilk="function" line="1647" lineend="1649" name="to_s" signature="to_s" />
        <scope ilk="function" line="1651" lineend="1653" name="cget" signature="cget(opt)" />
        <scope ilk="function" line="1655" lineend="1657" name="configure" signature="configure(*args)" />
        <scope ilk="function" line="1659" lineend="1661" name="configinfo" signature="configinfo(*args)" />
        <scope ilk="function" line="1663" lineend="1665" name="current_configinfo" signature="current_configinfo(*args)" />
        <scope ilk="function" line="1667" lineend="1670" name="delete" signature="delete" />
        <scope ilk="function" line="1672" lineend="1674" name="index" signature="index" />
        <scope ilk="function" line="1676" lineend="1679" name="move" signature="move(before)" />
        <scope ilk="function" line="1681" lineend="1683" name="needed_width" signature="needed_width" />
        <scope ilk="function" line="1686" lineend="1688" name="current_width" signature="current_width" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1693" lineend="1764" name="Tk::TreeCtrl::">
        <scope attributes="__classmethod__" ilk="function" line="1702" lineend="1704" name="type2class" signature="self.type2class(type)" />
        <scope attributes="__classmethod__" ilk="function" line="1706" lineend="1711" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__ctor__" ilk="function" line="1713" lineend="1726" name="initialize" signature="initialize(parent, type, keys=nil)" />
        <scope ilk="function" line="1728" lineend="1730" name="id" signature="id" />
        <scope ilk="function" line="1732" lineend="1734" name="to_s" signature="to_s" />
        <scope ilk="function" line="1736" lineend="1738" name="cget" signature="cget(opt)" />
        <scope ilk="function" line="1740" lineend="1742" name="configure" signature="configure(*args)" />
        <scope ilk="function" line="1744" lineend="1746" name="configinfo" signature="configinfo(*args)" />
        <scope ilk="function" line="1748" lineend="1750" name="current_configinfo" signature="current_configinfo(*args)" />
        <scope ilk="function" line="1752" lineend="1755" name="delete" signature="delete" />
        <scope ilk="function" line="1757" lineend="1759" name="element_type" signature="element_type" />
        <scope ilk="function" line="1761" lineend="1763" name="element_class" signature="element_class" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1766" lineend="1772" name="Tk::TreeCtrl::">
        <scope attributes="__ctor__" ilk="function" line="1769" lineend="1771" name="initialize" signature="initialize(parent, keys=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1774" lineend="1780" name="Tk::TreeCtrl::">
        <scope attributes="__ctor__" ilk="function" line="1777" lineend="1779" name="initialize" signature="initialize(parent, keys=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1782" lineend="1788" name="Tk::TreeCtrl::">
        <scope attributes="__ctor__" ilk="function" line="1785" lineend="1787" name="initialize" signature="initialize(parent, keys=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1790" lineend="1796" name="Tk::TreeCtrl::">
        <scope attributes="__ctor__" ilk="function" line="1793" lineend="1795" name="initialize" signature="initialize(parent, keys=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1800" lineend="2085" name="Tk::TreeCtrl::">
        <scope attributes="__classmethod__" ilk="function" line="1805" lineend="1810" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__ctor__" ilk="function" line="1812" lineend="1821" name="initialize" signature="initialize(parent, keys={})" />
        <scope ilk="function" line="1823" lineend="1825" name="id" signature="id" />
        <scope ilk="function" line="1827" lineend="1829" name="to_s" signature="to_s" />
        <scope ilk="function" line="1831" lineend="1833" name="ancestors" signature="ancestors" />
        <scope ilk="function" line="1835" lineend="1837" name="bbox" signature="bbox(*args)" />
        <scope ilk="function" line="1839" lineend="1841" name="children" signature="children" />
        <scope ilk="function" line="1843" lineend="1846" name="collapse" signature="collapse" />
        <scope ilk="function" line="1848" lineend="1851" name="collapse_recurse" signature="collapse_recurse" />
        <scope ilk="function" line="1853" lineend="1856" name="complex" signature="complex(*args)" />
        <scope ilk="function" line="1858" lineend="1860" name="cget" signature="cget(opt)" />
        <scope ilk="function" line="1862" lineend="1864" name="configure" signature="configure(*args)" />
        <scope ilk="function" line="1866" lineend="1868" name="configinfo" signature="configinfo(*args)" />
        <scope ilk="function" line="1870" lineend="1872" name="current_configinfo" signature="current_configinfo(*args)" />
        <scope ilk="function" line="1874" lineend="1877" name="delete" signature="delete" />
        <scope ilk="function" line="1879" lineend="1881" name="element_dump" signature="element_dump" />
        <scope ilk="function" line="1883" lineend="1885" name="element_dump_hash" signature="element_dump_hash" />
        <scope ilk="function" line="1887" lineend="1889" name="element_actual" signature="element_actual(column, elem, key)" />
        <scope ilk="function" line="1891" lineend="1893" name="element_cget" signature="element_cget(opt)" />
        <scope ilk="function" line="1895" lineend="1897" name="element_configure" signature="element_configure(*args)" />
        <scope ilk="function" line="1899" lineend="1901" name="element_configinfo" signature="element_configinfo(*args)" />
        <scope ilk="function" line="1903" lineend="1905" name="current_element_configinfo" signature="current_element_configinfo(*args)" />
        <scope ilk="function" line="1907" lineend="1910" name="expand" signature="expand" />
        <scope ilk="function" line="1912" lineend="1915" name="expand_recurse" signature="expand_recurse" />
        <scope ilk="function" line="1917" lineend="1924" name="firstchild" signature="firstchild(child=nil)" />
        <scope ilk="function" line="1927" lineend="1934" name="hasbutton" signature="hasbutton(st=None)" />
        <scope ilk="function" line="1937" lineend="1939" name="hasbutton?" signature="hasbutton?" />
        <scope ilk="function" line="1942" lineend="1944" name="index" signature="index" />
        <scope ilk="function" line="1946" lineend="1948" name="isancestor" signature="isancestor(des)" />
        <scope ilk="function" line="1954" lineend="1956" name="isopen" signature="isopen" />
        <scope ilk="function" line="1964" lineend="1971" name="lastchild" signature="lastchild(child=nil)" />
        <scope ilk="function" line="1974" lineend="1981" name="nextsibling" signature="nextsibling(nxt=nil)" />
        <scope ilk="function" line="1984" lineend="1986" name="numchildren" signature="numchildren" />
        <scope ilk="function" line="1990" lineend="1992" name="parent_index" signature="parent_index" />
        <scope ilk="function" line="1994" lineend="2001" name="prevsibling" signature="prevsibling(nxt=nil)" />
        <scope ilk="function" line="2004" lineend="2006" name="remove" signature="remove" />
        <scope ilk="function" line="2008" lineend="2010" name="rnc" signature="rnc" />
        <scope ilk="function" line="20121501212" lineend="2014" name="sort" signature="sort(*opts)" />
        <scope ilk="function" line="2015" lineend="2018" name="sort_not_really" signature="sort_not_really(*opts)" />
        <scope ilk="function" line="2020" lineend="2023" name="state_forcolumn" signature="state_forcolumn(column, *args)" />
        <scope ilk="function" line="2026" lineend="2028" name="state_get" signature="state_get(*args)" />
        <scope ilk="function" line="2030" lineend="2033" name="state_set" signature="state_set(*args)" />
        <scope ilk="function" line="2035" lineend="2037" name="style_elements" signature="style_elements(column)" />
        <scope ilk="function" line="2039" lineend="2042" name="style_map" signature="style_map(column, style, map)" />
        <scope ilk="function" line="2044" lineend="2051" name="style_set" signature="style_set(column=nil, *args)" />
        <scope ilk="function" line="2053" lineend="2065" name="item_text" signature="item_text(column, txt=nil, *args)" />
        <scope ilk="function" line="2067" lineend="2070" name="toggle" signature="toggle" />
        <scope ilk="function" line="2072" lineend="2075" name="toggle_recurse" signature="toggle_recurse" />
        <scope ilk="function" line="2077" lineend="2084" name="visible" signature="visible(st=None)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="2089" lineend="2162" name="Tk::TreeCtrl::">
        <scope attributes="__classmethod__" ilk="function" line="2095" lineend="2100" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__ctor__" ilk="function" line="2102" lineend="2114" name="initialize" signature="initialize(parent, keys=nil)" />
        <scope ilk="function" line="2116" lineend="2118" name="id" signature="id" />
        <scope ilk="function" line="2120" lineend="2122" name="to_s" signature="to_s" />
        <scope ilk="function" line="2124" lineend="2126" name="cget" signature="cget(opt)" />
        <scope ilk="function" line="2128" lineend="2130" name="configure" signature="configure(*args)" />
        <scope ilk="function" line="2132" lineend="2134" name="configinfo" signature="configinfo(*args)" />
        <scope ilk="function" line="2136" lineend="2138" name="current_configinfo" signature="current_configinfo(*args)" />
        <scope ilk="function" line="2140" lineend="2143" name="delete" signature="delete" />
        <scope ilk="function" line="2145" lineend="2152" name="elements" signature="elements(*elems)" />
        <scope ilk="function" line="2154" lineend="2161" name="layout" signature="layout(elem, keys=None)" />
      </scope>
      <scope ilk="namespace" line="2164" lineend="2167" name="Tk::TreeCtrl::" />
      <scope classrefs="Object" ilk="class" line="2169" lineend="2311" name="Tk::TreeCtrl::">
        <scope ilk="function" line="2170" lineend="2172" name="percentsCmd" signature="percentsCmd(*args)" />
        <scope ilk="function" line="2173" lineend="2175" name="cursorCheck" signature="cursorCheck(w, x, y)" />
        <scope ilk="function" line="2176" lineend="2178" name="cursorCheckAux" signature="cursorCheckAux(w)" />
        <scope ilk="function" line="2179" lineend="2181" name="cursorCancel" signature="cursorCancel(w)" />
        <scope ilk="function" line="2182" lineend="2184" name="buttonPress1" signature="buttonPress1(w, x, y)" />
        <scope ilk="function" line="2185" lineend="2187" name="doubleButton1" signature="doubleButton1(w, x, y)" />
        <scope ilk="function" line="2188" lineend="2190" name="motion1" signature="motion1(w, x, y)" />
        <scope ilk="function" line="2191" lineend="2193" name="leave1" signature="leave1(w, x, y)" />
        <scope ilk="function" line="2194" lineend="2196" name="release1" signature="release1(w, x, y)" />
        <scope ilk="function" line="2197" lineend="2199" name="beginSelect" signature="beginSelect(w, el)" />
        <scope ilk="function" line="2200" lineend="2202" name="motion" signature="motion(w, le)" />
        <scope ilk="function" line="2203" lineend="2205" name="beginExtend" signature="beginExtend(w, el)" />
        <scope ilk="function" line="2206" lineend="2208" name="beginToggle" signature="beginToggle(w, el)" />
        <scope ilk="function" line="2209" lineend="2211" name="cancelRepeat" signature="cancelRepeat" />
        <scope ilk="function" line="2212" lineend="2214" name="autoScanCheck" signature="autoScanCheck(w, x, y)" />
        <scope ilk="function" line="2215" lineend="2217" name="autoScanCheckAux" signature="autoScanCheckAux(w)" />
        <scope ilk="function" line="2218" lineend="2220" name="autoScanCancel" signature="autoScanCancel(w)" />
        <scope ilk="function" line="2221" lineend="2223" name="up_down" signature="up_down(w, n)" />
        <scope ilk="function" line="2224" lineend="2226" name="left_right" signature="left_right(w, n)" />
        <scope ilk="function" line="2227" lineend="2229" name="setActiveItem" signature="setActiveItem(w, idx)" />
        <scope ilk="function" line="2230" lineend="2232" name="extendUpDown" signature="extendUpDown(w, amount)" />
        <scope ilk="function" line="2233" lineend="2235" name="dataExtend" signature="dataExtend(w, el)" />
        <scope ilk="function" line="2236" lineend="2238" name="cancel" signature="cancel(w)" />
        <scope ilk="function" line="2239" lineend="2241" name="selectAll" signature="selectAll(w)" />
        <scope ilk="function" line="2242" lineend="2244" name="marqueeBegin" signature="marqueeBegin(w, x, y)" />
        <scope ilk="function" line="2245" lineend="2247" name="marqueeUpdate" signature="marqueeUpdate(w, x, y)" />
        <scope ilk="function" line="2248" lineend="2250" name="marqueeEnd" signature="marqueeEnd(w, x, y)" />
        <scope ilk="function" line="2251" lineend="2253" name="scanMark" signature="scanMark(w, x, y)" />
        <scope ilk="function" line="2254" lineend="2256" name="scanDrag" signature="scanDrag(w, x, y)" />
        <scope doc="filelist-bindings" ilk="function" line="2259" lineend="2261" name="fileList_button1" signature="fileList_button1(w, x, y)" />
        <scope ilk="function" line="2262" lineend="2264" name="fileList_motion1" signature="fileList_motion1(w, x, y)" />
        <scope ilk="function" line="2265" lineend="2267" name="fileList_motion" signature="fileList_motion(w, x, y)" />
        <scope ilk="function" line="2268" lineend="2270" name="fileList_leave1" signature="fileList_leave1(w, x, y)" />
        <scope ilk="function" line="2271" lineend="2273" name="fileList_release1" signature="fileList_release1(w, x, y)" />
        <scope ilk="function" line="2274" lineend="2276" name="fileList_edit" signature="fileList_edit(w, i, s, e)" />
        <scope ilk="function" line="2277" lineend="2279" name="fileList_editCancel" signature="fileList_editCancel(w)" />
        <scope ilk="function" line="2280" lineend="2282" name="fileList_autoScanCheck" signature="fileList_autoScanCheck(w, x, y)" />
        <scope ilk="function" line="2283" lineend="2285" name="fileList_autoScanCheckAux" signature="fileList_autoScanCheckAux(w)" />
        <scope ilk="function" line="2287" lineend="2289" name="entryOpen" signature="entryOpen(w, item, col, elem)" />
        <scope ilk="function" line="2290" lineend="2292" name="entryExpanderOpen" signature="entryExpanderOpen(w, item, col, elem)" />
        <scope ilk="function" line="2293" lineend="2295" name="entryClose" signature="entryClose(w, accept)" />
        <scope ilk="function" line="2296" lineend="2298" name="entryExpanderKeypress" signature="entryExpanderKeypress(w)" />
        <scope ilk="function" line="2299" lineend="2301" name="textOpen" signature="textOpen(w, item, col, elem, width=0, height=0)" />
        <scope ilk="function" line="2302" lineend="2304" name="textExpanderOpen" signature="textExpanderOpen(w, item, col, elem, width)" />
        <scope ilk="function" line="2305" lineend="2307" name="textClose" signature="textClose(w, accept)" />
        <scope ilk="function" line="2308" lineend="2310" name="textExpanderKeypress" signature="textExpanderKeypress(w)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/treectrl/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tktrans">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tktrans/setup.rb" symbol="*" />
      <import line="14" module="tkextlib/tktrans/tktrans" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tktrans/tktrans">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tktrans/setup.rb" symbol="*" />
      <scope doc="call setup script" ilk="namespace" line="15" lineend="30" name="Tk">
        <scope ilk="namespace" line="16" lineend="29" name="TkTrans">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="20" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="28" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="32" lineend="40" name="TkWindow">
        <scope ilk="function" line="33" lineend="36" name="tktrans_set_image" signature="tktrans_set_image(img)" />
        <scope ilk="function" line="37" lineend="39" name="tktrans_get_image" signature="tktrans_get_image()" />
      </scope>
      <scope classrefs="Object" ilk="class" line="42" lineend="52" name="TkRoot">
        <scope ilk="function" line="45" lineend="48" name="tktrans_set_image" signature="tktrans_set_image(img)" />
        <scope ilk="function" line="49" lineend="51" name="tktrans_get_image" signature="tktrans_get_image()" />
      </scope>
      <scope classrefs="Object" ilk="class" line="54" lineend="64" name="TkToplevel">
        <scope ilk="function" line="57" lineend="60" name="tktrans_set_image" signature="tktrans_set_image(img)" />
        <scope ilk="function" line="61" lineend="63" name="tktrans_get_image" signature="tktrans_get_image()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tktrans/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tktable">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tktable/setup.rb" symbol="*" />
      <import line="14" module="tkextlib/tktable/tktable" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tktable/tktable">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/validation" symbol="*" />
      <import line="10" module="tkextlib/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/tktable/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;Tktable&apos;, &apos;2.8&apos;)" ilk="namespace" line="18" lineend="39" name="Tk">
        <scope classrefs="TkWindow" ilk="class" line="19" lineend="38" name="TkTable">
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="23" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="31" name="package_version" signature="self.package_version" />
          <scope classrefs="TkObject" ilk="class" line="33" lineend="34" name="CellTag" />
          <scope ilk="namespace" line="36" lineend="37" name="ConfigMethod" />
        </scope>
      </scope>
      <scope ilk="namespace" line="41" lineend="113" name="Tk::TkTable::">
        <scope ilk="function" line="44" lineend="46" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="49" lineend="51" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="54" lineend="59" name="__item_pathname" signature="__item_pathname(id)" />
        <scope ilk="function" line="62" lineend="64" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="67" lineend="69" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="72" lineend="74" name="__item_val2ruby_optkeys" signature="__item_val2ruby_optkeys(id)" />
        <scope ilk="function" line="77" lineend="79" name="tag_cget" signature="tag_cget(tagOrId, option)" />
        <scope ilk="function" line="80" lineend="82" name="tag_configure" signature="tag_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="83" lineend="85" name="tag_configinfo" signature="tag_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="86" lineend="88" name="current_tag_configinfo" signature="current_tag_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="90" lineend="92" name="window_cget" signature="window_cget(tagOrId, option)" />
        <scope ilk="function" line="93" lineend="103" name="window_configure" signature="window_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="104" lineend="106" name="window_configinfo" signature="window_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="107" lineend="109" name="current_window_configinfo" signature="current_window_configinfo(tagOrId, slot=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="117" lineend="188" name="Tk::TkTable::">
        <scope attributes="__classmethod__" ilk="function" line="125" lineend="129" name="id2obj" signature="self.id2obj(table, id)" />
        <scope attributes="__ctor__" ilk="function" line="131" lineend="139" name="initialize" signature="initialize(parent, keys=nil)" />
        <scope ilk="function" line="141" lineend="143" name="id" signature="id" />
        <scope ilk="function" line="145" lineend="149" name="destroy" signature="destroy" />
        <scope ilk="function" line="152" lineend="154" name="exist?" signature="exist?" />
        <scope ilk="function" line="155" lineend="157" name="include?" signature="include?(idx)" />
        <scope ilk="function" line="159" lineend="161" name="add_cell" signature="add_cell(*args)" />
        <scope ilk="function" line="162" lineend="164" name="add_col" signature="add_col(*args)" />
        <scope ilk="function" line="165" lineend="167" name="add_row" signature="add_row(*args)" />
        <scope ilk="function" line="169" lineend="171" name="raise" signature="raise(target=None)" />
        <scope ilk="function" line="172" lineend="174" name="lower" signature="lower(target=None)" />
        <scope ilk="function" line="176" lineend="178" name="cget" signature="cget(key)" />
        <scope ilk="function" line="179" lineend="181" name="configure" signature="configure(key, val=None)" />
        <scope ilk="function" line="182" lineend="184" name="configinfo" signature="configinfo(key=nil)" />
        <scope ilk="function" line="185" lineend="187" name="current_configinfo" signature="current_configinfo(key=nil)" />
        <import symbol="TkTreatTagFont" />
      </scope>
      <scope classrefs="Object" ilk="class" line="190" lineend="209" name="Tk::TkTable::">
        <scope attributes="__classmethod__" ilk="function" line="191" lineend="199" name="new" signature="self.new(parent, name, keys=nil)" />
        <scope attributes="__ctor__" ilk="function" line="201" lineend="208" name="initialize" signature="initialize(parent, name, keys=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="213" lineend="839" name="Tk::TkTable">
        <scope ilk="function" line="222" lineend="224" name="__destroy_hook__" signature="__destroy_hook__" />
        <scope ilk="function" line="226" lineend="229" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="232" lineend="234" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope classrefs="TkValidateCommand" ilk="class" line="240" lineend="271" name="BrowseCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="241" lineend="266" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="263" lineend="265" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="268" lineend="270" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope classrefs="TkValidateCommand" doc="--------------------------------" ilk="class" line="273" lineend="304" name="CellCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="274" lineend="299" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="296" lineend="298" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="301" lineend="303" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope classrefs="TkValidateCommand" doc="--------------------------------" ilk="class" line="306" lineend="335" name="SelectionCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="307" lineend="330" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="327" lineend="329" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="332" lineend="334" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope classrefs="TkValidateCommand" doc="--------------------------------" ilk="class" line="337" lineend="365" name="ValidateCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="338" lineend="360" name="ValidateArgs" />
          <scope attributes="__classmethod__" ilk="function" line="362" lineend="364" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope ilk="function" line="369" lineend="372" name="__validation_class_list" signature="__validation_class_list" />
        <scope ilk="function" line="381" lineend="383" name="activate" signature="activate(idx)" />
        <scope ilk="function" line="385" lineend="387" name="bbox" signature="bbox(idx)" />
        <scope ilk="function" line="389" lineend="391" name="border_mark" signature="border_mark(x, y)" />
        <scope ilk="function" line="392" lineend="394" name="border_mark_row" signature="border_mark_row(x, y)" />
        <scope ilk="function" line="395" lineend="397" name="border_mark_col" signature="border_mark_col(x, y)" />
        <scope ilk="function" line="398" lineend="400" name="border_dragto" signature="border_dragto(x, y)" />
        <scope ilk="function" line="402" lineend="405" name="clear_cache" signature="clear_cache(first=None, last=None)" />
        <scope ilk="function" line="406" lineend="409" name="clear_sizes" signature="clear_sizes(first=None, last=None)" />
        <scope ilk="function" line="410" lineend="413" name="clear_tags" signature="clear_tags(first=None, last=None)" />
        <scope ilk="function" line="414" lineend="417" name="clear_all" signature="clear_all(first=None, last=None)" />
        <scope ilk="function" line="419" lineend="421" name="curselection" signature="curselection" />
        <scope ilk="function" line="422" lineend="425" name="curselection=" signature="curselection=(val)" />
        <scope ilk="function" line="427" lineend="429" name="curvalue" signature="curvalue" />
        <scope ilk="function" line="430" lineend="433" name="curvalue=" signature="curvalue=(val)" />
        <scope ilk="function" line="435" lineend="438" name="delete_active" signature="delete_active(idx1, idx2=None)" />
        <scope ilk="function" line="439" lineend="450" name="delete_cols" signature="delete_cols(*args)" />
        <scope ilk="function" line="451" lineend="462" name="delete_rows" signature="delete_rows(*args)" />
        <scope ilk="function" line="464" lineend="466" name="get" signature="get(idx)" />
        <scope ilk="function" line="467" lineend="471" name="get_area" signature="get_area(idx1, idx2)" />
        <scope ilk="function" line="473" lineend="475" name="height_list" signature="height_list" />
        <scope ilk="function" line="476" lineend="478" name="height" signature="height(row)" />
        <scope ilk="function" line="479" lineend="482" name="set_height" signature="set_height(*pairs)" />
        <scope ilk="function" line="484" lineend="486" name="hidden_list" signature="hidden_list" />
        <scope ilk="function" line="487" lineend="497" name="hidden?" signature="hidden?(idx, *args)" />
        <scope ilk="function" line="499" lineend="501" name="icursor" signature="icursor" />
        <scope ilk="function" line="502" lineend="504" name="icursor_set" signature="icursor_set(idx)" />
        <scope ilk="function" line="506" lineend="508" name="index" signature="index(idx)" />
        <scope ilk="function" line="509" lineend="511" name="row_index" signature="row_index(idx)" />
        <scope ilk="function" line="512" lineend="514" name="col_index" signature="col_index(idx)" />
        <scope ilk="function" line="516" lineend="519" name="insert_active" signature="insert_active(idx, val)" />
        <scope ilk="function" line="520" lineend="531" name="insert_cols" signature="insert_cols(*args)" />
        <scope ilk="function" line="532" lineend="543" name="insert_rows" signature="insert_rows(*args)" />
        <scope doc="def postscript(*args) tk_send(&apos;postscript&apos;, *args) end" ilk="function" line="549" lineend="552" name="reread" signature="reread" />
        <scope ilk="function" line="554" lineend="557" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="558" lineend="561" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="563" lineend="566" name="see" signature="see(idx)" />
        <scope ilk="function" line="568" lineend="571" name="selection_anchor" signature="selection_anchor(idx)" />
        <scope ilk="function" line="572" lineend="575" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="576" lineend="578" name="selection_clear_all" signature="selection_clear_all" />
        <scope ilk="function" line="579" lineend="581" name="selection_include?" signature="selection_include?(idx)" />
        <scope ilk="function" line="582" lineend="584" name="selection_present" signature="selection_present" />
        <scope ilk="function" line="585" lineend="588" name="selection_set" signature="selection_set(first, last=None)" />
        <scope ilk="function" line="590" lineend="598" name="set" signature="set(*pairs)" />
        <scope ilk="function" line="599" lineend="607" name="set_row" signature="set_row(*pairs)" />
        <scope ilk="function" line="608" lineend="616" name="set_col" signature="set_col(*pairs)" />
        <scope ilk="function" line="671" lineend="678" name="spans" signature="spans" />
        <scope ilk="function" line="680" lineend="685" name="span" signature="span(idx)" />
        <scope ilk="function" line="686" lineend="700" name="set_spans" signature="set_spans(*pairs)" />
        <scope ilk="function" line="733" lineend="746" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="748" lineend="758" name="tagid2obj" signature="tagid2obj(tagid)" />
        <scope ilk="function" line="760" lineend="763" name="tag_cell" signature="tag_cell(tag, *cells)" />
        <scope ilk="function" line="764" lineend="767" name="tag_reset" signature="tag_reset(*cells)" />
        <scope ilk="function" line="768" lineend="771" name="tag_col" signature="tag_col(tag, *cols)" />
        <scope ilk="function" line="772" lineend="775" name="tag_col_reset" signature="tag_col_reset(*cols)" />
        <scope ilk="function" line="776" lineend="786" name="tag_delete" signature="tag_delete(tag)" />
        <scope ilk="function" line="787" lineend="789" name="tag_exist?" signature="tag_exist?(tag)" />
        <scope ilk="function" line="790" lineend="792" name="tag_include?" signature="tag_include?(tag, idx)" />
        <scope ilk="function" line="793" lineend="796" name="tag_lower" signature="tag_lower(tag, target=None)" />
        <scope ilk="function" line="797" lineend="799" name="tag_names" signature="tag_names(pat=None)" />
        <scope ilk="function" line="800" lineend="803" name="tag_raise" signature="tag_raise(tag, target=None)" />
        <scope ilk="function" line="804" lineend="807" name="tag_row" signature="tag_row(tag, *rows)" />
        <scope ilk="function" line="808" lineend="811" name="tag_row_reset" signature="tag_row_reset(*rows)" />
        <scope ilk="function" line="813" lineend="815" name="validate" signature="validate(idx)" />
        <scope ilk="function" line="817" lineend="819" name="width_list" signature="width_list" />
        <scope ilk="function" line="820" lineend="822" name="width" signature="width(row)" />
        <scope ilk="function" line="823" lineend="826" name="set_width" signature="set_width(*pairs)" />
        <scope ilk="function" line="828" lineend="831" name="window_delete" signature="window_delete(*args)" />
        <scope ilk="function" line="832" lineend="835" name="window_move" signature="window_move(from_idx, to_idx)" />
        <scope ilk="function" line="836" lineend="838" name="window_names" signature="window_names(pat=None)" />
        <import symbol="Scrollable" />
        <import symbol="Tk::TkTable::" />
        <import symbol="Tk::ValidateConfigure" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tktable/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="load all image format handlers TkPackage.require(&apos;Img&apos;,&#xA;&apos;1.3&apos;)" ilk="namespace" line="18" lineend="33" name="Tk">
        <scope ilk="namespace" line="19" lineend="32" name="Img">
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="23" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="31" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/xpm">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::xpm&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="XPM">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/xbm">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::xbm&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="XBM">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/window">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::window&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="WINDOW">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/tiff">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::tiff&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="TIFF">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/tga">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::tga&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="TGA">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/sun">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::sun&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="SUN">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/sgi">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::sgi&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="SGI">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/ps">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::ps&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="PS">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/ppm">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::ppm&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="PPM">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/png">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::png&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="PNG">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/pixmap">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::pixmap&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="PIXMAP">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="TkImage" ilk="class" line="35" lineend="44" name="TkPixmapImage">
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="38" name="version" signature="self.version" />
        <scope attributes="__ctor__" ilk="function" line="40" lineend="43" name="initialize" signature="initialize(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/pcx">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::pcx&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="PCX">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/jpeg">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::jpeg&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="JPEG">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/ico">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::ico&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="ICO">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/gif">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::gif&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="GIF">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkimg/bmp">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkimg/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;img::bmp&apos;, &apos;1.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Img">
          <scope ilk="namespace" line="18" lineend="31" name="BMP">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkHTML">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/tkHTML/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/tkHTML/htmlwidget" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkHTML/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkHTML/htmlwidget">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/tkHTML/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;Tkhtml&apos;, &apos;2.0&apos;)" ilk="namespace" line="17" lineend="35" name="Tk">
        <scope classrefs="TkWindow" ilk="class" line="18" lineend="34" name="HTML_Widget">
          <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          <scope classrefs="TkWindow" ilk="class" line="32" lineend="33" name="ClippingWindow" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="37" lineend="88" name="Tk::HTML_Widget::">
        <scope attributes="__classmethod__" ilk="function" line="44" lineend="76" name="new" signature="self.new(parent, keys={})" />
        <scope attributes="__ctor__" ilk="function" line="78" lineend="83" name="initialize" signature="initialize(parent)" />
        <scope ilk="function" line="85" lineend="87" name="method_missing" signature="method_missing(m, *args, &amp;b)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="90" lineend="444" name="Tk::HTML_Widget">
        <scope ilk="function" line="97" lineend="104" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="107" lineend="109" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__classmethod__" doc="class methods" ilk="function" line="115" lineend="117" name="reformat" signature="self.reformat(src, dst, txt)" />
        <scope attributes="__classmethod__" ilk="function" line="119" lineend="121" name="url_join" signature="self.url_join(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="123" lineend="125" name="url_split" signature="self.url_split(uri)" />
        <scope attributes="__classmethod__" ilk="function" line="127" lineend="129" name="lockcopy" signature="self.lockcopy(src, dst)" />
        <scope attributes="__classmethod__" ilk="function" line="131" lineend="133" name="gzip_file" signature="self.gzip_file(file, dat)" />
        <scope attributes="__classmethod__" ilk="function" line="135" lineend="137" name="gunzip_file" signature="self.gunzip_file(file, dat)" />
        <scope attributes="__classmethod__" ilk="function" line="139" lineend="141" name="gzip_data" signature="self.gzip_data(dat)" />
        <scope attributes="__classmethod__" ilk="function" line="143" lineend="145" name="gunzip_data" signature="self.gunzip_data(dat)" />
        <scope attributes="__classmethod__" ilk="function" line="147" lineend="149" name="base64_encode" signature="self.base64_encode(dat)" />
        <scope attributes="__classmethod__" ilk="function" line="151" lineend="153" name="base64_decode" signature="self.base64_decode(dat)" />
        <scope attributes="__classmethod__" ilk="function" line="155" lineend="157" name="text_format" signature="self.text_format(dat, len)" />
        <scope attributes="__classmethod__" ilk="function" line="159" lineend="161" name="xor" signature="self.xor(cmd, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="163" lineend="165" name="stdchan" signature="self.stdchan(cmd, channel)" />
        <scope attributes="__classmethod__" ilk="function" line="167" lineend="169" name="crc32" signature="self.crc32(data)" />
        <scope doc="instance methods" ilk="function" line="174" lineend="176" name="clipping_window" signature="clipping_window" />
        <scope ilk="function" line="180" lineend="183" name="bgimage" signature="bgimage(image, tid=None)" />
        <scope ilk="function" line="185" lineend="188" name="clear" signature="clear()" />
        <scope ilk="function" line="190" lineend="192" name="coords" signature="coords(index=None, percent=None)" />
        <scope ilk="function" line="194" lineend="196" name="forminfo" signature="forminfo(*args)" />
        <scope ilk="function" line="199" lineend="201" name="href" signature="href(x, y)" />
        <scope ilk="function" line="203" lineend="206" name="image_add" signature="image_add(id, img)" />
        <scope ilk="function" line="208" lineend="210" name="image_at" signature="image_at(x, y)" />
        <scope ilk="function" line="212" lineend="214" name="images" signature="images()" />
        <scope ilk="function" line="216" lineend="219" name="image_set" signature="image_set(id, num)" />
        <scope ilk="function" line="221" lineend="224" name="image_update" signature="image_update(id, imgs)" />
        <scope ilk="function" line="226" lineend="228" name="index" signature="index(idx, count=None, unit=None)" />
        <scope ilk="function" line="230" lineend="232" name="insert_cursor" signature="insert_cursor(idx)" />
        <scope ilk="function" line="234" lineend="236" name="names" signature="names()" />
        <scope ilk="function" line="238" lineend="240" name="on_screen" signature="on_screen(id, x, y)" />
        <scope ilk="function" line="242" lineend="244" name="over" signature="over(x, y)" />
        <scope ilk="function" line="246" lineend="248" name="over_markup" signature="over_markup(x, y)" />
        <scope ilk="function" line="250" lineend="252" name="over_attr" signature="over_attr(x, y, attrs)" />
        <scope ilk="function" line="254" lineend="257" name="parse" signature="parse(txt)" />
        <scope ilk="function" line="259" lineend="261" name="resolver" signature="resolver(*uri_args)" />
        <scope ilk="function" line="263" lineend="266" name="selection_clear" signature="selection_clear()" />
        <scope ilk="function" line="268" lineend="271" name="selection_set" signature="selection_set(first, last)" />
        <scope ilk="function" line="273" lineend="275" name="refresh" signature="refresh(*opts)" />
        <scope ilk="function" line="277" lineend="279" name="layout" signature="layout()" />
        <scope ilk="function" line="281" lineend="283" name="sizewindow" signature="sizewindow(*args)" />
        <scope ilk="function" line="285" lineend="287" name="postscript" signature="postscript(*args)" />
        <scope ilk="function" line="289" lineend="291" name="source" signature="source()" />
        <scope ilk="function" line="293" lineend="295" name="plain_text" signature="plain_text(first, last)" />
        <scope ilk="function" line="299" lineend="302" name="text_delete" signature="text_delete(first, last)" />
        <scope ilk="function" line="304" lineend="306" name="html_text" signature="html_text(first, last)" />
        <scope ilk="function" line="309" lineend="312" name="text_insert" signature="text_insert(idx, txt)" />
        <scope ilk="function" line="314" lineend="316" name="break_text" signature="break_text(idx)" />
        <scope ilk="function" line="319" lineend="321" name="text_find" signature="text_find(txt, *args)" />
        <scope ilk="function" line="323" lineend="325" name="text_table" signature="text_table(idx, imgs=None, attrs=None)" />
        <scope ilk="function" line="327" lineend="330" name="token_append" signature="token_append(tag, *args)" />
        <scope ilk="function" line="332" lineend="335" name="token_delete" signature="token_delete(first, last=None)" />
        <scope ilk="function" line="337" lineend="340" name="token_define" signature="token_define(*args)" />
        <scope ilk="function" line="342" lineend="344" name="token_find" signature="token_find(tag, *args)" />
        <scope ilk="function" line="346" lineend="348" name="token_get" signature="token_get(first, last=None)" />
        <scope ilk="function" line="350" lineend="352" name="token_list" signature="token_list(first, last=None)" />
        <scope ilk="function" line="354" lineend="356" name="token_markup" signature="token_markup(first, last=None)" />
        <scope ilk="function" line="358" lineend="360" name="token_DOM" signature="token_DOM(first, last=None)" />
        <scope ilk="function" line="365" lineend="367" name="token_get_end" signature="token_get_end(idx)" />
        <scope ilk="function" line="370" lineend="372" name="token_offset" signature="token_offset(start, num1, num2)" />
        <scope ilk="function" line="374" lineend="376" name="token_get_attr" signature="token_get_attr(idx, name=None)" />
        <scope ilk="function" line="378" lineend="381" name="token_set_attr" signature="token_set_attr(idx, name=None, val=None)" />
        <scope ilk="function" line="383" lineend="391" name="token_handler" signature="token_handler(tag, cmd=nil, &amp;b)" />
        <scope ilk="function" line="393" lineend="396" name="token_insert" signature="token_insert(idx, tag, *args)" />
        <scope ilk="function" line="398" lineend="400" name="token_attrs" signature="token_attrs(*args)" />
        <scope ilk="function" line="402" lineend="404" name="token_unique" signature="token_unique(*args)" />
        <scope ilk="function" line="406" lineend="408" name="token_on_events" signature="token_on_events(*args)" />
        <scope ilk="function" line="410" lineend="412" name="dom_nameidx" signature="dom_nameidx(tag, name)" />
        <scope ilk="function" line="415" lineend="417" name="dom_radioidx" signature="dom_radioidx(tag, name)" />
        <scope ilk="function" line="420" lineend="422" name="dom_id" signature="dom_id(*spec)" />
        <scope ilk="function" line="424" lineend="426" name="dom_ids" signature="dom_ids(*spec)" />
        <scope ilk="function" line="428" lineend="430" name="dom_value" signature="dom_value(*spec)" />
        <scope ilk="function" line="432" lineend="434" name="dom_attr" signature="dom_attr(idx)" />
        <scope ilk="function" line="436" lineend="438" name="dom_formel" signature="dom_formel(name)" />
        <scope ilk="function" line="441" lineend="443" name="dom_tree" signature="dom_tree(idx, val)" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkDND">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tkDND/setup.rb" symbol="*" />
      <scope doc="call setup script" ilk="namespace" line="13" lineend="18" name="Tk">
        <scope ilk="namespace" line="14" lineend="17" name="TkDND" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkDND/tkdnd">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/tkDND/setup.rb" symbol="*" />
      <scope doc="call setup script" ilk="namespace" line="16" lineend="160" name="Tk">
        <scope ilk="namespace" line="17" lineend="159" name="TkDND">
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="31" lineend="62" name="DND_Subst" />
          <scope ilk="namespace" line="64" lineend="158" name="DND">
            <scope attributes="__classmethod__" ilk="function" line="65" lineend="71" name="version" signature="self.version" />
            <scope ilk="function" line="73" lineend="81" name="dnd_bindtarget_info" signature="dnd_bindtarget_info(type=nil, event=nil)" />
            <scope doc="def dnd_bindtarget(type, event, cmd=Proc.new, prior=50,&#xA;*args) event = tk_event_sequence(event) if&#xA;prior.kind_of?(Numeric) tk_call(&apos;dnd&apos;, &apos;bindtarget&apos;, @path,&#xA;type, event, install_bind_for_event_class(DND_Subst, cmd,&#xA;*args)," ilk="function" line="95" lineend="116" name="dnd_bindtarget" signature="dnd_bindtarget(type, event, *args)" />
            <scope ilk="function" line="118" lineend="121" name="dnd_cleartarget" signature="dnd_cleartarget" />
            <scope ilk="function" line="123" lineend="129" name="dnd_bindsource_info" signature="dnd_bindsource_info(type=nil)" />
            <scope doc="def dnd_bindsource(type, cmd=Proc.new, prior=None)&#xA;tk_call(&apos;dnd&apos;, &apos;bindsource&apos;, @path, type, cmd, prior) self&#xA;end" ilk="function" line="135" lineend="147" name="dnd_bindsource" signature="dnd_bindsource(type, *args)" />
            <scope ilk="function" line="149" lineend="152" name="dnd_clearsource" signature="dnd_clearsource()" />
            <scope ilk="function" line="154" lineend="157" name="dnd_drag" signature="dnd_drag(keys=nil)" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="162" lineend="164" name="TkWindow">
        <import symbol="Tk::TkDND::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkDND/shape">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/tkDND/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;shape&apos;, &apos;0.3&apos;)" ilk="namespace" line="17" lineend="119" name="Tk">
        <scope ilk="namespace" line="18" lineend="118" name="TkDND">
          <scope ilk="namespace" line="19" lineend="117" name="Shape">
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="36" lineend="38" name="package_version" signature="self.package_version" />
            <scope attributes="__classmethod__" ilk="function" line="41" lineend="43" name="package_patchlevel" signature="self.package_patchlevel" />
            <scope attributes="__classmethod__" ilk="function" line="46" lineend="48" name="version" signature="self.version" />
            <scope ilk="function" line="53" lineend="64" name="shape_bounds" signature="shape_bounds(kind=nil)" />
            <scope ilk="function" line="66" lineend="72" name="shape_get" signature="shape_get(kind=nil)" />
            <scope ilk="function" line="74" lineend="81" name="shape_offset" signature="shape_offset(x, y, kind=nil)" />
            <scope ilk="function" line="83" lineend="105" name="_parse_shapespec_param" signature="_parse_shapespec_param(args)" />
            <scope ilk="function" line="108" lineend="111" name="shape_set" signature="shape_set(*args)" />
            <scope ilk="function" line="113" lineend="116" name="shape_update" signature="shape_update(op, *args)" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="121" lineend="123" name="TkWindow">
        <import symbol="Tk::TkDND::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tkDND/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/tile/setup.rb" symbol="*" />
      <scope doc="version 0.4 or former" ilk="namespace" line="22" lineend="28" name="Tk">
        <scope ilk="namespace" line="23" lineend="27" name="Tile" />
      </scope>
      <scope doc="version 0.5 -- version 0.6" ilk="namespace" line="31" lineend="37" name="Tk">
        <scope ilk="namespace" line="32" lineend="36" name="Tile" />
      </scope>
      <scope doc="version 0.7 or later" ilk="namespace" line="40" lineend="46" name="Tk">
        <scope ilk="namespace" line="41" lineend="45" name="Tile" />
      </scope>
      <scope doc="autoload" ilk="namespace" line="50" lineend="225" name="Tk">
        <scope ilk="namespace" line="51" lineend="224" name="Tile">
          <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="59" lineend="65" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="67" lineend="69" name="__Import_Tile_Widgets__!" signature="self.__Import_Tile_Widgets__!" />
          <scope attributes="__classmethod__" ilk="function" line="71" lineend="80" name="load_images" signature="self.load_images(imgdir, pat=TkComm::None)" />
          <scope attributes="__classmethod__" ilk="function" line="82" lineend="84" name="style" signature="self.style(*args)" />
          <scope ilk="namespace" line="86" lineend="93" name="KeyNav">
            <scope attributes="__classmethod__" ilk="function" line="87" lineend="89" name="enableMnemonics" signature="self.enableMnemonics(w)" />
            <scope attributes="__classmethod__" ilk="function" line="90" lineend="92" name="defaultButton" signature="self.defaultButton(w)" />
          </scope>
          <scope ilk="namespace" line="95" lineend="106" name="Font" />
          <scope ilk="namespace" line="108" lineend="132" name="ParseStyleLayout">
            <scope ilk="function" line="109" lineend="130" name="_style_layout" signature="_style_layout(lst)" />
          </scope>
          <scope ilk="namespace" line="134" lineend="161" name="TileWidget">
            <scope ilk="function" line="137" lineend="141" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
            <scope ilk="function" line="144" lineend="152" name="instate" signature="instate(state, script=nil, &amp;b)" />
            <scope ilk="function" line="154" lineend="160" name="state" signature="state(state=nil)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tsquare">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tsquare widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="TSquare" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tseparator">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tseparator widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="TSeparator" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tscrollbar">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tscrollbar widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkScrollbar" ilk="class" line="10" lineend="11" name="TScrollbar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tscale">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tscale &amp; tprogress widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="18" name="Tk">
        <scope ilk="namespace" line="9" lineend="17" name="Tile">
          <scope classrefs="TkScale" ilk="class" line="10" lineend="11" name="TScale" />
          <scope classrefs="TScale" ilk="class" line="14" lineend="15" name="TProgress" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="20" lineend="34" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="31" lineend="33" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
      <scope classrefs="Object" ilk="class" line="36" lineend="50" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="47" lineend="49" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/treeview">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="treeview widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="133" name="Tk">
        <scope ilk="namespace" line="9" lineend="132" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="Treeview" />
          <scope ilk="namespace" line="13" lineend="131" name="TreeviewConfig">
            <scope ilk="function" line="16" lineend="18" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
            <scope ilk="function" line="21" lineend="23" name="__item_config_cmd" signature="__item_config_cmd(id)" />
            <scope ilk="function" line="26" lineend="35" name="__item_numstrval_optkeys" signature="__item_numstrval_optkeys(id)" />
            <scope ilk="function" line="38" lineend="47" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
            <scope ilk="function" line="50" lineend="59" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
            <scope ilk="function" line="62" lineend="71" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
            <scope doc="Treeview Item" ilk="function" line="83" lineend="85" name="itemcget" signature="itemcget(tagOrId, option)" />
            <scope ilk="function" line="86" lineend="88" name="itemconfigure" signature="itemconfigure(tagOrId, slot, value=None)" />
            <scope ilk="function" line="89" lineend="91" name="itemconfiginfo" signature="itemconfiginfo(tagOrId, slot=nil)" />
            <scope ilk="function" line="92" lineend="94" name="current_itemconfiginfo" signature="current_itemconfiginfo(tagOrId, slot=nil)" />
            <scope doc="Treeview Column" ilk="function" line="97" lineend="99" name="columncget" signature="columncget(tagOrId, option)" />
            <scope ilk="function" line="100" lineend="102" name="columnconfigure" signature="columnconfigure(tagOrId, slot, value=None)" />
            <scope ilk="function" line="103" lineend="105" name="columnconfiginfo" signature="columnconfiginfo(tagOrId, slot=nil)" />
            <scope ilk="function" line="106" lineend="108" name="current_columnconfiginfo" signature="current_columnconfiginfo(tagOrId, slot=nil)" />
            <scope doc="Treeview Heading" ilk="function" line="115" lineend="117" name="headingcget" signature="headingcget(tagOrId, option)" />
            <scope ilk="function" line="118" lineend="120" name="headingconfigure" signature="headingconfigure(tagOrId, slot, value=None)" />
            <scope ilk="function" line="121" lineend="123" name="headingconfiginfo" signature="headingconfiginfo(tagOrId, slot=nil)" />
            <scope ilk="function" line="124" lineend="126" name="current_headingconfiginfo" signature="current_headingconfiginfo(tagOrId, slot=nil)" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="135" lineend="280" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="149" lineend="151" name="style" signature="self.style(*args)" />
        <scope ilk="function" line="153" lineend="159" name="tagid" signature="tagid(id)" />
        <scope ilk="function" line="161" lineend="163" name="children" signature="children(item)" />
        <scope ilk="function" line="164" lineend="168" name="set_children" signature="set_children(item, *items)" />
        <scope ilk="function" line="170" lineend="173" name="delete" signature="delete(*items)" />
        <scope ilk="function" line="175" lineend="178" name="detach" signature="detach(*items)" />
        <scope ilk="function" line="180" lineend="182" name="exist?" signature="exist?(item)" />
        <scope ilk="function" line="184" lineend="186" name="focus_item" signature="focus_item(item = None)" />
        <scope ilk="function" line="188" lineend="194" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="196" lineend="198" name="index" signature="index(item)" />
        <scope ilk="function" line="200" lineend="209" name="insert" signature="insert(parent, idx, keys={})" />
        <scope ilk="function" line="211" lineend="213" name="instate" signature="instate(spec, cmd=Proc.new)" />
        <scope ilk="function" line="214" lineend="216" name="state" signature="state(spec=None)" />
        <scope ilk="function" line="218" lineend="221" name="move" signature="move(item, parent, idx)" />
        <scope ilk="function" line="223" lineend="225" name="next" signature="next(item)" />
        <scope ilk="function" line="227" lineend="229" name="parent" signature="parent(item)" />
        <scope ilk="function" line="231" lineend="233" name="prev" signature="prev(item)" />
        <scope ilk="function" line="235" lineend="238" name="see" signature="see(item)" />
        <scope ilk="function" line="240" lineend="242" name="selection" signature="selection" />
        <scope ilk="function" line="245" lineend="248" name="selection_add" signature="selection_add(*items)" />
        <scope ilk="function" line="249" lineend="252" name="selection_remove" signature="selection_remove(*items)" />
        <scope ilk="function" line="253" lineend="256" name="selection_set" signature="selection_set(*items)" />
        <scope ilk="function" line="257" lineend="260" name="selection_toggle" signature="selection_toggle(*items)" />
        <scope ilk="function" line="262" lineend="272" name="get_directory" signature="get_directory(item)" />
        <scope ilk="function" line="273" lineend="275" name="get" signature="get(item, col)" />
        <scope ilk="function" line="276" lineend="279" name="set" signature="set(item, col, value)" />
        <import symbol="Tk::Tile::" />
        <import symbol="Scrollable" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tradiobutton">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tradiobutton widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="16" name="Tk">
        <scope ilk="namespace" line="9" lineend="15" name="Tile">
          <scope classrefs="TkRadioButton" ilk="class" line="10" lineend="11" name="TRadioButton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="32" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="29" lineend="31" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tprogressbar">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tprogressbar widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="TProgressbar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="53" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <scope ilk="function" line="31" lineend="33" name="step" signature="step(amount=None)" />
        <scope doc="def step=(amount) tk_send_without_enc(&apos;step&apos;, amount) end" ilk="function" line="38" lineend="44" name="start" signature="start(interval=None)" />
        <scope ilk="function" line="46" lineend="52" name="stop" signature="stop(amount=None)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tpaned">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tpaned widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="TPaned" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="188" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <scope ilk="function" line="31" lineend="35" name="add" signature="add(win, keys)" />
        <scope ilk="function" line="37" lineend="41" name="forget" signature="forget(pane)" />
        <scope ilk="function" line="43" lineend="47" name="insert" signature="insert(pos, win, keys)" />
        <scope ilk="function" line="49" lineend="52" name="panecget" signature="panecget(pane, slot)" />
        <scope ilk="function" line="55" lineend="71" name="paneconfigure" signature="paneconfigure(pane, key, value=nil)" />
        <scope ilk="function" line="75" lineend="156" name="paneconfiginfo" signature="paneconfiginfo(win)" />
        <scope ilk="function" line="159" lineend="178" name="current_paneconfiginfo" signature="current_paneconfiginfo(win, key=nil)" />
        <scope ilk="function" line="181" lineend="183" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="185" lineend="187" name="sashpos" signature="sashpos(idx, newpos=None)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tnotebook">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tnotebook widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="TNotebook" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="110" name="Tk::Tile::">
        <scope ilk="function" line="20" lineend="22" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="25" lineend="27" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_listval_optkeys" signature="__item_listval_optkeys" />
        <scope ilk="function" line="35" lineend="37" name="__item_methodcall_optkeys" signature="__item_methodcall_optkeys" />
        <scope doc="alias tabcget itemcget" ilk="function" line="45" lineend="47" name="tabcget" signature="tabcget(tagOrId, option)" />
        <scope attributes="__classmethod__" ilk="function" line="60" lineend="62" name="style" signature="self.style(*args)" />
        <scope ilk="function" line="64" lineend="73" name="enable_traversal" signature="enable_traversal()" />
        <scope ilk="function" line="75" lineend="82" name="add" signature="add(child, keys=nil)" />
        <scope ilk="function" line="84" lineend="87" name="forget" signature="forget(idx)" />
        <scope ilk="function" line="89" lineend="91" name="index" signature="index(idx)" />
        <scope ilk="function" line="93" lineend="100" name="insert" signature="insert(idx, subwin, keys=nil)" />
        <scope ilk="function" line="102" lineend="105" name="select" signature="select(idx)" />
        <scope ilk="function" line="107" lineend="109" name="tabs" signature="tabs" />
        <import symbol="TkItemConfigMethod" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tmenubutton">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tmenubutton widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkMenubutton" ilk="class" line="10" lineend="11" name="TMenubutton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tlabelframe">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tlabelframe widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="Tk::Tile::" ilk="class" line="10" lineend="11" name="TLabelframe" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tlabel">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tlabel widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkLabel" ilk="class" line="10" lineend="11" name="TLabel" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tframe">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tframe widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkFrame" ilk="class" line="10" lineend="11" name="TFrame" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tentry">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tentry widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkEntry" ilk="class" line="10" lineend="11" name="TEntry" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="40" name="Tk::Tile::">
        <scope ilk="function" line="27" lineend="29" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="32" lineend="34" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="37" lineend="39" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tcombobox">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tcombobox widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="Tk::Tile::" ilk="class" line="10" lineend="11" name="TCombobox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="55" name="Tk::Tile::">
        <scope ilk="function" line="27" lineend="29" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="32" lineend="34" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="37" lineend="39" name="style" signature="self.style(*args)" />
        <scope ilk="function" line="41" lineend="43" name="current" signature="current" />
        <scope ilk="function" line="44" lineend="46" name="current=" signature="current=(idx)" />
        <scope ilk="function" line="48" lineend="50" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="52" lineend="54" name="set" signature="set(val)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tcheckbutton">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tcheckbutton widget by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="16" name="Tk">
        <scope ilk="namespace" line="9" lineend="15" name="Tile">
          <scope classrefs="TkCheckButton" ilk="class" line="10" lineend="11" name="TCheckButton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="32" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="29" lineend="31" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/tbutton">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="tbutton widget by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="14" name="Tk">
        <scope ilk="namespace" line="9" lineend="13" name="Tile">
          <scope classrefs="TkButton" ilk="class" line="10" lineend="11" name="TButton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="style" signature="self.style(*args)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/style">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="style commands by Hidetoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="13" name="Tk">
        <scope ilk="namespace" line="9" lineend="12" name="Tile">
          <scope ilk="namespace" line="10" lineend="11" name="Style" />
        </scope>
      </scope>
      <scope ilk="namespace" line="15" lineend="17" name="Tk::Tile::" />
      <scope classrefs="Object" ilk="class" line="19" lineend="103" name="Tk::Tile::">
        <scope ilk="function" line="20" lineend="38" name="configure" signature="configure(style=nil, keys=nil)" />
        <scope ilk="function" line="41" lineend="53" name="map" signature="map(style=nil, keys=nil)" />
        <scope ilk="function" line="57" lineend="69" name="layout" signature="layout(style=nil, spec=nil)" />
        <scope ilk="function" line="71" lineend="73" name="element_create" signature="element_create(name, type, *args)" />
        <scope ilk="function" line="75" lineend="77" name="element_names" signature="element_names()" />
        <scope ilk="function" line="79" lineend="81" name="element_options" signature="element_options(elem)" />
        <scope ilk="function" line="83" lineend="89" name="theme_create" signature="theme_create(name, keys=nil)" />
        <scope ilk="function" line="91" lineend="94" name="theme_settings" signature="theme_settings(name, cmd=nil, &amp;b)" />
        <scope ilk="function" line="96" lineend="98" name="theme_names" signature="theme_names()" />
        <scope ilk="function" line="100" lineend="102" name="theme_use" signature="theme_use(name)" />
        <import symbol="Tk::Tile::" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tile/dialog">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tkextlib/tile.rb" symbol="*" />
      <scope doc="ttk::dialog  (tile-0.7+) by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="8" lineend="13" name="Tk">
        <scope ilk="namespace" line="9" lineend="12" name="Tile">
          <scope classrefs="TkWindow" ilk="class" line="10" lineend="11" name="Dialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="15" lineend="84" name="Tk::Tile::">
        <scope attributes="__classmethod__" ilk="function" line="18" lineend="22" name="show" signature="self.show(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="display" signature="self.display(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="30" name="define_dialog_type" signature="self.define_dialog_type(name, keys)" />
        <scope attributes="__classmethod__" ilk="function" line="32" lineend="34" name="style" signature="self.style(*args)" />
        <scope attributes="__ctor__" ilk="function" line="38" lineend="41" name="initialize" signature="initialize(keys={})" />
        <scope ilk="function" line="43" lineend="45" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="48" lineend="50" name="show" signature="show" />
        <scope ilk="function" line="53" lineend="55" name="client_frame" signature="client_frame" />
        <scope ilk="function" line="57" lineend="59" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="61" lineend="74" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="76" lineend="83" name="configinfo" signature="configinfo(slot = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tclx">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/tclx/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/tclx/tclx" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tclx/tclx">
      <import line="5" module="tk" symbol="*" />
      <import line="8" module="tkextlib/setup.rb" symbol="*" />
      <import line="11" module="tkextlib/tclx/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;Tclx&apos;, &apos;8.0&apos;)" ilk="namespace" line="16" lineend="74" name="Tk">
        <scope ilk="namespace" line="17" lineend="73" name="TclX">
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="33" name="infox" signature="self.infox(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="35" lineend="38" name="signal" signature="self.signal(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="40" lineend="43" name="signal_restart" signature="self.signal_restart(*args)" />
          <scope classrefs="Object" ilk="class" line="47" lineend="72" name="XPG3_MsgCat">
            <scope classrefs="Object" ilk="class" line="48" lineend="50" name="self" />
            <scope attributes="__ctor__" ilk="function" line="52" lineend="58" name="initialize" signature="initialize(catname, fail_mode=false)" />
            <scope ilk="function" line="60" lineend="67" name="close" signature="close(fail_mode=false)" />
            <scope ilk="function" line="69" lineend="71" name="get" signature="get(setnum, msgnum, defaultstr)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tclx/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/tcllib/setup.rb" symbol="*" />
      <scope doc="autoload" ilk="namespace" line="41" lineend="86" name="Tk">
        <scope ilk="namespace" line="42" lineend="85" name="Tcllib" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/widget">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget&apos;, &apos;3.0&apos;)" ilk="namespace" line="15" lineend="30" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="29" name="Widget">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="20" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="28" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope ilk="namespace" line="32" lineend="48" name="Tk::Tcllib::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/tooltip">
      <import line="10" module="tk" symbol="*" />
      <import line="11" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;tooltip&apos;, &apos;1.1&apos;)" ilk="namespace" line="16" lineend="31" name="Tk::Tcllib">
        <scope ilk="namespace" line="17" lineend="30" name="Tooltip">
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope ilk="namespace" line="33" lineend="95" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="37" lineend="39" name="database_classname" signature="self.database_classname" />
        <scope attributes="__classmethod__" ilk="function" line="40" lineend="42" name="database_class" signature="self.database_class" />
        <scope attributes="__classmethod__" ilk="function" line="44" lineend="46" name="clear" signature="self.clear(glob_path_pat = None)" />
        <scope attributes="__classmethod__" ilk="function" line="48" lineend="50" name="clear_glob" signature="self.clear_glob(glob_path_pat)" />
        <scope attributes="__classmethod__" ilk="function" line="52" lineend="54" name="clear_widgets" signature="self.clear_widgets(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="56" lineend="58" name="clear_children" signature="self.clear_children(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="60" lineend="62" name="delay" signature="self.delay(millisecs=None)" />
        <scope attributes="__classmethod__" ilk="function" line="63" lineend="65" name="delay=" signature="self.delay=(millisecs)" />
        <scope attributes="__classmethod__" ilk="function" line="67" lineend="70" name="disable" signature="self.disable" />
        <scope attributes="__classmethod__" ilk="function" line="71" lineend="73" name="off" signature="self.off" />
        <scope attributes="__classmethod__" ilk="function" line="75" lineend="78" name="enable" signature="self.enable" />
        <scope attributes="__classmethod__" ilk="function" line="79" lineend="81" name="on" signature="self.on" />
        <scope attributes="__classmethod__" ilk="function" line="83" lineend="90" name="register" signature="self.register(widget, msg, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="92" lineend="94" name="erase" signature="self.erase(widget)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/tkpiechart">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tk/canvas" symbol="*" />
      <import line="11" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;tkpiechart&apos;, &apos;6.6&apos;)" ilk="namespace" line="16" lineend="21" name="Tk">
        <scope ilk="namespace" line="17" lineend="20" name="Tcllib">
          <scope ilk="namespace" line="18" lineend="19" name="Tkpiechart" />
        </scope>
      </scope>
      <scope ilk="namespace" line="23" lineend="308" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="25" lineend="27" name="package_name" signature="self.package_name" />
        <scope attributes="__classmethod__" ilk="function" line="29" lineend="35" name="package_version" signature="self.package_version" />
        <scope ilk="namespace" line="37" lineend="75" name="ConfigMethod">
          <scope ilk="function" line="40" lineend="42" name="__pathname" signature="__pathname" />
          <scope ilk="function" line="45" lineend="47" name="__cget_cmd" signature="__cget_cmd" />
          <scope ilk="function" line="49" lineend="51" name="__config_cmd" signature="__config_cmd" />
          <scope ilk="function" line="54" lineend="57" name="__configinfo_struct" signature="__configinfo_struct" />
          <scope ilk="function" line="60" lineend="62" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="65" lineend="68" name="__strval_optkeys" signature="__strval_optkeys" />
          <scope ilk="function" line="71" lineend="73" name="__listval_optkeys" signature="__listval_optkeys" />
        </scope>
        <scope classrefs="TkcItem" ilk="class" line="78" lineend="85" name="PieChartObj">
          <scope ilk="function" line="81" lineend="83" name="__font_optkeys" signature="__font_optkeys" />
          <import symbol="ConfigMethod" />
        </scope>
        <scope classrefs="TkcItem" ilk="class" line="88" lineend="154" name="Pie">
          <scope ilk="function" line="91" lineend="107" name="create_self" signature="create_self(x, y, width, height, keys=None)" />
          <scope ilk="function" line="110" lineend="112" name="tag_key" signature="tag_key" />
          <scope ilk="function" line="113" lineend="115" name="tag" signature="tag" />
          <scope ilk="function" line="116" lineend="118" name="canvas" signature="canvas" />
          <scope ilk="function" line="119" lineend="121" name="_entry_slice" signature="_entry_slice(slice)" />
          <scope ilk="function" line="122" lineend="124" name="_delete_slice" signature="_delete_slice(slice)" />
          <scope ilk="function" line="126" lineend="130" name="delete" signature="delete" />
          <scope ilk="function" line="132" lineend="134" name="new_slice" signature="new_slice(text=None)" />
          <scope ilk="function" line="136" lineend="146" name="delete_slice" signature="delete_slice(slice)" />
          <scope ilk="function" line="148" lineend="153" name="selected_slices" signature="selected_slices" />
          <import symbol="ConfigMethod" />
        </scope>
        <scope classrefs="TkcItem" ilk="class" line="157" lineend="218" name="Slice">
          <scope ilk="function" line="160" lineend="162" name="__config_cmd" signature="__config_cmd" />
          <scope attributes="__ctor__" doc="------------------------" ilk="function" line="167" lineend="189" name="initialize" signature="initialize(pie, *args)" />
          <scope ilk="function" line="191" lineend="193" name="tag_key" signature="tag_key" />
          <scope ilk="function" line="194" lineend="196" name="tag" signature="tag" />
          <scope ilk="function" line="197" lineend="199" name="pie" signature="pie" />
          <scope ilk="function" line="201" lineend="206" name="delete" signature="delete" />
          <scope ilk="function" line="208" lineend="212" name="size" signature="size(share, disp=None)" />
          <scope ilk="function" line="214" lineend="217" name="label" signature="label(text)" />
          <import symbol="ConfigMethod" />
        </scope>
        <scope classrefs="TkcItem" ilk="class" line="221" lineend="245" name="BoxLabeler">
          <scope ilk="function" line="224" lineend="226" name="__config_cmd" signature="__config_cmd" />
          <scope doc="------------------------" ilk="function" line="231" lineend="243" name="create_self" signature="create_self(keys=None)" />
          <import symbol="ConfigMethod" />
        </scope>
        <scope classrefs="TkcItem" ilk="class" line="248" lineend="278" name="PeripheralLabeler">
          <scope ilk="function" line="251" lineend="253" name="__font_optkeys" signature="__font_optkeys" />
          <scope ilk="function" line="256" lineend="258" name="__config_cmd" signature="__config_cmd" />
          <scope doc="------------------------" ilk="function" line="263" lineend="276" name="create_self" signature="create_self(keys=None)" />
          <import symbol="ConfigMethod" />
        </scope>
        <scope classrefs="TkcItem" ilk="class" line="281" lineend="307" name="Label">
          <scope ilk="function" line="284" lineend="286" name="__config_cmd" signature="__config_cmd" />
          <scope doc="------------------------" ilk="function" line="291" lineend="305" name="create_self" signature="create_self(x, y, keys=None)" />
          <import symbol="ConfigMethod" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/tablelist_tile">
      <import line="8" module="tk" symbol="*" />
      <import line="9" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;tablelist_tile&apos;, &apos;4.2&apos;)" ilk="namespace" line="20" lineend="25" name="Tk">
        <scope ilk="namespace" line="21" lineend="24" name="Tcllib" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/tablelist_core">
      <scope doc="tkextlib/tcllib/tablelist_core.rb" ilk="namespace" line="11" lineend="37" name="Tk">
        <scope ilk="namespace" line="12" lineend="36" name="Tcllib">
          <scope classrefs="TkWindow" ilk="class" line="13" lineend="34" name="Tablelist">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
            <scope attributes="__classmethod__" ilk="function" line="31" lineend="33" name="use_Tile?" signature="self.use_Tile? (Tk" />
          </scope>
        </scope>
      </scope>
      <scope ilk="namespace" line="39" lineend="123" name="Tk::Tcllib::">
        <scope ilk="function" line="42" lineend="48" name="_to_idx" signature="_to_idx(idx)" />
        <scope ilk="function" line="49" lineend="60" name="_from_idx" signature="_from_idx(idx)" />
        <scope ilk="function" line="63" lineend="65" name="__item_cget_cmd" signature="__item_cget_cmd(mixed_id)" />
        <scope ilk="function" line="66" lineend="68" name="__item_config_cmd" signature="__item_config_cmd(mixed_id)" />
        <scope ilk="function" line="70" lineend="72" name="cell_cget" signature="cell_cget(tagOrId, option)" />
        <scope ilk="function" line="73" lineend="75" name="cell_configure" signature="cell_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="76" lineend="78" name="cell_configinfo" signature="cell_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="79" lineend="81" name="current_cell_configinfo" signature="current_cell_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="87" lineend="89" name="column_cget" signature="column_cget(tagOrId, option)" />
        <scope ilk="function" line="90" lineend="92" name="column_configure" signature="column_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="93" lineend="95" name="column_configinfo" signature="column_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="96" lineend="98" name="current_column_configinfo" signature="current_column_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="104" lineend="106" name="row_cget" signature="row_cget(tagOrId, option)" />
        <scope ilk="function" line="107" lineend="109" name="row_configure" signature="row_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="110" lineend="112" name="row_configinfo" signature="row_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="113" lineend="115" name="current_row_configinfo" signature="current_row_configinfo(tagOrId, slot=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="125" lineend="674" name="Tk::Tcllib::">
        <scope ilk="function" line="133" lineend="140" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="145" lineend="147" name="__numval_optkeys" signature="__numval_optkeys" />
        <scope ilk="function" line="150" lineend="152" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="155" lineend="161" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="164" lineend="166" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="169" lineend="171" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="174" lineend="178" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
        <scope ilk="function" line="181" lineend="188" name="__ruby2val_optkeys" signature="__ruby2val_optkeys" />
        <scope ilk="function" line="191" lineend="193" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="198" lineend="204" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="207" lineend="211" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="214" lineend="220" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
        <scope ilk="function" line="223" lineend="226" name="__item_font_optkeys" signature="__item_font_optkeys(id)" />
        <scope ilk="function" line="231" lineend="234" name="activate" signature="activate(index)" />
        <scope ilk="function" line="236" lineend="239" name="activate_cell" signature="activate_cell(index)" />
        <scope ilk="function" line="242" lineend="253" name="get_attrib" signature="get_attrib(name=nil)" />
        <scope ilk="function" line="254" lineend="257" name="set_attrib" signature="set_attrib(*args)" />
        <scope ilk="function" line="259" lineend="261" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="263" lineend="265" name="bodypath" signature="bodypath" />
        <scope ilk="function" line="267" lineend="269" name="bodytag" signature="bodytag" />
        <scope ilk="function" line="271" lineend="274" name="cancel_editing" signature="cancel_editing" />
        <scope ilk="function" line="277" lineend="279" name="cellindex" signature="cellindex(idx)" />
        <scope ilk="function" line="281" lineend="284" name="cellselection_anchor" signature="cellselection_anchor(idx)" />
        <scope ilk="function" line="286" lineend="295" name="cellselection_clear" signature="cellselection_clear(first, last=nil)" />
        <scope ilk="function" line="297" lineend="299" name="cellselection_includes" signature="cellselection_includes(idx)" />
        <scope ilk="function" line="301" lineend="310" name="cellselection_set" signature="cellselection_set(first, last=nil)" />
        <scope ilk="function" line="312" lineend="314" name="columncount" signature="columncount" />
        <scope ilk="function" line="316" lineend="318" name="columnindex" signature="columnindex(idx)" />
        <scope ilk="function" line="320" lineend="323" name="containing" signature="containing(y)" />
        <scope ilk="function" line="325" lineend="335" name="containing_cell" signature="containing_cell(x, y)" />
        <scope ilk="function" line="338" lineend="341" name="containing_column" signature="containing_column(x)" />
        <scope ilk="function" line="344" lineend="346" name="curcellselection" signature="curcellselection" />
        <scope ilk="function" line="348" lineend="350" name="curselection" signature="curselection" />
        <scope ilk="function" line="352" lineend="361" name="delete_items" signature="delete_items(first, last=nil)" />
        <scope ilk="function" line="365" lineend="374" name="delete_columns" signature="delete_columns(first, last=nil)" />
        <scope ilk="function" line="377" lineend="380" name="edit_cell" signature="edit_cell(idx)" />
        <scope ilk="function" line="383" lineend="385" name="editwinpath" signature="editwinpath" />
        <scope ilk="function" line="387" lineend="389" name="entrypath" signature="entrypath" />
        <scope ilk="function" line="391" lineend="394" name="fill_column" signature="fill_column(idx, txt)" />
        <scope ilk="function" line="397" lineend="400" name="finish_editing" signature="finish_editing" />
        <scope ilk="function" line="403" lineend="411" name="get" signature="get(first, last=nil)" />
        <scope ilk="function" line="413" lineend="421" name="get_cells" signature="get_cells(first, last=nil)" />
        <scope ilk="function" line="424" lineend="432" name="get_columns" signature="get_columns(first, last=nil)" />
        <scope ilk="function" line="435" lineend="443" name="get_keys" signature="get_keys(first, last=nil)" />
        <scope ilk="function" line="446" lineend="448" name="imagelabelpath" signature="imagelabelpath(idx)" />
        <scope ilk="function" line="450" lineend="452" name="index" signature="index(idx)" />
        <scope ilk="function" line="454" lineend="457" name="insert" signature="insert(idx, *items)" />
        <scope ilk="function" line="459" lineend="462" name="insert_columnlist" signature="insert_columnlist(idx, columnlist)" />
        <scope ilk="function" line="465" lineend="468" name="insert_columns" signature="insert_columns(idx, *args)" />
        <scope ilk="function" line="471" lineend="474" name="insert_list" signature="insert_list(idx, list)" />
        <scope ilk="function" line="477" lineend="479" name="itemlistvar" signature="itemlistvar" />
        <scope ilk="function" line="481" lineend="483" name="labelpath" signature="labelpath(idx)" />
        <scope ilk="function" line="485" lineend="487" name="labels" signature="labels" />
        <scope ilk="function" line="489" lineend="492" name="move" signature="move(src, target)" />
        <scope ilk="function" line="494" lineend="497" name="move_column" signature="move_column(src, target)" />
        <scope ilk="function" line="500" lineend="502" name="nearest" signature="nearest(y)" />
        <scope ilk="function" line="504" lineend="506" name="nearest_cell" signature="nearest_cell(x, y)" />
        <scope ilk="function" line="509" lineend="511" name="nearest_column" signature="nearest_column(x)" />
        <scope ilk="function" line="514" lineend="517" name="reject_input" signature="reject_input" />
        <scope ilk="function" line="520" lineend="523" name="reset_sortinfo" signature="reset_sortinfo" />
        <scope ilk="function" line="526" lineend="529" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="531" lineend="534" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="536" lineend="539" name="see" signature="see(idx)" />
        <scope ilk="function" line="541" lineend="544" name="see_cell" signature="see_cell(idx)" />
        <scope ilk="function" line="547" lineend="550" name="see_column" signature="see_column(idx)" />
        <scope ilk="function" line="553" lineend="556" name="selection_anchor" signature="selection_anchor(idx)" />
        <scope ilk="function" line="558" lineend="567" name="selection_clear" signature="selection_clear(first, last=nil)" />
        <scope ilk="function" line="569" lineend="571" name="selection_includes" signature="selection_includes(idx)" />
        <scope ilk="function" line="573" lineend="582" name="selection_set" signature="selection_set(first, last=nil)" />
        <scope ilk="function" line="584" lineend="590" name="separatorpath" signature="separatorpath(idx=nil)" />
        <scope ilk="function" line="592" lineend="594" name="separators" signature="separators" />
        <scope ilk="function" line="596" lineend="598" name="size" signature="size" />
        <scope ilk="function" line="600" lineend="614" name="sort" signature="sort(order=nil)" />
        <scope ilk="function" line="615" lineend="618" name="sort_increasing" signature="sort_increasing" />
        <scope ilk="function" line="619" lineend="622" name="sort_decreasing" signature="sort_decreasing" />
        <scope ilk="function" line="626" lineend="640" name="sort_by_column" signature="sort_by_column(idx, order=nil)" />
        <scope ilk="function" line="641" lineend="644" name="sort_by_column_increasing" signature="sort_by_column_increasing(idx)" />
        <scope ilk="function" line="645" lineend="648" name="sort_by_column_decreasing" signature="sort_by_column_decreasing(idx)" />
        <scope ilk="function" line="650" lineend="653" name="sortcolumn" signature="sortcolumn" />
        <scope ilk="function" line="655" lineend="657" name="sortorder" signature="sortorder" />
        <scope ilk="function" line="659" lineend="668" name="toggle_visibility" signature="toggle_visibility(first, last=nil)" />
        <scope ilk="function" line="671" lineend="673" name="windowpath" signature="windowpath(idx)" />
        <import symbol="Tk::Tcllib::" />
        <import symbol="Scrollable" />
      </scope>
      <scope classrefs="Object" ilk="class" line="676" lineend="770" name="Tk::Tcllib::">
        <scope doc="helper commands" ilk="function" line="679" lineend="681" name="getTablelistPath" signature="getTablelistPath(descendant)" />
        <scope ilk="function" line="683" lineend="685" name="convEventFields" signature="convEventFields(descendant, x, y)" />
        <scope doc="with the BWidget package" ilk="function" line="690" lineend="692" name="addBWidgetEntry" signature="addBWidgetEntry(name=None)" />
        <scope ilk="function" line="694" lineend="696" name="addBWidgetSpinBox" signature="addBWidgetSpinBox(name=None)" />
        <scope ilk="function" line="698" lineend="700" name="addBWidgetComboBox" signature="addBWidgetComboBox(name=None)" />
        <scope doc="with the Iwidgets ([incr Widgets]) package" ilk="function" line="705" lineend="707" name="addIncrEntryfield" signature="addIncrEntryfield(name=None)" />
        <scope ilk="function" line="709" lineend="717" name="addIncrDateTimeWidget" signature="addIncrDateTimeWidget(type, seconds=false, name=None)" />
        <scope ilk="function" line="719" lineend="721" name="addIncrSpinner" signature="addIncrSpinner(name=None)" />
        <scope ilk="function" line="723" lineend="725" name="addIncrSpinint" signature="addIncrSpinint(name=None)" />
        <scope ilk="function" line="727" lineend="729" name="addIncrCombobox" signature="addIncrCombobox(name=None)" />
        <scope doc="with Bryan Oakley&apos;s combobox package" ilk="function" line="734" lineend="736" name="addOakleyCombobox" signature="addOakleyCombobox(name=None)" />
        <scope doc="with the multi-entry package Mentry is a library extension" ilk="function" line="740" lineend="747" name="addDateMentry" signature="addDateMentry(format, separator, gmt=false, name=None)" />
        <scope ilk="function" line="749" lineend="756" name="addTimeMentry" signature="addTimeMentry(format, separator, gmt=false, name=None)" />
        <scope ilk="function" line="758" lineend="765" name="addFixedPointMentry" signature="addFixedPointMentry(count1, count2, comma=false, name=None)" />
        <scope ilk="function" line="767" lineend="769" name="addIPAddrMentry" signature="addIPAddrMentry(name=None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/tablelist">
      <import line="8" module="tk" symbol="*" />
      <import line="9" module="tkextlib/tcllib.rb" symbol="*" />
      <import line="18" module="tkextlib/tcllib/tablelist_tile" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/swaplist">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;swaplist&apos;, &apos;0.1&apos;)" ilk="namespace" line="15" lineend="30" name="Tk::Tcllib">
        <scope classrefs="TkWindow" ilk="class" line="16" lineend="29" name="Swaplist_Dialog">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="20" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="28" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="33" lineend="147" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="42" name="show" signature="self.show(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="43" lineend="45" name="display" signature="self.display(*args)" />
        <scope attributes="__ctor__" ilk="function" line="47" lineend="68" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="70" lineend="72" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="75" lineend="81" name="show" signature="show" />
        <scope ilk="function" line="84" lineend="86" name="status" signature="status" />
        <scope ilk="function" line="88" lineend="90" name="value" signature="value" />
        <scope ilk="function" line="93" lineend="102" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="104" lineend="129" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="131" lineend="146" name="configinfo" signature="configinfo(slot = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/superframe">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget::superframe&apos;, &apos;1.0&apos;)" ilk="namespace" line="15" lineend="33" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="32" name="Widget">
          <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="SuperFrame">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="51" name="Tk::Tcllib::">
        <scope ilk="function" line="38" lineend="45" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="48" lineend="50" name="labelwidget" signature="labelwidget" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/style">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="tkextlib/tcllib/style.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="12" lineend="39" name="Tk::Tcllib">
        <scope ilk="namespace" line="13" lineend="38" name="Style">
          <scope attributes="__classmethod__" ilk="function" line="15" lineend="17" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="25" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="not_available" signature="self.not_available" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="33" name="names" signature="self.names" />
          <scope attributes="__classmethod__" ilk="function" line="35" lineend="37" name="use" signature="self.use(style)" />
        </scope>
      </scope>
      <scope doc="TkPackage.require(&apos;style&apos;, &apos;0.1&apos;) TkPackage.require(&apos;style&apos;,&#xA;&apos;0.3&apos;)" ilk="namespace" line="45" lineend="61" name="Tk::Tcllib">
        <scope classrefs="Object" ilk="class" line="46" lineend="48" name="Style" />
        <scope ilk="namespace" line="50" lineend="60" name="Style">
          <scope attributes="__classmethod__" ilk="function" line="53" lineend="55" name="names" signature="self.names" />
          <scope attributes="__classmethod__" ilk="function" line="57" lineend="59" name="use" signature="self.use(style)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/scrollwin">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget::scrolledwindow&apos;, &apos;1.0&apos;)" ilk="namespace" line="15" lineend="33" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="32" name="Widget">
          <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="ScrolledWindow">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="61" name="Tk::Tcllib::">
        <scope ilk="function" line="38" lineend="40" name="__numlistval_optkeys" signature="__numlistval_optkeys" />
        <scope ilk="function" line="43" lineend="50" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="53" lineend="55" name="get_frame" signature="get_frame" />
        <scope ilk="function" line="57" lineend="60" name="set_widget" signature="set_widget(widget)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/screenruler">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget::screenruler&apos;, &apos;1.1&apos;)" ilk="namespace" line="15" lineend="33" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="32" name="Widget">
          <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="ScreenRuler">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="68" name="Tk::Tcllib::">
        <scope ilk="function" line="38" lineend="40" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="43" lineend="45" name="__numlistval_optkeys" signature="__numlistval_optkeys" />
        <scope ilk="function" line="48" lineend="55" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="58" lineend="61" name="display" signature="display" />
        <scope ilk="function" line="64" lineend="67" name="hide" signature="hide" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/ruler">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget::ruler&apos;, &apos;1.0&apos;)" ilk="namespace" line="15" lineend="32" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="31" name="Widget">
          <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="Ruler">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="34" lineend="65" name="Tk::Tcllib::">
        <scope ilk="function" line="37" lineend="39" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="42" lineend="44" name="__numlistval_optkeys" signature="__numlistval_optkeys" />
        <scope ilk="function" line="47" lineend="54" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="57" lineend="60" name="redraw" signature="redraw" />
        <scope ilk="function" line="62" lineend="64" name="shade" signature="shade(org, dest, frac)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/plotchart">
      <import line="60" module="tk" symbol="*" />
      <import line="61" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;Plotchart&apos;, &apos;0.9&apos;)&#xA;TkPackage.require(&apos;Plotchart&apos;, &apos;1.1&apos;)" ilk="namespace" line="67" lineend="84" name="Tk">
        <scope ilk="namespace" line="68" lineend="83" name="Tcllib">
          <scope ilk="namespace" line="69" lineend="82" name="Plotchart">
            <scope attributes="__classmethod__" ilk="function" line="71" lineend="73" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="75" lineend="81" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope ilk="namespace" line="86" lineend="865" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="89" lineend="91" name="view_port" signature="self.view_port(w, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="93" lineend="96" name="world_coordinates" signature="self.world_coordinates(w, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="98" lineend="102" name="world_3D_coordinates" signature="self.world_3D_coordinates(w, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="104" lineend="106" name="coords_to_pixel" signature="self.coords_to_pixel(w, x, y)" />
        <scope attributes="__classmethod__" ilk="function" line="108" lineend="110" name="coords_3D_to_pixel" signature="self.coords_3D_to_pixel(w, x, y, z)" />
        <scope attributes="__classmethod__" ilk="function" line="112" lineend="114" name="polar_coordinates" signature="self.polar_coordinates(w, radmax)" />
        <scope attributes="__classmethod__" ilk="function" line="116" lineend="118" name="polar_to_pixel" signature="self.polar_to_pixel(w, rad, phi)" />
        <scope attributes="__classmethod__" ilk="function" line="120" lineend="122" name="pixel_to_coords" signature="self.pixel_to_coords(w, x, y)" />
        <scope attributes="__classmethod__" ilk="function" line="124" lineend="126" name="determine_scale" signature="self.determine_scale(w, xmax, ymax)" />
        <scope attributes="__classmethod__" ilk="function" line="128" lineend="130" name="set_zoom_pan" signature="self.set_zoom_pan(w)" />
        <scope ilk="namespace" line="133" lineend="225" name="ChartMethod">
          <scope ilk="function" line="136" lineend="139" name="title" signature="title(str)" />
          <scope ilk="function" line="141" lineend="144" name="save_plot" signature="save_plot(filename)" />
          <scope ilk="function" line="146" lineend="149" name="xtext" signature="xtext(str)" />
          <scope ilk="function" line="151" lineend="154" name="ytext" signature="ytext(str)" />
          <scope ilk="function" line="156" lineend="164" name="xconfig" signature="xconfig(key, value=None)" />
          <scope ilk="function" line="166" lineend="174" name="yconfig" signature="yconfig(key, value=None)" />
          <scope ilk="function" line="177" lineend="180" name="view_port" signature="view_port(*args)" />
          <scope ilk="function" line="182" lineend="186" name="world_coordinates" signature="world_coordinates(*args)" />
          <scope ilk="function" line="188" lineend="193" name="world_3D_coordinates" signature="world_3D_coordinates(*args)" />
          <scope ilk="function" line="195" lineend="197" name="coords_to_pixel" signature="coords_to_pixel(x, y)" />
          <scope ilk="function" line="199" lineend="201" name="coords_3D_to_pixel" signature="coords_3D_to_pixel(x, y, z)" />
          <scope ilk="function" line="203" lineend="206" name="polar_coordinates" signature="polar_coordinates(radmax)" />
          <scope ilk="function" line="208" lineend="210" name="polar_to_pixel" signature="polar_to_pixel(rad, phi)" />
          <scope ilk="function" line="212" lineend="214" name="pixel_to_coords" signature="pixel_to_coords(x, y)" />
          <scope ilk="function" line="216" lineend="219" name="determine_scale" signature="determine_scale(xmax, ymax)" />
          <scope ilk="function" line="221" lineend="224" name="set_zoom_pan" signature="set_zoom_pan()" />
        </scope>
        <scope classrefs="TkCanvas" ilk="class" line="228" lineend="329" name="XYPlot">
          <scope attributes="__ctor__" ilk="function" line="236" lineend="258" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="260" lineend="264" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="267" lineend="269" name="__destroy_hook__" signature="__destroy_hook__" />
          <scope ilk="function" line="271" lineend="274" name="plot" signature="plot(series, x, y)" />
          <scope ilk="function" line="276" lineend="284" name="contourlines" signature="contourlines(xcrd, ycrd, vals, clss=None)" />
          <scope ilk="function" line="286" lineend="294" name="contourfill" signature="contourfill(xcrd, ycrd, vals, klasses=None)" />
          <scope ilk="function" line="296" lineend="304" name="contourbox" signature="contourbox(xcrd, ycrd, vals, klasses=None)" />
          <scope ilk="function" line="306" lineend="311" name="color_map" signature="color_map(colors)" />
          <scope ilk="function" line="313" lineend="319" name="grid_cells" signature="grid_cells(xcrd, ycrd)" />
          <scope ilk="function" line="321" lineend="328" name="dataconfig" signature="dataconfig(series, key, value=None)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="XYPlot" ilk="class" line="332" lineend="337" name="Stripchart" />
        <scope classrefs="TkCanvas" ilk="class" line="340" lineend="394" name="PolarPlot">
          <scope attributes="__ctor__" ilk="function" line="348" lineend="367" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="369" lineend="373" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="376" lineend="378" name="__destroy_hook__" signature="__destroy_hook__" />
          <scope ilk="function" line="380" lineend="384" name="plot" signature="plot(series, radius, angle)" />
          <scope ilk="function" line="386" lineend="393" name="dataconfig" signature="dataconfig(series, key, value=None)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="TkCanvas" ilk="class" line="398" lineend="474" name="IsometricPlot">
          <scope attributes="__ctor__" ilk="function" line="406" lineend="441" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="443" lineend="448" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="451" lineend="453" name="plot" signature="plot(type, *args)" />
          <scope ilk="function" line="455" lineend="458" name="plot_rectangle" signature="plot_rectangle(*args)" />
          <scope ilk="function" line="460" lineend="463" name="plot_filled_rectangle" signature="plot_filled_rectangle(*args)" />
          <scope ilk="function" line="465" lineend="468" name="plot_circle" signature="plot_circle(*args)" />
          <scope ilk="function" line="470" lineend="473" name="plot_filled_circle" signature="plot_filled_circle(*args)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="TkCanvas" ilk="class" line="478" lineend="557" name="Plot3D">
          <scope attributes="__ctor__" ilk="function" line="486" lineend="511" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="513" lineend="519" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="522" lineend="526" name="plot_function" signature="plot_function(cmd=Proc.new)" />
          <scope ilk="function" line="528" lineend="533" name="plot_funcont" signature="plot_funcont(conts, cmd=Proc.new)" />
          <scope ilk="function" line="535" lineend="538" name="grid_size" signature="grid_size(nxcells, nycells)" />
          <scope ilk="function" line="540" lineend="547" name="plot_data" signature="plot_data(dat)" />
          <scope ilk="function" line="549" lineend="553" name="colour" signature="colour(fill, border)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="TkCanvas" ilk="class" line="560" lineend="588" name="Piechart">
          <scope attributes="__ctor__" ilk="function" line="568" lineend="576" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="578" lineend="581" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="584" lineend="587" name="plot" signature="plot(*dat)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="TkCanvas" ilk="class" line="591" lineend="664" name="Barchart">
          <scope attributes="__ctor__" ilk="function" line="599" lineend="637" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="639" lineend="644" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="647" lineend="649" name="__destroy_hook__" signature="__destroy_hook__" />
          <scope ilk="function" line="651" lineend="654" name="plot" signature="plot(series, dat, col=None)" />
          <scope ilk="function" line="656" lineend="660" name="colours" signature="colours(*cols)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="Barchart" ilk="class" line="667" lineend="672" name="HorizontalBarchart" />
        <scope classrefs="TkCanvas" ilk="class" line="675" lineend="733" name="Timechart">
          <scope attributes="__ctor__" ilk="function" line="683" lineend="710" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="712" lineend="716" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="719" lineend="722" name="period" signature="period(txt, time_begin, time_end, col=None)" />
          <scope ilk="function" line="724" lineend="727" name="milestone" signature="milestone(txt, time, col=None)" />
          <scope ilk="function" line="729" lineend="732" name="vertline" signature="vertline(txt, time)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="TkCanvas" ilk="class" line="736" lineend="832" name="Gnattchart">
          <scope attributes="__ctor__" ilk="function" line="744" lineend="783" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="785" lineend="789" name="_create_chart" signature="_create_chart" />
          <scope ilk="function" line="792" lineend="797" name="task" signature="task(txt, time_begin, time_end, completed=0.0)" />
          <scope ilk="function" line="799" lineend="802" name="milestone" signature="milestone(txt, time, col=None)" />
          <scope ilk="function" line="804" lineend="807" name="vertline" signature="vertline(txt, time)" />
          <scope ilk="function" line="809" lineend="815" name="connect" signature="connect(from_task, to_task)" />
          <scope ilk="function" line="817" lineend="821" name="summary" signature="summary(txt, tasks)" />
          <scope ilk="function" line="823" lineend="826" name="color_of_part" signature="color_of_part(keyword, newcolor)" />
          <scope ilk="function" line="828" lineend="831" name="font_of_part" signature="font_of_part(keyword, newfont)" />
          <import symbol="ChartMethod" />
        </scope>
        <scope classrefs="TkObject" ilk="class" line="835" lineend="864" name="PlotSeries">
          <scope attributes="__classmethod__" ilk="function" line="840" lineend="844" name="id2obj" signature="self.id2obj(chart, id)" />
          <scope attributes="__ctor__" ilk="function" line="846" lineend="855" name="initialize" signature="initialize(chart, keys=nil)" />
          <scope ilk="function" line="857" lineend="859" name="plot" signature="plot(*args)" />
          <scope ilk="function" line="861" lineend="863" name="dataconfig" signature="dataconfig(key, value=None)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/panelframe">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget::panelframe&apos;, &apos;1.0&apos;)" ilk="namespace" line="15" lineend="33" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="32" name="Widget">
          <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="PanelFrame">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="72" name="Tk::Tcllib::">
        <scope ilk="function" line="38" lineend="45" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="48" lineend="50" name="add" signature="add(what, *args)" />
        <scope doc="def get_frame window(tk_send(&apos;getframe&apos;)) end" ilk="function" line="56" lineend="59" name="set_widget" signature="set_widget(widget)" />
        <scope ilk="function" line="61" lineend="63" name="remove" signature="remove(*wins)" />
        <scope ilk="function" line="64" lineend="66" name="remove_destroy" signature="remove_destroy(*wins)" />
        <scope ilk="function" line="69" lineend="71" name="items" signature="items" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/ip_entry">
      <import line="13" module="tk" symbol="*" />
      <import line="14" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;ipentry&apos;, &apos;0.1&apos;)" ilk="namespace" line="19" lineend="37" name="Tk">
        <scope ilk="namespace" line="20" lineend="36" name="Tcllib">
          <scope classrefs="TkEntry" ilk="class" line="21" lineend="34" name="IP_Entry">
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="27" lineend="33" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="39" lineend="66" name="Tk::Tcllib::">
        <scope ilk="function" line="44" lineend="51" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="54" lineend="56" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="59" lineend="61" name="complete?" signature="complete?" />
        <scope ilk="function" line="63" lineend="65" name="insert" signature="insert(*ip)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/ico">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tk/image" symbol="*" />
      <import line="11" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;ico&apos;, &apos;0.3&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Tcllib">
          <scope classrefs="TkImage" ilk="class" line="18" lineend="31" name="ICO">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="114" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="39" name="list" signature="self.list(file, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="41" lineend="43" name="get" signature="self.get(file, index, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="45" lineend="49" name="get_image" signature="self.get_image(file, index, keys={})" />
        <scope attributes="__classmethod__" ilk="function" line="51" lineend="55" name="get_data" signature="self.get_data(file, index, keys={})" />
        <scope attributes="__classmethod__" ilk="function" line="57" lineend="60" name="write" signature="self.write(file, index, depth, data, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="62" lineend="66" name="copy" signature="self.copy(from_file, from_index, to_file, to_index, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="68" lineend="71" name="exe_to_ico" signature="self.exe_to_ico(exe_file, ico_file, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="73" lineend="75" name="clear_cache" signature="self.clear_cache(file=None)" />
        <scope attributes="__classmethod__" ilk="function" line="77" lineend="84" name="transparent_color" signature="self.transparent_color(image, color)" />
        <scope attributes="__classmethod__" ilk="function" line="86" lineend="88" name="show" signature="self.show(file, keys=nil)" />
        <scope attributes="__ctor__" ilk="function" line="92" lineend="103" name="initialize" signature="initialize(file, index, keys=nil)" />
        <scope ilk="function" line="105" lineend="108" name="write" signature="write(file, index, depth, keys=nil)" />
        <scope ilk="function" line="110" lineend="113" name="transparent_color" signature="transparent_color(color)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/history">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tk/entry" symbol="*" />
      <import line="11" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;history&apos;, &apos;0.1&apos;)" ilk="namespace" line="16" lineend="31" name="Tk::Tcllib">
        <scope ilk="namespace" line="17" lineend="30" name="History">
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope ilk="namespace" line="33" lineend="73" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="39" name="init" signature="self.init(entry, length=None)" />
        <scope attributes="__classmethod__" ilk="function" line="41" lineend="44" name="remove" signature="self.remove(entry)" />
        <scope ilk="function" line="46" lineend="49" name="history_remove" signature="history_remove" />
        <scope ilk="function" line="51" lineend="54" name="history_add" signature="history_add(text)" />
        <scope ilk="function" line="56" lineend="58" name="history_get" signature="history_get" />
        <scope ilk="function" line="60" lineend="63" name="history_clear" signature="history_clear" />
        <scope ilk="function" line="65" lineend="68" name="history_configure" signature="history_configure(opt, value)" />
        <scope ilk="function" line="70" lineend="72" name="history_configinfo" signature="history_configinfo(opt)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/getstring">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tk/entry" symbol="*" />
      <import line="11" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;getstring&apos;, &apos;0.1&apos;)" ilk="namespace" line="16" lineend="31" name="Tk::Tcllib">
        <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="GetString_Dialog">
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="34" lineend="131" name="Tk::Tcllib::">
        <scope attributes="__classmethod__" ilk="function" line="39" lineend="43" name="show" signature="self.show(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="44" lineend="46" name="display" signature="self.display(*args)" />
        <scope attributes="__ctor__" ilk="function" line="48" lineend="68" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="70" lineend="72" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="75" lineend="79" name="show" signature="show" />
        <scope ilk="function" line="82" lineend="84" name="status" signature="status" />
        <scope ilk="function" line="86" lineend="88" name="value" signature="value" />
        <scope ilk="function" line="90" lineend="97" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="99" lineend="120" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="122" lineend="130" name="configinfo" signature="configinfo(slot = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/dialog">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;widget::dialog&apos;, &apos;1.2&apos;)" ilk="namespace" line="15" lineend="32" name="Tk::Tcllib">
        <scope ilk="namespace" line="16" lineend="31" name="Widget">
          <scope classrefs="TkWindow" ilk="class" line="17" lineend="30" name="Dialog">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="34" lineend="84" name="Tk::Tcllib::">
        <scope ilk="function" line="37" lineend="39" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="42" lineend="49" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="52" lineend="54" name="add" signature="add(what, *args)" />
        <scope ilk="function" line="56" lineend="58" name="get_frame" signature="get_frame" />
        <scope ilk="function" line="60" lineend="63" name="set_widget" signature="set_widget(widget)" />
        <scope ilk="function" line="65" lineend="68" name="display" signature="display" />
        <scope ilk="function" line="71" lineend="74" name="cancel" signature="cancel" />
        <scope ilk="function" line="76" lineend="78" name="close" signature="close(reason = None)" />
        <scope ilk="function" line="80" lineend="83" name="withdraw" signature="withdraw" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/datefield">
      <import line="18" module="tk" symbol="*" />
      <import line="19" module="tk/entry" symbol="*" />
      <import line="20" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;datefield&apos;, &apos;0.1&apos;)" ilk="namespace" line="25" lineend="43" name="Tk">
        <scope ilk="namespace" line="26" lineend="42" name="Tcllib">
          <scope classrefs="TkEntry" ilk="class" line="27" lineend="40" name="Datefield">
            <scope attributes="__classmethod__" ilk="function" line="29" lineend="31" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="33" lineend="39" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="45" lineend="57" name="Tk::Tcllib::">
        <scope ilk="function" line="48" lineend="55" name="create_self" signature="create_self(keys)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/cursor">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="tkextlib/tcllib/cursor.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="12" lineend="53" name="Tk">
        <scope ilk="namespace" line="13" lineend="44" name="Tcllib">
          <scope ilk="namespace" line="14" lineend="43" name="Cursor">
            <scope attributes="__classmethod__" ilk="function" line="16" lineend="18" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="26" name="package_version" signature="self.package_version" />
            <scope attributes="__classmethod__" ilk="function" line="28" lineend="30" name="not_available" signature="self.not_available" />
            <scope attributes="__classmethod__" ilk="function" line="32" lineend="34" name="cursor_display" signature="self.cursor_display(win=None)" />
            <scope attributes="__classmethod__" ilk="function" line="36" lineend="38" name="cursor_propagate" signature="self.cursor_propagate(win, cursor)" />
            <scope attributes="__classmethod__" ilk="function" line="40" lineend="42" name="cursor_restore" signature="self.cursor_restore(win, cursor = None)" />
          </scope>
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="46" lineend="52" name="cursor_display" signature="self.cursor_display(parent=None)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="55" lineend="69" name="TkWindow">
        <scope ilk="function" line="56" lineend="60" name="cursor_propagate" signature="cursor_propagate(cursor)" />
        <scope ilk="function" line="61" lineend="68" name="cursor_restore" signature="cursor_restore(cursor = None)" />
      </scope>
      <scope doc="TkPackage.require(&apos;cursor&apos;, &apos;0.1&apos;)" ilk="namespace" line="74" lineend="97" name="Tk">
        <scope ilk="namespace" line="75" lineend="96" name="Tcllib">
          <scope classrefs="Object" ilk="class" line="76" lineend="78" name="Cursor" />
          <scope ilk="namespace" line="80" lineend="95" name="Cursor">
            <scope attributes="__classmethod__" ilk="function" line="82" lineend="84" name="cursor_display" signature="self.cursor_display(win=None)" />
            <scope attributes="__classmethod__" ilk="function" line="86" lineend="89" name="cursor_propagate" signature="self.cursor_propagate(win, cursor)" />
            <scope attributes="__classmethod__" ilk="function" line="91" lineend="94" name="cursor_restore" signature="self.cursor_restore(win, cursor = None)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/ctext">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tk/text" symbol="*" />
      <import line="11" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;ctext&apos;, &apos;3.1&apos;)" ilk="namespace" line="16" lineend="33" name="Tk">
        <scope ilk="namespace" line="17" lineend="32" name="Tcllib">
          <scope classrefs="TkText" ilk="class" line="18" lineend="31" name="CText">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="24" lineend="30" name="package_version" signature="self.package_version" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="35" lineend="160" name="Tk::Tcllib::">
        <scope ilk="function" line="40" lineend="47" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="50" lineend="53" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="56" lineend="58" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="61" lineend="63" name="append" signature="append(*args)" />
        <scope ilk="function" line="65" lineend="67" name="copy" signature="copy" />
        <scope ilk="function" line="69" lineend="71" name="cut" signature="cut" />
        <scope ilk="function" line="73" lineend="75" name="fast_delete" signature="fast_delete(*args)" />
        <scope ilk="function" line="77" lineend="79" name="fast_insert" signature="fast_insert(*args)" />
        <scope ilk="function" line="81" lineend="83" name="highlight" signature="highlight(*args)" />
        <scope ilk="function" line="85" lineend="87" name="paste" signature="paste" />
        <scope ilk="function" line="89" lineend="91" name="edit" signature="edit(*args)" />
        <scope ilk="function" line="93" lineend="96" name="add_highlight_class" signature="add_highlight_class(klass, col, *keywords)" />
        <scope ilk="function" line="98" lineend="102" name="add_highlight_class_for_special_chars" signature="add_highlight_class_for_special_chars(klass, col, *chrs)" />
        <scope ilk="function" line="104" lineend="108" name="add_highlight_class_for_regexp" signature="add_highlight_class_for_regexp(klass, col, tcl_regexp)" />
        <scope ilk="function" line="110" lineend="114" name="add_highlight_class_with_only_char_start" signature="add_highlight_class_with_only_char_start(klass, col, chr)" />
        <scope ilk="function" line="116" lineend="119" name="clear_highlight_classes" signature="clear_highlight_classes" />
        <scope ilk="function" line="121" lineend="123" name="get_highlight_classes" signature="get_highlight_classes" />
        <scope ilk="function" line="125" lineend="128" name="delete_highlight_class" signature="delete_highlight_class(klass)" />
        <scope ilk="function" line="130" lineend="133" name="enable_C_comments" signature="enable_C_comments" />
        <scope ilk="function" line="135" lineend="138" name="disable_C_comments" signature="disable_C_comments" />
        <scope ilk="function" line="140" lineend="142" name="find_next_char" signature="find_next_char(idx, chr)" />
        <scope ilk="function" line="144" lineend="146" name="find_next_space" signature="find_next_space(idx)" />
        <scope ilk="function" line="148" lineend="150" name="find_previous_space" signature="find_previous_space(idx)" />
        <scope ilk="function" line="152" lineend="155" name="set_update_proc" signature="set_update_proc(cmd=Proc.new)" />
        <scope ilk="function" line="157" lineend="159" name="modified?" signature="modified?(mode)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/tcllib/autoscroll">
      <import line="27" module="tk" symbol="*" />
      <import line="28" module="tk/scrollbar" symbol="*" />
      <import line="29" module="tkextlib/tcllib.rb" symbol="*" />
      <scope doc="tkextlib/tcllib/autoscroll.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="31" lineend="60" name="Tk">
        <scope ilk="namespace" line="32" lineend="59" name="Tcllib">
          <scope ilk="namespace" line="33" lineend="58" name="Autoscroll">
            <scope attributes="__classmethod__" ilk="function" line="35" lineend="37" name="package_name" signature="self.package_name" />
            <scope attributes="__classmethod__" ilk="function" line="39" lineend="45" name="package_version" signature="self.package_version" />
            <scope attributes="__classmethod__" ilk="function" line="47" lineend="49" name="not_available" signature="self.not_available" />
            <scope attributes="__classmethod__" ilk="function" line="51" lineend="53" name="autoscroll" signature="self.autoscroll(win)" />
            <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="unautoscroll" signature="self.unautoscroll(win)" />
          </scope>
        </scope>
      </scope>
      <scope ilk="namespace" line="62" lineend="109" name="Tk">
        <scope ilk="namespace" line="63" lineend="108" name="Scrollable">
          <scope ilk="function" line="64" lineend="85" name="autoscroll" signature="autoscroll(mode = nil)" />
          <scope ilk="function" line="86" lineend="107" name="unautoscroll" signature="unautoscroll(mode = nil)" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="111" lineend="125" name="TkScrollbar">
        <scope ilk="function" line="112" lineend="118" name="autoscroll" signature="autoscroll" />
        <scope ilk="function" line="119" lineend="124" name="unautoscroll" signature="unautoscroll" />
      </scope>
      <scope doc="TkPackage.require(&apos;autoscroll&apos;, &apos;1.0&apos;)&#xA;TkPackage.require(&apos;autoscroll&apos;, &apos;1.1&apos;)" ilk="namespace" line="131" lineend="158" name="Tk">
        <scope ilk="namespace" line="132" lineend="157" name="Tcllib">
          <scope classrefs="Object" ilk="class" line="133" lineend="135" name="Autoscroll" />
          <scope ilk="namespace" line="137" lineend="156" name="Autoscroll">
            <scope attributes="__classmethod__" ilk="function" line="139" lineend="141" name="autoscroll" signature="self.autoscroll(win)" />
            <scope attributes="__classmethod__" ilk="function" line="143" lineend="145" name="unautoscroll" signature="self.unautoscroll(win)" />
            <scope attributes="__classmethod__" ilk="function" line="147" lineend="150" name="wrap" signature="self.wrap" />
            <scope attributes="__classmethod__" ilk="function" line="152" lineend="155" name="unwrap" signature="self.unwrap" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/pkg_checker">
      <import line="7" module="tk" symbol="*" />
      <scope doc="hide root window" ilk="function" line="16" lineend="25" name="help_msg" signature="help_msg" />
      <scope ilk="function" line="66" lineend="89" name="get_pkg_list" signature="get_pkg_list(file)" />
      <scope ilk="function" line="91" lineend="141" name="check_pkg" signature="check_pkg(file, verbose=false)" />
      <scope ilk="function" line="143" lineend="159" name="subdir_check" signature="subdir_check(dir, verbose=false)" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/itcl" symbol="*" />
      <import line="8" module="tkextlib/itk" symbol="*" />
      <scope doc="call setup script for general &apos;tkextlib&apos; libraries require&#xA;&apos;tkextlib/setup.rb&apos; call setup script require&#xA;&apos;tkextlib/iwidgets/setup.rb&apos; load all image format handlers" ilk="namespace" line="20" lineend="94" name="Tk">
        <scope ilk="namespace" line="21" lineend="93" name="Iwidgets">
          <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="37" name="package_version" signature="self.package_version" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/watch">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/watch.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Watch" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="56" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="29" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="32" lineend="34" name="get_string" signature="get_string" />
        <scope ilk="function" line="37" lineend="39" name="get_clicks" signature="get_clicks" />
        <scope ilk="function" line="41" lineend="44" name="show" signature="show(time=None)" />
        <scope ilk="function" line="45" lineend="48" name="show_now" signature="show_now" />
        <scope ilk="function" line="50" lineend="55" name="watch" signature="watch(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/toolbar">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/toolbar.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Toolbar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="112" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="30" lineend="32" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="35" lineend="37" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="40" lineend="42" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="45" lineend="52" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="56" lineend="58" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="61" lineend="63" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="66" lineend="68" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="71" lineend="83" name="add" signature="add(type, tag=nil, keys={})" />
        <scope ilk="function" line="85" lineend="92" name="delete" signature="delete(idx1, idx2=nil)" />
        <scope ilk="function" line="94" lineend="96" name="index" signature="index(idx)" />
        <scope ilk="function" line="98" lineend="111" name="insert" signature="insert(idx, type, tag=nil, keys={})" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/timefield">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/timefield.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Timefield" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="58" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="36" lineend="38" name="get_string" signature="get_string" />
        <scope ilk="function" line="41" lineend="43" name="get_clicks" signature="get_clicks" />
        <scope ilk="function" line="45" lineend="47" name="valid?" signature="valid?" />
        <scope ilk="function" line="50" lineend="53" name="show" signature="show(time=None)" />
        <scope ilk="function" line="54" lineend="57" name="show_now" signature="show_now" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/timeentry">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/timeentry.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Timeentry" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="25" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/tabset">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/tabset.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Tabset" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="99" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="42" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="54" lineend="56" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="59" lineend="61" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="64" lineend="66" name="add" signature="add(keys={})" />
        <scope ilk="function" line="68" lineend="75" name="delete" signature="delete(idx1, idx2=nil)" />
        <scope ilk="function" line="77" lineend="79" name="index" signature="index(idx)" />
        <scope ilk="function" line="81" lineend="83" name="insert" signature="insert(idx, keys={})" />
        <scope ilk="function" line="85" lineend="88" name="next" signature="next" />
        <scope ilk="function" line="90" lineend="93" name="prev" signature="prev" />
        <scope ilk="function" line="95" lineend="98" name="select" signature="select(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/tabnotebook">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/tabnotebook.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Tabnotebook" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="169" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="37" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="40" lineend="47" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="59" lineend="61" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="64" lineend="66" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="69" lineend="72" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="74" lineend="76" name="add" signature="add(keys={})" />
        <scope ilk="function" line="78" lineend="80" name="child_site_list" signature="child_site_list" />
        <scope ilk="function" line="82" lineend="84" name="child_site" signature="child_site(idx)" />
        <scope ilk="function" line="86" lineend="93" name="delete" signature="delete(idx1, idx2=nil)" />
        <scope ilk="function" line="95" lineend="98" name="index" signature="index(idx)" />
        <scope ilk="function" line="100" lineend="102" name="insert" signature="insert(idx, keys={})" />
        <scope ilk="function" line="104" lineend="107" name="next" signature="next" />
        <scope ilk="function" line="109" lineend="112" name="prev" signature="prev" />
        <scope ilk="function" line="114" lineend="117" name="select" signature="select(idx)" />
        <scope ilk="function" line="119" lineend="122" name="scrollcommand" signature="scrollcommand(cmd=Proc.new)" />
        <scope ilk="function" line="126" lineend="135" name="xscrollbar" signature="xscrollbar(bar=nil)" />
        <scope ilk="function" line="136" lineend="145" name="yscrollbar" signature="yscrollbar(bar=nil)" />
        <scope ilk="function" line="148" lineend="155" name="view" signature="view(*index)" />
        <scope ilk="function" line="159" lineend="161" name="view_moveto" signature="view_moveto(*index)" />
        <scope ilk="function" line="164" lineend="166" name="view_scroll" signature="view_scroll(*index)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/spintime">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/spintime.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Spintime" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="48" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="get_string" signature="get_string" />
        <scope ilk="function" line="36" lineend="38" name="get_clicks" signature="get_clicks" />
        <scope ilk="function" line="40" lineend="43" name="show" signature="show(date=None)" />
        <scope ilk="function" line="44" lineend="47" name="show_now" signature="show_now" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/spinner">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/spinner.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Spinner" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="150" name="Tk::Iwidgets::">
        <scope classrefs="TkValidateCommand" ilk="class" line="25" lineend="46" name="EntryfieldValidate">
          <scope classrefs="TkUtil::CallbackSubst" doc="class CalCmdArgs &lt; TkUtil::CallbackSubst" ilk="class" line="27" lineend="41" name="ValidateArgs" />
          <scope attributes="__classmethod__" ilk="function" line="43" lineend="45" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope ilk="function" line="48" lineend="50" name="__validation_class_list" signature="__validation_class_list" />
        <scope ilk="function" line="56" lineend="59" name="up" signature="up" />
        <scope ilk="function" line="61" lineend="64" name="down" signature="down" />
        <scope ilk="function" line="66" lineend="69" name="clear" signature="clear" />
        <scope ilk="function" line="71" lineend="74" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="76" lineend="78" name="value" signature="value" />
        <scope ilk="function" line="79" lineend="83" name="value=" signature="value= (val)" />
        <scope ilk="function" line="87" lineend="91" name="cursor=" signature="cursor=(index)" />
        <scope ilk="function" line="94" lineend="96" name="index" signature="index(idx)" />
        <scope ilk="function" line="98" lineend="101" name="insert" signature="insert(pos,text)" />
        <scope ilk="function" line="103" lineend="106" name="mark" signature="mark(pos)" />
        <scope ilk="function" line="107" lineend="110" name="dragto" signature="dragto(pos)" />
        <scope ilk="function" line="111" lineend="114" name="selection_adjust" signature="selection_adjust(index)" />
        <scope ilk="function" line="115" lineend="118" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="119" lineend="122" name="selection_from" signature="selection_from(index)" />
        <scope ilk="function" line="123" lineend="125" name="selection_present" signature="selection_present()" />
        <scope ilk="function" line="126" lineend="129" name="selection_range" signature="selection_range(s, e)" />
        <scope ilk="function" line="130" lineend="133" name="selection_to" signature="selection_to(index)" />
        <scope doc="based on tk/scrollable.rb" ilk="function" line="136" lineend="143" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="144" lineend="146" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="147" lineend="149" name="xview_scroll" signature="xview_scroll(*index)" />
        <import symbol="Tk::ValidateConfigure" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/spinint">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/spinint.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Spinint" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="30" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__numlistval_optkeys" signature="__numlistval_optkeys" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/spindate">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/spindate.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Spindate" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="48" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="get_string" signature="get_string" />
        <scope ilk="function" line="36" lineend="38" name="get_clicks" signature="get_clicks" />
        <scope ilk="function" line="40" lineend="43" name="show" signature="show(date=None)" />
        <scope ilk="function" line="44" lineend="47" name="show_now" signature="show_now" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/shell">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/shell.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Shell" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="38" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="activate" signature="activate" />
        <scope ilk="function" line="25" lineend="28" name="center" signature="center(win=None)" />
        <scope ilk="function" line="30" lineend="32" name="child_site" signature="child_site" />
        <scope ilk="function" line="34" lineend="37" name="deactivate" signature="deactivate(val=None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/selectiondialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/selectiondialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Selectiondialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="92" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="child_site" signature="child_site" />
        <scope ilk="function" line="25" lineend="28" name="clear_items" signature="clear_items" />
        <scope ilk="function" line="30" lineend="33" name="clear_selection" signature="clear_selection" />
        <scope ilk="function" line="35" lineend="37" name="get" signature="get" />
        <scope ilk="function" line="39" lineend="41" name="insert_items" signature="insert_items(idx, *args)" />
        <scope ilk="function" line="43" lineend="45" name="insert_selection" signature="insert_selection(pos, text)" />
        <scope ilk="function" line="47" lineend="50" name="select_item" signature="select_item" />
        <scope doc="based on TkListbox ( and TkTextWin )" ilk="function" line="53" lineend="55" name="curselection" signature="curselection" />
        <scope ilk="function" line="56" lineend="59" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="60" lineend="62" name="index" signature="index(idx)" />
        <scope ilk="function" line="63" lineend="65" name="nearest" signature="nearest(y)" />
        <scope ilk="function" line="66" lineend="69" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="70" lineend="73" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="74" lineend="77" name="selection_anchor" signature="selection_anchor(index)" />
        <scope ilk="function" line="78" lineend="81" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="82" lineend="84" name="selection_includes" signature="selection_includes(index)" />
        <scope ilk="function" line="85" lineend="88" name="selection_set" signature="selection_set(first, last=None)" />
        <scope ilk="function" line="89" lineend="91" name="size" signature="size" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/selectionbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/selectionbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Selectionbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="102" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="child_site" signature="child_site" />
        <scope ilk="function" line="35" lineend="38" name="clear_items" signature="clear_items" />
        <scope ilk="function" line="40" lineend="43" name="clear_selection" signature="clear_selection" />
        <scope ilk="function" line="45" lineend="47" name="get" signature="get" />
        <scope ilk="function" line="49" lineend="51" name="insert_items" signature="insert_items(idx, *args)" />
        <scope ilk="function" line="53" lineend="55" name="insert_selection" signature="insert_selection(pos, text)" />
        <scope ilk="function" line="57" lineend="60" name="select_item" signature="select_item" />
        <scope doc="based on TkListbox ( and TkTextWin )" ilk="function" line="63" lineend="65" name="curselection" signature="curselection" />
        <scope ilk="function" line="66" lineend="69" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="70" lineend="72" name="index" signature="index(idx)" />
        <scope ilk="function" line="73" lineend="75" name="nearest" signature="nearest(y)" />
        <scope ilk="function" line="76" lineend="79" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="80" lineend="83" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="84" lineend="87" name="selection_anchor" signature="selection_anchor(index)" />
        <scope ilk="function" line="88" lineend="91" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="92" lineend="94" name="selection_includes" signature="selection_includes(index)" />
        <scope ilk="function" line="95" lineend="98" name="selection_set" signature="selection_set(first, last=None)" />
        <scope ilk="function" line="99" lineend="101" name="size" signature="size" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scrolledwidget">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/scrolledwidget.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Scrolledwidget" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="20" name="Tk::Iwidgets::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scrolledtext">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/text" symbol="*" />
      <import line="8" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/scrolledtext.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="12" lineend="13" name="Scrolledtext" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="538" name="Tk::Iwidgets::">
        <scope ilk="function" line="22" lineend="24" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="27" lineend="29" name="__font_optkeys" signature="__font_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="34" lineend="37" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="39" lineend="45" name="method_missing" signature="method_missing(id, *args)" />
        <scope ilk="function" line="49" lineend="51" name="child_site" signature="child_site" />
        <scope ilk="function" line="53" lineend="56" name="clear" signature="clear" />
        <scope ilk="function" line="58" lineend="65" name="import" signature="import(file, idx=nil)" />
        <scope ilk="function" line="67" lineend="70" name="export" signature="export(file)" />
        <scope ilk="function" line="76" lineend="82" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="85" lineend="87" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="88" lineend="91" name="compare" signature="compare(idx1, op, idx2)" />
        <scope ilk="function" line="93" lineend="95" name="debug" signature="debug" />
        <scope ilk="function" line="96" lineend="100" name="debug=" signature="debug=(boolean)" />
        <scope ilk="function" line="102" lineend="105" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="107" lineend="109" name="dlineinfo" signature="dlineinfo(index)" />
        <scope ilk="function" line="111" lineend="113" name="get" signature="get(*index)" />
        <scope ilk="function" line="114" lineend="117" name="get_displaychars" signature="get_displaychars(*index)" />
        <scope ilk="function" line="119" lineend="129" name="image_cget" signature="image_cget(index, slot)" />
        <scope ilk="function" line="131" lineend="143" name="image_configure" signature="image_configure(index, slot, value=None)" />
        <scope ilk="function" line="145" lineend="232" name="image_configinfo" signature="image_configinfo(index, slot = nil)" />
        <scope ilk="function" line="234" lineend="253" name="current_image_configinfo" signature="current_image_configinfo(index, slot = nil)" />
        <scope ilk="function" line="255" lineend="260" name="image_names" signature="image_names" />
        <scope ilk="function" line="262" lineend="264" name="index" signature="index(idx)" />
        <scope ilk="function" line="266" lineend="269" name="insert" signature="insert(index, *args)" />
        <scope ilk="function" line="271" lineend="276" name="mark_names" signature="mark_names" />
        <scope ilk="function" line="278" lineend="286" name="mark_gravity" signature="mark_gravity(mark, direction=nil)" />
        <scope ilk="function" line="288" lineend="292" name="mark_set" signature="mark_set(mark, index)" />
        <scope ilk="function" line="295" lineend="299" name="mark_unset" signature="mark_unset(*marks)" />
        <scope ilk="function" line="302" lineend="305" name="mark_next" signature="mark_next(index)" />
        <scope ilk="function" line="308" lineend="311" name="mark_previous" signature="mark_previous(index)" />
        <scope ilk="function" line="314" lineend="317" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="318" lineend="321" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="324" lineend="342" name="_ktext_length" signature="_ktext_length(txt)" />
        <scope ilk="function" line="345" lineend="363" name="tksearch" signature="tksearch(*args)" />
        <scope ilk="function" line="365" lineend="383" name="tksearch_with_count" signature="tksearch_with_count(*args)" />
        <scope ilk="function" line="385" lineend="440" name="search_with_length" signature="search_with_length(pat,start,stop=None)" />
        <scope ilk="function" line="442" lineend="444" name="search" signature="search(pat,start,stop=None)" />
        <scope ilk="function" line="446" lineend="496" name="rsearch_with_length" signature="rsearch_with_length(pat,start,stop=None)" />
        <scope ilk="function" line="498" lineend="500" name="rsearch" signature="rsearch(pat,start,stop=None)" />
        <scope ilk="function" line="502" lineend="505" name="see" signature="see(index)" />
        <scope ilk="function" line="509" lineend="516" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="517" lineend="519" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="520" lineend="522" name="xview_scroll" signature="xview_scroll(*index)" />
        <scope ilk="function" line="524" lineend="531" name="yview" signature="yview(*index)" />
        <scope ilk="function" line="532" lineend="534" name="yview_moveto" signature="yview_moveto(*index)" />
        <scope ilk="function" line="535" lineend="537" name="yview_scroll" signature="yview_scroll(*index)" />
        <import symbol="TkTextTagConfig" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scrolledlistbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/listbox" symbol="*" />
      <import line="8" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/scrolledlistbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="12" lineend="13" name="Scrolledlistbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="207" name="Tk::Iwidgets::">
        <scope ilk="function" line="22" lineend="24" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="27" lineend="29" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="32" lineend="34" name="__font_optkeys" signature="__font_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="39" lineend="42" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="44" lineend="50" name="method_missing" signature="method_missing(id, *args)" />
        <scope ilk="function" line="54" lineend="57" name="clear" signature="clear" />
        <scope ilk="function" line="59" lineend="61" name="get_curselection" signature="get_curselection" />
        <scope ilk="function" line="63" lineend="66" name="justify" signature="justify(dir)" />
        <scope ilk="function" line="68" lineend="70" name="selected_item_count" signature="selected_item_count" />
        <scope ilk="function" line="72" lineend="80" name="sort" signature="sort(*params, &amp;b)" />
        <scope ilk="function" line="81" lineend="84" name="sort_ascending" signature="sort_ascending" />
        <scope ilk="function" line="85" lineend="88" name="sort_descending" signature="sort_descending" />
        <scope ilk="function" line="92" lineend="94" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="95" lineend="98" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="99" lineend="101" name="get" signature="get(*index)" />
        <scope ilk="function" line="102" lineend="105" name="insert" signature="insert(index, *args)" />
        <scope ilk="function" line="106" lineend="109" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="110" lineend="113" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="114" lineend="117" name="see" signature="see(index)" />
        <scope ilk="function" line="123" lineend="129" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="134" lineend="137" name="activate" signature="activate(y)" />
        <scope ilk="function" line="138" lineend="140" name="curselection" signature="curselection" />
        <scope ilk="function" line="141" lineend="149" name="get" signature="get(first, last=nil)" />
        <scope ilk="function" line="150" lineend="152" name="nearest" signature="nearest(y)" />
        <scope ilk="function" line="153" lineend="155" name="size" signature="size" />
        <scope ilk="function" line="156" lineend="159" name="selection_anchor" signature="selection_anchor(index)" />
        <scope ilk="function" line="160" lineend="163" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="164" lineend="166" name="selection_includes" signature="selection_includes(index)" />
        <scope ilk="function" line="167" lineend="170" name="selection_set" signature="selection_set(first, last=None)" />
        <scope ilk="function" line="172" lineend="174" name="index" signature="index(idx)" />
        <scope ilk="function" line="178" lineend="185" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="186" lineend="188" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="189" lineend="191" name="xview_scroll" signature="xview_scroll(*index)" />
        <scope ilk="function" line="193" lineend="200" name="yview" signature="yview(*index)" />
        <scope ilk="function" line="201" lineend="203" name="yview_moveto" signature="yview_moveto(*index)" />
        <scope ilk="function" line="204" lineend="206" name="yview_scroll" signature="yview_scroll(*index)" />
        <import symbol="TkListItemConfig" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scrolledhtml">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/scrolledhtml.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Scrolledhtml" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="58" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="36" lineend="39" name="import" signature="import(href)" />
        <scope ilk="function" line="41" lineend="44" name="import_link" signature="import_link(href)" />
        <scope ilk="function" line="46" lineend="48" name="pwd" signature="pwd" />
        <scope ilk="function" line="50" lineend="53" name="render" signature="render(htmltext, workdir=None)" />
        <scope ilk="function" line="55" lineend="57" name="title" signature="title" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scrolledframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/scrolledframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Scrolledframe" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="59" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="child_site" signature="child_site" />
        <scope ilk="function" line="25" lineend="28" name="justify" signature="justify(dir)" />
        <scope ilk="function" line="30" lineend="37" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="38" lineend="40" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="41" lineend="43" name="xview_scroll" signature="xview_scroll(*index)" />
        <scope ilk="function" line="45" lineend="52" name="yview" signature="yview(*index)" />
        <scope ilk="function" line="53" lineend="55" name="yview_moveto" signature="yview_moveto(*index)" />
        <scope ilk="function" line="56" lineend="58" name="yview_scroll" signature="yview_scroll(*index)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scrolledcanvas">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/canvas" symbol="*" />
      <import line="8" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/scrolledcanvas.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="12" lineend="13" name="Scrolledcanvas" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="347" name="Tk::Iwidgets::">
        <scope ilk="function" line="24" lineend="26" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="34" lineend="37" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="39" lineend="45" name="method_missing" signature="method_missing(id, *args)" />
        <scope ilk="function" line="49" lineend="51" name="child_site" signature="child_site" />
        <scope ilk="function" line="53" lineend="56" name="justify" signature="justify(dir)" />
        <scope ilk="function" line="61" lineend="69" name="tagid" signature="tagid(tag)" />
        <scope doc="create a canvas item without creating a TkcItem object" ilk="function" line="73" lineend="75" name="create" signature="create(type, *args)" />
        <scope ilk="function" line="79" lineend="82" name="addtag" signature="addtag(tag, mode, *args)" />
        <scope ilk="function" line="83" lineend="85" name="addtag_above" signature="addtag_above(tagOrId, target)" />
        <scope ilk="function" line="86" lineend="88" name="addtag_all" signature="addtag_all(tagOrId)" />
        <scope ilk="function" line="89" lineend="91" name="addtag_below" signature="addtag_below(tagOrId, target)" />
        <scope ilk="function" line="92" lineend="94" name="addtag_closest" signature="addtag_closest(tagOrId, x, y, halo=None, start=None)" />
        <scope ilk="function" line="95" lineend="97" name="addtag_enclosed" signature="addtag_enclosed(tagOrId, x1, y1, x2, y2)" />
        <scope ilk="function" line="98" lineend="100" name="addtag_overlapping" signature="addtag_overlapping(tagOrId, x1, y1, x2, y2)" />
        <scope ilk="function" line="101" lineend="103" name="addtag_withtag" signature="addtag_withtag(tagOrId, tag)" />
        <scope ilk="function" line="105" lineend="108" name="bbox" signature="bbox(tagOrId, *tags)" />
        <scope doc="def itembind(tag, context, cmd=Proc.new, *args) _bind([path,&#xA;&quot;bind&quot;, tagid(tag)], context, cmd, *args) self end" ilk="function" line="114" lineend="123" name="itembind" signature="itembind(tag, context, *args)" />
        <scope doc="def itembind_append(tag, context, cmd=Proc.new, *args)&#xA;_bind_append([path, &quot;bind&quot;, tagid(tag)], context, cmd,&#xA;*args) self end" ilk="function" line="129" lineend="138" name="itembind_append" signature="itembind_append(tag, context, *args)" />
        <scope ilk="function" line="140" lineend="143" name="itembind_remove" signature="itembind_remove(tag, context)" />
        <scope ilk="function" line="145" lineend="147" name="itembindinfo" signature="itembindinfo(tag, context=nil)" />
        <scope ilk="function" line="149" lineend="152" name="canvasx" signature="canvasx(screen_x, *args)" />
        <scope ilk="function" line="153" lineend="156" name="canvasy" signature="canvasy(screen_y, *args)" />
        <scope ilk="function" line="158" lineend="165" name="coords" signature="coords(tag, *args)" />
        <scope ilk="function" line="167" lineend="171" name="dchars" signature="dchars(tag, first, last=None)" />
        <scope ilk="function" line="173" lineend="183" name="delete" signature="delete(*args)" />
        <scope ilk="function" line="186" lineend="189" name="dtag" signature="dtag(tag, tag_to_del=None)" />
        <scope ilk="function" line="191" lineend="195" name="find" signature="find(mode, *args)" />
        <scope ilk="function" line="196" lineend="198" name="find_above" signature="find_above(target)" />
        <scope ilk="function" line="199" lineend="201" name="find_all" signature="find_all" />
        <scope ilk="function" line="202" lineend="204" name="find_below" signature="find_below(target)" />
        <scope ilk="function" line="205" lineend="207" name="find_closest" signature="find_closest(x, y, halo=None, start=None)" />
        <scope ilk="function" line="208" lineend="210" name="find_enclosed" signature="find_enclosed(x1, y1, x2, y2)" />
        <scope ilk="function" line="211" lineend="213" name="find_overlapping" signature="find_overlapping(x1, y1, x2, y2)" />
        <scope ilk="function" line="214" lineend="216" name="find_withtag" signature="find_withtag(tag)" />
        <scope ilk="function" line="218" lineend="230" name="itemfocus" signature="itemfocus(tagOrId=nil)" />
        <scope ilk="function" line="232" lineend="236" name="gettags" signature="gettags(tagOrId)" />
        <scope ilk="function" line="238" lineend="241" name="icursor" signature="icursor(tagOrId, index)" />
        <scope ilk="function" line="243" lineend="245" name="index" signature="index(tagOrId, idx)" />
        <scope ilk="function" line="247" lineend="251" name="insert" signature="insert(tagOrId, index, string)" />
        <scope ilk="function" line="253" lineend="260" name="lower" signature="lower(tag, below=nil)" />
        <scope ilk="function" line="262" lineend="265" name="move" signature="move(tag, x, y)" />
        <scope ilk="function" line="267" lineend="269" name="postscript" signature="postscript(keys)" />
        <scope ilk="function" line="271" lineend="278" name="raise" signature="raise(tag, above=nil)" />
        <scope ilk="function" line="280" lineend="283" name="scale" signature="scale(tag, x, y, xs, ys)" />
        <scope ilk="function" line="285" lineend="288" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="289" lineend="292" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="294" lineend="297" name="select" signature="select(mode, *args)" />
        <scope ilk="function" line="298" lineend="300" name="select_adjust" signature="select_adjust(tagOrId, index)" />
        <scope ilk="function" line="301" lineend="303" name="select_clear" signature="select_clear" />
        <scope ilk="function" line="304" lineend="306" name="select_from" signature="select_from(tagOrId, index)" />
        <scope ilk="function" line="307" lineend="309" name="select_item" signature="select_item" />
        <scope ilk="function" line="310" lineend="312" name="select_to" signature="select_to(tagOrId, index)" />
        <scope ilk="function" line="314" lineend="316" name="itemtype" signature="itemtype(tag)" />
        <scope ilk="function" line="318" lineend="325" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="326" lineend="328" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="329" lineend="331" name="xview_scroll" signature="xview_scroll(*index)" />
        <scope ilk="function" line="333" lineend="340" name="yview" signature="yview(*index)" />
        <scope ilk="function" line="341" lineend="343" name="yview_moveto" signature="yview_moveto(*index)" />
        <scope ilk="function" line="344" lineend="346" name="yview_scroll" signature="yview_scroll(*index)" />
        <import symbol="TkCanvasItemConfig" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/scopedobject">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/buttonbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="TkObject" ilk="class" line="11" lineend="12" name="Scopedobject" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="24" name="Tk::Iwidgets::">
        <scope attributes="__ctor__" ilk="function" line="21" lineend="23" name="initialize" signature="initialize(obj_name, keys={})" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/radiobox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/radiobox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Radiobox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="116" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="37" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="40" lineend="47" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="59" lineend="71" name="add" signature="add(tag=nil, keys={})" />
        <scope ilk="function" line="73" lineend="76" name="delete" signature="delete(idx)" />
        <scope ilk="function" line="78" lineend="81" name="deselect" signature="deselect(idx)" />
        <scope ilk="function" line="83" lineend="86" name="flash" signature="flash(idx)" />
        <scope ilk="function" line="88" lineend="92" name="get" signature="get(idx)" />
        <scope ilk="function" line="94" lineend="96" name="index" signature="index(idx)" />
        <scope ilk="function" line="98" lineend="110" name="insert" signature="insert(idx, tag=nil, keys={})" />
        <scope ilk="function" line="112" lineend="115" name="select" signature="select(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/pushbutton">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/pushbutton.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Pushbutton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="35" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="29" name="invoke" signature="invoke" />
        <scope ilk="function" line="31" lineend="34" name="flash" signature="flash" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/promptdialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/promptdialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Promptdialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="131" name="Tk::Iwidgets::">
        <scope doc="index method is not available, because it shows index of the&#xA;entry field" ilk="function" line="22" lineend="25" name="default" signature="default(name)" />
        <scope ilk="function" line="27" lineend="30" name="hide" signature="hide(name)" />
        <scope ilk="function" line="32" lineend="39" name="invoke" signature="invoke(name=nil)" />
        <scope ilk="function" line="41" lineend="44" name="show" signature="show(name)" />
        <scope doc="based on Tk::Iwidgets::Entryfield" ilk="function" line="48" lineend="51" name="clear" signature="clear" />
        <scope ilk="function" line="53" lineend="56" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="58" lineend="60" name="value" signature="value" />
        <scope ilk="function" line="61" lineend="65" name="value=" signature="value= (val)" />
        <scope ilk="function" line="69" lineend="73" name="cursor=" signature="cursor=(index)" />
        <scope ilk="function" line="76" lineend="78" name="index" signature="index(idx)" />
        <scope ilk="function" line="80" lineend="83" name="insert" signature="insert(pos,text)" />
        <scope ilk="function" line="85" lineend="88" name="mark" signature="mark(pos)" />
        <scope ilk="function" line="89" lineend="92" name="dragto" signature="dragto(pos)" />
        <scope ilk="function" line="93" lineend="96" name="selection_adjust" signature="selection_adjust(index)" />
        <scope ilk="function" line="97" lineend="100" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="101" lineend="104" name="selection_from" signature="selection_from(index)" />
        <scope ilk="function" line="105" lineend="107" name="selection_present" signature="selection_present()" />
        <scope ilk="function" line="108" lineend="111" name="selection_range" signature="selection_range(s, e)" />
        <scope ilk="function" line="112" lineend="115" name="selection_to" signature="selection_to(index)" />
        <scope ilk="function" line="117" lineend="124" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="125" lineend="127" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="128" lineend="130" name="xview_scroll" signature="xview_scroll(*index)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/panedwindow">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/panedwindow.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Panedwindow" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="132" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="42" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="54" lineend="56" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="59" lineend="71" name="add" signature="add(tag=nil, keys={})" />
        <scope ilk="function" line="73" lineend="75" name="child_site_list" signature="child_site_list" />
        <scope ilk="function" line="77" lineend="79" name="child_site" signature="child_site(idx)" />
        <scope ilk="function" line="81" lineend="84" name="delete" signature="delete(idx)" />
        <scope ilk="function" line="86" lineend="89" name="fraction" signature="fraction(*percentages)" />
        <scope ilk="function" line="91" lineend="94" name="hide" signature="hide(idx)" />
        <scope ilk="function" line="96" lineend="98" name="index" signature="index(idx)" />
        <scope ilk="function" line="100" lineend="112" name="insert" signature="insert(idx, tag=nil, keys={})" />
        <scope ilk="function" line="114" lineend="121" name="invoke" signature="invoke(idx=nil)" />
        <scope ilk="function" line="123" lineend="126" name="reset" signature="reset" />
        <scope ilk="function" line="128" lineend="131" name="show" signature="show(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/optionmenu">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/optionmenu.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Optionmenu" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="92" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="33" name="delete" signature="delete(first, last=nil)" />
        <scope ilk="function" line="35" lineend="38" name="disable" signature="disable(idx)" />
        <scope ilk="function" line="40" lineend="43" name="enable" signature="enable(idx)" />
        <scope ilk="function" line="45" lineend="53" name="get" signature="get(first=nil, last=nil)" />
        <scope ilk="function" line="54" lineend="56" name="get_range" signature="get_range(first, last)" />
        <scope ilk="function" line="57" lineend="59" name="get_selected" signature="get_selected" />
        <scope ilk="function" line="61" lineend="63" name="index" signature="index(idx)" />
        <scope ilk="function" line="65" lineend="68" name="insert" signature="insert(idx, *args)" />
        <scope ilk="function" line="70" lineend="73" name="select" signature="select(idx)" />
        <scope ilk="function" line="75" lineend="83" name="sort" signature="sort(*params, &amp;b)" />
        <scope ilk="function" line="84" lineend="87" name="sort_ascending" signature="sort_ascending" />
        <scope ilk="function" line="88" lineend="91" name="sort_descending" signature="sort_descending" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/notebook">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/notebook.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Notebook" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="168" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="42" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="54" lineend="56" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="59" lineend="61" name="add" signature="add(keys={})" />
        <scope ilk="function" line="63" lineend="65" name="child_site_list" signature="child_site_list" />
        <scope ilk="function" line="67" lineend="72" name="child_site" signature="child_site(idx)" />
        <scope ilk="function" line="74" lineend="87" name="delete" signature="delete(idx1, idx2=nil)" />
        <scope ilk="function" line="89" lineend="91" name="index" signature="index(idx)" />
        <scope ilk="function" line="93" lineend="98" name="insert" signature="insert(idx, keys={})" />
        <scope ilk="function" line="100" lineend="103" name="next" signature="next" />
        <scope ilk="function" line="105" lineend="108" name="prev" signature="prev" />
        <scope ilk="function" line="110" lineend="116" name="select" signature="select(idx)" />
        <scope ilk="function" line="118" lineend="121" name="scrollcommand" signature="scrollcommand(cmd=Proc.new)" />
        <scope ilk="function" line="125" lineend="134" name="xscrollbar" signature="xscrollbar(bar=nil)" />
        <scope ilk="function" line="135" lineend="144" name="yscrollbar" signature="yscrollbar(bar=nil)" />
        <scope ilk="function" line="147" lineend="154" name="view" signature="view(*idxs)" />
        <scope ilk="function" line="158" lineend="160" name="view_moveto" signature="view_moveto(*idxs)" />
        <scope ilk="function" line="163" lineend="165" name="view_scroll" signature="view_scroll(*idxs)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/messagedialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/messagedialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Messagedialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="20" name="Tk::Iwidgets::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/messagebox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/messagebox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Messagebox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="91" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="42" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="44" lineend="46" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="59" lineend="61" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="64" lineend="74" name="type_add" signature="type_add(tag=nil, keys={})" />
        <scope ilk="function" line="76" lineend="79" name="clear" signature="clear" />
        <scope ilk="function" line="81" lineend="84" name="export" signature="export(file)" />
        <scope ilk="function" line="86" lineend="89" name="issue" signature="issue(string, type=None, *args)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/menubar">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/menubar.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Menubar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="210" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="35" lineend="37" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="40" lineend="42" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="45" lineend="47" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="50" lineend="52" name="__item_tkvariable_optkeys" signature="__item_tkvariable_optkeys(id)" />
        <scope ilk="function" line="55" lineend="62" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="74" lineend="76" name="__methodcall_optkeys" signature="__methodcall_optkeys" />
        <scope ilk="function" line="78" lineend="85" name="menubuttons" signature="menubuttons(val = nil)" />
        <scope ilk="function" line="87" lineend="131" name="_parse_menu_spec" signature="_parse_menu_spec(menu_spec)" />
        <scope ilk="function" line="135" lineend="149" name="add" signature="add(type, tag=nil, keys={})" />
        <scope ilk="function" line="151" lineend="157" name="delete" signature="delete(path1, path2=nil)" />
        <scope ilk="function" line="159" lineend="161" name="index" signature="index(idx)" />
        <scope ilk="function" line="163" lineend="177" name="insert" signature="insert(idx, type, tag=nil, keys={})" />
        <scope ilk="function" line="179" lineend="182" name="invoke" signature="invoke(idx)" />
        <scope ilk="function" line="184" lineend="189" name="menupath" signature="menupath(pat)" />
        <scope ilk="function" line="190" lineend="195" name="menupath_glob" signature="menupath_glob(pat)" />
        <scope ilk="function" line="196" lineend="201" name="menupath_tclregexp" signature="menupath_tclregexp(pat)" />
        <scope ilk="function" line="203" lineend="205" name="type" signature="type(path)" />
        <scope ilk="function" line="207" lineend="209" name="yposition" signature="yposition(path)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/mainwindow">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/mainwindow.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Mainwindow" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="67" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="36" lineend="38" name="child_site" signature="child_site" />
        <scope ilk="function" line="40" lineend="45" name="menubar" signature="menubar(*args)" />
        <scope ilk="function" line="47" lineend="52" name="mousebar" signature="mousebar(*args)" />
        <scope ilk="function" line="54" lineend="59" name="msgd" signature="msgd(*args)" />
        <scope ilk="function" line="61" lineend="66" name="toolbar" signature="toolbar(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/labeledwidget">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/labeledwidget.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Labeledwidget" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="45" name="Tk::Iwidgets::">
        <scope ilk="function" line="23" lineend="25" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="28" lineend="30" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="33" lineend="35" name="__font_optkeys" signature="__font_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="40" name="alignlabels" signature="self.alignlabels(*wins)" />
        <scope ilk="function" line="42" lineend="44" name="child_site" signature="child_site" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/labeledframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/labeledframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Labeledframe" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="39" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="36" lineend="38" name="child_site" signature="child_site" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/hyperhelp">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/hyperhelp.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Hyperhelp" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="50" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="31" lineend="34" name="show_topic" signature="show_topic(topic)" />
        <scope ilk="function" line="36" lineend="39" name="follow_link" signature="follow_link(href)" />
        <scope ilk="function" line="41" lineend="44" name="forward" signature="forward" />
        <scope ilk="function" line="46" lineend="49" name="back" signature="back" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/hierarchy">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/text" symbol="*" />
      <import line="8" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/hierarchy.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="12" lineend="13" name="Hierarchy" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="309" name="Tk::Iwidgets::">
        <scope classrefs="TkValidateCommand" ilk="class" line="29" lineend="44" name="QueryCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="30" lineend="38" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="35" lineend="37" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="40" lineend="43" name="_config_keys[" signature="self._config_keys  [" />
        </scope>
        <scope classrefs="TkValidateCommand" ilk="class" line="46" lineend="71" name="IndicatorCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="47" lineend="65" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="62" lineend="64" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="67" lineend="70" name="_config_keys[" signature="self._config_keys  [" />
        </scope>
        <scope classrefs="TkValidateCommand" ilk="class" line="73" lineend="92" name="IconCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="74" lineend="86" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="83" lineend="85" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="88" lineend="91" name="_config_keys[" signature="self._config_keys  [" />
        </scope>
        <scope ilk="function" line="94" lineend="96" name="__validation_class_list" signature="__validation_class_list" />
        <scope ilk="function" line="104" lineend="106" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="109" lineend="111" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="114" lineend="116" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="119" lineend="122" name="clear" signature="clear" />
        <scope ilk="function" line="124" lineend="127" name="collapse" signature="collapse(node)" />
        <scope ilk="function" line="129" lineend="131" name="current" signature="current" />
        <scope ilk="function" line="133" lineend="146" name="draw" signature="draw(mode=None)" />
        <scope ilk="function" line="148" lineend="151" name="expand" signature="expand(node)" />
        <scope ilk="function" line="153" lineend="155" name="expanded?" signature="expanded?(node)" />
        <scope ilk="function" line="157" lineend="159" name="exp_state" signature="exp_state" />
        <scope ilk="function" line="163" lineend="166" name="mark_clear" signature="mark_clear" />
        <scope ilk="function" line="167" lineend="170" name="mark_add" signature="mark_add(*nodes)" />
        <scope ilk="function" line="171" lineend="174" name="mark_remove" signature="mark_remove(*nodes)" />
        <scope ilk="function" line="175" lineend="177" name="mark_get" signature="mark_get" />
        <scope ilk="function" line="179" lineend="182" name="refresh" signature="refresh(node)" />
        <scope ilk="function" line="184" lineend="187" name="prune" signature="prune(node)" />
        <scope ilk="function" line="189" lineend="192" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="193" lineend="196" name="selection_add" signature="selection_add(*nodes)" />
        <scope ilk="function" line="197" lineend="200" name="selection_remove" signature="selection_remove(*nodes)" />
        <scope ilk="function" line="201" lineend="203" name="selection_get" signature="selection_get" />
        <scope ilk="function" line="205" lineend="208" name="toggle" signature="toggle(node)" />
        <scope doc="based on TkText widget" ilk="function" line="212" lineend="214" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="216" lineend="219" name="compare" signature="compare(idx1, op, idx2)" />
        <scope ilk="function" line="221" lineend="223" name="debug" signature="debug" />
        <scope ilk="function" line="224" lineend="228" name="debug=" signature="debug=(boolean)" />
        <scope ilk="function" line="230" lineend="233" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="235" lineend="237" name="dlineinfo" signature="dlineinfo(index)" />
        <scope ilk="function" line="239" lineend="241" name="get" signature="get(*index)" />
        <scope ilk="function" line="243" lineend="245" name="index" signature="index(index)" />
        <scope ilk="function" line="247" lineend="264" name="insert" signature="insert(index, chars, *tags)" />
        <scope ilk="function" line="266" lineend="269" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="270" lineend="273" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="274" lineend="277" name="see" signature="see(index)" />
        <scope doc="based on tk/scrollable.rb" ilk="function" line="280" lineend="287" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="288" lineend="290" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="291" lineend="293" name="xview_scroll" signature="xview_scroll(*index)" />
        <scope ilk="function" line="295" lineend="302" name="yview" signature="yview(*index)" />
        <scope ilk="function" line="303" lineend="305" name="yview_moveto" signature="yview_moveto(*index)" />
        <scope ilk="function" line="306" lineend="308" name="yview_scroll" signature="yview_scroll(*index)" />
        <import symbol="TkTextTagConfig" />
        <import symbol="Tk::ValidateConfigure" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/finddialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/finddialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Finddialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="42" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
        <scope ilk="function" line="34" lineend="37" name="clear" signature="clear" />
        <scope ilk="function" line="39" lineend="41" name="find" signature="find" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/fileselectiondialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/fileselectiondialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Fileselectiondialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="33" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="child_site" signature="child_site" />
        <scope ilk="function" line="25" lineend="28" name="filter" signature="filter" />
        <scope ilk="function" line="30" lineend="32" name="get" signature="get" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/fileselectionbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/fileselectionbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Fileselectionbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="46" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="34" lineend="36" name="child_site" signature="child_site" />
        <scope ilk="function" line="38" lineend="41" name="filter" signature="filter" />
        <scope ilk="function" line="43" lineend="45" name="get" signature="get" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/feedback">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/feedback.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Feedback" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="35" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="29" name="reset" signature="reset" />
        <scope ilk="function" line="31" lineend="34" name="step" signature="step(inc=1)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/extfileselectiondialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/extfileselectiondialog.rb by Hidetoshi&#xA;NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Extfileselectiondialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="33" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="child_site" signature="child_site" />
        <scope ilk="function" line="25" lineend="28" name="filter" signature="filter" />
        <scope ilk="function" line="30" lineend="32" name="get" signature="get" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/extfileselectionbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/extfileselectionbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Extfileselectionbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="46" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="34" lineend="36" name="child_site" signature="child_site" />
        <scope ilk="function" line="38" lineend="41" name="filter" signature="filter" />
        <scope ilk="function" line="43" lineend="45" name="get" signature="get" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/extbutton">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/extbutton.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Extbutton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="40" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="31" lineend="34" name="invoke" signature="invoke" />
        <scope ilk="function" line="36" lineend="39" name="flash" signature="flash" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/entryfield">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/entryfield.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Entryfield" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="166" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__font_optkeys" signature="__font_optkeys" />
        <scope classrefs="TkValidateCommand" ilk="class" line="30" lineend="51" name="EntryfieldValidate">
          <scope classrefs="TkUtil::CallbackSubst" doc="class CalCmdArgs &lt; TkUtil::CallbackSubst" ilk="class" line="32" lineend="46" name="ValidateArgs" />
          <scope attributes="__classmethod__" ilk="function" line="48" lineend="50" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope ilk="function" line="53" lineend="55" name="__validation_class_list" signature="__validation_class_list" />
        <scope ilk="function" line="82" lineend="85" name="clear" signature="clear" />
        <scope ilk="function" line="87" lineend="90" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="92" lineend="94" name="value" signature="value" />
        <scope ilk="function" line="95" lineend="99" name="value=" signature="value= (val)" />
        <scope ilk="function" line="103" lineend="107" name="cursor=" signature="cursor=(index)" />
        <scope ilk="function" line="110" lineend="112" name="index" signature="index(index)" />
        <scope ilk="function" line="114" lineend="117" name="insert" signature="insert(pos,text)" />
        <scope ilk="function" line="119" lineend="122" name="mark" signature="mark(pos)" />
        <scope ilk="function" line="123" lineend="126" name="dragto" signature="dragto(pos)" />
        <scope ilk="function" line="127" lineend="130" name="selection_adjust" signature="selection_adjust(index)" />
        <scope ilk="function" line="131" lineend="134" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="135" lineend="138" name="selection_from" signature="selection_from(index)" />
        <scope ilk="function" line="139" lineend="141" name="selection_present" signature="selection_present()" />
        <scope ilk="function" line="142" lineend="145" name="selection_range" signature="selection_range(s, e)" />
        <scope ilk="function" line="146" lineend="149" name="selection_to" signature="selection_to(index)" />
        <scope doc="based on tk/scrollable.rb" ilk="function" line="152" lineend="159" name="xview" signature="xview(*index)" />
        <scope ilk="function" line="160" lineend="162" name="xview_moveto" signature="xview_moveto(*index)" />
        <scope ilk="function" line="163" lineend="165" name="xview_scroll" signature="xview_scroll(*index)" />
        <import symbol="Tk::ValidateConfigure" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/disjointlistbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/disjointlistbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Disjointlistbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="50" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="29" name="set_lhs" signature="set_lhs(*items)" />
        <scope ilk="function" line="30" lineend="33" name="set_rhs" signature="set_rhs(*items)" />
        <scope ilk="function" line="35" lineend="37" name="get_lhs" signature="get_lhs" />
        <scope ilk="function" line="38" lineend="40" name="get_rhs" signature="get_rhs" />
        <scope ilk="function" line="42" lineend="45" name="insert_lhs" signature="insert_lhs(*items)" />
        <scope ilk="function" line="46" lineend="49" name="insert_rhs" signature="insert_rhs(*items)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/dialogshell">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/dialogshell.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Dialogshell" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="119" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="37" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="40" lineend="47" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="59" lineend="71" name="add" signature="add(tag=nil, keys={})" />
        <scope ilk="function" line="73" lineend="76" name="default" signature="default(idx)" />
        <scope ilk="function" line="78" lineend="81" name="delete" signature="delete(idx)" />
        <scope ilk="function" line="83" lineend="86" name="hide" signature="hide(idx)" />
        <scope ilk="function" line="88" lineend="90" name="index" signature="index(idx)" />
        <scope ilk="function" line="92" lineend="104" name="insert" signature="insert(idx, tag=nil, keys={})" />
        <scope ilk="function" line="106" lineend="113" name="invoke" signature="invoke(idx=nil)" />
        <scope ilk="function" line="115" lineend="118" name="show" signature="show(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/dialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/dialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Dialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="20" name="Tk::Iwidgets::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/datefield">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/datefield.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Datefield" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="58" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="36" lineend="38" name="get_string" signature="get_string" />
        <scope ilk="function" line="41" lineend="43" name="get_clicks" signature="get_clicks" />
        <scope ilk="function" line="45" lineend="47" name="valid?" signature="valid?" />
        <scope ilk="function" line="50" lineend="53" name="show" signature="show(date=None)" />
        <scope ilk="function" line="54" lineend="57" name="show_now" signature="show_now" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/dateentry">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/dateentry.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Dateentry" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="20" name="Tk::Iwidgets::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/combobox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/combobox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Combobox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="104" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="26" lineend="29" name="clear" signature="clear(component=None)" />
        <scope ilk="function" line="31" lineend="34" name="delete_list" signature="delete_list(first, last=None)" />
        <scope ilk="function" line="36" lineend="39" name="delete_entry" signature="delete_entry(first, last=None)" />
        <scope ilk="function" line="41" lineend="43" name="get_list_contents" signature="get_list_contents(index)" />
        <scope ilk="function" line="45" lineend="48" name="insert_list" signature="insert_list(idx, *elems)" />
        <scope ilk="function" line="50" lineend="53" name="insert_entry" signature="insert_entry(idx, *elems)" />
        <scope doc="listbox methods" ilk="function" line="56" lineend="58" name="size" signature="size" />
        <scope ilk="function" line="59" lineend="62" name="see" signature="see(index)" />
        <scope ilk="function" line="63" lineend="66" name="selection_anchor" signature="selection_anchor(index)" />
        <scope ilk="function" line="67" lineend="70" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="71" lineend="73" name="selection_includes" signature="selection_includes(index)" />
        <scope ilk="function" line="74" lineend="77" name="selection_set" signature="selection_set(first, last=None)" />
        <scope doc="scrolledlistbox methods" ilk="function" line="80" lineend="82" name="get_curselection" signature="get_curselection" />
        <scope ilk="function" line="83" lineend="86" name="justify" signature="justify(dir)" />
        <scope ilk="function" line="87" lineend="95" name="sort" signature="sort(*params, &amp;b)" />
        <scope ilk="function" line="96" lineend="99" name="sort_ascending" signature="sort_ascending" />
        <scope ilk="function" line="100" lineend="103" name="sort_descending" signature="sort_descending" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/checkbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/checkbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Checkbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="116" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="37" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="40" lineend="47" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="59" lineend="71" name="add" signature="add(tag=nil, keys={})" />
        <scope ilk="function" line="73" lineend="76" name="delete" signature="delete(idx)" />
        <scope ilk="function" line="78" lineend="81" name="deselect" signature="deselect(idx)" />
        <scope ilk="function" line="83" lineend="86" name="flash" signature="flash(idx)" />
        <scope ilk="function" line="88" lineend="92" name="get" signature="get(idx)" />
        <scope ilk="function" line="94" lineend="96" name="index" signature="index(idx)" />
        <scope ilk="function" line="98" lineend="110" name="insert" signature="insert(idx, tag=nil, keys={})" />
        <scope ilk="function" line="112" lineend="115" name="select" signature="select(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/canvasprintdialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/canvasprintdialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Iwidgets::" ilk="class" line="11" lineend="12" name="Canvasprintdialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="38" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="get_output" signature="get_output" />
        <scope ilk="function" line="25" lineend="27" name="print" signature="print" />
        <scope ilk="function" line="29" lineend="32" name="refresh" signature="refresh" />
        <scope ilk="function" line="34" lineend="37" name="set_canvas" signature="set_canvas(win)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/canvasprintbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/canvasprintbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Canvasprintbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="53" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="26" lineend="28" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="get_output" signature="get_output" />
        <scope ilk="function" line="35" lineend="37" name="print" signature="print" />
        <scope ilk="function" line="39" lineend="42" name="refresh" signature="refresh" />
        <scope ilk="function" line="44" lineend="47" name="set_canvas" signature="set_canvas(win)" />
        <scope ilk="function" line="49" lineend="52" name="stop" signature="stop" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/calendar">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/calendar.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Calendar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="106" name="Tk::Iwidgets::">
        <scope ilk="function" line="21" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="34" lineend="36" name="__font_optkeys" signature="__font_optkeys" />
        <scope classrefs="TkValidateCommand" ilk="class" line="43" lineend="63" name="CalendarCommand">
          <scope classrefs="TkUtil::CallbackSubst" doc="class CalCmdArgs &lt; TkUtil::CallbackSubst" ilk="class" line="45" lineend="53" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="50" lineend="52" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="55" lineend="58" name="_config_keys[" signature="self._config_keys  [" />
        </scope>
        <scope ilk="function" line="65" lineend="67" name="__validation_class_list" signature="__validation_class_list" />
        <scope ilk="function" line="84" lineend="86" name="get_string" signature="get_string" />
        <scope ilk="function" line="89" lineend="91" name="get_clicks" signature="get_clicks" />
        <scope ilk="function" line="93" lineend="96" name="select" signature="select(date)" />
        <scope ilk="function" line="98" lineend="101" name="show" signature="show(date)" />
        <scope ilk="function" line="102" lineend="105" name="show_now" signature="show_now" />
        <import symbol="Tk::ValidateConfigure" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/iwidgets/buttonbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/iwidgets.rb" symbol="*" />
      <scope doc="tkextlib/iwidgets/buttonbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="Iwidgets">
          <scope classrefs="Tk::Itk::" ilk="class" line="11" lineend="12" name="Buttonbox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="119" name="Tk::Iwidgets::">
        <scope ilk="function" line="25" lineend="27" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="30" lineend="32" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="35" lineend="37" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="40" lineend="47" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="59" lineend="71" name="add" signature="add(tag=nil, keys={})" />
        <scope ilk="function" line="73" lineend="76" name="default" signature="default(idx)" />
        <scope ilk="function" line="78" lineend="81" name="delete" signature="delete(idx)" />
        <scope ilk="function" line="83" lineend="86" name="hide" signature="hide(idx)" />
        <scope ilk="function" line="88" lineend="90" name="index" signature="index(idx)" />
        <scope ilk="function" line="92" lineend="104" name="insert" signature="insert(idx, tag=nil, keys={})" />
        <scope ilk="function" line="106" lineend="113" name="invoke" signature="invoke(idx=nil)" />
        <scope ilk="function" line="115" lineend="118" name="show" signature="show(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/itk">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/itk/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/itk/incr_tk.rb" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/itk/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/itk/incr_tk">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/menuspec" symbol="*" />
      <import line="8" module="tkextlib/itcl.rb" symbol="*" />
      <import line="11" module="tkextlib/itk.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;Itk&apos;, &apos;3.2&apos;)" ilk="namespace" line="16" lineend="427" name="Tk">
        <scope ilk="namespace" line="17" lineend="426" name="Itk">
          <scope attributes="__classmethod__" ilk="function" line="24" lineend="26" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="28" lineend="34" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="36" lineend="38" name="usual" signature="self.usual(arg, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="40" lineend="42" name="usual_names" signature="self.usual_names" />
          <scope classrefs="TkWindow" ilk="class" line="46" lineend="107" name="Archetype">
            <scope attributes="__classmethod__" doc="WidgetClassName = &apos;Archetype&apos;.freeze&#xA;WidgetClassNames[WidgetClassName] = self" ilk="function" line="51" lineend="53" name="to_eval" signature="self.to_eval" />
            <scope ilk="function" line="55" lineend="57" name="__destroy_hook__" signature="__destroy_hook__" />
            <scope doc="[incr Tk] public methods" ilk="function" line="60" lineend="62" name="component" signature="component" />
            <scope ilk="function" line="64" lineend="66" name="component_path" signature="component_path(name)" />
            <scope ilk="function" line="69" lineend="71" name="component_invoke" signature="component_invoke(name, cmd, *args)" />
            <scope ilk="function" line="73" lineend="76" name="component_obj" signature="component_obj(*names)" />
          </scope>
          <scope classrefs="Archetype" ilk="class" line="111" lineend="123" name="Toplevel">
            <scope ilk="function" line="119" lineend="121" name="__strval_optkeys" signature="__strval_optkeys" />
            <import symbol="Wm" />
            <import symbol="TkMenuSpec" />
          </scope>
          <scope classrefs="Archetype" ilk="class" line="127" lineend="131" name="Widget" />
          <scope classrefs="TkObject" ilk="class" line="136" lineend="425" name="Component">
            <scope ilk="function" line="137" lineend="139" name="__cget_cmd" signature="__cget_cmd" />
            <scope ilk="function" line="142" lineend="144" name="__config_cmd" signature="__config_cmd" />
            <scope attributes="__classmethod__" ilk="function" line="152" lineend="160" name="id2obj" signature="self.id2obj(master, id)" />
            <scope attributes="__classmethod__" ilk="function" line="162" lineend="187" name="new" signature="self.new(master, component=nil)" />
            <scope attributes="__ctor__" ilk="function" line="189" lineend="202" name="initialize" signature="initialize(master, component)" />
            <scope ilk="function" line="204" lineend="214" name="path" signature="path" />
            <scope ilk="function" line="216" lineend="218" name="epath" signature="epath" />
            <scope ilk="function" line="220" lineend="222" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="224" lineend="226" name="master" signature="master" />
            <scope ilk="function" line="228" lineend="230" name="name" signature="name" />
            <scope ilk="function" line="232" lineend="242" name="widget" signature="widget" />
            <scope ilk="function" line="244" lineend="254" name="widget_class" signature="widget_class" />
            <scope ilk="function" line="256" lineend="293" name="method_missing" signature="method_missing(id, *args)" />
            <scope ilk="function" line="295" lineend="309" name="tk_send" signature="tk_send(cmd, *rest)" />
            <scope ilk="function" line="311" lineend="325" name="tk_send_without_enc" signature="tk_send_without_enc(cmd, *rest)" />
            <scope ilk="function" line="327" lineend="341" name="tk_send_with_enc" signature="tk_send_with_enc(cmd, *rest)" />
            <scope doc="def bind(*args) unless @widget begin @widget =&#xA;window(tk_call(@master, &apos;component&apos;, @component)) @path =&#xA;@widget.path" ilk="function" line="354" lineend="370" name="bind" signature="bind(context, *args)" />
            <scope doc="def bind_append(*args) unless @widget begin @widget =&#xA;window(tk_call(@master, &apos;component&apos;, @component)) @path =&#xA;@widget.path" ilk="function" line="383" lineend="399" name="bind_append" signature="bind_append(context, *args)" />
            <scope ilk="function" line="401" lineend="411" name="bind_remove" signature="bind_remove(*args)" />
            <scope ilk="function" line="413" lineend="423" name="bindinfo" signature="bindinfo(*args)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/itcl">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/itcl/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/itcl/incr_tcl.rb" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/itcl/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/itcl/incr_tcl">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/itcl.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;Itcl&apos;, &apos;3.2&apos;)" ilk="namespace" line="14" lineend="172" name="Tk">
        <scope ilk="namespace" line="15" lineend="171" name="Itcl">
          <scope attributes="__classmethod__" ilk="function" line="26" lineend="28" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="30" lineend="36" name="package_version" signature="self.package_version" />
          <scope classrefs="TkObject" ilk="class" line="40" lineend="101" name="ItclObject">
            <scope attributes="__ctor__" ilk="function" line="46" lineend="53" name="initialize" signature="initialize(*args)" />
            <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="call_proc" signature="self.call_proc(name, *args)" />
            <scope ilk="function" line="59" lineend="61" name="call_method" signature="call_method(name, *args)" />
            <scope ilk="function" line="63" lineend="65" name="isa" signature="isa(klass)" />
            <scope ilk="function" line="68" lineend="70" name="info_class" signature="info_class" />
            <scope ilk="function" line="72" lineend="74" name="info_inherit" signature="info_inherit" />
            <scope ilk="function" line="76" lineend="78" name="info_heritage" signature="info_heritage" />
            <scope ilk="function" line="80" lineend="89" name="info_function" signature="info_function(*args)" />
            <scope ilk="function" line="91" lineend="100" name="info_variable" signature="info_variable(*args)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="105" lineend="107" name="body" signature="self.body(klass, func, args, body)" />
          <scope attributes="__classmethod__" ilk="function" line="109" lineend="111" name="code" signature="self.code(cmd, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="113" lineend="115" name="code_in_namespace" signature="self.code_in_namespace(namespace, cmd, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="117" lineend="119" name="configbody" signature="self.configbody(klass, var, body)" />
          <scope attributes="__classmethod__" ilk="function" line="121" lineend="126" name="create_itcl_class" signature="self.create_itcl_class(name, body)" />
          <scope attributes="__classmethod__" ilk="function" line="128" lineend="130" name="delete_itcl_class" signature="self.delete_itcl_class(*names)" />
          <scope attributes="__classmethod__" ilk="function" line="132" lineend="134" name="delete_itcl_object" signature="self.delete_itcl_object(*names)" />
          <scope attributes="__classmethod__" ilk="function" line="136" lineend="138" name="delete_namespace" signature="self.delete_namespace(*names)" />
          <scope attributes="__classmethod__" ilk="function" line="140" lineend="142" name="ensemble" signature="self.ensemble(name, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="144" lineend="146" name="find_classes" signature="self.find_classes(pat=None)" />
          <scope attributes="__classmethod__" ilk="function" line="148" lineend="150" name="find_objects" signature="self.find_objects(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="152" lineend="154" name="is_itcl_class" signature="self.is_itcl_class(target)" />
          <scope attributes="__classmethod__" ilk="function" line="156" lineend="158" name="is_itcl_object" signature="self.is_itcl_object(target)" />
          <scope attributes="__classmethod__" ilk="function" line="160" lineend="162" name="create_local_obj" signature="self.create_local_obj(klass, name, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="164" lineend="166" name="is_itcl_instance" signature="self.is_itcl_instance(klass, target)" />
          <scope attributes="__classmethod__" ilk="function" line="168" lineend="170" name="scope" signature="self.scope(var)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/ICONS">
      <import line="7" module="tkextlib/setup.rb" symbol="*" />
      <import line="10" module="tkextlib/ICONS/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/ICONS/icons" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/ICONS/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/ICONS/icons">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/ICONS/setup.rb" symbol="*" />
      <scope doc="TkPackage.require(&apos;icons&apos;, &apos;1.0&apos;)" ilk="namespace" line="17" lineend="129" name="Tk">
        <scope classrefs="TkImage" ilk="class" line="18" lineend="128" name="ICONS">
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="24" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="26" lineend="32" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="34" lineend="45" name="create" signature="self.create(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="47" lineend="64" name="delete" signature="self.delete(*icons)" />
          <scope attributes="__classmethod__" ilk="function" line="66" lineend="74" name="query" signature="self.query(*args)" />
          <scope classrefs="Object" ilk="class" line="78" lineend="94" name="self">
            <scope ilk="function" line="81" lineend="93" name="new" signature="new(name, keys=nil)" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="98" lineend="111" name="initialize" signature="initialize(name, keys=nil)" />
          <scope ilk="function" line="113" lineend="115" name="name" signature="name" />
          <scope ilk="function" line="117" lineend="121" name="delete" signature="delete" />
          <scope ilk="function" line="123" lineend="127" name="query" signature="query(keys={})" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget">
      <import line="6" module="tk" symbol="*" />
      <import line="9" module="tkextlib/setup.rb" symbol="*" />
      <import line="12" module="tkextlib/bwidget/setup.rb" symbol="*" />
      <scope doc="load all image format handlers TkPackage.require(&apos;BWidget&apos;,&#xA;&apos;1.7&apos;)" ilk="namespace" line="18" lineend="151" name="Tk">
        <scope ilk="namespace" line="19" lineend="150" name="BWidget">
          <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="37" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="39" lineend="45" name="XLFDfont" signature="self.XLFDfont(cmd, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="47" lineend="49" name="assert" signature="self.assert(exp, msg=None)" />
          <scope attributes="__classmethod__" ilk="function" line="51" lineend="53" name="badOptionString" signature="self.badOptionString(type, value, list)" />
          <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="bindMouseWheel" signature="self.bindMouseWheel(widget)" />
          <scope attributes="__classmethod__" ilk="function" line="59" lineend="61" name="classes" signature="self.classes(klass)" />
          <scope attributes="__classmethod__" ilk="function" line="63" lineend="65" name="clonename" signature="self.clonename(menu)" />
          <scope attributes="__classmethod__" ilk="function" line="67" lineend="69" name="focus" signature="self.focus(opt, path)" />
          <scope attributes="__classmethod__" ilk="function" line="71" lineend="73" name="get3dcolor" signature="self.get3dcolor(path, bgcolor)" />
          <scope attributes="__classmethod__" ilk="function" line="75" lineend="77" name="getname" signature="self.getname(name)" />
          <scope attributes="__classmethod__" ilk="function" line="79" lineend="81" name="grab" signature="self.grab(opt, path)" />
          <scope attributes="__classmethod__" ilk="function" line="83" lineend="85" name="inuse" signature="self.inuse(klass)" />
          <scope attributes="__classmethod__" ilk="function" line="87" lineend="89" name="library" signature="self.library(klass, *klasses)" />
          <scope attributes="__classmethod__" ilk="function" line="91" lineend="93" name="lreorder" signature="self.lreorder(list, neworder)" />
          <scope attributes="__classmethod__" ilk="function" line="95" lineend="97" name="parsetext" signature="self.parsetext(text)" />
          <scope attributes="__classmethod__" ilk="function" line="99" lineend="105" name="place" signature="self.place(path, w, h, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="107" lineend="109" name="write" signature="self.write(file, mode=None)" />
          <scope attributes="__classmethod__" ilk="function" line="111" lineend="113" name="wrongNumArgsString" signature="self.wrongNumArgsString(str)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/widget">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/widget.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope ilk="namespace" line="11" lineend="12" name="Widget" />
        </scope>
      </scope>
      <scope ilk="namespace" line="16" lineend="113" name="Tk::BWidget::">
        <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="__pathname" signature="self.__pathname" />
        <scope attributes="__classmethod__" ilk="function" line="24" lineend="26" name="__cget_cmd[" signature="self.__cget_cmd [" />
        <scope attributes="__classmethod__" ilk="function" line="28" lineend="30" name="__config_cmd[" signature="self.__config_cmd [" />
        <scope attributes="__classmethod__" ilk="function" line="32" lineend="34" name="cget" signature="self.cget(slot)" />
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="38" name="add_map" signature="self.add_map(klass, subclass, subpath, opts)" />
        <scope attributes="__classmethod__" ilk="function" line="40" lineend="42" name="bwinclude" signature="self.bwinclude(klass, subclass, subpath, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="44" lineend="48" name="create" signature="self.create(klass, path, rename=None, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="50" lineend="52" name="declare" signature="self.declare(klass, optlist)" />
        <scope attributes="__classmethod__" ilk="function" line="54" lineend="56" name="define" signature="self.define(klass, filename, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="58" lineend="60" name="destroy" signature="self.destroy(win)" />
        <scope attributes="__classmethod__" ilk="function" line="62" lineend="64" name="focus_next" signature="self.focus_next(win)" />
        <scope attributes="__classmethod__" ilk="function" line="66" lineend="68" name="focus_ok" signature="self.focus_ok(win)" />
        <scope attributes="__classmethod__" ilk="function" line="70" lineend="72" name="focus_prev" signature="self.focus_prev(win)" />
        <scope attributes="__classmethod__" ilk="function" line="74" lineend="76" name="generate_doc" signature="self.generate_doc(dir, widgetlist)" />
        <scope attributes="__classmethod__" ilk="function" line="78" lineend="80" name="generate_widget_doc" signature="self.generate_widget_doc(klass, iscmd, file)" />
        <scope attributes="__classmethod__" ilk="function" line="82" lineend="84" name="get_option" signature="self.get_option(win, option)" />
        <scope attributes="__classmethod__" ilk="function" line="86" lineend="88" name="get_variable" signature="self.get_variable(win, varname, my_varname=None)" />
        <scope attributes="__classmethod__" ilk="function" line="90" lineend="92" name="has_changed" signature="self.has_changed(win, option, pvalue)" />
        <scope attributes="__classmethod__" ilk="function" line="94" lineend="96" name="init" signature="self.init(klass, win, options)" />
        <scope attributes="__classmethod__" ilk="function" line="98" lineend="100" name="set_option" signature="self.set_option(win, option, value)" />
        <scope attributes="__classmethod__" ilk="function" line="102" lineend="104" name="sub_cget" signature="self.sub_cget(win, subwidget)" />
        <scope attributes="__classmethod__" ilk="function" line="106" lineend="108" name="sync_options" signature="self.sync_options(klass, subclass, subpath, options)" />
        <scope attributes="__classmethod__" ilk="function" line="110" lineend="112" name="tkinclude" signature="self.tkinclude(klass, tkwidget, subpath, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/tree">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/canvas" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/tree.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="17" name="Tk">
        <scope ilk="namespace" line="11" lineend="16" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="15" name="Tree">
            <scope classrefs="TkObject" ilk="class" line="13" lineend="14" name="Node" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="19" lineend="260" name="Tk::BWidget::">
        <scope classrefs="TkEvent::Event" ilk="class" line="27" lineend="33" name="Event_for_Items">
          <scope attributes="__classmethod__" ilk="function" line="28" lineend="32" name="_get_extra_args_tbl[" signature="self._get_extra_args_tbl [" />
        </scope>
        <scope ilk="function" line="35" lineend="37" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="40" lineend="43" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="46" lineend="48" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="51" lineend="58" name="tagid" signature="tagid(tag)" />
        <scope doc="def imagebind(*args) _bind_for_event_class(Event_for_Items,&#xA;[path, &apos;bindImage&apos;], *args) self end" ilk="function" line="64" lineend="74" name="imagebind" signature="imagebind(context, *args)" />
        <scope doc="def imagebind_append(*args)&#xA;_bind_append_for_event_class(Event_for_Items, [path,&#xA;&apos;bindImage&apos;], *args) self end" ilk="function" line="80" lineend="90" name="imagebind_append" signature="imagebind_append(context, *args)" />
        <scope ilk="function" line="92" lineend="95" name="imagebind_remove" signature="imagebind_remove(*args)" />
        <scope ilk="function" line="97" lineend="99" name="imagebindinfo" signature="imagebindinfo(*args)" />
        <scope doc="def textbind(*args) _bind_for_event_class(Event_for_Items,&#xA;[path, &apos;bindText&apos;], *args) self end" ilk="function" line="105" lineend="115" name="textbind" signature="textbind(context, *args)" />
        <scope doc="def textbind_append(*args)&#xA;_bind_append_for_event_class(Event_for_Items, [path,&#xA;&apos;bindText&apos;], *args) self end" ilk="function" line="121" lineend="131" name="textbind_append" signature="textbind_append(context, *args)" />
        <scope ilk="function" line="133" lineend="136" name="textbind_remove" signature="textbind_remove(*args)" />
        <scope ilk="function" line="138" lineend="140" name="textbindinfo" signature="textbindinfo(*args)" />
        <scope ilk="function" line="142" lineend="145" name="close_tree" signature="close_tree(node, recurse=None)" />
        <scope ilk="function" line="147" lineend="150" name="delete" signature="delete(*args)" />
        <scope ilk="function" line="152" lineend="155" name="edit" signature="edit(node, text, *args)" />
        <scope ilk="function" line="157" lineend="159" name="exist?" signature="exist?(node)" />
        <scope ilk="function" line="161" lineend="163" name="index" signature="index(node)" />
        <scope ilk="function" line="165" lineend="168" name="insert" signature="insert(idx, parent, node, keys={})" />
        <scope ilk="function" line="170" lineend="173" name="move" signature="move(parent, node, idx)" />
        <scope ilk="function" line="175" lineend="177" name="get_node" signature="get_node(node, idx)" />
        <scope ilk="function" line="179" lineend="183" name="nodes" signature="nodes(node, first=None, last=None)" />
        <scope ilk="function" line="185" lineend="187" name="open?" signature="open?(node)" />
        <scope ilk="function" line="189" lineend="192" name="open_tree" signature="open_tree(node, recurse=None)" />
        <scope ilk="function" line="194" lineend="196" name="parent" signature="parent(node)" />
        <scope ilk="function" line="198" lineend="201" name="reorder" signature="reorder(node, neworder)" />
        <scope ilk="function" line="203" lineend="206" name="see" signature="see(node)" />
        <scope ilk="function" line="208" lineend="212" name="selection_add" signature="selection_add(*args)" />
        <scope ilk="function" line="214" lineend="217" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="219" lineend="221" name="selection_get" signature="selection_get" />
        <scope ilk="function" line="223" lineend="226" name="selection_include?" signature="selection_include?(*args)" />
        <scope ilk="function" line="228" lineend="232" name="selection_range" signature="selection_range(*args)" />
        <scope ilk="function" line="234" lineend="238" name="selection_remove" signature="selection_remove(*args)" />
        <scope ilk="function" line="240" lineend="244" name="selection_set" signature="selection_set(*args)" />
        <scope ilk="function" line="246" lineend="250" name="selection_toggle" signature="selection_toggle(*args)" />
        <scope ilk="function" line="252" lineend="255" name="toggle" signature="toggle(node)" />
        <scope ilk="function" line="257" lineend="259" name="visible" signature="visible(node)" />
        <import symbol="TkItemConfigMethod" />
        <import symbol="Scrollable" />
      </scope>
      <scope classrefs="Object" ilk="class" line="262" lineend="433" name="Tk::BWidget::">
        <scope attributes="__classmethod__" ilk="function" line="270" lineend="274" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__ctor__" ilk="function" line="276" lineend="323" name="initialize" signature="initialize(tree, *args)" />
        <scope ilk="function" line="325" lineend="327" name="tree" signature="tree" />
        <scope ilk="function" line="329" lineend="331" name="id" signature="id" />
        <scope ilk="function" line="333" lineend="335" name="[]" signature="[](key" />
        <scope ilk="function" line="337" lineend="340" name="[]=" signature="[]=(key" />
        <scope ilk="function" line="342" lineend="344" name="cget" signature="cget(key)" />
        <scope ilk="function" line="346" lineend="348" name="configure" signature="configure(key, val=None)" />
        <scope ilk="function" line="350" lineend="352" name="configinfo" signature="configinfo(key=nil)" />
        <scope ilk="function" line="354" lineend="356" name="current_configinfo" signature="current_configinfo(key=nil)" />
        <scope ilk="function" line="358" lineend="361" name="close_tree" signature="close_tree(recurse=None)" />
        <scope ilk="function" line="363" lineend="366" name="delete" signature="delete" />
        <scope ilk="function" line="368" lineend="371" name="edit" signature="edit(*args)" />
        <scope ilk="function" line="373" lineend="375" name="exist?" signature="exist?" />
        <scope ilk="function" line="377" lineend="379" name="index" signature="index" />
        <scope ilk="function" line="381" lineend="387" name="move" signature="move(index, parent=nil)" />
        <scope ilk="function" line="389" lineend="392" name="open_tree" signature="open_tree(recurse=None)" />
        <scope ilk="function" line="394" lineend="396" name="open?" signature="open?" />
        <scope ilk="function" line="398" lineend="400" name="parent" signature="parent" />
        <scope ilk="function" line="402" lineend="404" name="reorder" signature="reorder(neworder)" />
        <scope ilk="function" line="406" lineend="408" name="see" signature="see" />
        <scope ilk="function" line="410" lineend="412" name="selection_add" signature="selection_add" />
        <scope ilk="function" line="414" lineend="416" name="selection_remove" signature="selection_remove" />
        <scope ilk="function" line="418" lineend="420" name="selection_set" signature="selection_set" />
        <scope ilk="function" line="422" lineend="424" name="selection_toggle" signature="selection_toggle" />
        <scope ilk="function" line="426" lineend="428" name="toggle" signature="toggle" />
        <scope ilk="function" line="430" lineend="432" name="visible" signature="visible" />
        <import symbol="TkTreatTagFont" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/titleframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/titleframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="TitleFrame" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="27" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="26" name="get_frame" signature="get_frame(&amp;b)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/statusbar">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/statusbar.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="StatusBar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="46" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="24" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="27" lineend="30" name="add" signature="add(win, keys={})" />
        <scope ilk="function" line="32" lineend="35" name="delete" signature="delete(*wins)" />
        <scope ilk="function" line="37" lineend="41" name="get_frame" signature="get_frame(&amp;b)" />
        <scope ilk="function" line="43" lineend="45" name="items" signature="items" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/spinbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/arrowbutton" symbol="*" />
      <import line="9" module="tkextlib/bwidget/entry" symbol="*" />
      <scope doc="tkextlib/bwidget/entry.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="11" lineend="16" name="Tk">
        <scope ilk="namespace" line="12" lineend="15" name="BWidget">
          <scope classrefs="TkEntry" ilk="class" line="13" lineend="14" name="SpinBox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="98" name="Tk::BWidget::">
        <scope ilk="function" line="25" lineend="27" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="30" lineend="32" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="35" lineend="37" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="40" lineend="42" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope doc="def entrybind(*args) _bind([path, &apos;bind&apos;], *args) self end" ilk="function" line="49" lineend="58" name="entrybind" signature="entrybind(context, *args)" />
        <scope doc="def entrybind_append(*args) _bind_append([path, &apos;bind&apos;],&#xA;*args) self end" ilk="function" line="64" lineend="73" name="entrybind_append" signature="entrybind_append(context, *args)" />
        <scope ilk="function" line="75" lineend="78" name="entrybind_remove" signature="entrybind_remove(*args)" />
        <scope ilk="function" line="80" lineend="83" name="entrybindinfo" signature="entrybindinfo(*args)" />
        <scope ilk="function" line="85" lineend="87" name="get_index_of_value" signature="get_index_of_value" />
        <scope ilk="function" line="91" lineend="95" name="set_value_by_index" signature="set_value_by_index(idx)" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/separator">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/separator.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="11" lineend="12" name="Separator" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="20" name="Tk::BWidget::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/selectfont">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/messagedlg" symbol="*" />
      <scope doc="tkextlib/bwidget/selectfont.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="19" name="Tk">
        <scope ilk="namespace" line="11" lineend="18" name="BWidget">
          <scope classrefs="Tk::BWidget::" ilk="class" line="12" lineend="17" name="SelectFont">
            <scope classrefs="Tk::BWidget::" ilk="class" line="13" lineend="14" name="Dialog" />
            <scope classrefs="TkWindow" ilk="class" line="15" lineend="16" name="Toolbar" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="21" lineend="45" name="Tk::BWidget::">
        <scope ilk="function" line="28" lineend="30" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="33" lineend="35" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="38" lineend="40" name="create" signature="create" />
        <scope attributes="__classmethod__" ilk="function" line="42" lineend="44" name="load_font" signature="self.load_font" />
      </scope>
      <scope classrefs="Object" ilk="class" line="47" lineend="72" name="Tk::BWidget::">
        <scope ilk="function" line="48" lineend="50" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="52" lineend="55" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="57" lineend="66" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="68" lineend="71" name="create" signature="create" />
      </scope>
      <scope classrefs="Object" ilk="class" line="74" lineend="85" name="Tk::BWidget::">
        <scope ilk="function" line="75" lineend="77" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="79" lineend="84" name="create_self" signature="create_self(keys)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/selectcolor">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/messagedlg" symbol="*" />
      <scope doc="tkextlib/bwidget/selectcolor.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="Tk::BWidget::" ilk="class" line="12" lineend="13" name="SelectColor" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="45" name="Tk::BWidget::">
        <scope ilk="function" line="24" lineend="28" name="dialog" signature="dialog(keys={})" />
        <scope ilk="function" line="30" lineend="40" name="menu" signature="menu(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="42" lineend="44" name="set_color" signature="self.set_color(idx, color)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/scrollview">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/scrollview.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="11" lineend="12" name="ScrollView" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="25" name="Tk::BWidget::">
        <scope ilk="function" line="21" lineend="23" name="__strval_optkeys" signature="__strval_optkeys" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/scrolledwindow">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/scrolledwindow.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="ScrolledWindow" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="32" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="26" name="get_frame" signature="get_frame(&amp;b)" />
        <scope ilk="function" line="28" lineend="31" name="set_widget" signature="set_widget(win)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/scrollableframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/scrollableframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="ScrollableFrame" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="34" name="Tk::BWidget::">
        <scope ilk="function" line="24" lineend="28" name="get_frame" signature="get_frame(&amp;b)" />
        <scope ilk="function" line="30" lineend="33" name="see" signature="see(win, vert=None, horiz=None)" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/progressdlg">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/variable" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="9" module="tkextlib/bwidget/progressbar" symbol="*" />
      <import line="10" module="tkextlib/bwidget/messagedlg" symbol="*" />
      <scope doc="tkextlib/bwidget/progressdlg.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="12" lineend="17" name="Tk">
        <scope ilk="namespace" line="13" lineend="16" name="BWidget">
          <scope classrefs="Tk::BWidget::" ilk="class" line="14" lineend="15" name="ProgressDlg" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="19" lineend="54" name="Tk::BWidget::">
        <scope ilk="function" line="24" lineend="29" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="31" lineend="33" name="textvariable" signature="textvariable" />
        <scope ilk="function" line="35" lineend="37" name="text" signature="text" />
        <scope ilk="function" line="39" lineend="41" name="text=" signature="text= (txt)" />
        <scope ilk="function" line="43" lineend="45" name="variable" signature="variable" />
        <scope ilk="function" line="47" lineend="49" name="value" signature="value" />
        <scope ilk="function" line="51" lineend="53" name="value=" signature="value= (val)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/progressbar">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/progressbar.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="11" lineend="12" name="ProgressBar" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="20" name="Tk::BWidget::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/passwddlg">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/messagedlg" symbol="*" />
      <scope doc="tkextlib/bwidget/passwddlg.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="Tk::BWidget::" ilk="class" line="12" lineend="13" name="PasswdDlg" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="44" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="25" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="28" lineend="30" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="33" lineend="36" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="39" lineend="43" name="create" signature="create" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/panelframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/panelframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="PanelFrame" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="51" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="24" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="27" lineend="30" name="add" signature="add(win, keys={})" />
        <scope ilk="function" line="32" lineend="35" name="delete" signature="delete(*wins)" />
        <scope ilk="function" line="37" lineend="41" name="get_frame" signature="get_frame(&amp;b)" />
        <scope ilk="function" line="43" lineend="45" name="items" signature="items" />
        <scope ilk="function" line="47" lineend="50" name="remove" signature="remove(*wins)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/panedwindow">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/panedwindow.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="PanedWindow" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="31" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="24" name="add" signature="add(keys={})" />
        <scope ilk="function" line="26" lineend="30" name="get_frame" signature="get_frame(idx, &amp;b)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/pagesmanager">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/pagesmanager.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="PagesManager" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="61" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="25" name="tagid" signature="tagid(id)" />
        <scope ilk="function" line="27" lineend="31" name="add" signature="add(page, &amp;b)" />
        <scope ilk="function" line="33" lineend="36" name="compute_size" signature="compute_size" />
        <scope ilk="function" line="38" lineend="41" name="delete" signature="delete(page)" />
        <scope ilk="function" line="43" lineend="47" name="get_frame" signature="get_frame(page, &amp;b)" />
        <scope ilk="function" line="49" lineend="51" name="get_page" signature="get_page(page)" />
        <scope ilk="function" line="53" lineend="55" name="pages" signature="pages(first=None, last=None)" />
        <scope ilk="function" line="57" lineend="60" name="raise" signature="raise(page=None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/notebook">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/notebook.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="NoteBook" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="148" name="Tk::BWidget::">
        <scope classrefs="TkEvent::Event" ilk="class" line="24" lineend="30" name="Event_for_Tabs">
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="29" name="_get_extra_args_tbl[" signature="self._get_extra_args_tbl [" />
        </scope>
        <scope ilk="function" line="32" lineend="34" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="37" lineend="47" name="tagid" signature="tagid(id)" />
        <scope doc="def tabbind(*args) _bind_for_event_class(Event_for_Tabs,&#xA;[path, &apos;bindtabs&apos;], *args) self end" ilk="function" line="53" lineend="63" name="tabbind" signature="tabbind(context, *args)" />
        <scope doc="def tabbind_append(*args)&#xA;_bind_append_for_event_class(Event_for_Tabs, [path,&#xA;&apos;bindtabs&apos;], *args) self end" ilk="function" line="69" lineend="79" name="tabbind_append" signature="tabbind_append(context, *args)" />
        <scope ilk="function" line="81" lineend="84" name="tabbind_remove" signature="tabbind_remove(*args)" />
        <scope ilk="function" line="86" lineend="88" name="tabbindinfo" signature="tabbindinfo(*args)" />
        <scope ilk="function" line="90" lineend="94" name="add" signature="add(page, &amp;b)" />
        <scope ilk="function" line="96" lineend="99" name="compute_size" signature="compute_size" />
        <scope ilk="function" line="101" lineend="104" name="delete" signature="delete(page, destroyframe=None)" />
        <scope ilk="function" line="106" lineend="110" name="get_frame" signature="get_frame(page, &amp;b)" />
        <scope ilk="function" line="112" lineend="114" name="index" signature="index(page)" />
        <scope ilk="function" line="116" lineend="120" name="insert" signature="insert(index, page, keys={}, &amp;b)" />
        <scope ilk="function" line="122" lineend="125" name="move" signature="move(page, index)" />
        <scope ilk="function" line="127" lineend="129" name="get_page" signature="get_page(page)" />
        <scope ilk="function" line="131" lineend="133" name="pages" signature="pages(first=None, last=None)" />
        <scope ilk="function" line="135" lineend="142" name="raise" signature="raise(page=nil)" />
        <scope ilk="function" line="144" lineend="147" name="see" signature="see(page)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/messagedlg">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/dialog.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/messagedlg.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="MessageDlg" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="178" name="Tk::BWidget::">
        <scope attributes="__ctor__" ilk="function" line="22" lineend="37" name="initialize" signature="initialize(parent=nil, keys=nil)" />
        <scope ilk="function" line="39" lineend="44" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="47" lineend="49" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="52" lineend="54" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="57" lineend="67" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="69" lineend="121" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="123" lineend="173" name="configinfo" signature="configinfo(slot=nil)" />
        <scope ilk="function" line="175" lineend="177" name="create" signature="create" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/mainframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="9" module="tkextlib/bwidget/progressbar" symbol="*" />
      <scope doc="tkextlib/bwidget/mainframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="11" lineend="16" name="Tk">
        <scope ilk="namespace" line="12" lineend="15" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="13" lineend="14" name="MainFrame" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="92" name="Tk::BWidget::">
        <scope ilk="function" line="23" lineend="25" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="28" lineend="30" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="33" lineend="39" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
        <scope ilk="function" line="42" lineend="46" name="add_indicator" signature="add_indicator(keys={}, &amp;b)" />
        <scope ilk="function" line="48" lineend="52" name="add_toolbar" signature="add_toolbar(&amp;b)" />
        <scope ilk="function" line="54" lineend="58" name="get_frame" signature="get_frame(&amp;b)" />
        <scope ilk="function" line="60" lineend="64" name="get_indicator" signature="get_indicator(idx, &amp;b)" />
        <scope ilk="function" line="66" lineend="70" name="get_menu" signature="get_menu(menu_id, &amp;b)" />
        <scope ilk="function" line="72" lineend="76" name="get_toolbar" signature="get_toolbar(idx, &amp;b)" />
        <scope ilk="function" line="78" lineend="81" name="set_menustate" signature="set_menustate(tag, state)" />
        <scope ilk="function" line="83" lineend="86" name="show_statusbar" signature="show_statusbar(name)" />
        <scope ilk="function" line="88" lineend="91" name="show_toolbar" signature="show_toolbar(idx, mode)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/listbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/canvas" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/listbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="20" name="Tk">
        <scope ilk="namespace" line="11" lineend="19" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="18" name="ListBox">
            <scope classrefs="TkObject" doc="is NOT a subclass of a listbox widget class." ilk="class" line="16" lineend="17" name="Item" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="22" lineend="208" name="Tk::BWidget::">
        <scope classrefs="TkEvent::Event" ilk="class" line="30" lineend="36" name="Event_for_Items">
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="35" name="_get_extra_args_tbl[" signature="self._get_extra_args_tbl [" />
        </scope>
        <scope ilk="function" line="38" lineend="40" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="43" lineend="50" name="tagid" signature="tagid(tag)" />
        <scope doc="def imagebind(*args) _bind_for_event_class(Event_for_Items,&#xA;[path, &apos;bindImage&apos;], *args) self end" ilk="function" line="56" lineend="66" name="imagebind" signature="imagebind(context, *args)" />
        <scope doc="def imagebind_append(*args)&#xA;_bind_append_for_event_class(Event_for_Items, [path,&#xA;&apos;bindImage&apos;], *args) self end" ilk="function" line="72" lineend="82" name="imagebind_append" signature="imagebind_append(context, *args)" />
        <scope ilk="function" line="84" lineend="87" name="imagebind_remove" signature="imagebind_remove(*args)" />
        <scope ilk="function" line="89" lineend="91" name="imagebindinfo" signature="imagebindinfo(*args)" />
        <scope doc="def textbind(*args) _bind_for_event_class(Event_for_Items,&#xA;[path, &apos;bindText&apos;], *args) self end" ilk="function" line="97" lineend="107" name="textbind" signature="textbind(context, *args)" />
        <scope doc="def textbind_append(*args)&#xA;_bind_append_for_event_class(Event_for_Items, [path,&#xA;&apos;bindText&apos;], *args) self end" ilk="function" line="113" lineend="123" name="textbind_append" signature="textbind_append(context, *args)" />
        <scope ilk="function" line="125" lineend="128" name="textbind_remove" signature="textbind_remove(*args)" />
        <scope ilk="function" line="130" lineend="132" name="textbindinfo" signature="textbindinfo(*args)" />
        <scope ilk="function" line="134" lineend="137" name="delete" signature="delete(*args)" />
        <scope ilk="function" line="139" lineend="142" name="edit" signature="edit(item, text, *args)" />
        <scope ilk="function" line="144" lineend="146" name="exist?" signature="exist?(item)" />
        <scope ilk="function" line="148" lineend="150" name="index" signature="index(item)" />
        <scope ilk="function" line="152" lineend="155" name="insert" signature="insert(idx, item, keys={})" />
        <scope ilk="function" line="157" lineend="159" name="get_item" signature="get_item(idx)" />
        <scope ilk="function" line="161" lineend="163" name="items" signature="items(first=None, last=None)" />
        <scope ilk="function" line="165" lineend="168" name="move" signature="move(item, idx)" />
        <scope ilk="function" line="170" lineend="173" name="reorder" signature="reorder(neworder)" />
        <scope ilk="function" line="175" lineend="178" name="see" signature="see(item)" />
        <scope ilk="function" line="180" lineend="183" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="185" lineend="189" name="selection_set" signature="selection_set(*args)" />
        <scope ilk="function" line="191" lineend="195" name="selection_add" signature="selection_add(*args)" />
        <scope ilk="function" line="197" lineend="201" name="selection_remove" signature="selection_remove(*args)" />
        <scope ilk="function" line="203" lineend="207" name="selection_get" signature="selection_get(*args)" />
        <import symbol="TkItemConfigMethod" />
        <import symbol="Scrollable" />
      </scope>
      <scope classrefs="Object" ilk="class" line="210" lineend="338" name="Tk::BWidget::">
        <scope attributes="__classmethod__" ilk="function" line="218" lineend="222" name="id2obj" signature="self.id2obj(lbox, id)" />
        <scope attributes="__ctor__" ilk="function" line="224" lineend="262" name="initialize" signature="initialize(lbox, *args)" />
        <scope ilk="function" line="264" lineend="266" name="listbox" signature="listbox" />
        <scope ilk="function" line="268" lineend="270" name="id" signature="id" />
        <scope ilk="function" line="272" lineend="274" name="[]" signature="[](key" />
        <scope ilk="function" line="276" lineend="279" name="[]=" signature="[]=(key" />
        <scope ilk="function" line="281" lineend="283" name="cget" signature="cget(key)" />
        <scope ilk="function" line="285" lineend="287" name="configure" signature="configure(key, val=None)" />
        <scope ilk="function" line="289" lineend="291" name="configinfo" signature="configinfo(key=nil)" />
        <scope ilk="function" line="293" lineend="295" name="current_configinfo" signature="current_configinfo(key=nil)" />
        <scope ilk="function" line="297" lineend="300" name="delete" signature="delete" />
        <scope ilk="function" line="302" lineend="305" name="edit" signature="edit(*args)" />
        <scope ilk="function" line="307" lineend="309" name="exist?" signature="exist?" />
        <scope ilk="function" line="311" lineend="313" name="index" signature="index" />
        <scope ilk="function" line="315" lineend="317" name="move" signature="move(index)" />
        <scope ilk="function" line="319" lineend="321" name="see" signature="see" />
        <scope ilk="function" line="323" lineend="325" name="selection_add" signature="selection_add" />
        <scope ilk="function" line="327" lineend="329" name="selection_remove" signature="selection_remove" />
        <scope ilk="function" line="331" lineend="333" name="selection_set" signature="selection_set" />
        <scope ilk="function" line="335" lineend="337" name="selection_toggle" signature="selection_toggle" />
        <import symbol="TkTreatTagFont" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/labelframe">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="9" module="tkextlib/bwidget/label" symbol="*" />
      <scope doc="tkextlib/bwidget/labelframe.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="11" lineend="16" name="Tk">
        <scope ilk="namespace" line="12" lineend="15" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="13" lineend="14" name="LabelFrame" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="46" name="Tk::BWidget::">
        <scope ilk="function" line="23" lineend="25" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="28" lineend="30" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="33" lineend="35" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="40" name="align" signature="self.align(*args)" />
        <scope ilk="function" line="41" lineend="45" name="get_frame" signature="get_frame(&amp;b)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/labelentry">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/entry" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="9" module="tkextlib/bwidget/labelframe" symbol="*" />
      <import line="10" module="tkextlib/bwidget/entry" symbol="*" />
      <scope doc="tkextlib/bwidget/labelentry.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="12" lineend="17" name="Tk">
        <scope ilk="namespace" line="13" lineend="16" name="BWidget">
          <scope classrefs="TkEntry" ilk="class" line="14" lineend="15" name="LabelEntry" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="19" lineend="80" name="Tk::BWidget::">
        <scope ilk="function" line="26" lineend="28" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="31" lineend="33" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="36" lineend="38" name="__font_optkeys" signature="__font_optkeys" />
        <scope doc="def entrybind(*args) _bind([path, &apos;bind&apos;], *args) self end" ilk="function" line="45" lineend="54" name="entrybind" signature="entrybind(context, *args)" />
        <scope doc="def entrybind_append(*args) _bind_append([path, &apos;bind&apos;],&#xA;*args) self end" ilk="function" line="60" lineend="69" name="entrybind_append" signature="entrybind_append(context, *args)" />
        <scope ilk="function" line="71" lineend="74" name="entrybind_remove" signature="entrybind_remove(*args)" />
        <scope ilk="function" line="76" lineend="79" name="entrybindinfo" signature="entrybindinfo(*args)" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/label">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/label" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/label.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkLabel" ilk="class" line="12" lineend="13" name="Label" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="41" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="24" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="27" lineend="29" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="32" lineend="34" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="37" lineend="40" name="set_focus" signature="set_focus" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/entry">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/entry" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/entry.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkEntry" ilk="class" line="12" lineend="13" name="Entry" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="43" name="Tk::BWidget::">
        <scope ilk="function" line="24" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="34" lineend="36" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="39" lineend="42" name="invoke" signature="invoke" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/dynamichelp">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/dynamichelp.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope ilk="namespace" line="11" lineend="12" name="DynamicHelp" />
        </scope>
      </scope>
      <scope ilk="namespace" line="16" lineend="56" name="Tk::BWidget::">
        <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="__pathname" signature="self.__pathname" />
        <scope ilk="function" line="24" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="29" lineend="31" name="__cget_cmd[" signature="self.__cget_cmd [" />
        <scope attributes="__classmethod__" ilk="function" line="33" lineend="35" name="__config_cmd[" signature="self.__config_cmd [" />
        <scope attributes="__classmethod__" ilk="function" line="37" lineend="39" name="cget" signature="self.cget(slot)" />
        <scope attributes="__classmethod__" ilk="function" line="41" lineend="43" name="add" signature="self.add(widget, keys={})" />
        <scope attributes="__classmethod__" ilk="function" line="45" lineend="47" name="delete" signature="self.delete(widget)" />
        <scope attributes="__classmethod__" ilk="function" line="49" lineend="51" name="include" signature="self.include(klass, type)" />
        <scope attributes="__classmethod__" ilk="function" line="53" lineend="55" name="sethelp" signature="self.sethelp(path, subpath, force=None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/dropsite">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/dropsite.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope ilk="namespace" line="11" lineend="12" name="DropSite" />
        </scope>
      </scope>
      <scope ilk="namespace" line="16" lineend="39" name="Tk::BWidget::">
        <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="include" signature="self.include(klass, type)" />
        <scope attributes="__classmethod__" ilk="function" line="24" lineend="26" name="register" signature="self.register(path, keys={})" />
        <scope attributes="__classmethod__" ilk="function" line="28" lineend="30" name="set_cursor" signature="self.set_cursor(cursor)" />
        <scope attributes="__classmethod__" ilk="function" line="32" lineend="34" name="set_drop" signature="self.set_drop(path, subpath, dropover, drop, force=None)" />
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="38" name="set_operation" signature="self.set_operation(op)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/dragsite">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/dragsite.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope ilk="namespace" line="11" lineend="12" name="DragSite" />
        </scope>
      </scope>
      <scope ilk="namespace" line="16" lineend="31" name="Tk::BWidget::">
        <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="include" signature="self.include(klass, type, event)" />
        <scope attributes="__classmethod__" ilk="function" line="24" lineend="26" name="register" signature="self.register(path, keys={})" />
        <scope attributes="__classmethod__" ilk="function" line="28" lineend="30" name="set_drag" signature="self.set_drag(path, subpath, initcmd, endcmd, force=None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/dialog">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="9" module="tkextlib/bwidget/buttonbox" symbol="*" />
      <scope doc="tkextlib/bwidget/dialog.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="11" lineend="16" name="Tk">
        <scope ilk="namespace" line="12" lineend="15" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="13" lineend="14" name="Dialog" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="157" name="Tk::BWidget::">
        <scope ilk="function" line="25" lineend="27" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="30" lineend="32" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="35" lineend="50" name="initialize" signature="initialize(parent=nil, keys=nil)" />
        <scope ilk="function" line="52" lineend="60" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="62" lineend="68" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="70" lineend="82" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="84" lineend="99" name="configinfo" signature="configinfo(slot=nil)" />
        <scope ilk="function" line="101" lineend="111" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="113" lineend="117" name="add" signature="add(keys={}, &amp;b)" />
        <scope ilk="function" line="119" lineend="123" name="get_frame" signature="get_frame(&amp;b)" />
        <scope ilk="function" line="125" lineend="129" name="get_buttonbox" signature="get_buttonbox(&amp;b)" />
        <scope ilk="function" line="131" lineend="133" name="draw" signature="draw(focus_win=None)" />
        <scope ilk="function" line="135" lineend="137" name="enddialog" signature="enddialog(ret)" />
        <scope ilk="function" line="139" lineend="141" name="index" signature="index(idx)" />
        <scope ilk="function" line="143" lineend="146" name="invoke" signature="invoke(idx)" />
        <scope ilk="function" line="148" lineend="151" name="set_focus" signature="set_focus(idx)" />
        <scope ilk="function" line="153" lineend="156" name="withdraw" signature="withdraw" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/combobox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/entry" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="9" module="tkextlib/bwidget/listbox" symbol="*" />
      <import line="10" module="tkextlib/bwidget/spinbox" symbol="*" />
      <scope doc="tkextlib/bwidget/combobox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="12" lineend="17" name="Tk">
        <scope ilk="namespace" line="13" lineend="16" name="BWidget">
          <scope classrefs="Tk::BWidget::" ilk="class" line="14" lineend="15" name="ComboBox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="19" lineend="45" name="Tk::BWidget::">
        <scope ilk="function" line="26" lineend="30" name="get_listbox" signature="get_listbox(&amp;b)" />
        <scope ilk="function" line="32" lineend="34" name="icursor" signature="icursor(idx)" />
        <scope ilk="function" line="36" lineend="39" name="post" signature="post" />
        <scope ilk="function" line="41" lineend="44" name="unpost" signature="unpost" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/buttonbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/button" symbol="*" />
      <scope doc="tkextlib/bwidget/buttonbox.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkWindow" ilk="class" line="12" lineend="13" name="ButtonBox" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="78" name="Tk::BWidget::">
        <scope ilk="function" line="24" lineend="26" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="29" lineend="39" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="41" lineend="45" name="add" signature="add(keys={}, &amp;b)" />
        <scope ilk="function" line="47" lineend="50" name="delete" signature="delete(idx)" />
        <scope ilk="function" line="52" lineend="61" name="index" signature="index(idx)" />
        <scope ilk="function" line="63" lineend="67" name="insert" signature="insert(idx, keys={}, &amp;b)" />
        <scope ilk="function" line="69" lineend="72" name="invoke" signature="invoke(idx)" />
        <scope ilk="function" line="74" lineend="77" name="set_focus" signature="set_focus(idx)" />
        <import symbol="TkItemConfigMethod" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/button">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/button" symbol="*" />
      <import line="8" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/button.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="TkButton" ilk="class" line="12" lineend="13" name="Button" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="31" name="Tk::BWidget::">
        <scope ilk="function" line="22" lineend="24" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="27" lineend="29" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/bitmap">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tk/image" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <scope doc="tkextlib/bwidget/bitmap.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="14" name="Tk">
        <scope ilk="namespace" line="10" lineend="13" name="BWidget">
          <scope classrefs="TkPhotoImage" ilk="class" line="11" lineend="12" name="Bitmap" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="16" lineend="21" name="Tk::BWidget::">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="20" name="initialize" signature="initialize(name)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/bwidget/arrowbutton">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/bwidget.rb" symbol="*" />
      <import line="8" module="tkextlib/bwidget/button" symbol="*" />
      <scope doc="tkextlib/bwidget/arrowbutton.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk">
        <scope ilk="namespace" line="11" lineend="14" name="BWidget">
          <scope classrefs="Tk::BWidget::" ilk="class" line="12" lineend="13" name="ArrowButton" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="21" name="Tk::BWidget::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/variable" symbol="*" />
      <import line="10" module="tkextlib/setup.rb" symbol="*" />
      <import line="13" module="tkextlib/blt/setup.rb" symbol="*" />
      <scope doc="load all image format handlers TkPackage.require(&apos;BLT&apos;,&#xA;&apos;2.4&apos;)" ilk="namespace" line="19" lineend="187" name="Tk">
        <scope ilk="namespace" line="20" lineend="186" name="BLT">
          <scope attributes="__classmethod__" ilk="function" line="43" lineend="45" name="package_name" signature="self.package_name" />
          <scope attributes="__classmethod__" ilk="function" line="47" lineend="53" name="package_version" signature="self.package_version" />
          <scope attributes="__classmethod__" ilk="function" line="57" lineend="59" name="beep" signature="self.beep(percent = 50)" />
          <scope attributes="__classmethod__" ilk="function" line="61" lineend="76" name="bgexec" signature="self.bgexec(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="78" lineend="93" name="detach_bgexec" signature="self.detach_bgexec(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="95" lineend="101" name="bltdebug" signature="self.bltdebug(lvl = nil)" />
          <scope attributes="__classmethod__" ilk="function" line="103" lineend="105" name="crc32_file" signature="self.crc32_file(name)" />
          <scope attributes="__classmethod__" ilk="function" line="106" lineend="108" name="crc32_data" signature="self.crc32_data(dat)" />
          <scope attributes="__classmethod__" ilk="function" line="112" lineend="114" name="active_legend" signature="self.active_legend(graph)" />
          <scope attributes="__classmethod__" ilk="function" line="115" lineend="117" name="crosshairs" signature="self.crosshairs(graph)" />
          <scope attributes="__classmethod__" ilk="function" line="118" lineend="120" name="zoom_stack" signature="self.zoom_stack(graph)" />
          <scope attributes="__classmethod__" ilk="function" line="121" lineend="123" name="print_key" signature="self.print_key(graph)" />
          <scope attributes="__classmethod__" ilk="function" line="124" lineend="126" name="closest_point" signature="self.closest_point(graph)" />
          <scope ilk="namespace" line="128" lineend="149" name="GraphCommand">
            <scope ilk="function" line="129" lineend="132" name="active_legend" signature="active_legend" />
            <scope ilk="function" line="133" lineend="136" name="crosshairs" signature="crosshairs" />
            <scope ilk="function" line="137" lineend="140" name="zoom_stack" signature="zoom_stack" />
            <scope ilk="function" line="141" lineend="144" name="print_key" signature="print_key" />
            <scope ilk="function" line="145" lineend="148" name="closest_point" signature="closest_point" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/win_printer">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/win_printer.rb" ilk="namespace" line="12" lineend="61" name="Tk::BLT">
        <scope classrefs="TkObject" ilk="class" line="13" lineend="60" name="Printer">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="20" name="enum" signature="self.enum(attribute)" />
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="24" name="names" signature="self.names(pat=None)" />
          <scope attributes="__classmethod__" ilk="function" line="26" lineend="28" name="open" signature="self.open(printer)" />
          <scope attributes="__ctor__" ilk="function" line="32" lineend="34" name="initialize" signature="initialize(printer)" />
          <scope ilk="function" line="36" lineend="39" name="close" signature="close" />
          <scope ilk="function" line="40" lineend="43" name="get_attrs" signature="get_attrs(var)" />
          <scope ilk="function" line="44" lineend="47" name="set_attrs" signature="set_attrs(var)" />
          <scope ilk="function" line="48" lineend="51" name="snap" signature="snap(win)" />
          <scope ilk="function" line="52" lineend="55" name="write" signature="write(str)" />
          <scope ilk="function" line="56" lineend="59" name="write_with_title" signature="write_with_title(title, str)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/winop">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/winop.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="16" name="Tk::BLT">
        <scope ilk="namespace" line="10" lineend="14" name="Winop" />
      </scope>
      <scope classrefs="Object" ilk="class" line="18" lineend="107" name="Tk::BLT::">
        <scope ilk="function" line="19" lineend="21" name="changes" signature="changes(win)" />
        <scope ilk="function" line="23" lineend="25" name="colormap" signature="colormap(win)" />
        <scope ilk="function" line="27" lineend="29" name="convolve" signature="convolve(src, dest, filter)" />
        <scope ilk="function" line="31" lineend="33" name="image_convolve" signature="image_convolve(src, dest, filter)" />
        <scope ilk="function" line="34" lineend="36" name="image_gradient" signature="image_gradient(photo, left, right, type)" />
        <scope ilk="function" line="37" lineend="39" name="image_read_jpeg" signature="image_read_jpeg(file, photo)" />
        <scope ilk="function" line="40" lineend="43" name="image_resample" signature="image_resample(src, dest, horiz_filter=None, vert_filter=None)" />
        <scope ilk="function" line="44" lineend="46" name="image_rotate" signature="image_rotate(src, dest, angle)" />
        <scope ilk="function" line="47" lineend="49" name="image_snap" signature="image_snap(win, photo, width=None, height=None)" />
        <scope ilk="function" line="50" lineend="54" name="image_subsample" signature="image_subsample(src, dest, x, y, width, height, horiz_filter=None, vert_filter=None)" />
        <scope ilk="function" line="56" lineend="58" name="quantize" signature="quantize(src, dest, colors)" />
        <scope ilk="function" line="60" lineend="62" name="query" signature="query()" />
        <scope ilk="function" line="64" lineend="66" name="read_jpeg" signature="read_jpeg(file, photo)" />
        <scope ilk="function" line="68" lineend="71" name="resample" signature="resample(src, dest, horiz_filter=None, vert_filter=None)" />
        <scope ilk="function" line="73" lineend="77" name="subsample" signature="subsample(src, dest, x, y, width, height, horiz_filter=None, vert_filter=None)" />
        <scope ilk="function" line="79" lineend="81" name="raise" signature="raise(*wins)" />
        <scope ilk="function" line="83" lineend="85" name="lower" signature="lower(*wins)" />
        <scope ilk="function" line="87" lineend="89" name="map" signature="map(*wins)" />
        <scope ilk="function" line="91" lineend="93" name="unmap" signature="unmap(*wins)" />
        <scope ilk="function" line="95" lineend="97" name="move" signature="move(win, x, y)" />
        <scope ilk="function" line="99" lineend="101" name="snap" signature="snap(win, photo)" />
        <scope ilk="function" line="103" lineend="105" name="warpto" signature="warpto(win = None)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/watch">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/watch.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="142" name="Tk::BLT">
        <scope classrefs="TkObject" ilk="class" line="10" lineend="141" name="Watch">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="22" name="names" signature="self.names(state = None)" />
          <scope ilk="function" line="24" lineend="26" name="__numval_optkeys" signature="__numval_optkeys" />
          <scope ilk="function" line="29" lineend="31" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="34" lineend="36" name="__config_cmd" signature="__config_cmd" />
          <scope attributes="__ctor__" ilk="function" line="39" lineend="56" name="initialize" signature="initialize(name = nil, keys = {})" />
          <scope ilk="function" line="58" lineend="61" name="activate" signature="activate" />
          <scope ilk="function" line="62" lineend="65" name="deactivate" signature="deactivate" />
          <scope ilk="function" line="66" lineend="69" name="delete" signature="delete" />
          <scope ilk="function" line="70" lineend="115" name="info" signature="info" />
          <scope ilk="function" line="116" lineend="132" name="configinfo" signature="configinfo(slot = nil)" />
          <scope ilk="function" line="133" lineend="140" name="cget" signature="cget(key)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/vector">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/vector.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="243" name="Tk::BLT">
        <scope classrefs="TkVariable" ilk="class" line="10" lineend="220" name="Vector">
          <scope attributes="__classmethod__" ilk="function" line="13" lineend="15" name="create" signature="self.create(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="17" lineend="19" name="destroy" signature="self.destroy(*args)" />
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="23" name="expr" signature="self.expr(expression)" />
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="35" name="names" signature="self.names(pat=None)" />
          <scope attributes="__ctor__" ilk="function" line="39" lineend="67" name="initialize" signature="initialize(size=nil, keys={})" />
          <scope ilk="function" line="69" lineend="71" name="destroy" signature="destroy" />
          <scope ilk="function" line="73" lineend="75" name="inspect" signature="inspect" />
          <scope ilk="function" line="77" lineend="79" name="to_s" signature="to_s" />
          <scope ilk="function" line="81" lineend="83" name="*" signature="*(item" />
          <scope ilk="function" line="85" lineend="87" name="+" signature="+(item" />
          <scope ilk="function" line="89" lineend="91" name="-" signature="-(item" />
          <scope ilk="function" line="93" lineend="95" name="/" signature="/(item" />
          <scope ilk="function" line="97" lineend="99" name="append" signature="append(*vectors)" />
          <scope ilk="function" line="101" lineend="109" name="binread" signature="binread(channel, len=None, keys={})" />
          <scope ilk="function" line="111" lineend="114" name="clear" signature="clear()" />
          <scope ilk="function" line="116" lineend="119" name="delete" signature="delete(*indices)" />
          <scope ilk="function" line="121" lineend="124" name="dup_vector" signature="dup_vector(vec)" />
          <scope ilk="function" line="126" lineend="129" name="expr" signature="expr(expression)" />
          <scope ilk="function" line="131" lineend="133" name="index" signature="index(idx, val=None)" />
          <scope ilk="function" line="135" lineend="137" name="[]" signature="[](idx" />
          <scope ilk="function" line="139" lineend="141" name="[]=" signature="[]=(idx" />
          <scope ilk="function" line="143" lineend="145" name="length" signature="length()" />
          <scope ilk="function" line="147" lineend="149" name="length=" signature="length=(size)" />
          <scope ilk="function" line="151" lineend="154" name="merge" signature="merge(*vectors)" />
          <scope ilk="function" line="156" lineend="159" name="normalize" signature="normalize(vec=None)" />
          <scope ilk="function" line="161" lineend="164" name="notify" signature="notify(keyword)" />
          <scope ilk="function" line="166" lineend="168" name="offset" signature="offset()" />
          <scope ilk="function" line="170" lineend="172" name="offset=" signature="offset=(val)" />
          <scope ilk="function" line="174" lineend="176" name="random" signature="random()" />
          <scope ilk="function" line="178" lineend="181" name="populate" signature="populate(vector, density=None)" />
          <scope ilk="function" line="183" lineend="185" name="range" signature="range(first, last=None)" />
          <scope ilk="function" line="187" lineend="189" name="search" signature="search(val1, val2=None)" />
          <scope ilk="function" line="191" lineend="194" name="set" signature="set(item)" />
          <scope ilk="function" line="196" lineend="199" name="seq" signature="seq(start, finish=None, step=None)" />
          <scope ilk="function" line="201" lineend="204" name="sort" signature="sort(*vectors)" />
          <scope ilk="function" line="206" lineend="209" name="sort_reverse" signature="sort_reverse(*vectors)" />
          <scope ilk="function" line="211" lineend="214" name="split" signature="split(*vectors)" />
          <scope ilk="function" line="216" lineend="219" name="variable" signature="variable(var)" />
        </scope>
        <scope classrefs="Vector" ilk="class" line="222" lineend="242" name="VectorAccess">
          <scope attributes="__classmethod__" ilk="function" line="223" lineend="226" name="new" signature="self.new(name)" />
          <scope attributes="__ctor__" ilk="function" line="228" lineend="241" name="initialize" signature="initialize(vec_name)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/unix_dnd">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/unix_dnd.rb" ilk="namespace" line="12" lineend="129" name="Tk::BLT">
        <scope ilk="namespace" line="13" lineend="128" name="DnD">
          <scope classrefs="Object" ilk="class" line="22" lineend="71" name="self">
            <scope ilk="function" line="23" lineend="25" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
            <scope ilk="function" line="28" lineend="30" name="__item_config_cmd" signature="__item_config_cmd(id)" />
            <scope ilk="function" line="36" lineend="38" name="cget" signature="cget(win, option)" />
            <scope ilk="function" line="39" lineend="41" name="configure" signature="configure(win, slot, value=None)" />
            <scope ilk="function" line="42" lineend="44" name="configinfo" signature="configinfo(win, slot=nil)" />
            <scope ilk="function" line="45" lineend="47" name="current_configinfo" signature="current_configinfo(win, slot=nil)" />
            <scope ilk="function" line="49" lineend="51" name="tokwn_cget" signature="tokwn_cget(win, option)" />
            <scope ilk="function" line="52" lineend="54" name="token_configure" signature="token_configure(win, slot, value=None)" />
            <scope ilk="function" line="55" lineend="57" name="token_configinfo" signature="token_configinfo(win, slot=nil)" />
            <scope ilk="function" line="58" lineend="60" name="current_token_configinfo" signature="current_token_configinfo(win, slot=nil)" />
            <scope ilk="function" line="62" lineend="64" name="token_windowconfigure" signature="token_windowconfigure(win, slot, value=None)" />
            <scope ilk="function" line="65" lineend="67" name="token_windowconfiginfo" signature="token_windowconfiginfo(win, slot=nil)" />
            <scope ilk="function" line="68" lineend="70" name="current_token_windowconfiginfo" signature="current_token_windowconfiginfo(win, slot=nil)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="75" lineend="77" name="cancel" signature="self.cancel(win)" />
          <scope attributes="__classmethod__" ilk="function" line="78" lineend="80" name="delete" signature="self.delete(*wins)" />
          <scope attributes="__classmethod__" ilk="function" line="81" lineend="83" name="delete_source" signature="self.delete_source(*wins)" />
          <scope attributes="__classmethod__" ilk="function" line="84" lineend="86" name="delete_target" signature="self.delete_target(*wins)" />
          <scope attributes="__classmethod__" ilk="function" line="87" lineend="89" name="drag" signature="self.drag(win, x, y, token=None)" />
          <scope attributes="__classmethod__" ilk="function" line="90" lineend="92" name="drop" signature="self.drop(win, x, y, token=None)" />
          <scope attributes="__classmethod__" ilk="function" line="93" lineend="99" name="get_data" signature="self.get_data(win, fmt=nil, cmd=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="100" lineend="102" name="names" signature="self.names(pat=None)" />
          <scope attributes="__classmethod__" ilk="function" line="103" lineend="105" name="source_names" signature="self.source_names(pat=None)" />
          <scope attributes="__classmethod__" ilk="function" line="106" lineend="108" name="target_names" signature="self.target_names(pat=None)" />
          <scope attributes="__classmethod__" ilk="function" line="109" lineend="111" name="pull" signature="self.pull(win, fmt)" />
          <scope attributes="__classmethod__" ilk="function" line="112" lineend="114" name="register" signature="self.register(win, keys={})" />
          <scope attributes="__classmethod__" ilk="function" line="115" lineend="117" name="select" signature="self.select(win, x, y, timestamp)" />
          <scope attributes="__classmethod__" ilk="function" line="118" lineend="124" name="set_data" signature="self.set_data(win, fmt=nil, cmd=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="125" lineend="127" name="token" signature="self.token(*args)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/treeview">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <import line="8" module="tk/validation.rb" symbol="*" />
      <scope doc="tkextlib/blt/treeview.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="27" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="11" lineend="23" name="Treeview">
          <scope ilk="namespace" line="12" lineend="13" name="ConfigMethod" />
          <scope ilk="namespace" line="15" lineend="16" name="TagOrID_Methods" />
          <scope classrefs="TkObject" ilk="class" line="18" lineend="19" name="Node" />
          <scope classrefs="TkObject" ilk="class" line="21" lineend="22" name="Tag" />
        </scope>
        <scope classrefs="Treeview" ilk="class" line="25" lineend="26" name="Hiertable" />
      </scope>
      <scope ilk="namespace" line="31" lineend="198" name="Tk::BLT::">
        <scope ilk="function" line="34" lineend="44" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="47" lineend="57" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="60" lineend="67" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
        <scope ilk="function" line="70" lineend="77" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="80" lineend="87" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="90" lineend="95" name="__item_pathname" signature="__item_pathname(id)" />
        <scope ilk="function" line="98" lineend="100" name="column_cget" signature="column_cget(name, option)" />
        <scope ilk="function" line="101" lineend="103" name="column_configure" signature="column_configure(name, slot, value=None)" />
        <scope ilk="function" line="104" lineend="106" name="column_configinfo" signature="column_configinfo(name, slot=nil)" />
        <scope ilk="function" line="107" lineend="109" name="current_column_configinfo" signature="current_column_configinfo(name, slot=nil)" />
        <scope ilk="function" line="111" lineend="113" name="button_cget" signature="button_cget(option)" />
        <scope ilk="function" line="114" lineend="116" name="button_configure" signature="button_configure(slot, value=None)" />
        <scope ilk="function" line="117" lineend="119" name="button_configinfo" signature="button_configinfo(slot=nil)" />
        <scope ilk="function" line="120" lineend="122" name="current_button_configinfo" signature="current_button_configinfo(slot=nil)" />
        <scope ilk="function" line="124" lineend="131" name="entry_cget" signature="entry_cget(option)" />
        <scope ilk="function" line="132" lineend="134" name="entry_configure" signature="entry_configure(slot, value=None)" />
        <scope ilk="function" line="135" lineend="159" name="entry_configinfo" signature="entry_configinfo(slot=nil)" />
        <scope ilk="function" line="160" lineend="168" name="current_entry_configinfo" signature="current_entry_configinfo(slot=nil)" />
        <scope ilk="function" line="170" lineend="172" name="sort_cget" signature="sort_cget(option)" />
        <scope ilk="function" line="173" lineend="175" name="sort_configure" signature="sort_configure(slot, value=None)" />
        <scope ilk="function" line="176" lineend="178" name="sort_configinfo" signature="sort_configinfo(slot=nil)" />
        <scope ilk="function" line="179" lineend="181" name="current_sort_configinfo" signature="current_sort_configinfo(slot=nil)" />
        <scope ilk="function" line="183" lineend="185" name="text_cget" signature="text_cget(option)" />
        <scope ilk="function" line="186" lineend="188" name="text_configure" signature="text_configure(slot, value=None)" />
        <scope ilk="function" line="189" lineend="191" name="text_configinfo" signature="text_configinfo(slot=nil)" />
        <scope ilk="function" line="192" lineend="194" name="current_text_configinfo" signature="current_text_configinfo(slot=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="200" lineend="764" name="Tk::BLT::">
        <scope ilk="function" line="212" lineend="215" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="218" lineend="220" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope classrefs="TkValidateCommand" ilk="class" line="225" lineend="252" name="OpenCloseCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="226" lineend="247" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="244" lineend="246" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="249" lineend="251" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope ilk="function" line="254" lineend="256" name="__validation_class_list" signature="__validation_class_list" />
        <scope ilk="function" line="262" lineend="269" name="__item_validation_class_list" signature="__item_validation_class_list(id)" />
        <scope ilk="function" line="275" lineend="278" name="__destroy_hook__" signature="__destroy_hook__" />
        <scope ilk="function" line="280" lineend="287" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="290" lineend="302" name="tagid2obj" signature="tagid2obj(tagid)" />
        <scope ilk="function" line="304" lineend="306" name="bbox" signature="bbox(*tags)" />
        <scope ilk="function" line="308" lineend="310" name="screen_bbox" signature="screen_bbox(*tags)" />
        <scope ilk="function" line="312" lineend="320" name="tag_bind" signature="tag_bind(tag, seq, *args)" />
        <scope ilk="function" line="321" lineend="329" name="tag_bind_append" signature="tag_bind_append(tag, seq, *args)" />
        <scope ilk="function" line="330" lineend="333" name="tag_bind_remove" signature="tag_bind_remove(tag, seq)" />
        <scope ilk="function" line="334" lineend="336" name="tag_bindinfo" signature="tag_bindinfo(tag, seq=nil)" />
        <scope ilk="function" line="338" lineend="341" name="button_activate" signature="button_activate(tag)" />
        <scope ilk="function" line="343" lineend="351" name="button_bind" signature="button_bind(tag, seq, *args)" />
        <scope ilk="function" line="352" lineend="360" name="button_bind_append" signature="button_bind_append(tag, seq, *args)" />
        <scope ilk="function" line="361" lineend="364" name="button_bind_remove" signature="button_bind_remove(tag, seq)" />
        <scope ilk="function" line="365" lineend="367" name="button_bindinfo" signature="button_bindinfo(tag, seq=nil)" />
        <scope ilk="function" line="369" lineend="372" name="close" signature="close(*tags)" />
        <scope ilk="function" line="373" lineend="376" name="close_recurse" signature="close_recurse(*tags)" />
        <scope ilk="function" line="378" lineend="385" name="column_activate" signature="column_activate(column=None)" />
        <scope ilk="function" line="387" lineend="390" name="column_delete" signature="column_delete(*fields)" />
        <scope ilk="function" line="391" lineend="394" name="column_insert" signature="column_insert(pos, field, *opts)" />
        <scope ilk="function" line="395" lineend="398" name="column_invoke" signature="column_invoke(field)" />
        <scope ilk="function" line="399" lineend="402" name="column_move" signature="column_move(name, dest)" />
        <scope ilk="function" line="403" lineend="405" name="column_names" signature="column_names()" />
        <scope ilk="function" line="406" lineend="408" name="column_nearest" signature="column_nearest(x, y=None)" />
        <scope ilk="function" line="410" lineend="412" name="curselection" signature="curselection" />
        <scope ilk="function" line="414" lineend="417" name="delete" signature="delete(*tags)" />
        <scope ilk="function" line="419" lineend="422" name="entry_activate" signature="entry_activate(tag)" />
        <scope ilk="function" line="423" lineend="426" name="entry_children" signature="entry_children(tag, first=None, last=None)" />
        <scope ilk="function" line="427" lineend="429" name="entry_delete" signature="entry_delete(tag, first=None, last=None)" />
        <scope ilk="function" line="430" lineend="432" name="entry_before?" signature="entry_before?(tag1, tag2)" />
        <scope ilk="function" line="433" lineend="435" name="entry_hidden?" signature="entry_hidden?(tag)" />
        <scope ilk="function" line="436" lineend="438" name="entry_open?" signature="entry_open?(tag)" />
        <scope ilk="function" line="440" lineend="442" name="entry_size" signature="entry_size(tag)" />
        <scope ilk="function" line="443" lineend="445" name="entry_size_recurse" signature="entry_size_recurse(tag)" />
        <scope ilk="function" line="447" lineend="453" name="_search_flags" signature="_search_flags(keys)" />
        <scope classrefs="TkValidateCommand" ilk="class" line="458" lineend="485" name="FindExecFlagValue">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="459" lineend="480" name="ValidateArgs">
            <scope attributes="__classmethod__" ilk="function" line="477" lineend="479" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="482" lineend="484" name="_config_keys[]" signature="self._config_keys []" />
        </scope>
        <scope ilk="function" line="487" lineend="496" name="_find_exec_flag_value" signature="_find_exec_flag_value(val)" />
        <scope ilk="function" line="500" lineend="505" name="find" signature="find(first, last, keys={})" />
        <scope ilk="function" line="507" lineend="510" name="tag_focus" signature="tag_focus(tag)" />
        <scope ilk="function" line="511" lineend="513" name="get" signature="get(*tags)" />
        <scope ilk="function" line="514" lineend="516" name="get_full" signature="get_full(*tags)" />
        <scope ilk="function" line="518" lineend="529" name="hide" signature="hide(*tags)" />
        <scope ilk="function" line="531" lineend="533" name="index" signature="index(str)" />
        <scope ilk="function" line="534" lineend="536" name="index_at" signature="index_at(tag, str)" />
        <scope ilk="function" line="537" lineend="539" name="index_at_path" signature="index_at_path(tag, str)" />
        <scope ilk="function" line="541" lineend="543" name="insert" signature="insert(pos, parent=nil, keys={})" />
        <scope ilk="function" line="544" lineend="554" name="insert_at" signature="insert_at(tag, pos, parent=nil, keys={})" />
        <scope ilk="function" line="556" lineend="559" name="move_before" signature="move_before(tag, dest)" />
        <scope ilk="function" line="560" lineend="563" name="move_after" signature="move_after(tag, dest)" />
        <scope ilk="function" line="564" lineend="567" name="move_into" signature="move_into(tag, dest)" />
        <scope ilk="function" line="569" lineend="571" name="nearest" signature="nearest(x, y, var=None)" />
        <scope ilk="function" line="573" lineend="576" name="open" signature="open(*tags)" />
        <scope ilk="function" line="577" lineend="580" name="open_recurse" signature="open_recurse(*tags)" />
        <scope ilk="function" line="582" lineend="586" name="range" signature="range(first, last)" />
        <scope ilk="function" line="587" lineend="592" name="range_open" signature="range_open(first, last)" />
        <scope ilk="function" line="594" lineend="597" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="598" lineend="601" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="603" lineend="606" name="see" signature="see(tag)" />
        <scope ilk="function" line="607" lineend="610" name="see_anchor" signature="see_anchor(anchor, tag)" />
        <scope ilk="function" line="612" lineend="615" name="selection_anchor" signature="selection_anchor(tag)" />
        <scope ilk="function" line="616" lineend="619" name="selection_cancel" signature="selection_cancel()" />
        <scope ilk="function" line="620" lineend="623" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="624" lineend="627" name="selection_clear_all" signature="selection_clear_all()" />
        <scope ilk="function" line="628" lineend="631" name="selection_mark" signature="selection_mark(tag)" />
        <scope ilk="function" line="632" lineend="634" name="selection_include?" signature="selection_include?(tag)" />
        <scope ilk="function" line="635" lineend="637" name="selection_present?" signature="selection_present?()" />
        <scope ilk="function" line="638" lineend="641" name="selection_set" signature="selection_set(first, last=None)" />
        <scope ilk="function" line="642" lineend="645" name="selection_toggle" signature="selection_toggle(first, last=None)" />
        <scope ilk="function" line="647" lineend="658" name="show" signature="show(*tags)" />
        <scope ilk="function" line="660" lineend="663" name="sort_auto" signature="sort_auto(mode)" />
        <scope ilk="function" line="664" lineend="667" name="sort_auto=" signature="sort_auto=(mode)" />
        <scope ilk="function" line="668" lineend="670" name="sort_auto?" signature="sort_auto?" />
        <scope ilk="function" line="671" lineend="674" name="sort_once" signature="sort_once(*tags)" />
        <scope ilk="function" line="675" lineend="678" name="sort_once_recurse" signature="sort_once_recurse(*tags)" />
        <scope ilk="function" line="680" lineend="683" name="tag_add" signature="tag_add(tag, *ids)" />
        <scope ilk="function" line="684" lineend="687" name="tag_delete" signature="tag_delete(tag, *ids)" />
        <scope ilk="function" line="688" lineend="691" name="tag_forget" signature="tag_forget(tag)" />
        <scope ilk="function" line="692" lineend="698" name="tag_names" signature="tag_names(id=nil)" />
        <scope ilk="function" line="699" lineend="703" name="tag_nodes" signature="tag_nodes(tag)" />
        <scope ilk="function" line="705" lineend="708" name="text_apply" signature="text_apply" />
        <scope ilk="function" line="709" lineend="712" name="text_cancel" signature="text_cancel" />
        <scope ilk="function" line="714" lineend="717" name="text_delete" signature="text_delete(first, last)" />
        <scope ilk="function" line="718" lineend="720" name="text_get" signature="text_get(x, y)" />
        <scope ilk="function" line="721" lineend="723" name="text_get_root" signature="text_get_root(x, y)" />
        <scope ilk="function" line="724" lineend="727" name="text_icursor" signature="text_icursor(idx)" />
        <scope ilk="function" line="728" lineend="730" name="text_index" signature="text_index(idx)" />
        <scope ilk="function" line="731" lineend="734" name="text_insert" signature="text_insert(idx, str)" />
        <scope ilk="function" line="736" lineend="739" name="text_selection_adjust" signature="text_selection_adjust(idx)" />
        <scope ilk="function" line="740" lineend="743" name="text_selection_clear" signature="text_selection_clear" />
        <scope ilk="function" line="744" lineend="747" name="text_selection_from" signature="text_selection_from(idx)" />
        <scope ilk="function" line="748" lineend="750" name="text_selection_present" signature="text_selection_present" />
        <scope ilk="function" line="751" lineend="754" name="text_selection_range" signature="text_selection_range(start, last)" />
        <scope ilk="function" line="755" lineend="758" name="text_selection_to" signature="text_selection_to(idx)" />
        <scope ilk="function" line="760" lineend="763" name="toggle" signature="toggle(tag)" />
        <import symbol="Scrollable" />
        <import symbol="ValidateConfigure" />
        <import symbol="ItemValidateConfigure" />
        <import symbol="Tk::BLT::" />
      </scope>
      <scope ilk="namespace" line="768" lineend="962" name="Tk::BLT::">
        <scope ilk="function" line="769" lineend="771" name="bbox" signature="bbox" />
        <scope ilk="function" line="772" lineend="774" name="screen_bbox" signature="screen_bbox" />
        <scope ilk="function" line="776" lineend="779" name="bind" signature="bind(seq, *args)" />
        <scope ilk="function" line="780" lineend="783" name="bind_append" signature="bind_append(seq, *args)" />
        <scope ilk="function" line="784" lineend="787" name="bind_remove" signature="bind_remove(seq)" />
        <scope ilk="function" line="788" lineend="790" name="bindinfo" signature="bindinfo(seq=nil)" />
        <scope ilk="function" line="792" lineend="795" name="button_activate" signature="button_activate" />
        <scope ilk="function" line="797" lineend="800" name="button_bind" signature="button_bind(seq, *args)" />
        <scope ilk="function" line="801" lineend="804" name="button_bind_append" signature="button_bind_append(seq, *args)" />
        <scope ilk="function" line="805" lineend="808" name="button_bind_remove" signature="button_bind_remove(seq)" />
        <scope ilk="function" line="809" lineend="811" name="button_bindinfo" signature="button_bindinfo(seq=nil)" />
        <scope ilk="function" line="813" lineend="816" name="close" signature="close" />
        <scope ilk="function" line="817" lineend="820" name="close_recurse" signature="close_recurse" />
        <scope ilk="function" line="822" lineend="825" name="delete" signature="delete" />
        <scope ilk="function" line="827" lineend="830" name="entry_activate" signature="entry_activate" />
        <scope ilk="function" line="831" lineend="833" name="entry_children" signature="entry_children(first=None, last=None)" />
        <scope ilk="function" line="834" lineend="836" name="entry_delete" signature="entry_delete(first=None, last=None)" />
        <scope ilk="function" line="837" lineend="839" name="entry_before?" signature="entry_before?(tag)" />
        <scope ilk="function" line="840" lineend="842" name="entry_hidden?" signature="entry_hidden?" />
        <scope ilk="function" line="843" lineend="845" name="entry_open?" signature="entry_open?" />
        <scope ilk="function" line="847" lineend="849" name="entry_size" signature="entry_size" />
        <scope ilk="function" line="850" lineend="852" name="entry_size_recurse" signature="entry_size_recurse" />
        <scope ilk="function" line="854" lineend="857" name="focus" signature="focus" />
        <scope ilk="function" line="859" lineend="861" name="get" signature="get" />
        <scope ilk="function" line="862" lineend="864" name="get_full" signature="get_full" />
        <scope ilk="function" line="866" lineend="869" name="hide" signature="hide" />
        <scope ilk="function" line="871" lineend="873" name="index" signature="index(str)" />
        <scope ilk="function" line="874" lineend="876" name="index_path" signature="index_path(str)" />
        <scope ilk="function" line="878" lineend="880" name="insert" signature="insert(pos, parent=nil, keys={})" />
        <scope ilk="function" line="882" lineend="885" name="move_before" signature="move_before(dest)" />
        <scope ilk="function" line="886" lineend="889" name="move_after" signature="move_after(dest)" />
        <scope ilk="function" line="890" lineend="893" name="move_into" signature="move_into(dest)" />
        <scope ilk="function" line="895" lineend="898" name="open" signature="open" />
        <scope ilk="function" line="899" lineend="902" name="open_recurse" signature="open_recurse" />
        <scope ilk="function" line="904" lineend="906" name="range_to" signature="range_to(tag)" />
        <scope ilk="function" line="907" lineend="909" name="range_open_to" signature="range_open_to(tag)" />
        <scope ilk="function" line="911" lineend="914" name="see" signature="see" />
        <scope ilk="function" line="915" lineend="918" name="see_anchor" signature="see_anchor(anchor)" />
        <scope ilk="function" line="920" lineend="923" name="selection_anchor" signature="selection_anchor" />
        <scope ilk="function" line="924" lineend="927" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="928" lineend="931" name="selection_mark" signature="selection_mark" />
        <scope ilk="function" line="932" lineend="934" name="selection_include?" signature="selection_include?" />
        <scope ilk="function" line="935" lineend="938" name="selection_set" signature="selection_set" />
        <scope ilk="function" line="939" lineend="942" name="selection_toggle" signature="selection_toggle" />
        <scope ilk="function" line="944" lineend="947" name="show" signature="show" />
        <scope ilk="function" line="949" lineend="952" name="sort_once" signature="sort_once" />
        <scope ilk="function" line="953" lineend="956" name="sort_once_recurse" signature="sort_once_recurse" />
        <scope ilk="function" line="958" lineend="961" name="toggle" signature="toggle" />
      </scope>
      <scope classrefs="Object" ilk="class" line="966" lineend="1046" name="Tk::BLT::">
        <scope attributes="__classmethod__" ilk="function" line="974" lineend="986" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__classmethod__" ilk="function" line="988" lineend="1004" name="new" signature="self.new(tree, pos, parent=nil, keys={})" />
        <scope attributes="__ctor__" ilk="function" line="1006" lineend="1041" name="initialize" signature="initialize(tree, pos, parent, keys)" />
        <scope ilk="function" line="1043" lineend="1045" name="id" signature="id" />
        <import symbol="Tk::BLT::" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1050" lineend="1140" name="Tk::BLT::">
        <scope attributes="__classmethod__" ilk="function" line="1058" lineend="1070" name="id2obj" signature="self.id2obj(tree, id)" />
        <scope attributes="__classmethod__" ilk="function" line="1072" lineend="1077" name="new_by_name" signature="self.new_by_name(tree, name, *ids)" />
        <scope attributes="__classmethod__" ilk="function" line="1079" lineend="1085" name="new" signature="self.new(tree, *ids)" />
        <scope attributes="__ctor__" ilk="function" line="1087" lineend="1104" name="initialize" signature="initialize(tree, name, ids)" />
        <scope ilk="function" line="1106" lineend="1113" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="1116" lineend="1118" name="id" signature="id" />
        <scope ilk="function" line="1120" lineend="1123" name="add" signature="add(*ids)" />
        <scope ilk="function" line="1125" lineend="1128" name="remove" signature="remove(*ids)" />
        <scope ilk="function" line="1130" lineend="1133" name="forget" signature="forget" />
        <scope ilk="function" line="1135" lineend="1139" name="nodes" signature="nodes" />
        <import symbol="Tk::BLT::" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1142" lineend="1146" name="Tk::BLT::" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tree">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/tree.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="923" name="Tk::BLT">
        <scope classrefs="TkObject" ilk="class" line="10" lineend="922" name="Tree">
          <scope classrefs="TkObject" ilk="class" line="15" lineend="922" name="Node">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="31" name="id2obj" signature="self.id2obj(tree, id)" />
            <scope attributes="__classmethod__" ilk="function" line="33" lineend="44" name="new" signature="self.new(tree, parent, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="46" lineend="62" name="initialize" signature="initialize(tree, parent, keys={})" />
            <scope ilk="function" line="64" lineend="66" name="id" signature="id" />
            <scope ilk="function" line="68" lineend="71" name="apply" signature="apply(keys={})" />
            <scope ilk="function" line="73" lineend="75" name="children" signature="children()" />
            <scope ilk="function" line="77" lineend="79" name="copy" signature="copy(parent, keys={})" />
            <scope ilk="function" line="80" lineend="82" name="copy_to" signature="copy_to(dest_tree, parent, keys={})" />
            <scope ilk="function" line="84" lineend="86" name="degree" signature="degree()" />
            <scope ilk="function" line="88" lineend="91" name="delete" signature="delete()" />
            <scope ilk="function" line="93" lineend="95" name="depth" signature="depth()" />
            <scope ilk="function" line="97" lineend="99" name="dump" signature="dump()" />
            <scope ilk="function" line="101" lineend="104" name="dump_to_file" signature="dump_to_file(file)" />
            <scope ilk="function" line="106" lineend="108" name="exist?" signature="exist?(keys={})" />
            <scope ilk="function" line="110" lineend="112" name="find" signature="find(keys={})" />
            <scope ilk="function" line="114" lineend="116" name="find_child" signature="find_child(label)" />
            <scope ilk="function" line="118" lineend="120" name="first_child" signature="first_child()" />
            <scope ilk="function" line="122" lineend="124" name="get" signature="get()" />
            <scope ilk="function" line="125" lineend="127" name="get_value" signature="get_value(key, default_val=None)" />
            <scope ilk="function" line="129" lineend="131" name="index" signature="index()" />
            <scope ilk="function" line="133" lineend="135" name="leaf?" signature="leaf?()" />
            <scope ilk="function" line="136" lineend="138" name="link?" signature="link?()" />
            <scope ilk="function" line="139" lineend="141" name="root?" signature="root?()" />
            <scope ilk="function" line="143" lineend="145" name="keys" signature="keys()" />
            <scope ilk="function" line="147" lineend="149" name="label" signature="label(text = nil)" />
            <scope ilk="function" line="150" lineend="152" name="label=" signature="label=(text)" />
            <scope ilk="function" line="154" lineend="156" name="last_child" signature="last_child()" />
            <scope ilk="function" line="158" lineend="161" name="move" signature="move(dest, keys={})" />
            <scope ilk="function" line="163" lineend="165" name="next" signature="next()" />
            <scope ilk="function" line="167" lineend="169" name="next_sibling" signature="next_sibling()" />
            <scope ilk="function" line="171" lineend="173" name="parent" signature="parent()" />
            <scope ilk="function" line="175" lineend="177" name="fullpath" signature="fullpath()" />
            <scope ilk="function" line="179" lineend="181" name="position" signature="position()" />
            <scope ilk="function" line="183" lineend="185" name="previous" signature="previous()" />
            <scope ilk="function" line="187" lineend="189" name="prev_sibling" signature="prev_sibling()" />
            <scope ilk="function" line="191" lineend="194" name="restore" signature="restore(str, keys={})" />
            <scope ilk="function" line="195" lineend="198" name="restore_overwrite" signature="restore_overwrite(str, keys={})" />
            <scope ilk="function" line="200" lineend="203" name="restore_from_file" signature="restore_from_file(file, keys={})" />
            <scope ilk="function" line="204" lineend="207" name="restore_overwrite_from_file" signature="restore_overwrite_from_file(file, keys={})" />
            <scope ilk="function" line="209" lineend="212" name="root" signature="root()" />
            <scope ilk="function" line="214" lineend="217" name="set" signature="set(data)" />
            <scope ilk="function" line="219" lineend="221" name="size" signature="size()" />
            <scope ilk="function" line="223" lineend="226" name="sort" signature="sort(keys={})" />
            <scope ilk="function" line="228" lineend="230" name="type" signature="type(key)" />
            <scope ilk="function" line="232" lineend="235" name="unset" signature="unset(*keys)" />
            <scope ilk="function" line="237" lineend="239" name="values" signature="values(key=None)" />
            <scope classrefs="TkObject" ilk="class" line="244" lineend="309" name="Tag">
              <scope attributes="__classmethod__" ilk="function" line="249" lineend="257" name="id2obj" signature="self.id2obj(tree, id)" />
              <scope attributes="__ctor__" ilk="function" line="259" lineend="272" name="initialize" signature="initialize(tree, tag_str = nil)" />
              <scope ilk="function" line="274" lineend="276" name="id" signature="id" />
              <scope ilk="function" line="278" lineend="281" name="add" signature="add(*nodes)" />
              <scope ilk="function" line="283" lineend="286" name="delete" signature="delete(*nodes)" />
              <scope ilk="function" line="288" lineend="292" name="forget" signature="forget()" />
              <scope ilk="function" line="294" lineend="298" name="nodes" signature="nodes()" />
              <scope ilk="function" line="300" lineend="303" name="set" signature="set(node)" />
              <scope ilk="function" line="305" lineend="308" name="unset" signature="unset(node)" />
            </scope>
            <scope classrefs="TkObject" ilk="class" line="313" lineend="392" name="Notify">
              <scope attributes="__classmethod__" ilk="function" line="317" lineend="329" name="id2obj" signature="self.id2obj(tree, id)" />
              <scope attributes="__classmethod__" ilk="function" line="331" lineend="342" name="new" signature="self.new(tree, *args, &amp;b)" />
              <scope attributes="__ctor__" ilk="function" line="344" lineend="373" name="initialize" signature="initialize(create, tree, *args, &amp;b)" />
              <scope ilk="function" line="375" lineend="377" name="id" signature="id" />
              <scope ilk="function" line="379" lineend="383" name="delete" signature="delete()" />
              <scope ilk="function" line="385" lineend="391" name="info" signature="info()" />
            </scope>
            <scope classrefs="TkObject" ilk="class" line="396" lineend="473" name="Trace">
              <scope attributes="__classmethod__" ilk="function" line="400" lineend="412" name="id2obj" signature="self.id2obj(tree, id)" />
              <scope attributes="__classmethod__" ilk="function" line="414" lineend="425" name="new" signature="self.new(tree, *args, &amp;b)" />
              <scope attributes="__ctor__" ilk="function" line="427" lineend="454" name="initialize" signature="initialize(create, tree, node, key, opts, cmd=nil, &amp;b)" />
              <scope ilk="function" line="456" lineend="458" name="id" signature="id" />
              <scope ilk="function" line="460" lineend="464" name="delete" signature="delete()" />
              <scope ilk="function" line="466" lineend="472" name="info" signature="info()" />
            </scope>
            <scope ilk="function" line="480" lineend="498" name="__keyonly_optkeys" signature="__keyonly_optkeys" />
            <scope attributes="__classmethod__" ilk="function" line="500" lineend="502" name="id2obj" signature="self.id2obj(id)" />
            <scope attributes="__classmethod__" ilk="function" line="504" lineend="508" name="names" signature="self.names(pat = None)" />
            <scope attributes="__classmethod__" ilk="function" line="510" lineend="513" name="destroy" signature="self.destroy(*names)" />
            <scope attributes="__classmethod__" ilk="function" line="515" lineend="518" name="new" signature="self.new(name = nil)" />
            <scope ilk="function" line="520" lineend="530" name="initialzie" signature="initialzie(name = nil)" />
            <scope ilk="function" line="532" lineend="537" name="__destroy_hook__" signature="__destroy_hook__" />
            <scope ilk="function" line="539" lineend="548" name="tagid" signature="tagid(tag)" />
            <scope ilk="function" line="550" lineend="553" name="destroy" signature="destroy()" />
            <scope ilk="function" line="555" lineend="558" name="ancestor" signature="ancestor(node1, node2)" />
            <scope ilk="function" line="560" lineend="563" name="apply" signature="apply(node, keys={})" />
            <scope ilk="function" line="565" lineend="568" name="attach" signature="attach(tree_obj)" />
            <scope ilk="function" line="570" lineend="574" name="children" signature="children(node)" />
            <scope ilk="function" line="576" lineend="580" name="copy" signature="copy(src, parent, keys={})" />
            <scope ilk="function" line="581" lineend="587" name="copy_to" signature="copy_to(src, dest_tree, parent, keys={})" />
            <scope ilk="function" line="589" lineend="591" name="degree" signature="degree(node)" />
            <scope ilk="function" line="593" lineend="603" name="delete" signature="delete(*nodes)" />
            <scope ilk="function" line="605" lineend="607" name="depth" signature="depth(node)" />
            <scope ilk="function" line="609" lineend="613" name="dump" signature="dump(node)" />
            <scope ilk="function" line="615" lineend="618" name="dump_to_file" signature="dump_to_file(node, file)" />
            <scope ilk="function" line="620" lineend="622" name="exist?" signature="exist?(node, key=None)" />
            <scope ilk="function" line="624" lineend="629" name="find" signature="find(node, keys={})" />
            <scope ilk="function" line="631" lineend="634" name="find_child" signature="find_child(node, label)" />
            <scope ilk="function" line="636" lineend="639" name="first_child" signature="first_child(node)" />
            <scope ilk="function" line="641" lineend="643" name="get" signature="get(node)" />
            <scope ilk="function" line="644" lineend="646" name="get_value" signature="get_value(node, key, default_val=None)" />
            <scope ilk="function" line="648" lineend="651" name="index" signature="index(node)" />
            <scope ilk="function" line="653" lineend="656" name="insert" signature="insert(parent, keys={})" />
            <scope ilk="function" line="658" lineend="661" name="ancestor?" signature="ancestor?(node1, node2)" />
            <scope ilk="function" line="662" lineend="665" name="before?" signature="before?(node1, node2)" />
            <scope ilk="function" line="666" lineend="668" name="leaf?" signature="leaf?(node)" />
            <scope ilk="function" line="669" lineend="671" name="link?" signature="link?(node)" />
            <scope ilk="function" line="672" lineend="674" name="root?" signature="root?(node)" />
            <scope ilk="function" line="676" lineend="685" name="keys" signature="keys(node, *nodes)" />
            <scope ilk="function" line="687" lineend="694" name="label" signature="label(node, text=nil)" />
            <scope ilk="function" line="696" lineend="699" name="last_child" signature="last_child(node)" />
            <scope ilk="function" line="701" lineend="705" name="link" signature="link(parent, node, keys={})" />
            <scope ilk="function" line="707" lineend="710" name="move" signature="move(node, dest, keys={})" />
            <scope ilk="function" line="712" lineend="715" name="next" signature="next(node)" />
            <scope ilk="function" line="717" lineend="720" name="next_sibling" signature="next_sibling(node)" />
            <scope ilk="function" line="722" lineend="724" name="notify_create" signature="notify_create(*args, &amp;b)" />
            <scope ilk="function" line="726" lineend="734" name="notify_delete" signature="notify_delete(id)" />
            <scope ilk="function" line="736" lineend="742" name="notify_info" signature="notify_info(id)" />
            <scope ilk="function" line="744" lineend="748" name="notify_names" signature="notify_names()" />
            <scope ilk="function" line="750" lineend="753" name="parent" signature="parent(node)" />
            <scope ilk="function" line="755" lineend="757" name="fullpath" signature="fullpath(node)" />
            <scope ilk="function" line="759" lineend="761" name="position" signature="position(node)" />
            <scope ilk="function" line="763" lineend="766" name="previous" signature="previous(node)" />
            <scope ilk="function" line="768" lineend="771" name="prev_sibling" signature="prev_sibling(node)" />
            <scope ilk="function" line="773" lineend="777" name="restore" signature="restore(node, str, keys={})" />
            <scope ilk="function" line="778" lineend="784" name="restore_overwrite" signature="restore_overwrite(node, str, keys={})" />
            <scope ilk="function" line="786" lineend="790" name="restore_from_file" signature="restore_from_file(node, file, keys={})" />
            <scope ilk="function" line="791" lineend="798" name="restore_overwrite_from_file" signature="restore_overwrite_from_file(node, file, keys={})" />
            <scope ilk="function" line="800" lineend="803" name="root" signature="root(node=None)" />
            <scope ilk="function" line="805" lineend="813" name="set" signature="set(node, data)" />
            <scope ilk="function" line="815" lineend="817" name="size" signature="size(node)" />
            <scope ilk="function" line="819" lineend="822" name="sort" signature="sort(node, keys={})" />
            <scope ilk="function" line="824" lineend="827" name="tag_add" signature="tag_add(tag, *nodes)" />
            <scope ilk="function" line="829" lineend="833" name="tag_delete" signature="tag_delete(tag, *nodes)" />
            <scope ilk="function" line="835" lineend="840" name="tag_forget" signature="tag_forget(tag)" />
            <scope ilk="function" line="842" lineend="847" name="tag_get" signature="tag_get(node, *patterns)" />
            <scope ilk="function" line="849" lineend="853" name="tag_names" signature="tag_names(node = None)" />
            <scope ilk="function" line="855" lineend="859" name="tag_nodes" signature="tag_nodes(tag)" />
            <scope ilk="function" line="861" lineend="864" name="tag_set" signature="tag_set(node, *tags)" />
            <scope ilk="function" line="866" lineend="870" name="tag_unset" signature="tag_unset(node, *tags)" />
            <scope ilk="function" line="872" lineend="874" name="trace_create" signature="trace_create(*args, &amp;b)" />
            <scope ilk="function" line="889" lineend="894" name="trace_delete" signature="trace_delete(*args)" />
            <scope ilk="function" line="896" lineend="902" name="trace_info" signature="trace_info(id)" />
            <scope ilk="function" line="904" lineend="908" name="trace_names" signature="trace_names()" />
            <scope ilk="function" line="910" lineend="912" name="type" signature="type(node, key)" />
            <scope ilk="function" line="914" lineend="917" name="unset" signature="unset(node, *keys)" />
            <scope ilk="function" line="919" lineend="921" name="values" signature="values(node, key=None)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="21" name="Tk::BLT">
        <scope ilk="namespace" line="10" lineend="20" name="Tile" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/toplevel">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/toplevel" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/toplevel.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="16" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="15" name="Tile">
          <scope classrefs="TkToplevel" ilk="class" line="12" lineend="14" name="Toplevel" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/scrollbar">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/scrollbar" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/scrollbar.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="16" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="15" name="Tile">
          <scope classrefs="TkScrollbar" ilk="class" line="12" lineend="14" name="Scrollbar" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/radiobutton">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/radiobutton" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/radiobutton.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="17" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="16" name="Tile">
          <scope classrefs="TkRadiobutton" ilk="class" line="12" lineend="14" name="Radiobutton" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/label">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/label" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/label.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="16" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="15" name="Tile">
          <scope classrefs="TkLabel" ilk="class" line="12" lineend="14" name="Label" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/frame">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/frame" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/frame.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="16" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="15" name="Tile">
          <scope classrefs="TkFrame" ilk="class" line="12" lineend="14" name="Frame" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/checkbutton">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/checkbutton" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/checkbutton.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="17" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="16" name="Tile">
          <scope classrefs="TkCheckbutton" ilk="class" line="12" lineend="14" name="Checkbutton" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tile/button">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/button" symbol="*" />
      <import line="8" module="tkextlib/blt/tile.rb" symbol="*" />
      <scope doc="tkextlib/blt/tile/button.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="16" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="15" name="Tile">
          <scope classrefs="TkButton" ilk="class" line="12" lineend="14" name="Button" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/ted">
      <import line="9" module="tk" symbol="*" />
      <import line="10" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/ted.rb" ilk="namespace" line="12" lineend="62" name="Tk::BLT">
        <scope ilk="namespace" line="13" lineend="61" name="Ted">
          <scope classrefs="Object" ilk="class" line="22" lineend="48" name="self">
            <scope ilk="function" line="23" lineend="25" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
            <scope ilk="function" line="28" lineend="30" name="__item_config_cmd" signature="__item_config_cmd(id)" />
            <scope ilk="function" line="36" lineend="38" name="cget" signature="cget(master, option)" />
            <scope ilk="function" line="39" lineend="41" name="configure" signature="configure(master, slot, value=None)" />
            <scope ilk="function" line="42" lineend="44" name="configinfo" signature="configinfo(master, slot=nil)" />
            <scope ilk="function" line="45" lineend="47" name="current_configinfo" signature="current_configinfo(master, slot=nil)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="52" lineend="54" name="edit" signature="self.edit(master, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="rep" signature="self.rep(master, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="58" lineend="60" name="select" signature="self.select(master, *args)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tabset">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/tabset.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="401" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="10" lineend="400" name="Tabset">
          <scope classrefs="TkObject" ilk="class" line="11" lineend="167" name="Tab">
            <scope attributes="__classmethod__" ilk="function" line="19" lineend="23" name="id2obj" signature="self.id2obj(tabset, id)" />
            <scope attributes="__classmethod__" ilk="function" line="25" lineend="41" name="new" signature="self.new(parent, pos=nil, name=nil, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="43" lineend="73" name="initialize" signature="initialize(parent, pos, name, keys)" />
            <scope doc="def bind(context, cmd=Proc.new, *args) @t.tab_bind(@id,&#xA;context, cmd, *args) self end" ilk="function" line="79" lineend="88" name="bind" signature="bind(context, *args)" />
            <scope doc="def bind_append(context, cmd=Proc.new, *args)&#xA;@t.tab_bind_append(@id, context, cmd, *args) self end" ilk="function" line="93" lineend="102" name="bind_append" signature="bind_append(context, *args)" />
            <scope ilk="function" line="103" lineend="106" name="bind_remove" signature="bind_remove(context)" />
            <scope ilk="function" line="107" lineend="109" name="bindinfo" signature="bindinfo(context=nil)" />
            <scope ilk="function" line="111" lineend="113" name="cget" signature="cget(*args)" />
            <scope ilk="function" line="114" lineend="116" name="configure" signature="configure(*args)" />
            <scope ilk="function" line="117" lineend="119" name="configinfo" signature="configinfo(*args)" />
            <scope ilk="function" line="120" lineend="122" name="current_configinfo" signature="current_configinfo(*args)" />
            <scope ilk="function" line="124" lineend="128" name="delete" signature="delete()" />
            <scope ilk="function" line="130" lineend="132" name="get_name" signature="get_name()" />
            <scope ilk="function" line="134" lineend="136" name="focus" signature="focus()" />
            <scope ilk="function" line="138" lineend="140" name="index" signature="index()" />
            <scope ilk="function" line="142" lineend="144" name="invoke" signature="invoke()" />
            <scope ilk="function" line="146" lineend="148" name="move_before" signature="move_before(idx)" />
            <scope ilk="function" line="149" lineend="151" name="move_after" signature="move_after(idx)" />
            <scope ilk="function" line="153" lineend="155" name="perforation_highlight" signature="perforation_highlight(mode)" />
            <scope ilk="function" line="156" lineend="158" name="perforation_invoke" signature="perforation_invoke()" />
            <scope ilk="function" line="160" lineend="162" name="see" signature="see()" />
            <scope ilk="function" line="164" lineend="166" name="tearoff" signature="tearoff(name=None)" />
            <import symbol="TkTreatItemFont" />
          </scope>
          <scope classrefs="Tab" ilk="class" line="171" lineend="175" name="NamedTab">
            <scope attributes="__classmethod__" ilk="function" line="172" lineend="174" name="new" signature="self.new(parent, name)" />
          </scope>
          <scope ilk="function" line="186" lineend="188" name="__destroy_hook__" signature="__destroy_hook__" />
          <scope ilk="function" line="192" lineend="194" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="197" lineend="199" name="__strval_optkeys" signature="__strval_optkeys" />
          <scope ilk="function" line="202" lineend="204" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
          <scope ilk="function" line="207" lineend="209" name="__item_config_cmd" signature="__item_config_cmd(id)" />
          <scope ilk="function" line="212" lineend="218" name="__item_pathname" signature="__item_pathname(tagOrId)" />
          <scope ilk="function" line="226" lineend="228" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
          <scope ilk="function" line="231" lineend="237" name="tagid" signature="tagid(tab)" />
          <scope ilk="function" line="239" lineend="245" name="tagindex" signature="tagindex(tab)" />
          <scope ilk="function" line="249" lineend="252" name="activate" signature="activate(index)" />
          <scope doc="def tabbind(tag, context, cmd=Proc.new, *args) _bind([path,&#xA;&quot;bind&quot;, tagid(tag)], context, cmd, *args) self end" ilk="function" line="259" lineend="268" name="tabbind" signature="tabbind(tag, context, *args)" />
          <scope doc="def tabbind_append(tag, context, cmd=Proc.new, *args)&#xA;_bind_append([path, &quot;bind&quot;, tagid(tag)], context, cmd,&#xA;*args) self end" ilk="function" line="273" lineend="282" name="tabbind_append" signature="tabbind_append(tag, context, *args)" />
          <scope ilk="function" line="283" lineend="286" name="tabbind_remove" signature="tabbind_remove(tag, context)" />
          <scope ilk="function" line="287" lineend="289" name="tabbindinfo" signature="tabbindinfo(tag, context=nil)" />
          <scope ilk="function" line="291" lineend="301" name="delete" signature="delete(first, last=None)" />
          <scope ilk="function" line="303" lineend="306" name="focus" signature="focus(index)" />
          <scope ilk="function" line="308" lineend="310" name="get_tab" signature="get_tab(index)" />
          <scope ilk="function" line="312" lineend="314" name="index" signature="index(str)" />
          <scope ilk="function" line="315" lineend="317" name="index_name" signature="index_name(tab)" />
          <scope ilk="function" line="319" lineend="321" name="insert" signature="insert(pos, tab, keys={})" />
          <scope ilk="function" line="323" lineend="325" name="invoke" signature="invoke(index)" />
          <scope ilk="function" line="327" lineend="330" name="move_before" signature="move_before(index, base_idx)" />
          <scope ilk="function" line="331" lineend="334" name="move_after" signature="move_after(index, base_idx)" />
          <scope ilk="function" line="336" lineend="338" name="nearest" signature="nearest(x, y)" />
          <scope ilk="function" line="340" lineend="343" name="perforation_highlight" signature="perforation_highlight(index, mode)" />
          <scope ilk="function" line="344" lineend="346" name="perforation_invoke" signature="perforation_invoke(index)" />
          <scope ilk="function" line="348" lineend="351" name="scan_mark" signature="scan_mark(x, y)" />
          <scope ilk="function" line="352" lineend="355" name="scan_dragto" signature="scan_dragto(x, y)" />
          <scope ilk="function" line="357" lineend="360" name="see" signature="see(index)" />
          <scope ilk="function" line="362" lineend="364" name="size" signature="size()" />
          <scope ilk="function" line="366" lineend="369" name="select" signature="select(index)" />
          <scope ilk="function" line="371" lineend="375" name="tab_names" signature="tab_names(pat=None)" />
          <scope ilk="function" line="377" lineend="379" name="tab_tearoff" signature="tab_tearoff(index, name=None)" />
          <scope ilk="function" line="381" lineend="384" name="xscrollcommand" signature="xscrollcommand(cmd=Proc.new)" />
          <scope ilk="function" line="387" lineend="394" name="xview" signature="xview(*index)" />
          <import symbol="X_Scrollable" />
          <import symbol="TkItemConfigMethod" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/tabnotebook">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <import line="8" module="tkextlib/blt/tabset.rb" symbol="*" />
      <scope doc="tkextlib/blt/tabnotebook.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="21" name="Tk::BLT">
        <scope classrefs="Tabset" ilk="class" line="11" lineend="20" name="Tabnotebook">
          <scope ilk="function" line="16" lineend="18" name="get_tab" signature="get_tab(index)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/table">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/itemconfig.rb" symbol="*" />
      <import line="8" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/table.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="114" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="113" name="Table">
          <scope ilk="namespace" line="18" lineend="112" name="TableContainer">
            <scope ilk="function" line="19" lineend="22" name="blt_table_add" signature="blt_table_add(*args)" />
            <scope ilk="function" line="24" lineend="27" name="blt_table_arrange" signature="blt_table_arrange()" />
            <scope ilk="function" line="29" lineend="31" name="blt_table_cget" signature="blt_table_cget(*args)" />
            <scope ilk="function" line="33" lineend="36" name="blt_table_configure" signature="blt_table_configure(*args)" />
            <scope ilk="function" line="38" lineend="40" name="blt_table_configinfo" signature="blt_table_configinfo(*args)" />
            <scope ilk="function" line="42" lineend="44" name="blt_table_current_configinfo" signature="blt_table_current_configinfo(*args)" />
            <scope ilk="function" line="46" lineend="48" name="blt_table_locate" signature="blt_table_locate(x, y)" />
            <scope ilk="function" line="50" lineend="53" name="blt_table_delete" signature="blt_table_delete(*args)" />
            <scope ilk="function" line="55" lineend="57" name="blt_table_extents" signature="blt_table_extents(item)" />
            <scope ilk="function" line="59" lineend="62" name="blt_table_insert" signature="blt_table_insert(*args)" />
            <scope ilk="function" line="64" lineend="67" name="blt_table_insert_before" signature="blt_table_insert_before(*args)" />
            <scope ilk="function" line="69" lineend="72" name="blt_table_insert_after" signature="blt_table_insert_after(*args)" />
            <scope ilk="function" line="74" lineend="77" name="blt_table_join" signature="blt_table_join(first, last)" />
            <scope ilk="function" line="79" lineend="81" name="blt_table_save" signature="blt_table_save()" />
            <scope ilk="function" line="83" lineend="85" name="blt_table_search" signature="blt_table_search(*args)" />
            <scope ilk="function" line="87" lineend="90" name="blt_table_split" signature="blt_table_split(*args)" />
            <scope ilk="function" line="92" lineend="94" name="blt_table_itemcget" signature="blt_table_itemcget(*args)" />
            <scope ilk="function" line="96" lineend="99" name="blt_table_itemconfigure" signature="blt_table_itemconfigure(*args)" />
            <scope ilk="function" line="101" lineend="103" name="blt_table_itemconfiginfo" signature="blt_table_itemconfiginfo(*args)" />
            <scope ilk="function" line="105" lineend="107" name="blt_table_current_itemconfiginfo" signature="blt_table_current_itemconfiginfo(*args)" />
            <scope ilk="function" line="109" lineend="111" name="blt_table_iteminfo" signature="blt_table_iteminfo(item)" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="118" lineend="344" name="Tk::BLT::">
        <scope ilk="function" line="119" lineend="121" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="124" lineend="127" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="130" lineend="132" name="__item_pathname" signature="__item_pathname(id)" />
        <scope ilk="function" line="143" lineend="145" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="148" lineend="165" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="167" lineend="169" name="tagid2obj" signature="tagid2obj(tagid)" />
        <scope ilk="function" line="173" lineend="175" name="cget" signature="cget(container, option)" />
        <scope ilk="function" line="177" lineend="179" name="configure" signature="configure(container, *args)" />
        <scope ilk="function" line="181" lineend="183" name="configinfo" signature="configinfo(container, *args)" />
        <scope ilk="function" line="185" lineend="187" name="current_configinfo" signature="current_configinfo(container, *args)" />
        <scope ilk="function" line="189" lineend="191" name="itemcget" signature="itemcget(container, item, option)" />
        <scope ilk="function" line="193" lineend="208" name="itemconfigure" signature="itemconfigure(container, *args)" />
        <scope ilk="function" line="210" lineend="228" name="itemconfiginfo" signature="itemconfiginfo(container, *args)" />
        <scope ilk="function" line="230" lineend="238" name="info" signature="info(container)" />
        <scope ilk="function" line="240" lineend="248" name="iteminfo" signature="iteminfo(container, item)" />
        <scope ilk="function" line="252" lineend="262" name="create_container" signature="create_container(container)">
          <scope classrefs="Object" ilk="class" line="255" lineend="257" name="container">
            <import symbol="Tk::BLT::" />
          </scope>
        </scope>
        <scope ilk="function" line="264" lineend="279" name="add" signature="add(container, *args)" />
        <scope ilk="function" line="281" lineend="283" name="arrange" signature="arrange(container)" />
        <scope ilk="function" line="285" lineend="287" name="delete" signature="delete(container, *args)" />
        <scope ilk="function" line="289" lineend="294" name="extents" signature="extents(container, item)" />
        <scope ilk="function" line="296" lineend="299" name="forget" signature="forget(*wins)" />
        <scope ilk="function" line="301" lineend="303" name="insert" signature="insert(container, *args)" />
        <scope ilk="function" line="305" lineend="307" name="insert_before" signature="insert_before(container, *args)" />
        <scope ilk="function" line="309" lineend="311" name="insert_after" signature="insert_after(container, *args)" />
        <scope ilk="function" line="313" lineend="315" name="join" signature="join(container, first, last)" />
        <scope ilk="function" line="317" lineend="319" name="locate" signature="locate(container, x, y)" />
        <scope ilk="function" line="321" lineend="323" name="containers" signature="containers(arg={})" />
        <scope ilk="function" line="325" lineend="327" name="containers_pattern" signature="containers_pattern(pat)" />
        <scope ilk="function" line="329" lineend="331" name="containers_slave" signature="containers_slave(win)" />
        <scope ilk="function" line="333" lineend="335" name="save" signature="save(container)" />
        <scope ilk="function" line="337" lineend="339" name="search" signature="search(container, keys={})" />
        <scope ilk="function" line="341" lineend="343" name="split" signature="split(container, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/stripchart">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <import line="8" module="tkextlib/blt/component.rb" symbol="*" />
      <scope doc="tkextlib/blt/stripchart.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="74" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="11" lineend="73" name="Stripchart">
          <scope ilk="function" line="19" lineend="21" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="24" lineend="27" name="__strval_optkeys" signature="__strval_optkeys" />
          <scope ilk="function" line="47" lineend="49" name="extents" signature="extents(item)" />
          <scope ilk="function" line="51" lineend="53" name="invtransform" signature="invtransform(x, y)" />
          <scope ilk="function" line="55" lineend="57" name="inside" signature="inside(x, y)" />
          <scope ilk="function" line="59" lineend="63" name="metafile" signature="metafile(file=None)" />
          <scope ilk="function" line="65" lineend="68" name="snap" signature="snap(output, keys={})" />
          <scope ilk="function" line="70" lineend="72" name="transform" signature="transform(x, y)" />
          <import symbol="PlotComponent" />
          <import symbol="GraphCommand" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/spline">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/spline.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="23" name="Tk::BLT">
        <scope ilk="namespace" line="10" lineend="22" name="Spline">
          <scope attributes="__classmethod__" ilk="function" line="15" lineend="17" name="natural" signature="self.natural(x, y, sx, sy)" />
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="quadratic" signature="self.quadratic(x, y, sx, sy)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/setup" />
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/htext">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/itemconfig.rb" symbol="*" />
      <import line="8" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/htext.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="110" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="11" lineend="109" name="Htext">
          <scope ilk="function" line="29" lineend="31" name="__strval_optkeys" signature="__strval_optkeys" />
          <scope ilk="function" line="34" lineend="37" name="append" signature="append(win, keys={})" />
          <scope ilk="function" line="39" lineend="42" name="goto_line" signature="goto_line(idx)" />
          <scope ilk="function" line="43" lineend="45" name="current_line" signature="current_line" />
          <scope ilk="function" line="47" lineend="49" name="index" signature="index(str)" />
          <scope ilk="function" line="51" lineend="53" name="line_pos" signature="line_pos(str)" />
          <scope ilk="function" line="55" lineend="57" name="range" signature="range(from=None, to=None)" />
          <scope ilk="function" line="59" lineend="62" name="scan_mark" signature="scan_mark(pos)" />
          <scope ilk="function" line="64" lineend="67" name="scan_dragto" signature="scan_dragto(pos)" />
          <scope ilk="function" line="69" lineend="72" name="search" signature="search(pat, from=None, to=None)" />
          <scope ilk="function" line="74" lineend="77" name="selection_adjust" signature="selection_adjust(index)" />
          <scope ilk="function" line="78" lineend="81" name="selection_clear" signature="selection_clear()" />
          <scope ilk="function" line="82" lineend="85" name="selection_from" signature="selection_from(index)" />
          <scope ilk="function" line="86" lineend="89" name="selection_line" signature="selection_line(index)" />
          <scope ilk="function" line="90" lineend="92" name="selection_present" signature="selection_present()" />
          <scope ilk="function" line="93" lineend="96" name="selection_range" signature="selection_range(first, last)" />
          <scope ilk="function" line="97" lineend="100" name="selection_to" signature="selection_to(index)" />
          <scope ilk="function" line="101" lineend="104" name="selection_word" signature="selection_word(index)" />
          <scope ilk="function" line="106" lineend="108" name="windows" signature="windows(pat=None)" />
          <import symbol="TkItemConfigMethod" />
          <import symbol="Scrollable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/graph">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <import line="8" module="tkextlib/blt/component.rb" symbol="*" />
      <scope doc="tkextlib/blt/graph.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="67" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="11" lineend="66" name="Graph">
          <scope ilk="function" line="19" lineend="21" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="24" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
          <scope ilk="function" line="46" lineend="48" name="extents" signature="extents(item)" />
          <scope ilk="function" line="50" lineend="52" name="invtransform" signature="invtransform(x, y)" />
          <scope ilk="function" line="54" lineend="56" name="inside" signature="inside(x, y)" />
          <scope ilk="function" line="58" lineend="61" name="snap" signature="snap(output, keys={})" />
          <scope ilk="function" line="63" lineend="65" name="transform" signature="transform(x, y)" />
          <import symbol="PlotComponent" />
          <import symbol="GraphCommand" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/eps">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/canvas" symbol="*" />
      <import line="8" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/eps.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="15" name="Tk::BLT">
        <scope classrefs="TkcItem" ilk="class" line="11" lineend="14" name="EPS" />
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="31" name="TkCanvas">
        <scope ilk="function" line="19" lineend="23" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="27" lineend="29" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/dragdrop">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/itemconfig" symbol="*" />
      <import line="8" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/dragdrop.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="214" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="213" name="DragDrop">
          <scope classrefs="TkWindow" ilk="class" line="16" lineend="29" name="Token">
            <scope attributes="__ctor__" ilk="function" line="20" lineend="28" name="initialize" signature="initialize(arg)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="36" lineend="69" name="self">
            <scope ilk="function" line="37" lineend="39" name="__item_config_cmd" signature="__item_config_cmd(id)" />
            <scope ilk="function" line="42" lineend="44" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
            <scope ilk="function" line="47" lineend="49" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
            <scope ilk="function" line="52" lineend="54" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
            <scope ilk="function" line="60" lineend="62" name="source_configure" signature="source_configure(win, slot, value=None)" />
            <scope ilk="function" line="63" lineend="65" name="source_configinfo" signature="source_configinfo(win, slot=nil)" />
            <scope ilk="function" line="66" lineend="68" name="current_source_configinfo" signature="current_source_configinfo(win, slot=nil)" />
          </scope>
          <scope classrefs="TkValidateCommand" ilk="class" line="71" lineend="94" name="PackageCommand">
            <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="72" lineend="89" name="ValidateArgs">
              <scope attributes="__classmethod__" ilk="function" line="86" lineend="88" name="ret_val" signature="self.ret_val(val)" />
            </scope>
            <scope attributes="__classmethod__" ilk="function" line="91" lineend="93" name="_config_keys[" signature="self._config_keys [" />
          </scope>
          <scope classrefs="TkValidateCommand" ilk="class" line="96" lineend="120" name="SiteCommand">
            <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="97" lineend="115" name="ValidateArgs">
              <scope attributes="__classmethod__" ilk="function" line="112" lineend="114" name="ret_val" signature="self.ret_val(val)" />
            </scope>
            <scope attributes="__classmethod__" ilk="function" line="117" lineend="119" name="_config_keys[" signature="self._config_keys [" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="122" lineend="124" name="__validation_class_list" signature="self.__validation_class_list" />
          <scope classrefs="Object" ilk="class" line="126" lineend="129" name="self" />
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="133" lineend="149" name="DnD_Handle" />
          <scope attributes="__classmethod__" ilk="function" line="151" lineend="155" name="source_handler" signature="self.source_handler(win, datatype, cmd=Proc.new, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="157" lineend="161" name="target_handler" signature="self.target_handler(win, datatype, cmd=Proc.new, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="165" lineend="167" name="init_source" signature="self.init_source(win)" />
          <scope attributes="__classmethod__" ilk="function" line="169" lineend="171" name="source" signature="self.source()" />
          <scope attributes="__classmethod__" ilk="function" line="173" lineend="175" name="source_handler_list" signature="self.source_handler_list(win)" />
          <scope attributes="__classmethod__" ilk="function" line="176" lineend="178" name="source_handler_info" signature="self.source_handler_info(win, type)" />
          <scope attributes="__classmethod__" ilk="function" line="180" lineend="182" name="target" signature="self.target" />
          <scope attributes="__classmethod__" ilk="function" line="183" lineend="185" name="target_handler_list" signature="self.target_handler_list(win)" />
          <scope attributes="__classmethod__" ilk="function" line="187" lineend="189" name="handle_target" signature="self.handle_target(win, type, val=None)" />
          <scope attributes="__classmethod__" ilk="function" line="191" lineend="193" name="token" signature="self.token(win)" />
          <scope attributes="__classmethod__" ilk="function" line="195" lineend="197" name="drag" signature="self.drag(win, x, y)" />
          <scope attributes="__classmethod__" ilk="function" line="198" lineend="200" name="drop" signature="self.drop(win, x, y)" />
          <scope attributes="__classmethod__" ilk="function" line="202" lineend="204" name="errors" signature="self.errors(cmd=Proc.new)" />
          <scope attributes="__classmethod__" ilk="function" line="206" lineend="208" name="active" signature="self.active" />
          <scope attributes="__classmethod__" ilk="function" line="210" lineend="212" name="location" signature="self.location(x=None, y=None)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/cutbuffer">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/cutbuffer.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="23" name="Tk::BLT">
        <scope ilk="namespace" line="10" lineend="22" name="CutBuffer">
          <scope attributes="__classmethod__" ilk="function" line="13" lineend="15" name="get" signature="self.get(num = 0)" />
          <scope attributes="__classmethod__" ilk="function" line="16" lineend="18" name="rotate" signature="self.rotate(count = 1)" />
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="set" signature="self.set(val, num = 0)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/container">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/container.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="28" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="10" lineend="14" name="Container" />
        <scope ilk="function" line="16" lineend="18" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="21" lineend="23" name="find_command" signature="find_command(pat)" />
        <scope ilk="function" line="25" lineend="27" name="find_name" signature="find_name(pat)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/component">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/component.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="1835" name="Tk::BLT">
        <scope ilk="namespace" line="10" lineend="1834" name="PlotComponent">
          <scope ilk="namespace" line="13" lineend="52" name="OptKeys">
            <scope ilk="function" line="14" lineend="16" name="__item_font_optkeys" signature="__item_font_optkeys(id)" />
            <scope ilk="function" line="19" lineend="21" name="__item_numstrval_optkeys" signature="__item_numstrval_optkeys(id)" />
            <scope ilk="function" line="24" lineend="28" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
            <scope ilk="function" line="31" lineend="35" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
            <scope ilk="function" line="38" lineend="40" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
            <scope ilk="function" line="43" lineend="45" name="__item_numlistval_optkeys" signature="__item_numlistval_optkeys(id)" />
            <scope ilk="function" line="48" lineend="50" name="__item_tkvariable_optkeys" signature="__item_tkvariable_optkeys(id)" />
          </scope>
          <scope ilk="function" line="56" lineend="63" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
          <scope ilk="function" line="66" lineend="74" name="__item_config_cmd" signature="__item_config_cmd(id)" />
          <scope ilk="function" line="77" lineend="82" name="__item_pathname" signature="__item_pathname(id)" />
          <scope ilk="function" line="85" lineend="87" name="axis_cget" signature="axis_cget(id, option)" />
          <scope ilk="function" line="88" lineend="110" name="axis_configure" signature="axis_configure(*args)" />
          <scope ilk="function" line="111" lineend="113" name="axis_configinfo" signature="axis_configinfo(id, slot=nil)" />
          <scope ilk="function" line="114" lineend="116" name="current_axis_configinfo" signature="current_axis_configinfo(id, slot=nil)" />
          <scope ilk="function" line="118" lineend="120" name="crosshairs_cget" signature="crosshairs_cget(option)" />
          <scope ilk="function" line="121" lineend="123" name="crosshairs_configure" signature="crosshairs_configure(slot, value=None)" />
          <scope ilk="function" line="124" lineend="126" name="crosshairs_configinfo" signature="crosshairs_configinfo(slot=nil)" />
          <scope ilk="function" line="127" lineend="129" name="current_crosshairs_configinfo" signature="current_crosshairs_configinfo(slot=nil)" />
          <scope ilk="function" line="131" lineend="133" name="element_cget" signature="element_cget(id, option)" />
          <scope ilk="function" line="134" lineend="144" name="element_configure" signature="element_configure(*args)" />
          <scope ilk="function" line="145" lineend="147" name="element_configinfo" signature="element_configinfo(id, slot=nil)" />
          <scope ilk="function" line="148" lineend="150" name="current_element_configinfo" signature="current_element_configinfo(id, slot=nil)" />
          <scope ilk="function" line="152" lineend="154" name="bar_cget" signature="bar_cget(id, option)" />
          <scope ilk="function" line="155" lineend="165" name="bar_configure" signature="bar_configure(*args)" />
          <scope ilk="function" line="166" lineend="168" name="bar_configinfo" signature="bar_configinfo(id, slot=nil)" />
          <scope ilk="function" line="169" lineend="171" name="current_bar_configinfo" signature="current_bar_configinfo(id, slot=nil)" />
          <scope ilk="function" line="173" lineend="175" name="line_cget" signature="line_cget(id, option)" />
          <scope ilk="function" line="176" lineend="186" name="line_configure" signature="line_configure(*args)" />
          <scope ilk="function" line="187" lineend="189" name="line_configinfo" signature="line_configinfo(id, slot=nil)" />
          <scope ilk="function" line="190" lineend="192" name="current_line_configinfo" signature="current_line_configinfo(id, slot=nil)" />
          <scope ilk="function" line="194" lineend="196" name="gridline_cget" signature="gridline_cget(option)" />
          <scope ilk="function" line="197" lineend="199" name="gridline_configure" signature="gridline_configure(slot, value=None)" />
          <scope ilk="function" line="200" lineend="202" name="gridline_configinfo" signature="gridline_configinfo(slot=nil)" />
          <scope ilk="function" line="203" lineend="205" name="current_gridline_configinfo" signature="current_gridline_configinfo(slot=nil)" />
          <scope ilk="function" line="207" lineend="209" name="legend_cget" signature="legend_cget(option)" />
          <scope ilk="function" line="210" lineend="212" name="legend_configure" signature="legend_configure(slot, value=None)" />
          <scope ilk="function" line="213" lineend="215" name="legend_configinfo" signature="legend_configinfo(slot=nil)" />
          <scope ilk="function" line="216" lineend="218" name="current_legend_configinfo" signature="current_legend_configinfo(slot=nil)" />
          <scope ilk="function" line="220" lineend="222" name="pen_cget" signature="pen_cget(id, option)" />
          <scope ilk="function" line="223" lineend="233" name="pen_configure" signature="pen_configure(*args)" />
          <scope ilk="function" line="234" lineend="236" name="pen_configinfo" signature="pen_configinfo(id, slot=nil)" />
          <scope ilk="function" line="237" lineend="239" name="current_pen_configinfo" signature="current_pen_configinfo(id, slot=nil)" />
          <scope ilk="function" line="241" lineend="243" name="postscript_cget" signature="postscript_cget(option)" />
          <scope ilk="function" line="244" lineend="246" name="postscript_configure" signature="postscript_configure(slot, value=None)" />
          <scope ilk="function" line="247" lineend="249" name="postscript_configinfo" signature="postscript_configinfo(slot=nil)" />
          <scope ilk="function" line="250" lineend="252" name="current_postscript_configinfo" signature="current_postscript_configinfo(slot=nil)" />
          <scope ilk="function" line="254" lineend="256" name="marker_cget" signature="marker_cget(id, option)" />
          <scope ilk="function" line="257" lineend="267" name="marker_configure" signature="marker_configure(*args)" />
          <scope ilk="function" line="268" lineend="270" name="marker_configinfo" signature="marker_configinfo(id, slot=nil)" />
          <scope ilk="function" line="271" lineend="273" name="current_marker_configinfo" signature="current_marker_configinfo(id, slot=nil)" />
          <scope ilk="function" line="280" lineend="287" name="itemcget" signature="itemcget(tagOrId, option)" />
          <scope ilk="function" line="288" lineend="313" name="itemconfiginfo" signature="itemconfiginfo(tagOrId, slot = nil)" />
          <scope ilk="function" line="314" lineend="322" name="current_itemconfiginfo" signature="current_itemconfiginfo(tagOrId, slot = nil)" />
          <scope classrefs="TkObject" ilk="class" line="329" lineend="436" name="Axis">
            <scope attributes="__classmethod__" ilk="function" line="333" lineend="337" name="id2obj" signature="self.id2obj(chart, id)" />
            <scope attributes="__classmethod__" ilk="function" line="339" lineend="347" name="new" signature="self.new(chart, axis=nil, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="349" lineend="369" name="initialize" signature="initialize(chart, axis=nil, keys={})" />
            <scope ilk="function" line="371" lineend="373" name="id" signature="id" />
            <scope ilk="function" line="375" lineend="377" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="379" lineend="381" name="cget" signature="cget(option)" />
            <scope ilk="function" line="382" lineend="385" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="386" lineend="388" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="389" lineend="391" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="393" lineend="401" name="command" signature="command(cmd=nil, &amp;b)" />
            <scope ilk="function" line="403" lineend="406" name="delete" signature="delete" />
            <scope ilk="function" line="408" lineend="410" name="invtransform" signature="invtransform(val)" />
            <scope ilk="function" line="412" lineend="414" name="limits" signature="limits" />
            <scope ilk="function" line="416" lineend="418" name="name" signature="name" />
            <scope ilk="function" line="420" lineend="422" name="transform" signature="transform(val)" />
            <scope ilk="function" line="424" lineend="427" name="view" signature="view" />
            <scope ilk="function" line="429" lineend="431" name="use" signature="use(name=None)" />
            <scope ilk="function" line="433" lineend="435" name="use_as" signature="use_as(axis)" />
          </scope>
          <scope classrefs="TkObject" ilk="class" line="440" lineend="490" name="Crosshairs">
            <scope attributes="__classmethod__" ilk="function" line="443" lineend="446" name="new" signature="self.new(chart, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="448" lineend="454" name="initialize" signature="initialize(chart, keys={})" />
            <scope ilk="function" line="456" lineend="458" name="id" signature="id" />
            <scope ilk="function" line="460" lineend="462" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="464" lineend="466" name="cget" signature="cget(option)" />
            <scope ilk="function" line="467" lineend="470" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="471" lineend="473" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="474" lineend="476" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="478" lineend="481" name="off" signature="off" />
            <scope ilk="function" line="482" lineend="485" name="on" signature="on" />
            <scope ilk="function" line="486" lineend="489" name="toggle" signature="toggle" />
          </scope>
          <scope classrefs="TkObject" ilk="class" line="494" lineend="611" name="Element">
            <scope attributes="__classmethod__" ilk="function" line="510" lineend="512" name="type2class" signature="Element.type2class(type)" />
            <scope attributes="__classmethod__" ilk="function" line="514" lineend="518" name="id2obj" signature="Element.id2obj(chart, id)" />
            <scope attributes="__classmethod__" ilk="function" line="520" lineend="530" name="new" signature="self.new(chart, element=nil, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="532" lineend="553" name="initialize" signature="initialize(chart, element=nil, keys={})" />
            <scope ilk="function" line="555" lineend="557" name="id" signature="id" />
            <scope ilk="function" line="559" lineend="561" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="563" lineend="566" name="cget" signature="cget(option)" />
            <scope ilk="function" line="567" lineend="571" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="572" lineend="575" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="576" lineend="579" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="581" lineend="583" name="activate" signature="activate(*args)" />
            <scope ilk="function" line="585" lineend="588" name="closest" signature="closest(x, y, var, keys={})" />
            <scope ilk="function" line="590" lineend="593" name="deactivate" signature="deactivate" />
            <scope ilk="function" line="595" lineend="598" name="delete" signature="delete" />
            <scope ilk="function" line="600" lineend="602" name="exist?" signature="exist?" />
            <scope ilk="function" line="604" lineend="606" name="name" signature="name" />
            <scope ilk="function" line="608" lineend="610" name="type" signature="type" />
          </scope>
          <scope classrefs="Element" ilk="class" line="613" lineend="616" name="Bar" />
          <scope classrefs="Element" ilk="class" line="617" lineend="620" name="Line" />
          <scope classrefs="TkObject" ilk="class" line="624" lineend="674" name="GridLine">
            <scope attributes="__classmethod__" ilk="function" line="627" lineend="630" name="new" signature="self.new(chart, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="632" lineend="638" name="initialize" signature="initialize(chart, keys={})" />
            <scope ilk="function" line="640" lineend="642" name="id" signature="id" />
            <scope ilk="function" line="644" lineend="646" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="648" lineend="650" name="cget" signature="cget(option)" />
            <scope ilk="function" line="651" lineend="654" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="655" lineend="657" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="658" lineend="660" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="662" lineend="665" name="off" signature="off" />
            <scope ilk="function" line="666" lineend="669" name="on" signature="on" />
            <scope ilk="function" line="670" lineend="673" name="toggle" signature="toggle" />
          </scope>
          <scope classrefs="TkObject" ilk="class" line="678" lineend="727" name="Legend">
            <scope attributes="__classmethod__" ilk="function" line="681" lineend="684" name="new" signature="self.new(chart, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="686" lineend="692" name="initialize" signature="initialize(chart, keys={})" />
            <scope ilk="function" line="694" lineend="696" name="id" signature="id" />
            <scope ilk="function" line="698" lineend="700" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="702" lineend="704" name="cget" signature="cget(option)" />
            <scope ilk="function" line="705" lineend="708" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="709" lineend="711" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="712" lineend="714" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="716" lineend="718" name="activate" signature="activate(*args)" />
            <scope ilk="function" line="720" lineend="722" name="deactivate" signature="deactivate(*args)" />
            <scope ilk="function" line="724" lineend="726" name="get" signature="get(pos, y=nil)" />
          </scope>
          <scope classrefs="TkObject" ilk="class" line="731" lineend="803" name="Pen">
            <scope attributes="__classmethod__" ilk="function" line="735" lineend="739" name="id2obj" signature="self.id2obj(chart, id)" />
            <scope attributes="__classmethod__" ilk="function" line="741" lineend="749" name="new" signature="self.new(chart, pen=nil, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="751" lineend="771" name="initialize" signature="initialize(chart, pen=nil, keys={})" />
            <scope ilk="function" line="773" lineend="775" name="id" signature="id" />
            <scope ilk="function" line="777" lineend="779" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="781" lineend="783" name="cget" signature="cget(option)" />
            <scope ilk="function" line="784" lineend="787" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="788" lineend="790" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="791" lineend="793" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="795" lineend="798" name="delete" signature="delete" />
            <scope ilk="function" line="800" lineend="802" name="name" signature="name" />
          </scope>
          <scope classrefs="TkObject" ilk="class" line="807" lineend="859" name="Postscript">
            <scope attributes="__classmethod__" ilk="function" line="810" lineend="813" name="new" signature="self.new(chart, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="815" lineend="821" name="initialize" signature="initialize(chart, keys={})" />
            <scope ilk="function" line="823" lineend="825" name="id" signature="id" />
            <scope ilk="function" line="827" lineend="829" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="831" lineend="833" name="cget" signature="cget(option)" />
            <scope ilk="function" line="834" lineend="837" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="838" lineend="840" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="841" lineend="843" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="845" lineend="858" name="output" signature="output(file=nil, keys={})" />
          </scope>
          <scope classrefs="TkObject" ilk="class" line="862" lineend="1010" name="Marker">
            <scope attributes="__classmethod__" ilk="function" line="875" lineend="877" name="type2class" signature="Marker.type2class(type)" />
            <scope attributes="__classmethod__" ilk="function" line="879" lineend="883" name="id2obj" signature="Marker.id2obj(chart, id)" />
            <scope attributes="__classmethod__" ilk="function" line="885" lineend="921" name="_parse_create_args" signature="self._parse_create_args(keys)" />
            <scope attributes="__classmethod__" ilk="function" line="924" lineend="933" name="create" signature="self.create(chart, keys={})" />
            <scope attributes="__classmethod__" ilk="function" line="935" lineend="952" name="create_type" signature="self.create_type(chart, type, keys={})" />
            <scope attributes="__ctor__" ilk="function" line="954" lineend="963" name="initialize" signature="initialize(parent, *args)" />
            <scope ilk="function" line="964" lineend="966" name="create_self" signature="create_self(*args)" />
            <scope ilk="function" line="969" lineend="971" name="id" signature="id" />
            <scope ilk="function" line="973" lineend="975" name="to_eval" signature="to_eval" />
            <scope ilk="function" line="977" lineend="979" name="cget" signature="cget(option)" />
            <scope ilk="function" line="980" lineend="983" name="configure" signature="configure(key, value=None)" />
            <scope ilk="function" line="984" lineend="986" name="configinfo" signature="configinfo(key=nil)" />
            <scope ilk="function" line="987" lineend="989" name="current_configinfo" signature="current_configinfo(key=nil)" />
            <scope ilk="function" line="991" lineend="993" name="after" signature="after(target=None)" />
            <scope ilk="function" line="995" lineend="997" name="before" signature="before(target=None)" />
            <scope ilk="function" line="999" lineend="1001" name="delete" signature="delete" />
            <scope ilk="function" line="1003" lineend="1005" name="exist?" signature="exist?" />
            <scope ilk="function" line="1007" lineend="1009" name="type" signature="type" />
          </scope>
          <scope classrefs="Marker" ilk="class" line="10121501212" lineend="1015" name="TextMarker" />
          <scope classrefs="Marker" ilk="class" line="1016" lineend="1019" name="LineMarker" />
          <scope classrefs="Marker" ilk="class" line="1020" lineend="1023" name="BitmapMarker" />
          <scope classrefs="Marker" ilk="class" line="1024" lineend="1027" name="ImageMarker" />
          <scope classrefs="Marker" ilk="class" line="1028" lineend="1031" name="PolygonMarker" />
          <scope classrefs="Marker" ilk="class" line="1032" lineend="1035" name="WindowMarker" />
          <scope ilk="function" line="1039" lineend="1049" name="__destroy_hook__" signature="__destroy_hook__" />
          <scope ilk="function" line="1053" lineend="1066" name="tagid" signature="tagid(tag)" />
          <scope ilk="function" line="1068" lineend="1076" name="_component_bind" signature="_component_bind(target, tag, context, *args)" />
          <scope ilk="function" line="1077" lineend="1085" name="_component_bind_append" signature="_component_bind_append(target, tag, context, *args)" />
          <scope ilk="function" line="1086" lineend="1089" name="_component_bind_remove" signature="_component_bind_remove(target, tag, context)" />
          <scope ilk="function" line="1090" lineend="1092" name="_component_bindinfo" signature="_component_bindinfo(target, tag, context=nil)" />
          <scope ilk="function" line="1096" lineend="1098" name="axis_bind" signature="axis_bind(tag, context, *args)" />
          <scope ilk="function" line="1099" lineend="1101" name="axis_bind_append" signature="axis_bind_append(tag, context, *args)" />
          <scope ilk="function" line="1102" lineend="1104" name="axis_bind_remove" signature="axis_bind_remove(tag, context)" />
          <scope ilk="function" line="1105" lineend="1107" name="axis_bindinfo" signature="axis_bindinfo(tag, context=nil)" />
          <scope ilk="function" line="1109" lineend="1111" name="element_bind" signature="element_bind(tag, context, *args)" />
          <scope ilk="function" line="1112" lineend="1114" name="element_bind_append" signature="element_bind_append(tag, context, *args)" />
          <scope ilk="function" line="1115" lineend="1117" name="element_bind_remove" signature="element_bind_remove(tag, context)" />
          <scope ilk="function" line="1118" lineend="1120" name="element_bindinfo" signature="element_bindinfo(tag, context=nil)" />
          <scope ilk="function" line="1122" lineend="1124" name="bar_bind" signature="bar_bind(tag, context, *args)" />
          <scope ilk="function" line="1125" lineend="1127" name="bar_bind_append" signature="bar_bind_append(tag, context, *args)" />
          <scope ilk="function" line="1128" lineend="1130" name="bar_bind_remove" signature="bar_bind_remove(tag, context)" />
          <scope ilk="function" line="1131" lineend="1133" name="bar_bindinfo" signature="bar_bindinfo(tag, context=nil)" />
          <scope ilk="function" line="1135" lineend="1137" name="line_bind" signature="line_bind(tag, context, *args)" />
          <scope ilk="function" line="1138" lineend="1140" name="line_bind_append" signature="line_bind_append(tag, context, *args)" />
          <scope ilk="function" line="1141" lineend="1143" name="line_bind_remove" signature="line_bind_remove(tag, context)" />
          <scope ilk="function" line="1144" lineend="1146" name="line_bindinfo" signature="line_bindinfo(tag, context=nil)" />
          <scope ilk="function" line="1148" lineend="1150" name="legend_bind" signature="legend_bind(tag, context, *args)" />
          <scope ilk="function" line="1151" lineend="1153" name="legend_bind_append" signature="legend_bind_append(tag, context, *args)" />
          <scope ilk="function" line="1154" lineend="1156" name="legend_bind_remove" signature="legend_bind_remove(tag, context)" />
          <scope ilk="function" line="1157" lineend="1159" name="legend_bindinfo" signature="legend_bindinfo(tag, context=nil)" />
          <scope ilk="function" line="1161" lineend="1163" name="marker_bind" signature="marker_bind(tag, context, *args)" />
          <scope ilk="function" line="1164" lineend="1166" name="marker_bind_append" signature="marker_bind_append(tag, context, *args)" />
          <scope ilk="function" line="1167" lineend="1169" name="marker_bind_remove" signature="marker_bind_remove(tag, context)" />
          <scope ilk="function" line="1170" lineend="1172" name="marker_bindinfo" signature="marker_bindinfo(tag, context=nil)" />
          <scope ilk="function" line="1176" lineend="1179" name="axis_create" signature="axis_create(id=nil, keys={})" />
          <scope ilk="function" line="1180" lineend="1183" name="axis_delete" signature="axis_delete(*ids)" />
          <scope ilk="function" line="1184" lineend="1186" name="axis_invtransform" signature="axis_invtransform(id, val)" />
          <scope ilk="function" line="1187" lineend="1189" name="axis_limits" signature="axis_limits(id)" />
          <scope ilk="function" line="1190" lineend="1195" name="axis_names" signature="axis_names(*pats)" />
          <scope ilk="function" line="1196" lineend="1198" name="axis_transform" signature="axis_transform(id, val)" />
          <scope ilk="function" line="1199" lineend="1202" name="axis_view" signature="axis_view(id)" />
          <scope ilk="function" line="1203" lineend="1212" name="axis_use" signature="axis_use(id, target=nil)" />
          <scope ilk="function" line="1216" lineend="1219" name="crosshairs_off" signature="crosshairs_off" />
          <scope ilk="function" line="1220" lineend="1223" name="crosshairs_on" signature="crosshairs_on" />
          <scope ilk="function" line="1224" lineend="1227" name="crosshairs_toggle" signature="crosshairs_toggle" />
          <scope ilk="function" line="1231" lineend="1234" name="element_create" signature="element_create(id=nil, keys={})" />
          <scope ilk="function" line="1235" lineend="1245" name="element_activate" signature="element_activate(*args)" />
          <scope ilk="function" line="1246" lineend="1255" name="element_closest" signature="element_closest(x, y, var, *args)" />
          <scope ilk="function" line="1256" lineend="1259" name="element_deactivate" signature="element_deactivate(*ids)" />
          <scope ilk="function" line="1260" lineend="1263" name="element_delete" signature="element_delete(*ids)" />
          <scope ilk="function" line="1264" lineend="1266" name="element_exist?" signature="element_exist?(id)" />
          <scope ilk="function" line="1267" lineend="1272" name="element_names" signature="element_names(*pats)" />
          <scope ilk="function" line="1273" lineend="1280" name="element_show" signature="element_show(*names)" />
          <scope ilk="function" line="1281" lineend="1283" name="element_type" signature="element_type(id)" />
          <scope ilk="function" line="1287" lineend="1290" name="bar_create" signature="bar_create(id=nil, keys={})" />
          <scope ilk="function" line="1292" lineend="1302" name="bar_activate" signature="bar_activate(*args)" />
          <scope ilk="function" line="1303" lineend="1312" name="bar_closest" signature="bar_closest(x, y, var, *args)" />
          <scope ilk="function" line="1313" lineend="1316" name="bar_deactivate" signature="bar_deactivate(*ids)" />
          <scope ilk="function" line="1317" lineend="1320" name="bar_delete" signature="bar_delete(*ids)" />
          <scope ilk="function" line="1321" lineend="1323" name="bar_exist?" signature="bar_exist?(id)" />
          <scope ilk="function" line="1324" lineend="1329" name="bar_names" signature="bar_names(*pats)" />
          <scope ilk="function" line="1330" lineend="1337" name="bar_show" signature="bar_show(*names)" />
          <scope ilk="function" line="1338" lineend="1340" name="bar_type" signature="bar_type(id)" />
          <scope ilk="function" line="1344" lineend="1347" name="line_create" signature="line_create(id=nil, keys={})" />
          <scope ilk="function" line="1349" lineend="1359" name="line_activate" signature="line_activate(*args)" />
          <scope ilk="function" line="1360" lineend="1369" name="line_closest" signature="line_closest(x, y, var, *args)" />
          <scope ilk="function" line="1370" lineend="1373" name="line_deactivate" signature="line_deactivate(*ids)" />
          <scope ilk="function" line="1374" lineend="1377" name="line_delete" signature="line_delete(*ids)" />
          <scope ilk="function" line="1378" lineend="1380" name="line_exist?" signature="line_exist?(id)" />
          <scope ilk="function" line="1381" lineend="1386" name="line_names" signature="line_names(*pats)" />
          <scope ilk="function" line="1387" lineend="1394" name="line_show" signature="line_show(*names)" />
          <scope ilk="function" line="1395" lineend="1397" name="line_type" signature="line_type(id)" />
          <scope ilk="function" line="1401" lineend="1404" name="gridline_off" signature="gridline_off" />
          <scope ilk="function" line="1405" lineend="1408" name="gridline_on" signature="gridline_on" />
          <scope ilk="function" line="1409" lineend="1412" name="gridline_toggle" signature="gridline_toggle" />
          <scope ilk="function" line="1416" lineend="1442" name="legend_window_create" signature="legend_window_create(parent=nil, keys=nil)">
            <scope classrefs="Object" ilk="class" line="1430" lineend="1434" name="legend">
              <scope ilk="function" line="1431" lineend="1433" name="__destroy_hook__" signature="__destroy_hook__" />
            </scope>
          </scope>
          <scope ilk="function" line="1444" lineend="1449" name="legend_activate" signature="legend_activate(*pats)" />
          <scope ilk="function" line="1450" lineend="1455" name="legend_deactivate" signature="legend_deactivate(*pats)" />
          <scope ilk="function" line="1456" lineend="1465" name="legend_get" signature="legend_get(pos, y=nil)" />
          <scope ilk="function" line="1469" lineend="1472" name="pen_create" signature="pen_create(id=nil, keys={})" />
          <scope ilk="function" line="1473" lineend="1476" name="pen_delete" signature="pen_delete(*ids)" />
          <scope ilk="function" line="1477" lineend="1482" name="pen_names" signature="pen_names(*pats)" />
          <scope ilk="function" line="1486" lineend="1498" name="postscript_output" signature="postscript_output(file=nil, keys={})" />
          <scope ilk="function" line="1502" lineend="1523" name="marker_create" signature="marker_create(type, keys={})" />
          <scope ilk="function" line="1524" lineend="1531" name="marker_after" signature="marker_after(id, target=nil)" />
          <scope ilk="function" line="1532" lineend="1539" name="marker_before" signature="marker_before(id, target=None)" />
          <scope ilk="function" line="1540" lineend="1543" name="marker_delete" signature="marker_delete(*ids)" />
          <scope ilk="function" line="1544" lineend="1546" name="marker_exist?" signature="marker_exist?(id)" />
          <scope ilk="function" line="1547" lineend="1552" name="marker_names" signature="marker_names(*pats)" />
          <scope ilk="function" line="1553" lineend="1555" name="marker_type" signature="marker_type(id)" />
          <scope ilk="function" line="1559" lineend="1561" name="xaxis_cget" signature="xaxis_cget(option)" />
          <scope ilk="function" line="1562" lineend="1577" name="xaxis_configure" signature="xaxis_configure(slot, value=None)" />
          <scope ilk="function" line="1578" lineend="1580" name="xaxis_configinfo" signature="xaxis_configinfo(slot=nil)" />
          <scope ilk="function" line="1581" lineend="1583" name="current_xaxis_configinfo" signature="current_xaxis_configinfo(slot=nil)" />
          <scope ilk="function" line="1584" lineend="1592" name="xaxis_bind" signature="xaxis_bind(context, *args)" />
          <scope ilk="function" line="1593" lineend="1601" name="xaxis_bind_append" signature="xaxis_bind_append(context, *args)" />
          <scope ilk="function" line="1602" lineend="1605" name="xaxis_bind_remove" signature="xaxis_bind_remove(context)" />
          <scope ilk="function" line="1606" lineend="1608" name="xaxis_bindinfo" signature="xaxis_bindinfo(context=nil)" />
          <scope ilk="function" line="1609" lineend="1611" name="xaxis_invtransform" signature="xaxis_invtransform(val)" />
          <scope ilk="function" line="1612" lineend="1614" name="xaxis_limits" signature="xaxis_limits" />
          <scope ilk="function" line="1615" lineend="1617" name="xaxis_transform" signature="xaxis_transform(val)" />
          <scope ilk="function" line="1618" lineend="1626" name="xaxis_use" signature="xaxis_use(target=nil)" />
          <scope ilk="function" line="1628" lineend="1630" name="x2axis_cget" signature="x2axis_cget(option)" />
          <scope ilk="function" line="1631" lineend="1646" name="x2axis_configure" signature="x2axis_configure(slot, value=None)" />
          <scope ilk="function" line="1647" lineend="1649" name="x2axis_configinfo" signature="x2axis_configinfo(slot=nil)" />
          <scope ilk="function" line="1650" lineend="1652" name="current_x2axis_configinfo" signature="current_x2axis_configinfo(slot=nil)" />
          <scope ilk="function" line="1653" lineend="1661" name="x2axis_bind" signature="x2axis_bind(context, *args)" />
          <scope ilk="function" line="1662" lineend="1670" name="x2axis_bind_append" signature="x2axis_bind_append(context, *args)" />
          <scope ilk="function" line="1671" lineend="1674" name="x2axis_bind_remove" signature="x2axis_bind_remove(context)" />
          <scope ilk="function" line="1675" lineend="1677" name="x2axis_bindinfo" signature="x2axis_bindinfo(context=nil)" />
          <scope ilk="function" line="1678" lineend="1680" name="x2axis_invtransform" signature="x2axis_invtransform(val)" />
          <scope ilk="function" line="1681" lineend="1683" name="x2axis_limits" signature="x2axis_limits" />
          <scope ilk="function" line="1684" lineend="1686" name="x2axis_transform" signature="x2axis_transform(val)" />
          <scope ilk="function" line="1687" lineend="1695" name="x2axis_use" signature="x2axis_use(target=nil)" />
          <scope ilk="function" line="1697" lineend="1699" name="yaxis_cget" signature="yaxis_cget(option)" />
          <scope ilk="function" line="1700" lineend="1715" name="yaxis_configure" signature="yaxis_configure(slot, value=None)" />
          <scope ilk="function" line="1716" lineend="1718" name="yaxis_configinfo" signature="yaxis_configinfo(slot=nil)" />
          <scope ilk="function" line="1719" lineend="1721" name="current_yaxis_configinfo" signature="current_yaxis_configinfo(slot=nil)" />
          <scope ilk="function" line="1722" lineend="1730" name="yaxis_bind" signature="yaxis_bind(context, *args)" />
          <scope ilk="function" line="1731" lineend="1739" name="yaxis_bind_append" signature="yaxis_bind_append(context, *args)" />
          <scope ilk="function" line="1740" lineend="1743" name="yaxis_bind_remove" signature="yaxis_bind_remove(context)" />
          <scope ilk="function" line="1744" lineend="1746" name="yaxis_bindinfo" signature="yaxis_bindinfo(context=nil)" />
          <scope ilk="function" line="1747" lineend="1749" name="yaxis_invtransform" signature="yaxis_invtransform(val)" />
          <scope ilk="function" line="1750" lineend="1752" name="yaxis_limits" signature="yaxis_limits" />
          <scope ilk="function" line="1753" lineend="1755" name="yaxis_transform" signature="yaxis_transform(val)" />
          <scope ilk="function" line="1756" lineend="1764" name="yaxis_use" signature="yaxis_use(target=nil)" />
          <scope ilk="function" line="1766" lineend="1768" name="y2axis_cget" signature="y2axis_cget(option)" />
          <scope ilk="function" line="1769" lineend="1784" name="y2axis_configure" signature="y2axis_configure(slot, value=None)" />
          <scope ilk="function" line="1785" lineend="1787" name="y2axis_configinfo" signature="y2axis_configinfo(slot=nil)" />
          <scope ilk="function" line="1788" lineend="1790" name="current_y2axis_configinfo" signature="current_y2axis_configinfo(slot=nil)" />
          <scope ilk="function" line="1791" lineend="1799" name="y2axis_bind" signature="y2axis_bind(context, *args)" />
          <scope ilk="function" line="1800" lineend="1808" name="y2axis_bind_append" signature="y2axis_bind_append(context, *args)" />
          <scope ilk="function" line="1809" lineend="1812" name="y2axis_bind_remove" signature="y2axis_bind_remove(context)" />
          <scope ilk="function" line="1813" lineend="1815" name="y2axis_bindinfo" signature="y2axis_bindinfo(context=nil)" />
          <scope ilk="function" line="1816" lineend="1818" name="y2axis_invtransform" signature="y2axis_invtransform(val)" />
          <scope ilk="function" line="1819" lineend="1821" name="y2axis_limits" signature="y2axis_limits" />
          <scope ilk="function" line="1822" lineend="1824" name="y2axis_transform" signature="y2axis_transform(val)" />
          <scope ilk="function" line="1825" lineend="1833" name="y2axis_use" signature="y2axis_use(target=nil)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/busy">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/itemconfig.rb" symbol="*" />
      <import line="8" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/busy.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="38" name="Tk::BLT">
        <scope ilk="namespace" line="11" lineend="37" name="Busy">
          <scope classrefs="TkWindow" ilk="class" line="19" lineend="32" name="Shield">
            <scope attributes="__classmethod__" ilk="function" line="20" lineend="27" name="shield_path" signature="self.shield_path(win)" />
            <scope attributes="__ctor__" ilk="function" line="29" lineend="31" name="initialize" signature="initialize(win)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="34" lineend="36" name="shield_path" signature="self.shield_path(win)" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="40" lineend="82" name="Tk::BLT::">
        <scope ilk="function" line="41" lineend="43" name="__item_config_cmd" signature="__item_config_cmd(win)" />
        <scope ilk="function" line="54" lineend="56" name="hold" signature="hold(win, keys={})" />
        <scope ilk="function" line="58" lineend="60" name="release" signature="release(*wins)" />
        <scope ilk="function" line="62" lineend="64" name="forget" signature="forget(*wins)" />
        <scope ilk="function" line="66" lineend="68" name="is_busy" signature="is_busy(pat=None)" />
        <scope ilk="function" line="70" lineend="72" name="names" signature="names(pat=None)" />
        <scope ilk="function" line="75" lineend="77" name="check" signature="check(win)" />
        <scope ilk="function" line="79" lineend="81" name="status" signature="status(win)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/bitmap">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <scope doc="tkextlib/blt/bitmap.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="9" lineend="99" name="Tk::BLT">
        <scope classrefs="TkObject" ilk="class" line="10" lineend="98" name="Bitmap">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="21" name="data" signature="self.data(name)" />
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="exist?" signature="self.exist?(name)" />
          <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="height" signature="self.height(name)" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="33" name="width" signature="self.width(name)" />
          <scope attributes="__classmethod__" ilk="function" line="35" lineend="37" name="source" signature="self.source(name)" />
          <scope classrefs="Object" ilk="class" line="41" lineend="61" name="self">
            <scope ilk="function" line="44" lineend="46" name="new" signature="new(data, keys={})" />
            <scope ilk="function" line="49" lineend="51" name="new_with_name" signature="new_with_name(name, data, keys={})" />
            <scope ilk="function" line="54" lineend="56" name="compose" signature="compose(text, keys={})" />
            <scope ilk="function" line="58" lineend="60" name="compose_with_name" signature="compose_with_name(name, text, keys={})" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="63" lineend="81" name="initialize" signature="initialize(type, name, data, keys = {})" />
          <scope ilk="function" line="83" lineend="85" name="exist?" signature="exist?" />
          <scope ilk="function" line="87" lineend="89" name="height" signature="height" />
          <scope ilk="function" line="91" lineend="93" name="width" signature="width" />
          <scope ilk="function" line="95" lineend="97" name="source" signature="source" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkextlib/blt/barchart">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tkextlib/blt.rb" symbol="*" />
      <import line="8" module="tkextlib/blt/component.rb" symbol="*" />
      <scope doc="tkextlib/blt/barchart.rb by Hidetoshi NAGAI&#xA;(nagai@ai.kyutech.ac.jp)" ilk="namespace" line="10" lineend="79" name="Tk::BLT">
        <scope classrefs="TkWindow" ilk="class" line="11" lineend="78" name="Barchart">
          <scope ilk="function" line="19" lineend="21" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="24" lineend="27" name="__strval_optkeys" signature="__strval_optkeys" />
          <scope ilk="function" line="30" lineend="32" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
          <scope ilk="function" line="52" lineend="54" name="extents" signature="extents(item)" />
          <scope ilk="function" line="56" lineend="58" name="invtransform" signature="invtransform(x, y)" />
          <scope ilk="function" line="60" lineend="62" name="inside" signature="inside(x, y)" />
          <scope ilk="function" line="64" lineend="68" name="metafile" signature="metafile(file=None)" />
          <scope ilk="function" line="70" lineend="73" name="snap" signature="snap(output, keys={})" />
          <scope ilk="function" line="75" lineend="77" name="transform" signature="transform(x, y)" />
          <import symbol="PlotComponent" />
          <import symbol="GraphCommand" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkentry">
      <import line="4" module="tk/entry" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkdialog">
      <import line="4" module="tk/dialog" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkconsole">
      <import line="4" module="tk/console" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkclass">
      <import line="8" module="tk" symbol="*" />
      <scope doc="tkclass.rb - Tk classes Date: 2000/11/27 09:23:36 by&#xA;Yukihiro Matsumoto &lt;matz@caelum.co.jp&gt;" ilk="function" line="45" lineend="47" name="Mainloop" signature="Mainloop" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkcanvas">
      <import line="4" module="tk/canvas" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkbgerror">
      <import line="4" module="tk/bgerror" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tkafter">
      <import line="4" module="tk/timer" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk">
      <import line="7" module="tcltklib" symbol="*" />
      <import line="8" module="tkutil" symbol="*" />
      <import line="11" module="tk/autoload" symbol="*" />
      <import line="4574" module="tkextlib/setup.rb" symbol="*" />
      <scope classrefs="Object" doc="autoload" ilk="class" line="13" lineend="22" name="TclTkIp">
        <scope doc="backup original (without encoding) _eval and _invoke" ilk="function" line="18" lineend="21" name="_ip_id_" signature="_ip_id_" />
      </scope>
      <scope doc="define TkComm module (step 1: basic functions)" ilk="namespace" line="25" lineend="255" name="TkComm">
        <scope doc="[0]-cmdid, [1]-winid for backward compatibility" ilk="function" line="44" lineend="46" name="Tk_CMDTBL.method_missing" signature="Tk_CMDTBL.method_missing(id, *args)" />
        <scope ilk="function" line="49" lineend="51" name="Tk_WINDOWS.method_missing" signature="Tk_WINDOWS.method_missing(id, *args)" />
        <scope doc="*** ATTENTION *** &apos;current_configinfo&apos; method always returns&#xA;a Hash under all cases of above." ilk="function" line="73" lineend="79" name="error_at" signature="error_at" />
        <scope ilk="function" line="82" lineend="179" name="_genobj_for_tkwidget" signature="_genobj_for_tkwidget(path)" />
        <scope ilk="function" line="183" lineend="189" name="_at" signature="_at(x,y=nil)" />
        <scope ilk="function" line="192" lineend="247" name="tk_tcl2ruby" signature="tk_tcl2ruby(val, enc_mode = false, listobj = true)" />
      </scope>
      <scope doc="use Tcl function version of split_list" ilk="function" line="262" lineend="269" name="tk_split_escstr" signature="tk_split_escstr(str, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="271" lineend="289" name="tk_split_sublist" signature="tk_split_sublist(str, depth=-1, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="291" lineend="297" name="tk_split_list" signature="tk_split_list(str, depth=0, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="299" lineend="313" name="tk_split_simplelist" signature="tk_split_simplelist(str, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="315" lineend="360" name="array2tk_list" signature="array2tk_list(ary, enc=nil)" />
      <scope doc="use Ruby script version of split_list (traditional methods)" ilk="function" line="367" lineend="386" name="tk_split_escstr" signature="tk_split_escstr(str, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="388" lineend="406" name="tk_split_sublist" signature="tk_split_sublist(str, depth=-1, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="408" lineend="413" name="tk_split_list" signature="tk_split_list(str, depth=0, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="455" lineend="479" name="tk_split_simplelist" signature="tk_split_simplelist(str, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="481" lineend="494" name="array2tk_list" signature="array2tk_list(ary, enc=nil)" />
      <scope doc="private_class_method :array2tk_list" ilk="function" line="587" lineend="589" name="list" signature="list(val, depth=0, enc=true)" />
      <scope ilk="function" line="590" lineend="592" name="simplelist" signature="simplelist(val, src_enc=true, dst_enc=true)" />
      <scope ilk="function" line="593" lineend="601" name="window" signature="window(val)" />
      <scope ilk="function" line="602" lineend="608" name="image_obj" signature="image_obj(val)" />
      <scope ilk="function" line="609" lineend="622" name="procedure" signature="procedure(val)" />
      <scope ilk="function" line="628" lineend="635" name="subst" signature="subst(str, *opts)" />
      <scope ilk="function" line="637" lineend="639" name="_toUTF8" signature="_toUTF8(str, encoding = nil)" />
      <scope ilk="function" line="640" lineend="642" name="_fromUTF8" signature="_fromUTF8(str, encoding = nil)" />
      <scope ilk="function" line="646" lineend="648" name="_callback_entry_class?" signature="_callback_entry_class?(cls)" />
      <scope ilk="function" line="652" lineend="654" name="_callback_entry?" signature="_callback_entry?(obj)" />
      <scope ilk="function" line="781" lineend="784" name="_curr_cmd_id" signature="_curr_cmd_id" />
      <scope ilk="function" line="785" lineend="790" name="_next_cmd_id" signature="_next_cmd_id" />
      <scope ilk="function" line="794" lineend="819" name="install_cmd" signature="install_cmd(cmd)" />
      <scope ilk="function" line="820" lineend="825" name="uninstall_cmd" signature="uninstall_cmd(id)" />
      <scope doc="private :install_cmd, :uninstall_cmd" ilk="function" line="848" lineend="869" name="install_win" signature="install_win(ppath,name=nil)" />
      <scope ilk="function" line="871" lineend="874" name="uninstall_win" signature="uninstall_win()" />
      <scope ilk="function" line="877" lineend="885" name="_epath" signature="_epath(win)" />
      <scope doc="define TkComm module (step 2: event binding)" ilk="namespace" line="890" lineend="1078" name="TkComm">
        <scope ilk="function" line="894" lineend="912" name="tk_event_sequence" signature="tk_event_sequence(context)" />
        <scope ilk="function" line="914" lineend="923" name="_bind_core" signature="_bind_core(mode, what, context, cmd, *args)" />
        <scope ilk="function" line="925" lineend="927" name="_bind" signature="_bind(what, context, cmd, *args)" />
        <scope ilk="function" line="929" lineend="931" name="_bind_append" signature="_bind_append(what, context, cmd, *args)" />
        <scope ilk="function" line="933" lineend="935" name="_bind_remove" signature="_bind_remove(what, context)" />
        <scope ilk="function" line="937" lineend="966" name="_bindinfo" signature="_bindinfo(what, context=nil)" />
        <scope ilk="function" line="968" lineend="977" name="_bind_core_for_event_class" signature="_bind_core_for_event_class(klass, mode, what, context, cmd, *args)" />
        <scope ilk="function" line="979" lineend="981" name="_bind_for_event_class" signature="_bind_for_event_class(klass, what, context, cmd, *args)" />
        <scope ilk="function" line="983" lineend="985" name="_bind_append_for_event_class" signature="_bind_append_for_event_class(klass, what, context, cmd, *args)" />
        <scope ilk="function" line="987" lineend="989" name="_bind_remove_for_event_class" signature="_bind_remove_for_event_class(klass, what, context)" />
        <scope ilk="function" line="991" lineend="993" name="_bindinfo_for_event_class" signature="_bindinfo_for_event_class(klass, what, context=nil)" />
        <scope doc="def bind(tagOrClass, context, cmd=Proc.new, *args)&#xA;_bind([&quot;bind&quot;, tagOrClass], context, cmd, *args) tagOrClass&#xA;end" ilk="function" line="1005" lineend="1014" name="bind" signature="bind(tagOrClass, context, *args)" />
        <scope doc="def bind_append(tagOrClass, context, cmd=Proc.new, *args)&#xA;_bind_append([&quot;bind&quot;, tagOrClass], context, cmd, *args)&#xA;tagOrClass end" ilk="function" line="1020" lineend="1029" name="bind_append" signature="bind_append(tagOrClass, context, *args)" />
        <scope ilk="function" line="1031" lineend="1034" name="bind_remove" signature="bind_remove(tagOrClass, context)" />
        <scope ilk="function" line="1036" lineend="1038" name="bindinfo" signature="bindinfo(tagOrClass, context=nil)" />
        <scope doc="def bind_all(context, cmd=Proc.new, *args) _bind([&apos;bind&apos;,&#xA;&apos;all&apos;], context, cmd, *args) TkBindTag::ALL end" ilk="function" line="1044" lineend="1053" name="bind_all" signature="bind_all(context, *args)" />
        <scope doc="def bind_append_all(context, cmd=Proc.new, *args)&#xA;_bind_append([&apos;bind&apos;, &apos;all&apos;], context, cmd, *args)&#xA;TkBindTag::ALL end" ilk="function" line="1059" lineend="1068" name="bind_append_all" signature="bind_append_all(context, *args)" />
        <scope ilk="function" line="1070" lineend="1073" name="bind_remove_all" signature="bind_remove_all(context)" />
        <scope ilk="function" line="1075" lineend="1077" name="bindinfo_all" signature="bindinfo_all(context=nil)" />
      </scope>
      <scope ilk="namespace" line="1081" lineend="1779" name="TkCore">
        <scope doc="name = nil" ilk="function" line="1104" lineend="1106" name="INTERP.__getip" signature="INTERP.__getip" />
        <scope ilk="function" line="1147" lineend="1149" name="INTERP.cb_entry_class" signature="INTERP.cb_entry_class" />
        <scope ilk="function" line="1150" lineend="1152" name="INTERP.tk_cmd_tbl" signature="INTERP.tk_cmd_tbl" />
        <scope ilk="function" line="1153" lineend="1155" name="INTERP.tk_windows" signature="INTERP.tk_windows" />
        <scope classrefs="Object" ilk="class" line="1157" lineend="1164" name="Tk_OBJECT_TABLE">
          <scope attributes="__ctor__" ilk="function" line="1158" lineend="1160" name="initialize" signature="initialize(id)" />
          <scope ilk="function" line="1161" lineend="1163" name="method_missing" signature="method_missing(m, *args, &amp;b)" />
        </scope>
        <scope ilk="function" line="1166" lineend="1168" name="INTERP.tk_object_table" signature="INTERP.tk_object_table(id)" />
        <scope ilk="function" line="1169" lineend="1181" name="INTERP.create_table" signature="INTERP.create_table" />
        <scope ilk="function" line="1183" lineend="1185" name="INTERP.get_cb_entry" signature="INTERP.get_cb_entry(cmd)" />
        <scope ilk="function" line="1186" lineend="1188" name="INTERP.cb_eval" signature="INTERP.cb_eval(cmd, *args)" />
        <scope ilk="function" line="1190" lineend="1193" name="INTERP.init_ip_env" signature="INTERP.init_ip_env(script = Proc.new)" />
        <scope ilk="function" line="1194" lineend="1197" name="INTERP.add_tk_procs" signature="INTERP.add_tk_procs(name, args = nil, body = nil)" />
        <scope ilk="function" line="1198" lineend="1202" name="INTERP.init_ip_internal" signature="INTERP.init_ip_internal" />
        <scope ilk="function" line="1290" lineend="1292" name="callback_break" signature="callback_break" />
        <scope ilk="function" line="1294" lineend="1296" name="callback_continue" signature="callback_continue" />
        <scope attributes="__classmethod__" ilk="function" line="1298" lineend="1336" name="callback" signature="TkCore.callback(*arg)" />
        <scope ilk="function" line="1376" lineend="1378" name="load_cmd_on_ip" signature="load_cmd_on_ip(tk_cmd)" />
        <scope ilk="function" line="1380" lineend="1402" name="after" signature="after(ms, cmd=Proc.new)" />
        <scope ilk="function" line="1404" lineend="1414" name="after_idle" signature="after_idle(cmd=Proc.new)" />
        <scope ilk="function" line="1416" lineend="1418" name="after_cancel" signature="after_cancel(afterId)" />
        <scope ilk="function" line="1420" lineend="1422" name="windowingsystem" signature="windowingsystem" />
        <scope ilk="function" line="1424" lineend="1430" name="scaling" signature="scaling(scale=nil)" />
        <scope ilk="function" line="1431" lineend="1437" name="scaling_displayof" signature="scaling_displayof(win, scale=nil)" />
        <scope ilk="function" line="1439" lineend="1441" name="inactive" signature="inactive" />
        <scope ilk="function" line="1442" lineend="1444" name="inactive_displayof" signature="inactive_displayof(win)" />
        <scope ilk="function" line="1445" lineend="1447" name="reset_inactive" signature="reset_inactive" />
        <scope ilk="function" line="1448" lineend="1450" name="reset_inactive_displayof" signature="reset_inactive_displayof(win)" />
        <scope ilk="function" line="1452" lineend="1454" name="appname" signature="appname(name=None)" />
        <scope ilk="function" line="1456" lineend="1458" name="appsend_deny" signature="appsend_deny" />
        <scope ilk="function" line="1460" lineend="1475" name="appsend" signature="appsend(interp, async, *args)" />
        <scope ilk="function" line="1477" lineend="1493" name="rb_appsend" signature="rb_appsend(interp, async, *args)" />
        <scope ilk="function" line="1495" lineend="1511" name="appsend_displayof" signature="appsend_displayof(interp, win, async, *args)" />
        <scope ilk="function" line="1513" lineend="1530" name="rb_appsend_displayof" signature="rb_appsend_displayof(interp, win, async, *args)" />
        <scope ilk="function" line="1532" lineend="1534" name="info" signature="info(*args)" />
        <scope ilk="function" line="1536" lineend="1538" name="mainloop" signature="mainloop(check_root = true)" />
        <scope ilk="function" line="1540" lineend="1546" name="mainloop_thread?" signature="mainloop_thread?" />
        <scope ilk="function" line="1548" lineend="1550" name="mainloop_exist?" signature="mainloop_exist?" />
        <scope ilk="function" line="1552" lineend="1554" name="is_mainloop?" signature="is_mainloop?" />
        <scope ilk="function" line="1556" lineend="1559" name="mainloop_watchdog" signature="mainloop_watchdog(check_root = true)" />
        <scope ilk="function" line="1561" lineend="1563" name="do_one_event" signature="do_one_event(flag = TclTkLib::EventFlag::ALL)" />
        <scope ilk="function" line="1565" lineend="1567" name="set_eventloop_tick" signature="set_eventloop_tick(timer_tick)" />
        <scope ilk="function" line="1569" lineend="1571" name="get_eventloop_tick" signature="get_eventloop_tick()" />
        <scope ilk="function" line="1573" lineend="1575" name="set_no_event_wait" signature="set_no_event_wait(wait)" />
        <scope ilk="function" line="1577" lineend="1579" name="get_no_event_wait" signature="get_no_event_wait()" />
        <scope ilk="function" line="1581" lineend="1583" name="set_eventloop_weight" signature="set_eventloop_weight(loop_max, no_event_tick)" />
        <scope ilk="function" line="1585" lineend="1587" name="get_eventloop_weight" signature="get_eventloop_weight()" />
        <scope ilk="function" line="1589" lineend="1600" name="restart" signature="restart(app_name = nil, keys = {})" />
        <scope ilk="function" line="1602" lineend="1615" name="event_generate" signature="event_generate(win, context, keys=nil)" />
        <scope ilk="function" line="1617" lineend="1619" name="messageBox" signature="messageBox(keys)" />
        <scope ilk="function" line="1621" lineend="1623" name="getOpenFile" signature="getOpenFile(keys = nil)" />
        <scope ilk="function" line="1624" lineend="1626" name="getMultipleOpenFile" signature="getMultipleOpenFile(keys = nil)" />
        <scope ilk="function" line="1628" lineend="1630" name="getSaveFile" signature="getSaveFile(keys = nil)" />
        <scope ilk="function" line="1631" lineend="1633" name="getMultipleSaveFile" signature="getMultipleSaveFile(keys = nil)" />
        <scope ilk="function" line="1635" lineend="1637" name="chooseColor" signature="chooseColor(keys = nil)" />
        <scope ilk="function" line="1639" lineend="1641" name="chooseDirectory" signature="chooseDirectory(keys = nil)" />
        <scope ilk="function" line="1643" lineend="1656" name="_ip_eval_core" signature="_ip_eval_core(enc_mode, cmd_string)" />
        <scope ilk="function" line="1659" lineend="1661" name="ip_eval" signature="ip_eval(cmd_string)" />
        <scope ilk="function" line="1663" lineend="1665" name="ip_eval_without_enc" signature="ip_eval_without_enc(cmd_string)" />
        <scope ilk="function" line="1667" lineend="1669" name="ip_eval_with_enc" signature="ip_eval_with_enc(cmd_string)" />
        <scope ilk="function" line="1671" lineend="1684" name="_ip_invoke_core" signature="_ip_invoke_core(enc_mode, *args)" />
        <scope ilk="function" line="1687" lineend="1689" name="ip_invoke" signature="ip_invoke(*args)" />
        <scope ilk="function" line="1691" lineend="1693" name="ip_invoke_without_enc" signature="ip_invoke_without_enc(*args)" />
        <scope ilk="function" line="1695" lineend="1697" name="ip_invoke_with_enc" signature="ip_invoke_with_enc(*args)" />
        <scope ilk="function" line="1699" lineend="1730" name="_tk_call_core" signature="_tk_call_core(enc_mode, *args)" />
        <scope ilk="function" line="1733" lineend="1735" name="tk_call" signature="tk_call(*args)" />
        <scope ilk="function" line="1737" lineend="1739" name="tk_call_without_enc" signature="tk_call_without_enc(*args)" />
        <scope ilk="function" line="1741" lineend="1743" name="tk_call_with_enc" signature="tk_call_with_enc(*args)" />
        <scope ilk="function" line="1745" lineend="1753" name="_tk_call_to_list_core" signature="_tk_call_to_list_core(depth, arg_enc, val_enc, *args)" />
        <scope doc="private :_tk_call_to_list_core" ilk="function" line="1756" lineend="1758" name="tk_call_to_list" signature="tk_call_to_list(*args)" />
        <scope ilk="function" line="1760" lineend="1762" name="tk_call_to_list_without_enc" signature="tk_call_to_list_without_enc(*args)" />
        <scope ilk="function" line="1764" lineend="1766" name="tk_call_to_list_with_enc" signature="tk_call_to_list_with_enc(*args)" />
        <scope ilk="function" line="1768" lineend="1770" name="tk_call_to_simplelist" signature="tk_call_to_simplelist(*args)" />
        <scope ilk="function" line="1772" lineend="1774" name="tk_call_to_simplelist_without_enc" signature="tk_call_to_simplelist_without_enc(*args)" />
        <scope ilk="function" line="1776" lineend="1778" name="tk_call_to_simplelist_with_enc" signature="tk_call_to_simplelist_with_enc(*args)" />
      </scope>
      <scope ilk="namespace" line="1782" lineend="2160" name="Tk">
        <scope attributes="__classmethod__" ilk="function" line="1803" lineend="1871" name="const_missing" signature="Tk.const_missing(sym)" />
        <scope attributes="__classmethod__" ilk="function" line="1873" lineend="1876" name="errorInfo" signature="Tk.errorInfo" />
        <scope attributes="__classmethod__" ilk="function" line="1878" lineend="1890" name="errorCode" signature="Tk.errorCode" />
        <scope attributes="__classmethod__" ilk="function" line="1892" lineend="1894" name="has_mainwindow?" signature="Tk.has_mainwindow?" />
        <scope ilk="function" line="1896" lineend="1898" name="root" signature="root" />
        <scope attributes="__classmethod__" ilk="function" line="1900" lineend="1907" name="load_tclscript" signature="Tk.load_tclscript(file, enc=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="1909" lineend="1911" name="load_tcllibrary" signature="Tk.load_tcllibrary(file, pkg_name=None, interp=None)" />
        <scope attributes="__classmethod__" ilk="function" line="1913" lineend="1922" name="unload_tcllibrary" signature="Tk.unload_tcllibrary(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="1924" lineend="1941" name="pkgconfig_list" signature="Tk.pkgconfig_list(mod)" />
        <scope attributes="__classmethod__" ilk="function" line="1943" lineend="1958" name="pkgconfig_get" signature="Tk.pkgconfig_get(mod, key)" />
        <scope attributes="__classmethod__" ilk="function" line="1960" lineend="1963" name="tcl_pkgconfig_list" signature="Tk.tcl_pkgconfig_list" />
        <scope attributes="__classmethod__" ilk="function" line="1965" lineend="1968" name="tcl_pkgconfig_get" signature="Tk.tcl_pkgconfig_get(key)" />
        <scope attributes="__classmethod__" ilk="function" line="1970" lineend="1973" name="tk_pkgconfig_list" signature="Tk.tk_pkgconfig_list" />
        <scope attributes="__classmethod__" ilk="function" line="1975" lineend="1978" name="tk_pkgconfig_get" signature="Tk.tk_pkgconfig_get(key)" />
        <scope attributes="__classmethod__" ilk="function" line="1980" lineend="1987" name="bell" signature="Tk.bell(nice = false)" />
        <scope attributes="__classmethod__" ilk="function" line="1989" lineend="1996" name="bell_on_display" signature="Tk.bell_on_display(win, nice = false)" />
        <scope attributes="__classmethod__" ilk="function" line="1998" lineend="2007" name="destroy" signature="Tk.destroy(*wins)" />
        <scope attributes="__classmethod__" ilk="function" line="2009" lineend="2011" name="exit" signature="Tk.exit" />
        <scope attributes="__classmethod__" ilk="function" line="2013" lineend="2015" name="pack" signature="Tk.pack(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2016" lineend="2018" name="pack_forget" signature="Tk.pack_forget(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2019" lineend="2021" name="unpack" signature="Tk.unpack(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2023" lineend="2025" name="grid" signature="Tk.grid(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2026" lineend="2028" name="grid_forget" signature="Tk.grid_forget(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2029" lineend="2031" name="ungrid" signature="Tk.ungrid(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2033" lineend="2035" name="place" signature="Tk.place(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2036" lineend="2038" name="place_forget" signature="Tk.place_forget(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2039" lineend="2041" name="unplace" signature="Tk.unplace(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2043" lineend="2049" name="update" signature="Tk.update(idle=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2050" lineend="2052" name="update_idletasks" signature="Tk.update_idletasks" />
        <scope ilk="function" line="2053" lineend="2057" name="update" signature="update(idle=nil)" />
        <scope attributes="__classmethod__" doc="NOTE:: If no eventloop-thread is running, &quot;thread_update&quot;&#xA;method is same to &quot;update&quot; method." ilk="function" line="2063" lineend="2069" name="thread_update" signature="Tk.thread_update(idle=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2070" lineend="2072" name="thread_update_idletasks" signature="Tk.thread_update_idletasks" />
        <scope attributes="__classmethod__" ilk="function" line="2074" lineend="2077" name="lower_window" signature="Tk.lower_window(win, below=None)" />
        <scope attributes="__classmethod__" ilk="function" line="2078" lineend="2081" name="raise_window" signature="Tk.raise_window(win, above=None)" />
        <scope attributes="__classmethod__" ilk="function" line="2083" lineend="2089" name="current_grabs" signature="Tk.current_grabs(win = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2091" lineend="2097" name="focus" signature="Tk.focus(display=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2099" lineend="2105" name="focus_to" signature="Tk.focus_to(win, force=false)" />
        <scope attributes="__classmethod__" ilk="function" line="2107" lineend="2109" name="focus_lastfor" signature="Tk.focus_lastfor(win)" />
        <scope attributes="__classmethod__" ilk="function" line="2111" lineend="2113" name="focus_next" signature="Tk.focus_next(win)" />
        <scope attributes="__classmethod__" ilk="function" line="2115" lineend="2117" name="focus_prev" signature="Tk.focus_prev(win)" />
        <scope attributes="__classmethod__" ilk="function" line="2119" lineend="2121" name="strictMotif" signature="Tk.strictMotif(mode=None)" />
        <scope attributes="__classmethod__" ilk="function" line="2123" lineend="2130" name="show_kinsoku" signature="Tk.show_kinsoku(mode=&apos;both&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2131" lineend="2142" name="add_kinsoku" signature="Tk.add_kinsoku(chars, mode=&apos;both&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2143" lineend="2151" name="delete_kinsoku" signature="Tk.delete_kinsoku(chars, mode=&apos;both&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2153" lineend="2155" name="toUTF8" signature="Tk.toUTF8(str, encoding = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2157" lineend="2159" name="fromUTF8" signature="Tk.fromUTF8(str, encoding = nil)" />
      </scope>
      <scope doc="string with Tcl&apos;s encoding" ilk="namespace" line="2165" lineend="2181" name="Tk">
        <scope attributes="__classmethod__" ilk="function" line="2166" lineend="2168" name="subst_utf_backslash" signature="Tk.subst_utf_backslash(str)" />
        <scope attributes="__classmethod__" ilk="function" line="2169" lineend="2171" name="subst_tk_backslash" signature="Tk.subst_tk_backslash(str)" />
        <scope attributes="__classmethod__" ilk="function" line="2172" lineend="2174" name="utf_to_backslash_sequence" signature="Tk.utf_to_backslash_sequence(str)" />
        <scope attributes="__classmethod__" ilk="function" line="2175" lineend="2177" name="utf_to_backslash" signature="Tk.utf_to_backslash(str)" />
        <scope attributes="__classmethod__" ilk="function" line="2178" lineend="2180" name="to_backslash_sequence" signature="Tk.to_backslash_sequence(str)" />
      </scope>
      <scope classrefs="Object" doc="convert kanji string to/from utf-8" ilk="class" line="2188" lineend="2310" name="TclTkIp">
        <scope ilk="function" line="2190" lineend="2190" name="encoding" />
        <scope ilk="function" line="2190" lineend="2190" name="encoding=" />
        <scope doc="from tkencoding.rb by ttate@jaist.ac.jp" ilk="function" line="2247" lineend="2249" name="_eval" signature="_eval(cmd)" />
        <scope ilk="function" line="2251" lineend="2253" name="_invoke" signature="_invoke(*cmds)" />
      </scope>
      <scope ilk="namespace" line="2312" lineend="2323" name="TclTkLib">
        <scope classrefs="Object" ilk="class" line="2313" lineend="2322" name="self">
          <scope ilk="function" line="2316" lineend="2318" name="encoding=" signature="encoding=(name)" />
          <scope ilk="function" line="2319" lineend="2321" name="encoding" signature="encoding" />
        </scope>
      </scope>
      <scope ilk="namespace" line="2325" lineend="2375" name="Tk">
        <scope ilk="namespace" line="2326" lineend="2372" name="Encoding">
          <scope ilk="function" line="2331" lineend="2333" name="encoding=" signature="encoding=(name)" />
          <scope ilk="function" line="2335" lineend="2337" name="encoding" signature="encoding" />
          <scope ilk="function" line="2339" lineend="2341" name="encoding_names" signature="encoding_names" />
          <scope ilk="function" line="2343" lineend="2345" name="encoding_system" signature="encoding_system" />
          <scope ilk="function" line="2347" lineend="2349" name="encoding_system=" signature="encoding_system=(enc)" />
          <scope ilk="function" line="2351" lineend="2359" name="encoding_convertfrom" signature="encoding_convertfrom(str, enc=nil)" />
          <scope ilk="function" line="2362" lineend="2370" name="encoding_convertto" signature="encoding_convertto(str, enc=nil)" />
        </scope>
      </scope>
      <scope classrefs="Object" doc="dummy methods" ilk="class" line="2411" lineend="2419" name="TclTkIp">
        <scope ilk="function" line="2412" lineend="2412" name="encoding" />
        <scope ilk="function" line="2412" lineend="2412" name="encoding=" />
      </scope>
      <scope ilk="namespace" line="2421" lineend="2453" name="Tk">
        <scope ilk="namespace" line="2422" lineend="2450" name="Encoding">
          <scope ilk="function" line="2425" lineend="2427" name="encoding=" signature="encoding=(name)" />
          <scope ilk="function" line="2428" lineend="2430" name="encoding" signature="encoding" />
          <scope ilk="function" line="2431" lineend="2433" name="encoding_names" signature="encoding_names" />
          <scope ilk="function" line="2434" lineend="2436" name="encoding_system" signature="encoding_system" />
          <scope ilk="function" line="2437" lineend="2439" name="encoding_system=" signature="encoding_system=(enc)" />
          <scope ilk="function" line="2441" lineend="2443" name="encoding_convertfrom" signature="encoding_convertfrom(str, enc=None)" />
          <scope ilk="function" line="2446" lineend="2448" name="encoding_convertto" signature="encoding_convertto(str, enc=None)" />
        </scope>
      </scope>
      <scope ilk="namespace" line="2457" lineend="2491" name="TkBindCore">
        <scope doc="def bind(context, cmd=Proc.new, *args) Tk.bind(self,&#xA;context, cmd, *args) end" ilk="function" line="2461" lineend="2469" name="bind" signature="bind(context, *args)" />
        <scope doc="def bind_append(context, cmd=Proc.new, *args)&#xA;Tk.bind_append(self, context, cmd, *args) end" ilk="function" line="2474" lineend="2482" name="bind_append" signature="bind_append(context, *args)" />
        <scope ilk="function" line="2484" lineend="2486" name="bind_remove" signature="bind_remove(context)" />
        <scope ilk="function" line="2488" lineend="2490" name="bindinfo" signature="bindinfo(context=nil)" />
      </scope>
      <scope ilk="namespace" line="2494" lineend="2776" name="TkTreatFont">
        <scope ilk="function" line="2495" lineend="2497" name="__font_optkeys" signature="__font_optkeys" />
        <scope ilk="function" line="2500" lineend="2502" name="__pathname" signature="__pathname" />
        <scope ilk="function" line="2507" lineend="2534" name="font_configinfo" signature="font_configinfo(key = nil)" />
        <scope ilk="function" line="2537" lineend="2600" name="font_configure" signature="font_configure(slot)" />
        <scope ilk="function" line="2602" lineend="2651" name="latinfont_configure" signature="latinfont_configure(ltn, keys=nil)" />
        <scope ilk="function" line="2654" lineend="2703" name="kanjifont_configure" signature="kanjifont_configure(knj, keys=nil)" />
        <scope ilk="function" line="2705" lineend="2726" name="font_copy" signature="font_copy(win, wintag=nil, winkey=nil, targetkey=nil)" />
        <scope ilk="function" line="2728" lineend="2750" name="latinfont_copy" signature="latinfont_copy(win, wintag=nil, winkey=nil, targetkey=nil)" />
        <scope ilk="function" line="2753" lineend="2775" name="kanjifont_copy" signature="kanjifont_copy(win, wintag=nil, winkey=nil, targetkey=nil)" />
      </scope>
      <scope ilk="namespace" line="2779" lineend="3819" name="TkConfigMethod">
        <scope ilk="function" line="2783" lineend="2785" name="__cget_cmd" signature="__cget_cmd" />
        <scope ilk="function" line="2788" lineend="2790" name="__config_cmd" signature="__config_cmd" />
        <scope ilk="function" line="2793" lineend="2795" name="__confinfo_cmd" signature="__confinfo_cmd" />
        <scope ilk="function" line="2798" lineend="2801" name="__configinfo_struct" signature="__configinfo_struct" />
        <scope ilk="function" line="2804" lineend="2806" name="__numval_optkeys" signature="__numval_optkeys" />
        <scope ilk="function" line="2809" lineend="2811" name="__numstrval_optkeys" signature="__numstrval_optkeys" />
        <scope ilk="function" line="2814" lineend="2816" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="2819" lineend="2827" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="2830" lineend="2832" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="2835" lineend="2837" name="__numlistval_optkeys" signature="__numlistval_optkeys" />
        <scope ilk="function" line="2840" lineend="2842" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="2845" lineend="2849" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
        <scope ilk="function" line="2852" lineend="2857" name="__ruby2val_optkeys" signature="__ruby2val_optkeys" />
        <scope ilk="function" line="2860" lineend="2864" name="__methodcall_optkeys" signature="__methodcall_optkeys" />
        <scope ilk="function" line="2867" lineend="2869" name="__keyonly_optkeys" signature="__keyonly_optkeys" />
        <scope ilk="function" line="2872" lineend="2892" name="__conv_keyonly_opts" signature="__conv_keyonly_opts(keys)" />
        <scope ilk="function" line="2894" lineend="2896" name="config_hash_kv" signature="config_hash_kv(keys, enc_mode = nil, conf = nil)" />
        <scope ilk="function" line="2900" lineend="2902" name="[]" signature="[](id" />
        <scope ilk="function" line="2904" lineend="2907" name="[]=" signature="[]=(id" />
        <scope ilk="function" line="2909" lineend="2984" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="2986" lineend="3048" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="3050" lineend="3052" name="configure_cmd" signature="configure_cmd(slot, value)" />
        <scope ilk="function" line="3054" lineend="3785" name="configinfo" signature="configinfo(slot = nil)" />
        <scope ilk="function" line="3787" lineend="3818" name="current_configinfo" signature="current_configinfo(slot = nil)" />
      </scope>
      <scope classrefs="TkKernel" ilk="class" line="3821" lineend="3932" name="TkObject">
        <scope doc="--&gt; definition is moved to TkUtil module def path @path end" ilk="function" line="3832" lineend="3834" name="epath" signature="epath" />
        <scope ilk="function" line="3836" lineend="3838" name="to_eval" signature="to_eval" />
        <scope ilk="function" line="3840" lineend="3842" name="tk_send" signature="tk_send(cmd, *rest)" />
        <scope ilk="function" line="3843" lineend="3845" name="tk_send_without_enc" signature="tk_send_without_enc(cmd, *rest)" />
        <scope ilk="function" line="3846" lineend="3848" name="tk_send_with_enc" signature="tk_send_with_enc(cmd, *rest)" />
        <scope doc="private :tk_send, :tk_send_without_enc, :tk_send_with_enc" ilk="function" line="3851" lineend="3853" name="tk_send_to_list" signature="tk_send_to_list(cmd, *rest)" />
        <scope ilk="function" line="3854" lineend="3856" name="tk_send_to_list_without_enc" signature="tk_send_to_list_without_enc(cmd, *rest)" />
        <scope ilk="function" line="3857" lineend="3859" name="tk_send_to_list_with_enc" signature="tk_send_to_list_with_enc(cmd, *rest)" />
        <scope ilk="function" line="3860" lineend="3862" name="tk_send_to_simplelist" signature="tk_send_to_simplelist(cmd, *rest)" />
        <scope ilk="function" line="3863" lineend="3865" name="tk_send_to_simplelist_without_enc" signature="tk_send_to_simplelist_without_enc(cmd, *rest)" />
        <scope ilk="function" line="3866" lineend="3868" name="tk_send_to_simplelist_with_enc" signature="tk_send_to_simplelist_with_enc(cmd, *rest)" />
        <scope ilk="function" line="3870" lineend="3892" name="method_missing" signature="method_missing(id, *args)" />
        <scope ilk="function" line="3905" lineend="3919" name="event_generate" signature="event_generate(context, keys=nil)" />
        <scope ilk="function" line="3921" lineend="3926" name="tk_trace_variable" signature="tk_trace_variable(v)" />
        <scope ilk="function" line="3929" lineend="3931" name="destroy" signature="destroy" />
        <import symbol="Tk" />
        <import symbol="TkConfigMethod" />
        <import symbol="TkBindCore" />
      </scope>
      <scope classrefs="TkObject" ilk="class" line="3935" lineend="4548" name="TkWindow">
        <scope attributes="__classmethod__" doc="WidgetClassNames[WidgetClassName] = self ==&gt; If self is a&#xA;widget class, entry to the WidgetClassNames table." ilk="function" line="3945" lineend="3947" name="to_eval" signature="self.to_eval" />
        <scope attributes="__ctor__" ilk="function" line="3949" lineend="4021" name="initialize" signature="initialize(parent=nil, keys=nil)" />
        <scope ilk="function" line="4023" lineend="4037" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="4040" lineend="4042" name="exist?" signature="exist?" />
        <scope ilk="function" line="4044" lineend="4046" name="bind_class" signature="bind_class" />
        <scope ilk="function" line="4048" lineend="4050" name="database_classname" signature="database_classname" />
        <scope ilk="function" line="4051" lineend="4058" name="database_class" signature="database_class" />
        <scope attributes="__classmethod__" ilk="function" line="4059" lineend="4061" name="database_classname" signature="self.database_classname" />
        <scope attributes="__classmethod__" ilk="function" line="4062" lineend="4064" name="database_class" signature="self.database_class" />
        <scope ilk="function" line="4066" lineend="4074" name="pack" signature="pack(keys = nil)" />
        <scope ilk="function" line="4076" lineend="4086" name="pack_in" signature="pack_in(target, keys = nil)" />
        <scope ilk="function" line="4088" lineend="4092" name="pack_forget" signature="pack_forget" />
        <scope ilk="function" line="4095" lineend="4106" name="pack_config" signature="pack_config(slot, value=None)" />
        <scope ilk="function" line="4109" lineend="4117" name="pack_info" signature="pack_info()" />
        <scope ilk="function" line="4119" lineend="4132" name="pack_propagate" signature="pack_propagate(mode=None)" />
        <scope ilk="function" line="4134" lineend="4137" name="pack_slaves" signature="pack_slaves()" />
        <scope ilk="function" line="4139" lineend="4147" name="grid" signature="grid(keys = nil)" />
        <scope ilk="function" line="4149" lineend="4159" name="grid_in" signature="grid_in(target, keys = nil)" />
        <scope ilk="function" line="4161" lineend="4165" name="grid_forget" signature="grid_forget" />
        <scope ilk="function" line="4168" lineend="4171" name="grid_bbox" signature="grid_bbox(*args)" />
        <scope ilk="function" line="4173" lineend="4184" name="grid_config" signature="grid_config(slot, value=None)" />
        <scope ilk="function" line="4187" lineend="4190" name="grid_columnconfig" signature="grid_columnconfig(index, keys)" />
        <scope ilk="function" line="4193" lineend="4196" name="grid_rowconfig" signature="grid_rowconfig(index, keys)" />
        <scope ilk="function" line="4199" lineend="4211" name="grid_columnconfiginfo" signature="grid_columnconfiginfo(index, slot=nil)" />
        <scope ilk="function" line="4213" lineend="4225" name="grid_rowconfiginfo" signature="grid_rowconfiginfo(index, slot=nil)" />
        <scope ilk="function" line="4227" lineend="4230" name="grid_info" signature="grid_info()" />
        <scope ilk="function" line="4232" lineend="4235" name="grid_location" signature="grid_location(x, y)" />
        <scope ilk="function" line="4237" lineend="4250" name="grid_propagate" signature="grid_propagate(mode=None)" />
        <scope ilk="function" line="4252" lineend="4256" name="grid_remove" signature="grid_remove()" />
        <scope ilk="function" line="4258" lineend="4261" name="grid_size" signature="grid_size()" />
        <scope ilk="function" line="4263" lineend="4266" name="grid_slaves" signature="grid_slaves(args)" />
        <scope ilk="function" line="4268" lineend="4272" name="place" signature="place(keys)" />
        <scope ilk="function" line="4274" lineend="4284" name="place_in" signature="place_in(target, keys = nil)" />
        <scope ilk="function" line="4286" lineend="4290" name="place_forget" signature="place_forget" />
        <scope ilk="function" line="4293" lineend="4300" name="place_config" signature="place_config(slot, value=None)" />
        <scope ilk="function" line="4303" lineend="4318" name="place_configinfo" signature="place_configinfo(slot = nil)" />
        <scope ilk="function" line="4320" lineend="4328" name="place_info" signature="place_info()" />
        <scope ilk="function" line="4330" lineend="4333" name="place_slaves" signature="place_slaves()" />
        <scope ilk="function" line="4335" lineend="4342" name="set_focus" signature="set_focus(force=false)" />
        <scope ilk="function" line="4345" lineend="4370" name="grab" signature="grab(opt = nil)" />
        <scope ilk="function" line="4372" lineend="4374" name="grab_current" signature="grab_current" />
        <scope ilk="function" line="4376" lineend="4378" name="grab_release" signature="grab_release" />
        <scope ilk="function" line="4380" lineend="4382" name="grab_set" signature="grab_set" />
        <scope ilk="function" line="4384" lineend="4386" name="grab_set_global" signature="grab_set_global" />
        <scope ilk="function" line="4388" lineend="4390" name="grab_status" signature="grab_status" />
        <scope ilk="function" line="4392" lineend="4397" name="lower" signature="lower(below=None)" />
        <scope ilk="function" line="4399" lineend="4404" name="raise" signature="raise(above=None)" />
        <scope ilk="function" line="4407" lineend="4415" name="command" signature="command(cmd=nil, &amp;b)" />
        <scope ilk="function" line="4417" lineend="4420" name="colormodel" signature="colormodel(model=None)" />
        <scope ilk="function" line="4422" lineend="4424" name="caret" signature="caret(keys=nil)" />
        <scope ilk="function" line="4426" lineend="4453" name="destroy" signature="destroy" />
        <scope ilk="function" line="4455" lineend="4465" name="wait_visibility" signature="wait_visibility(on_thread = true)" />
        <scope ilk="function" line="4466" lineend="4468" name="eventloop_wait_visibility" signature="eventloop_wait_visibility" />
        <scope ilk="function" line="4469" lineend="4471" name="thread_wait_visibility" signature="thread_wait_visibility" />
        <scope ilk="function" line="4481" lineend="4491" name="wait_destroy" signature="wait_destroy(on_thread = true)" />
        <scope ilk="function" line="4493" lineend="4495" name="eventloop_wait_destroy" signature="eventloop_wait_destroy" />
        <scope ilk="function" line="4497" lineend="4499" name="thread_wait_destroy" signature="thread_wait_destroy" />
        <scope ilk="function" line="4511" lineend="4531" name="bindtags" signature="bindtags(taglist=nil)" />
        <scope ilk="function" line="4533" lineend="4536" name="bindtags=" signature="bindtags=(taglist)" />
        <scope ilk="function" line="4538" lineend="4543" name="bindtags_shift" signature="bindtags_shift" />
        <scope ilk="function" line="4545" lineend="4547" name="bindtags_unshift" signature="bindtags_unshift(tag)" />
        <import symbol="TkWinfo" />
      </scope>
      <scope doc="freeze core modules TclTkLib.freeze TclTkIp.freeze&#xA;TkUtil.freeze TkKernel.freeze" ilk="namespace" line="4561" lineend="4570" name="Tk" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/xim">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/xim.rb : control imput_method" ilk="namespace" line="6" lineend="122" name="TkXIM">
        <scope attributes="__classmethod__" ilk="function" line="12" lineend="28" name="useinputmethods" signature="TkXIM.useinputmethods(value = None, win = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="30" lineend="32" name="useinputmethods_displayof" signature="TkXIM.useinputmethods_displayof(win, value = None)" />
        <scope attributes="__classmethod__" ilk="function" line="34" lineend="46" name="caret" signature="TkXIM.caret(win, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="48" lineend="59" name="configure" signature="TkXIM.configure(win, slot, value=None)" />
        <scope attributes="__classmethod__" ilk="function" line="61" lineend="84" name="configinfo" signature="TkXIM.configinfo(win, slot=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="86" lineend="105" name="current_configinfo" signature="TkXIM.current_configinfo(win, slot=nil)" />
        <scope ilk="function" line="107" lineend="109" name="useinputmethods" signature="useinputmethods(value=None)" />
        <scope ilk="function" line="111" lineend="113" name="caret" signature="caret(keys=nil)" />
        <scope ilk="function" line="115" lineend="117" name="imconfigure" signature="imconfigure(slot, value=None)" />
        <scope ilk="function" line="119" lineend="121" name="imconfiginfo" signature="imconfiginfo(slot=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/wm">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/wm.rb : methods for wm command" ilk="namespace" line="6" lineend="360" name="Tk">
        <scope ilk="namespace" line="7" lineend="359" name="Wm">
          <scope ilk="function" line="14" lineend="22" name="aspect" signature="aspect(*args)" />
          <scope ilk="function" line="25" lineend="42" name="attributes" signature="attributes(slot=nil,value=None)" />
          <scope ilk="function" line="45" lineend="53" name="client" signature="client(name=None)" />
          <scope ilk="function" line="56" lineend="64" name="colormapwindows" signature="colormapwindows(*args)" />
          <scope ilk="function" line="67" lineend="75" name="wm_command" signature="wm_command(value=nil)" />
          <scope ilk="function" line="78" lineend="85" name="deiconify" signature="deiconify(ex = true)" />
          <scope ilk="function" line="87" lineend="94" name="focusmodel" signature="focusmodel(mode = nil)" />
          <scope ilk="function" line="97" lineend="99" name="frame" signature="frame" />
          <scope ilk="function" line="101" lineend="108" name="geometry" signature="geometry(geom=nil)" />
          <scope ilk="function" line="111" lineend="119" name="wm_grid" signature="wm_grid(*args)" />
          <scope ilk="function" line="122" lineend="129" name="group" signature="group(leader = nil)" />
          <scope ilk="function" line="132" lineend="139" name="iconbitmap" signature="iconbitmap(bmp=nil)" />
          <scope ilk="function" line="142" lineend="152" name="iconphoto" signature="iconphoto(*imgs)" />
          <scope ilk="function" line="155" lineend="159" name="iconphoto_default" signature="iconphoto_default(*imgs)" />
          <scope ilk="function" line="161" lineend="168" name="iconify" signature="iconify(ex = true)" />
          <scope ilk="function" line="170" lineend="177" name="iconmask" signature="iconmask(bmp=nil)" />
          <scope ilk="function" line="180" lineend="187" name="iconname" signature="iconname(name=nil)" />
          <scope ilk="function" line="190" lineend="198" name="iconposition" signature="iconposition(*args)" />
          <scope ilk="function" line="201" lineend="209" name="iconwindow" signature="iconwindow(win = nil)" />
          <scope ilk="function" line="212" lineend="220" name="maxsize" signature="maxsize(*args)" />
          <scope ilk="function" line="223" lineend="231" name="minsize" signature="minsize(*args)" />
          <scope ilk="function" line="234" lineend="241" name="overrideredirect" signature="overrideredirect(mode=None)" />
          <scope ilk="function" line="244" lineend="252" name="positionfrom" signature="positionfrom(who=None)" />
          <scope ilk="function" line="255" lineend="268" name="protocol" signature="protocol(name=nil, cmd=nil, &amp;b)" />
          <scope ilk="function" line="270" lineend="284" name="protocols" signature="protocols(kv=nil)" />
          <scope ilk="function" line="287" lineend="295" name="resizable" signature="resizable(*args)" />
          <scope ilk="function" line="298" lineend="306" name="sizefrom" signature="sizefrom(who=None)" />
          <scope ilk="function" line="309" lineend="311" name="stackorder" signature="stackorder" />
          <scope ilk="function" line="313" lineend="315" name="stackorder_isabove" signature="stackorder_isabove(win)" />
          <scope ilk="function" line="317" lineend="319" name="stackorder_isbelow" signature="stackorder_isbelow(win)" />
          <scope ilk="function" line="321" lineend="328" name="state" signature="state(st=nil)" />
          <scope ilk="function" line="331" lineend="338" name="title" signature="title(str=nil)" />
          <scope ilk="function" line="341" lineend="348" name="transient" signature="transient(master=nil)" />
          <scope ilk="function" line="351" lineend="358" name="withdraw" signature="withdraw(ex = true)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/winpkg">
      <import line="8" module="tk" symbol="*" />
      <scope doc="tk/winpkg.rb : methods for Tcl/Tk packages for Microsoft&#xA;Windows 2000/11/22 by Hidetoshi Nagai&#xA;&lt;nagai@ai.kyutech.ac.jp&gt;" ilk="namespace" line="10" lineend="86" name="TkWinDDE">
        <scope attributes="__classmethod__" ilk="function" line="17" lineend="19" name="package_name" signature="self.package_name" />
        <scope doc="def servername(topic=None) tk_call(&apos;dde&apos;, &apos;servername&apos;,&#xA;topic) end" ilk="function" line="30" lineend="50" name="servername" signature="servername(*args)" />
        <scope ilk="function" line="52" lineend="54" name="execute" signature="execute(service, topic, data)" />
        <scope ilk="function" line="56" lineend="58" name="async_execute" signature="async_execute(service, topic, data)" />
        <scope ilk="function" line="60" lineend="62" name="poke" signature="poke(service, topic, item, data)" />
        <scope ilk="function" line="64" lineend="66" name="request" signature="request(service, topic, item)" />
        <scope ilk="function" line="68" lineend="70" name="binary_request" signature="binary_request(service, topic, item)" />
        <scope ilk="function" line="72" lineend="74" name="services" signature="services(service, topic)" />
        <scope ilk="function" line="76" lineend="78" name="eval" signature="eval(topic, cmd, *args)" />
        <scope ilk="function" line="80" lineend="82" name="async_eval" signature="async_eval(topic, cmd, *args)" />
      </scope>
      <scope ilk="namespace" line="88" lineend="143" name="TkWinRegistry">
        <scope ilk="function" line="100" lineend="106" name="broadcast" signature="broadcast(keynam, timeout=nil)" />
        <scope ilk="function" line="108" lineend="110" name="delete" signature="delete(keynam, valnam=None)" />
        <scope ilk="function" line="112" lineend="114" name="get" signature="get(keynam, valnam)" />
        <scope ilk="function" line="116" lineend="123" name="keys" signature="keys(keynam, pattern=nil)" />
        <scope ilk="function" line="125" lineend="127" name="set" signature="set(keynam, valnam=None, data=None, dattype=None)" />
        <scope ilk="function" line="129" lineend="131" name="type" signature="type(keynam, valnam)" />
        <scope ilk="function" line="133" lineend="140" name="values" signature="values(keynam, pattern=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/winfo">
      <import line="7" module="tk" symbol="*" />
      <scope doc="tk/winfo.rb : methods for winfo command" ilk="namespace" line="4" lineend="5" name="TkWinfo" />
      <scope ilk="namespace" line="9" lineend="392" name="TkWinfo">
        <scope attributes="__classmethod__" ilk="function" line="15" lineend="22" name="atom" signature="TkWinfo.atom(name, win=nil)" />
        <scope ilk="function" line="23" lineend="25" name="winfo_atom" signature="winfo_atom(name)" />
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="34" name="atomname" signature="TkWinfo.atomname(id, win=nil)" />
        <scope ilk="function" line="35" lineend="37" name="winfo_atomname" signature="winfo_atomname(id)" />
        <scope attributes="__classmethod__" ilk="function" line="39" lineend="41" name="cells" signature="TkWinfo.cells(win)" />
        <scope ilk="function" line="42" lineend="44" name="winfo_cells" signature="winfo_cells" />
        <scope attributes="__classmethod__" ilk="function" line="46" lineend="48" name="children" signature="TkWinfo.children(win)" />
        <scope ilk="function" line="49" lineend="51" name="winfo_children" signature="winfo_children" />
        <scope attributes="__classmethod__" ilk="function" line="53" lineend="55" name="classname" signature="TkWinfo.classname(win)" />
        <scope ilk="function" line="56" lineend="58" name="winfo_classname" signature="winfo_classname" />
        <scope attributes="__classmethod__" ilk="function" line="61" lineend="63" name="colormapfull" signature="TkWinfo.colormapfull(win)" />
        <scope ilk="function" line="64" lineend="66" name="winfo_colormapfull" signature="winfo_colormapfull" />
        <scope attributes="__classmethod__" ilk="function" line="68" lineend="75" name="containing" signature="TkWinfo.containing(rootX, rootY, win=nil)" />
        <scope ilk="function" line="76" lineend="78" name="winfo_containing" signature="winfo_containing(x, y)" />
        <scope attributes="__classmethod__" ilk="function" line="80" lineend="82" name="depth" signature="TkWinfo.depth(win)" />
        <scope ilk="function" line="83" lineend="85" name="winfo_depth" signature="winfo_depth" />
        <scope attributes="__classmethod__" ilk="function" line="87" lineend="89" name="exist?" signature="TkWinfo.exist?(win)" />
        <scope ilk="function" line="90" lineend="92" name="winfo_exist?" signature="winfo_exist?" />
        <scope attributes="__classmethod__" ilk="function" line="94" lineend="96" name="fpixels" signature="TkWinfo.fpixels(win, dist)" />
        <scope ilk="function" line="97" lineend="99" name="winfo_fpixels" signature="winfo_fpixels(dist)" />
        <scope attributes="__classmethod__" ilk="function" line="101" lineend="103" name="geometry" signature="TkWinfo.geometry(win)" />
        <scope ilk="function" line="104" lineend="106" name="winfo_geometry" signature="winfo_geometry" />
        <scope attributes="__classmethod__" ilk="function" line="108" lineend="110" name="height" signature="TkWinfo.height(win)" />
        <scope ilk="function" line="111" lineend="113" name="winfo_height" signature="winfo_height" />
        <scope attributes="__classmethod__" ilk="function" line="115" lineend="117" name="id" signature="TkWinfo.id(win)" />
        <scope ilk="function" line="118" lineend="120" name="winfo_id" signature="winfo_id" />
        <scope attributes="__classmethod__" ilk="function" line="122" lineend="134" name="interps" signature="TkWinfo.interps(win=nil)" />
        <scope ilk="function" line="135" lineend="137" name="winfo_interps" signature="winfo_interps" />
        <scope attributes="__classmethod__" ilk="function" line="139" lineend="141" name="mapped?" signature="TkWinfo.mapped?(win)" />
        <scope ilk="function" line="142" lineend="144" name="winfo_mapped?" signature="winfo_mapped?" />
        <scope attributes="__classmethod__" ilk="function" line="146" lineend="148" name="manager" signature="TkWinfo.manager(win)" />
        <scope ilk="function" line="149" lineend="151" name="winfo_manager" signature="winfo_manager" />
        <scope attributes="__classmethod__" ilk="function" line="153" lineend="155" name="appname" signature="TkWinfo.appname(win)" />
        <scope ilk="function" line="156" lineend="158" name="winfo_appname" signature="winfo_appname" />
        <scope attributes="__classmethod__" ilk="function" line="160" lineend="162" name="parent" signature="TkWinfo.parent(win)" />
        <scope ilk="function" line="163" lineend="165" name="winfo_parent" signature="winfo_parent" />
        <scope attributes="__classmethod__" ilk="function" line="167" lineend="173" name="widget" signature="TkWinfo.widget(id, win=nil)" />
        <scope ilk="function" line="174" lineend="176" name="winfo_widget" signature="winfo_widget(id)" />
        <scope attributes="__classmethod__" ilk="function" line="178" lineend="180" name="pixels" signature="TkWinfo.pixels(win, dist)" />
        <scope ilk="function" line="181" lineend="183" name="winfo_pixels" signature="winfo_pixels(dist)" />
        <scope attributes="__classmethod__" ilk="function" line="185" lineend="187" name="reqheight" signature="TkWinfo.reqheight(win)" />
        <scope ilk="function" line="188" lineend="190" name="winfo_reqheight" signature="winfo_reqheight" />
        <scope attributes="__classmethod__" ilk="function" line="192" lineend="194" name="reqwidth" signature="TkWinfo.reqwidth(win)" />
        <scope ilk="function" line="195" lineend="197" name="winfo_reqwidth" signature="winfo_reqwidth" />
        <scope attributes="__classmethod__" ilk="function" line="199" lineend="201" name="rgb" signature="TkWinfo.rgb(win, color)" />
        <scope ilk="function" line="202" lineend="204" name="winfo_rgb" signature="winfo_rgb(color)" />
        <scope attributes="__classmethod__" ilk="function" line="206" lineend="208" name="rootx" signature="TkWinfo.rootx(win)" />
        <scope ilk="function" line="209" lineend="211" name="winfo_rootx" signature="winfo_rootx" />
        <scope attributes="__classmethod__" ilk="function" line="213" lineend="215" name="rooty" signature="TkWinfo.rooty(win)" />
        <scope ilk="function" line="216" lineend="218" name="winfo_rooty" signature="winfo_rooty" />
        <scope attributes="__classmethod__" ilk="function" line="220" lineend="222" name="screen" signature="TkWinfo.screen(win)" />
        <scope ilk="function" line="223" lineend="225" name="winfo_screen" signature="winfo_screen" />
        <scope attributes="__classmethod__" ilk="function" line="227" lineend="229" name="screencells" signature="TkWinfo.screencells(win)" />
        <scope ilk="function" line="230" lineend="232" name="winfo_screencells" signature="winfo_screencells" />
        <scope attributes="__classmethod__" ilk="function" line="234" lineend="236" name="screendepth" signature="TkWinfo.screendepth(win)" />
        <scope ilk="function" line="237" lineend="239" name="winfo_screendepth" signature="winfo_screendepth" />
        <scope attributes="__classmethod__" ilk="function" line="241" lineend="243" name="screenheight" signature="TkWinfo.screenheight (win)" />
        <scope ilk="function" line="244" lineend="246" name="winfo_screenheight" signature="winfo_screenheight" />
        <scope attributes="__classmethod__" ilk="function" line="248" lineend="250" name="screenmmheight" signature="TkWinfo.screenmmheight(win)" />
        <scope ilk="function" line="251" lineend="253" name="winfo_screenmmheight" signature="winfo_screenmmheight" />
        <scope attributes="__classmethod__" ilk="function" line="255" lineend="257" name="screenmmwidth" signature="TkWinfo.screenmmwidth(win)" />
        <scope ilk="function" line="258" lineend="260" name="winfo_screenmmwidth" signature="winfo_screenmmwidth" />
        <scope attributes="__classmethod__" ilk="function" line="262" lineend="264" name="screenvisual" signature="TkWinfo.screenvisual(win)" />
        <scope ilk="function" line="265" lineend="267" name="winfo_screenvisual" signature="winfo_screenvisual" />
        <scope attributes="__classmethod__" ilk="function" line="269" lineend="271" name="screenwidth" signature="TkWinfo.screenwidth(win)" />
        <scope ilk="function" line="272" lineend="274" name="winfo_screenwidth" signature="winfo_screenwidth" />
        <scope attributes="__classmethod__" ilk="function" line="276" lineend="278" name="server" signature="TkWinfo.server(win)" />
        <scope ilk="function" line="279" lineend="281" name="winfo_server" signature="winfo_server" />
        <scope attributes="__classmethod__" ilk="function" line="283" lineend="285" name="toplevel" signature="TkWinfo.toplevel(win)" />
        <scope ilk="function" line="286" lineend="288" name="winfo_toplevel" signature="winfo_toplevel" />
        <scope attributes="__classmethod__" ilk="function" line="290" lineend="292" name="visual" signature="TkWinfo.visual(win)" />
        <scope ilk="function" line="293" lineend="295" name="winfo_visual" signature="winfo_visual" />
        <scope attributes="__classmethod__" ilk="function" line="297" lineend="299" name="visualid" signature="TkWinfo.visualid(win)" />
        <scope ilk="function" line="300" lineend="302" name="winfo_visualid" signature="winfo_visualid" />
        <scope attributes="__classmethod__" ilk="function" line="304" lineend="311" name="visualsavailable" signature="TkWinfo.visualsavailable(win, includeids=false)" />
        <scope ilk="function" line="312" lineend="314" name="winfo_visualsavailable" signature="winfo_visualsavailable(includeids=false)" />
        <scope attributes="__classmethod__" ilk="function" line="316" lineend="318" name="vrootheight" signature="TkWinfo.vrootheight(win)" />
        <scope ilk="function" line="319" lineend="321" name="winfo_vrootheight" signature="winfo_vrootheight" />
        <scope attributes="__classmethod__" ilk="function" line="323" lineend="325" name="vrootwidth" signature="TkWinfo.vrootwidth(win)" />
        <scope ilk="function" line="326" lineend="328" name="winfo_vrootwidth" signature="winfo_vrootwidth" />
        <scope attributes="__classmethod__" ilk="function" line="330" lineend="332" name="vrootx" signature="TkWinfo.vrootx(win)" />
        <scope ilk="function" line="333" lineend="335" name="winfo_vrootx" signature="winfo_vrootx" />
        <scope attributes="__classmethod__" ilk="function" line="337" lineend="339" name="vrooty" signature="TkWinfo.vrooty(win)" />
        <scope ilk="function" line="340" lineend="342" name="winfo_vrooty" signature="winfo_vrooty" />
        <scope attributes="__classmethod__" ilk="function" line="344" lineend="346" name="width" signature="TkWinfo.width(win)" />
        <scope ilk="function" line="347" lineend="349" name="winfo_width" signature="winfo_width" />
        <scope attributes="__classmethod__" ilk="function" line="351" lineend="353" name="x" signature="TkWinfo.x(win)" />
        <scope ilk="function" line="354" lineend="356" name="winfo_x" signature="winfo_x" />
        <scope attributes="__classmethod__" ilk="function" line="358" lineend="360" name="y" signature="TkWinfo.y(win)" />
        <scope ilk="function" line="361" lineend="363" name="winfo_y" signature="winfo_y" />
        <scope attributes="__classmethod__" ilk="function" line="365" lineend="367" name="viewable" signature="TkWinfo.viewable(win)" />
        <scope ilk="function" line="368" lineend="370" name="winfo_viewable" signature="winfo_viewable" />
        <scope attributes="__classmethod__" ilk="function" line="372" lineend="374" name="pointerx" signature="TkWinfo.pointerx(win)" />
        <scope ilk="function" line="375" lineend="377" name="winfo_pointerx" signature="winfo_pointerx" />
        <scope attributes="__classmethod__" ilk="function" line="379" lineend="381" name="pointery" signature="TkWinfo.pointery(win)" />
        <scope ilk="function" line="382" lineend="384" name="winfo_pointery" signature="winfo_pointery" />
        <scope attributes="__classmethod__" ilk="function" line="386" lineend="388" name="pointerxy" signature="TkWinfo.pointerxy(win)" />
        <scope ilk="function" line="389" lineend="391" name="winfo_pointerxy" signature="winfo_pointerxy" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/virtevent">
      <import line="5" module="tk" symbol="*" />
      <scope classrefs="TkObject" doc="tk/virtevent.rb : treats virtual events 1998/07/16 by&#xA;Hidetoshi Nagai &lt;nagai@ai.kyutech.ac.jp&gt;" ilk="class" line="7" lineend="104" name="TkVirtualEvent">
        <scope classrefs="self" ilk="class" line="17" lineend="36" name="PreDefVirtEvent">
          <scope attributes="__classmethod__" ilk="function" line="18" lineend="29" name="new" signature="self.new(event, *sequences)" />
          <scope attributes="__ctor__" ilk="function" line="31" lineend="35" name="initialize" signature="initialize(event, *sequences)" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="49" name="getobj" signature="TkVirtualEvent.getobj(event)" />
        <scope attributes="__classmethod__" ilk="function" line="51" lineend="55" name="info" signature="TkVirtualEvent.info" />
        <scope attributes="__ctor__" ilk="function" line="57" lineend="62" name="initialize" signature="initialize(*sequences)" />
        <scope ilk="function" line="64" lineend="73" name="add" signature="add(*sequences)" />
        <scope ilk="function" line="75" lineend="87" name="delete" signature="delete(*sequences)" />
        <scope ilk="function" line="89" lineend="103" name="info" signature="info" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/variable">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="Object" doc="tk/variable.rb : treat Tk variable object" ilk="class" line="6" lineend="444" name="TkVariable">
        <scope attributes="__classmethod__" doc="def TkVariable.callback(args)" ilk="function" line="44" lineend="89" name="callback" signature="TkVariable.callback(id, name1, name2, op)" />
        <scope attributes="__classmethod__" ilk="function" line="91" lineend="97" name="new_hash" signature="self.new_hash(val = {})" />
        <scope doc="default_value is available only when the variable is an&#xA;assoc array." ilk="function" line="102" lineend="111" name="default_value" signature="default_value(val=nil, &amp;b)" />
        <scope ilk="function" line="112" lineend="116" name="set_default_value" signature="set_default_value(val)" />
        <scope ilk="function" line="118" lineend="122" name="default_proc" signature="default_proc(cmd = Proc.new)" />
        <scope ilk="function" line="124" lineend="128" name="undef_default" signature="undef_default" />
        <scope ilk="function" line="130" lineend="132" name="default_value_type" signature="default_value_type" />
        <scope ilk="function" line="133" lineend="140" name="default_element_value_type" signature="default_element_value_type(idxs)" />
        <scope ilk="function" line="142" lineend="202" name="_set_default_value_type_core" signature="_set_default_value_type_core(type, idxs)" />
        <scope ilk="function" line="205" lineend="208" name="set_default_value_type" signature="set_default_value_type(type)" />
        <scope ilk="function" line="211" lineend="214" name="set_default_element_value_type" signature="set_default_element_value_type(idxs, type)" />
        <scope ilk="function" line="216" lineend="259" name="_to_default_type" signature="_to_default_type(val, idxs = nil)" />
        <scope ilk="function" line="262" lineend="264" name="_to_default_element_type" signature="_to_default_element_type(idxs, val)" />
        <scope attributes="__ctor__" ilk="function" line="267" lineend="341" name="initialize" signature="initialize(val=&quot;&quot;, type=nil)" />
        <scope ilk="function" line="343" lineend="361" name="wait" signature="wait(on_thread = false, check_root = false)" />
        <scope ilk="function" line="362" lineend="364" name="eventloop_wait" signature="eventloop_wait(check_root = false)" />
        <scope ilk="function" line="365" lineend="367" name="thread_wait" signature="thread_wait(check_root = false)" />
        <scope ilk="function" line="368" lineend="370" name="tkwait" signature="tkwait(on_thread = true)" />
        <scope ilk="function" line="371" lineend="373" name="eventloop_tkwait" signature="eventloop_tkwait" />
        <scope ilk="function" line="374" lineend="376" name="thread_tkwait" signature="thread_tkwait" />
        <scope ilk="function" line="378" lineend="380" name="id" signature="id" />
        <scope ilk="function" line="382" lineend="385" name="ref" signature="ref(*idxs)" />
        <scope ilk="function" line="387" lineend="392" name="is_hash?" signature="is_hash?" />
        <scope ilk="function" line="394" lineend="396" name="is_scalar?" signature="is_scalar?" />
        <scope ilk="function" line="398" lineend="408" name="exist?" signature="exist?(*elems)" />
        <scope ilk="function" line="410" lineend="419" name="keys" signature="keys" />
        <scope ilk="function" line="421" lineend="424" name="size" signature="size" />
        <scope ilk="function" line="426" lineend="432" name="clear" signature="clear" />
        <scope ilk="function" line="434" lineend="440" name="update" signature="update(hash)" />
        <import symbol="Tk" />
        <import symbol="Comparable" />
      </scope>
      <scope doc="use Tcl function version of set tkvariable" ilk="function" line="451" lineend="461" name="_value" signature="_value" />
      <scope ilk="function" line="463" lineend="492" name="value=" signature="value=(val)" />
      <scope ilk="function" line="494" lineend="511" name="_element_value" signature="_element_value(*idxs)" />
      <scope ilk="function" line="513" lineend="523" name="[]=" signature="[]=(*args" />
      <scope ilk="function" line="525" lineend="532" name="unset" signature="unset(*elems)" />
      <scope doc="use Ruby script version of set tkvariable (traditional&#xA;methods)" ilk="function" line="540" lineend="556" name="_value" signature="_value" />
      <scope ilk="function" line="558" lineend="607" name="value=" signature="value=(val)" />
      <scope ilk="function" line="609" lineend="628" name="_element_value" signature="_element_value(*idxs)" />
      <scope ilk="function" line="630" lineend="643" name="[]=" signature="[]=(*args" />
      <scope ilk="function" line="645" lineend="658" name="unset" signature="unset(*elems)" />
      <scope ilk="function" line="665" lineend="667" name="value" signature="value" />
      <scope ilk="function" line="669" lineend="671" name="[]" signature="[](*idxs" />
      <scope ilk="function" line="673" lineend="676" name="set_value" signature="set_value(val)" />
      <scope ilk="function" line="678" lineend="685" name="set_element_value" signature="set_element_value(idxs, val)" />
      <scope ilk="function" line="687" lineend="691" name="set_value_type" signature="set_value_type(val)" />
      <scope ilk="function" line="695" lineend="703" name="set_element_value_type" signature="set_element_value_type(idxs, val)" />
      <scope ilk="function" line="705" lineend="707" name="numeric" signature="numeric" />
      <scope ilk="function" line="708" lineend="710" name="numeric_element" signature="numeric_element(*idxs)" />
      <scope ilk="function" line="711" lineend="721" name="set_numeric" signature="set_numeric(val)" />
      <scope ilk="function" line="723" lineend="738" name="set_numeric_element" signature="set_numeric_element(idxs, val)" />
      <scope ilk="function" line="739" lineend="743" name="set_numeric_type" signature="set_numeric_type(val)" />
      <scope ilk="function" line="745" lineend="748" name="set_numeric_element_type" signature="set_numeric_element_type(idxs, val)" />
      <scope ilk="function" line="750" lineend="761" name="bool" signature="bool" />
      <scope ilk="function" line="762" lineend="764" name="bool_element" signature="bool_element(*idxs)" />
      <scope ilk="function" line="765" lineend="777" name="set_bool" signature="set_bool(val)" />
      <scope ilk="function" line="779" lineend="796" name="set_bool_element" signature="set_bool_element(idxs, val)" />
      <scope ilk="function" line="797" lineend="801" name="set_bool_type" signature="set_bool_type(val)" />
      <scope ilk="function" line="803" lineend="806" name="set_bool_element_type" signature="set_bool_element_type(idxs, val)" />
      <scope ilk="function" line="808" lineend="811" name="variable" signature="variable" />
      <scope ilk="function" line="812" lineend="814" name="variable_element" signature="variable_element(*idxs)" />
      <scope ilk="function" line="815" lineend="819" name="set_variable" signature="set_variable(var)" />
      <scope ilk="function" line="821" lineend="829" name="set_variable_element" signature="set_variable_element(idxs, var)" />
      <scope ilk="function" line="830" lineend="835" name="set_variable_type" signature="set_variable_type(var)" />
      <scope ilk="function" line="837" lineend="840" name="set_variable_element_type" signature="set_variable_element_type(idxs, var)" />
      <scope ilk="function" line="842" lineend="844" name="window" signature="window" />
      <scope ilk="function" line="845" lineend="847" name="window_element" signature="window_element(*idxs)" />
      <scope ilk="function" line="848" lineend="852" name="set_window" signature="set_window(win)" />
      <scope ilk="function" line="854" lineend="862" name="set_window_element" signature="set_window_element(idxs, win)" />
      <scope ilk="function" line="863" lineend="867" name="set_window_type" signature="set_window_type(win)" />
      <scope ilk="function" line="869" lineend="872" name="set_window_element_type" signature="set_window_element_type(idxs, win)" />
      <scope ilk="function" line="874" lineend="876" name="procedure" signature="procedure" />
      <scope ilk="function" line="877" lineend="879" name="procedure_element" signature="procedure_element(*idxs)" />
      <scope ilk="function" line="880" lineend="883" name="set_procedure" signature="set_procedure(cmd)" />
      <scope ilk="function" line="885" lineend="893" name="set_procedure_element" signature="set_procedure_element(idxs, cmd)" />
      <scope ilk="function" line="894" lineend="898" name="set_procedure_type" signature="set_procedure_type(cmd)" />
      <scope ilk="function" line="900" lineend="903" name="set_procedure_element_type" signature="set_procedure_element_type(idxs, cmd)" />
      <scope ilk="function" line="905" lineend="907" name="to_i" signature="to_i" />
      <scope ilk="function" line="908" lineend="910" name="element_to_i" signature="element_to_i(*idxs)" />
      <scope ilk="function" line="912" lineend="914" name="to_f" signature="to_f" />
      <scope ilk="function" line="915" lineend="917" name="element_to_f" signature="element_to_f(*idxs)" />
      <scope ilk="function" line="919" lineend="922" name="to_s" signature="to_s" />
      <scope ilk="function" line="924" lineend="926" name="element_to_s" signature="element_to_s(*idxs)" />
      <scope ilk="function" line="927" lineend="929" name="string_element" signature="string_element(*idxs)" />
      <scope ilk="function" line="930" lineend="934" name="set_string" signature="set_string(val)" />
      <scope ilk="function" line="936" lineend="944" name="set_string_element" signature="set_string_element(idxs, val)" />
      <scope ilk="function" line="945" lineend="949" name="set_string_type" signature="set_string_type(val)" />
      <scope ilk="function" line="951" lineend="954" name="set_string_element_type" signature="set_string_element_type(idxs, val)" />
      <scope ilk="function" line="956" lineend="958" name="to_sym" signature="to_sym" />
      <scope ilk="function" line="960" lineend="962" name="element_to_sym" signature="element_to_sym(*idxs)" />
      <scope ilk="function" line="964" lineend="968" name="set_symbol" signature="set_symbol(val)" />
      <scope ilk="function" line="970" lineend="978" name="set_symbol_element" signature="set_symbol_element(idxs, val)" />
      <scope ilk="function" line="979" lineend="983" name="set_symbol_type" signature="set_symbol_type(val)" />
      <scope ilk="function" line="985" lineend="988" name="set_symbol_element_type" signature="set_symbol_element_type(idxs, val)" />
      <scope ilk="function" line="990" lineend="993" name="list" signature="list" />
      <scope ilk="function" line="995" lineend="997" name="list_element" signature="list_element(*idxs)" />
      <scope ilk="function" line="1000" lineend="1002" name="numlist" signature="numlist" />
      <scope ilk="function" line="1003" lineend="1005" name="numlist_element" signature="numlist_element(*idxs)" />
      <scope ilk="function" line="1007" lineend="1017" name="set_list" signature="set_list(val)" />
      <scope ilk="function" line="1023" lineend="1038" name="set_list_element" signature="set_list_element(idxs, val)" />
      <scope ilk="function" line="1041" lineend="1045" name="set_list_type" signature="set_list_type(val)" />
      <scope ilk="function" line="1047" lineend="1050" name="set_list_element_type" signature="set_list_element_type(idxs, val)" />
      <scope ilk="function" line="1051" lineend="1055" name="set_numlist_type" signature="set_numlist_type(val)" />
      <scope ilk="function" line="1057" lineend="1060" name="set_numlist_element_type" signature="set_numlist_element_type(idxs, val)" />
      <scope ilk="function" line="1062" lineend="1065" name="lappend" signature="lappend(*elems)" />
      <scope ilk="function" line="1066" lineend="1072" name="element_lappend" signature="element_lappend(idxs, *elems)" />
      <scope ilk="function" line="1074" lineend="1076" name="lindex" signature="lindex(idx)" />
      <scope ilk="function" line="1078" lineend="1085" name="element_lindex" signature="element_lindex(elem_idxs, idx)" />
      <scope ilk="function" line="1088" lineend="1090" name="lget_i" signature="lget_i(idx)" />
      <scope ilk="function" line="1091" lineend="1093" name="element_lget_i" signature="element_lget_i(elem_idxs, idx)" />
      <scope ilk="function" line="1095" lineend="1097" name="lget_f" signature="lget_f(idx)" />
      <scope ilk="function" line="1098" lineend="1100" name="element_lget_f" signature="element_lget_f(elem_idxs, idx)" />
      <scope ilk="function" line="1102" lineend="1105" name="lset" signature="lset(idx, val)" />
      <scope ilk="function" line="1106" lineend="1112" name="element_lset" signature="element_lset(elem_idxs, idx, val)" />
      <scope ilk="function" line="1114" lineend="1117" name="inspect" signature="inspect" />
      <scope ilk="function" line="1119" lineend="1136" name="coerce" signature="coerce(other)" />
      <scope ilk="function" line="1138" lineend="1144" name="&amp;" signature="&amp;(other" />
      <scope ilk="function" line="1145" lineend="1151" name="|" signature="|(other" />
      <scope ilk="function" line="1152" lineend="1165" name="+" signature="+(other" />
      <scope ilk="function" line="1166" lineend="1172" name="-" signature="-(other" />
      <scope ilk="function" line="1173" lineend="1180" name="*" signature="*(other" />
      <scope ilk="function" line="1181" lineend="1183" name="/" signature="/(other" />
      <scope ilk="function" line="1184" lineend="1191" name="%" signature="%(other" />
      <scope ilk="function" line="1192" lineend="1194" name="**" signature="**(other" />
      <scope ilk="function" line="1195" lineend="1197" name="=~" signature="=~(other" />
      <scope ilk="function" line="1199" lineend="1221" name="==" signature="==(other" />
      <scope ilk="function" line="1223" lineend="1225" name="zero?" signature="zero?" />
      <scope ilk="function" line="1226" lineend="1228" name="nonzero?" signature="nonzero?" />
      <scope ilk="function" line="1230" lineend="1249" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
      <scope ilk="function" line="1251" lineend="1253" name="to_eval" signature="to_eval" />
      <scope ilk="function" line="1255" lineend="1264" name="trace_callback" signature="trace_callback(elem, op)" />
      <scope ilk="function" line="1266" lineend="1317" name="trace" signature="trace(opts, cmd = Proc.new)" />
      <scope ilk="function" line="1319" lineend="1375" name="trace_element" signature="trace_element(elem, opts, cmd = Proc.new)" />
      <scope ilk="function" line="1377" lineend="1380" name="trace_vinfo" signature="trace_vinfo" />
      <scope ilk="function" line="1382" lineend="1390" name="_trace_vinfo_for_element" signature="_trace_vinfo_for_element(elem)" />
      <scope ilk="function" line="1392" lineend="1454" name="trace_vdelete" signature="trace_vdelete(opts,cmd)" />
      <scope ilk="function" line="1456" lineend="1525" name="trace_vdelete_for_element" signature="trace_vdelete_for_element(elem,opts,cmd)" />
      <scope classrefs="TkVariable" ilk="class" line="1528" lineend="1621" name="TkVarAccess">
        <scope attributes="__classmethod__" ilk="function" line="1529" lineend="1541" name="new" signature="self.new(name, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="1543" lineend="1566" name="new_hash" signature="self.new_hash(name, *args)" />
        <scope attributes="__ctor__" ilk="function" line="1568" lineend="1620" name="initialize" signature="initialize(varname, val=nil)" />
      </scope>
      <scope ilk="namespace" line="1623" lineend="1651" name="Tk" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/validation">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/validation.rb - validation support module for entry,&#xA;spinbox, and so on" ilk="namespace" line="6" lineend="204" name="Tk">
        <scope ilk="namespace" line="7" lineend="107" name="ValidateConfigure">
          <scope attributes="__classmethod__" ilk="function" line="8" lineend="15" name="__def_validcmd" signature="self.__def_validcmd(scope, klass, keys=nil)" />
          <scope ilk="function" line="17" lineend="29" name="__validcmd_call" signature="__validcmd_call(klass, key, *args, &amp;b)" />
          <scope ilk="function" line="31" lineend="34" name="__validation_class_list" signature="__validation_class_list" />
          <scope ilk="function" line="36" lineend="44" name="__get_validate_key2class" signature="__get_validate_key2class" />
          <scope ilk="function" line="46" lineend="60" name="__conv_vcmd_on_hash_kv" signature="__conv_vcmd_on_hash_kv(keys)" />
          <scope ilk="function" line="62" lineend="64" name="create_self" signature="create_self(keys)" />
          <scope ilk="function" line="67" lineend="74" name="configure" signature="configure(slot, value=TkComm::None)" />
        </scope>
        <scope ilk="namespace" line="109" lineend="203" name="ItemValidateConfigure">
          <scope attributes="__classmethod__" ilk="function" line="110" lineend="117" name="__def_validcmd" signature="self.__def_validcmd(scope, klass, keys=nil)" />
          <scope ilk="function" line="119" lineend="131" name="__item_validcmd_call" signature="__item_validcmd_call(tagOrId, klass, key, *args, &amp;b)" />
          <scope ilk="function" line="133" lineend="136" name="__item_validation_class_list" signature="__item_validation_class_list(id)" />
          <scope ilk="function" line="138" lineend="145" name="__get_item_validate_key2class" signature="__get_item_validate_key2class(id)" />
          <scope ilk="function" line="147" lineend="161" name="__conv_item_vcmd_on_hash_kv" signature="__conv_item_vcmd_on_hash_kv(keys)" />
          <scope ilk="function" line="163" lineend="170" name="itemconfigure" signature="itemconfigure(tagOrId, slot, value=TkComm::None)" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="206" lineend="320" name="TkValidateCommand">
        <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="210" lineend="267" name="ValidateArgs">
          <scope attributes="__classmethod__" doc="NOTE: The order of parameters which passed to callback&#xA;procedure is &lt;extra_arg&gt;, &lt;extra_arg&gt;, ..." ilk="function" line="264" lineend="266" name="ret_val" signature="self.ret_val(val)" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="271" lineend="274" name="_config_keys[" signature="self._config_keys  [" />
        <scope ilk="function" line="276" lineend="311" name="_initialize_for_cb_class" signature="_initialize_for_cb_class(klass, cmd = Proc.new, *args)" />
        <scope attributes="__ctor__" ilk="function" line="313" lineend="315" name="initialize" signature="initialize(cmd = Proc.new, *args)" />
        <scope ilk="function" line="317" lineend="319" name="to_eval" signature="to_eval" />
        <import symbol="TkComm" />
      </scope>
      <scope ilk="namespace" line="322" lineend="376" name="TkValidation">
        <scope classrefs="TkValidateCommand" ilk="class" line="325" lineend="335" name="ValidateCmd">
          <scope ilk="namespace" line="326" lineend="334" name="Action" />
        </scope>
        <scope ilk="function" line="339" lineend="341" name="__validation_class_list" signature="__validation_class_list" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/txtwin_abst">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/txtwin_abst.rb : TkTextWin abstruct class" ilk="class" line="6" lineend="39" name="TkTextWin">
        <scope doc="def create_self fail RuntimeError, &quot;TkTextWin is an abstract&#xA;class&quot; end private :create_self" ilk="function" line="13" lineend="15" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="16" lineend="19" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="20" lineend="22" name="get" signature="get(*index)" />
        <scope ilk="function" line="23" lineend="26" name="insert" signature="insert(index, *args)" />
        <scope ilk="function" line="27" lineend="30" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="31" lineend="34" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="35" lineend="38" name="see" signature="see(index)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/toplevel">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/wm" symbol="*" />
      <import line="6" module="tk/menuspec" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/toplevel.rb : treat toplevel widget" ilk="class" line="8" lineend="257" name="TkToplevel">
        <scope doc="old version def initialize(parent=nil, screen=nil,&#xA;classname=nil, keys=nil) if screen.kind_of? Hash keys =&#xA;screen.dup else" ilk="function" line="48" lineend="50" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="53" lineend="55" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="58" lineend="60" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
        <scope ilk="function" line="63" lineend="65" name="__methodcall_optkeys" signature="__methodcall_optkeys" />
        <scope ilk="function" line="68" lineend="95" name="_wm_command_option_chk" signature="_wm_command_option_chk(keys)" />
        <scope attributes="__ctor__" ilk="function" line="98" lineend="184" name="initialize" signature="initialize(parent=nil, screen=nil, classname=nil, keys=nil)" />
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;toplevel&apos;, @path, *hash_kv(keys, true))&#xA;else tk_call_without_enc(&apos;toplevel&apos;, @path)" ilk="function" line="195" lineend="197" name="specific_class" signature="specific_class" />
        <scope ilk="function" line="199" lineend="208" name="add_menu" signature="add_menu(menu_info, tearoff=false, opts=nil)" />
        <scope ilk="function" line="210" lineend="216" name="add_menubar" signature="add_menubar(menu_spec, tearoff=false, opts=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="218" lineend="224" name="database_class" signature="self.database_class" />
        <scope attributes="__classmethod__" ilk="function" line="225" lineend="227" name="database_classname" signature="self.database_classname" />
        <scope attributes="__classmethod__" ilk="function" line="229" lineend="235" name="bind" signature="self.bind(*args, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="236" lineend="242" name="bind_append" signature="self.bind_append(*args, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="243" lineend="249" name="bind_remove" signature="self.bind_remove(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="250" lineend="256" name="bindinfo" signature="self.bindinfo(*args)" />
        <import symbol="Wm" />
        <import symbol="TkMenuSpec" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/timer">
      <import line="6" module="tk" symbol="*" />
      <scope classrefs="Object" doc="tk/timer.rb : methods for Tcl/Tk after command" ilk="class" line="8" lineend="502" name="TkTimer">
        <scope attributes="__classmethod__" doc="class methods" ilk="function" line="30" lineend="32" name="start" signature="self.start(*args, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="34" lineend="38" name="callback" signature="self.callback(obj_id)" />
        <scope attributes="__classmethod__" ilk="function" line="40" lineend="58" name="info" signature="self.info(obj = nil)" />
        <scope doc="instance methods" ilk="function" line="64" lineend="91" name="do_callback" signature="do_callback" />
        <scope ilk="function" line="93" lineend="103" name="set_callback" signature="set_callback(sleep, args=nil)" />
        <scope ilk="function" line="105" lineend="138" name="set_next_callback" signature="set_next_callback(args)" />
        <scope attributes="__ctor__" ilk="function" line="140" lineend="194" name="initialize" signature="initialize(*args, &amp;b)" />
        <scope ilk="function" line="196" lineend="196" name="after_id" />
        <scope ilk="function" line="197" lineend="197" name="after_script" />
        <scope ilk="function" line="198" lineend="198" name="current_proc" />
        <scope ilk="function" line="199" lineend="199" name="current_args" />
        <scope ilk="function" line="200" lineend="200" name="current_sleep" />
        <scope ilk="function" line="202" lineend="202" name="return_value" />
        <scope ilk="function" line="204" lineend="204" name="loop_exec" />
        <scope ilk="function" line="204" lineend="204" name="loop_exec=" />
        <scope ilk="function" line="206" lineend="208" name="cb_call" signature="cb_call" />
        <scope ilk="function" line="210" lineend="212" name="get_procs" signature="get_procs" />
        <scope ilk="function" line="214" lineend="217" name="current_status" signature="current_status" />
        <scope ilk="function" line="219" lineend="221" name="cancel_on_exception?" signature="cancel_on_exception?" />
        <scope ilk="function" line="223" lineend="232" name="cancel_on_exception=" signature="cancel_on_exception=(mode)" />
        <scope ilk="function" line="234" lineend="236" name="running?" signature="running?" />
        <scope ilk="function" line="238" lineend="240" name="loop_rest" signature="loop_rest" />
        <scope ilk="function" line="242" lineend="245" name="loop_rest=" signature="loop_rest=(rest)" />
        <scope ilk="function" line="247" lineend="255" name="set_interval" signature="set_interval(interval)" />
        <scope ilk="function" line="257" lineend="293" name="set_procs" signature="set_procs(interval, loop_exec, *procs)" />
        <scope ilk="function" line="295" lineend="307" name="add_procs" signature="add_procs(*procs)" />
        <scope ilk="function" line="309" lineend="323" name="delete_procs" signature="delete_procs(*procs)" />
        <scope ilk="function" line="325" lineend="330" name="delete_at" signature="delete_at(n)" />
        <scope ilk="function" line="332" lineend="348" name="set_start_proc" signature="set_start_proc(sleep=nil, init_proc=nil, *init_args, &amp;b)" />
        <scope ilk="function" line="350" lineend="392" name="start" signature="start(*init_args, &amp;b)" />
        <scope ilk="function" line="394" lineend="410" name="reset" signature="reset(*reset_args)" />
        <scope ilk="function" line="412" lineend="419" name="restart" signature="restart(*restart_args, &amp;b)" />
        <scope ilk="function" line="421" lineend="429" name="cancel" signature="cancel" />
        <scope ilk="function" line="432" lineend="447" name="continue" signature="continue(wait=nil)" />
        <scope ilk="function" line="449" lineend="456" name="skip" signature="skip" />
        <scope ilk="function" line="458" lineend="465" name="info" signature="info" />
        <scope ilk="function" line="467" lineend="486" name="wait" signature="wait(on_thread = true, check_root = false)" />
        <scope ilk="function" line="487" lineend="489" name="eventloop_wait" signature="eventloop_wait(check_root = false)" />
        <scope ilk="function" line="490" lineend="492" name="thread_wait" signature="thread_wait(check_root = false)" />
        <scope ilk="function" line="493" lineend="495" name="tkwait" signature="tkwait(on_thread = true)" />
        <scope ilk="function" line="496" lineend="498" name="eventloop_tkwait" signature="eventloop_tkwait" />
        <scope ilk="function" line="499" lineend="501" name="thread_tkwait" signature="thread_tkwait" />
        <import symbol="TkCore" />
      </scope>
      <scope classrefs="TkTimer" ilk="class" line="507" lineend="634" name="TkRTTimer">
        <scope attributes="__ctor__" ilk="function" line="510" lineend="517" name="initialize" signature="initialize(*args, &amp;b)" />
        <scope ilk="function" line="519" lineend="524" name="start" signature="start(*args, &amp;b)" />
        <scope ilk="function" line="526" lineend="531" name="cancel" signature="cancel" />
        <scope ilk="function" line="534" lineend="538" name="continue" signature="continue(wait=nil)" />
        <scope ilk="function" line="540" lineend="543" name="set_interval" signature="set_interval(interval)" />
        <scope ilk="function" line="545" lineend="558" name="_offset_ave" signature="_offset_ave" />
        <scope ilk="function" line="561" lineend="611" name="set_next_callback" signature="set_next_callback(args)" />
        <scope ilk="function" line="613" lineend="633" name="cb_call" signature="cb_call" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/textwindow">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/text" symbol="*" />
      <scope classrefs="TkObject" doc="tk/textwindow.rb - treat Tk text window object" ilk="class" line="7" lineend="149" name="TkTextWindow">
        <scope attributes="__ctor__" ilk="function" line="10" lineend="55" name="initialize" signature="initialize(parent, index, keys = {})" />
        <scope ilk="function" line="57" lineend="59" name="id" signature="id" />
        <scope ilk="function" line="60" lineend="62" name="mark" signature="mark" />
        <scope ilk="function" line="64" lineend="66" name="[]" signature="[](slot" />
        <scope ilk="function" line="67" lineend="70" name="[]=" signature="[]=(slot" />
        <scope ilk="function" line="72" lineend="74" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="76" lineend="105" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="107" lineend="109" name="configinfo" signature="configinfo(slot = nil)" />
        <scope ilk="function" line="111" lineend="113" name="current_configinfo" signature="current_configinfo(slot = nil)" />
        <scope ilk="function" line="115" lineend="117" name="window" signature="window" />
        <scope ilk="function" line="119" lineend="126" name="window=" signature="window=(value)" />
        <scope ilk="function" line="128" lineend="130" name="create" signature="create" />
        <scope ilk="function" line="132" lineend="148" name="create=" signature="create=(value)" />
        <import symbol="TkText::IndexModMethods" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/texttag">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/text" symbol="*" />
      <import line="6" module="tk/tagfont" symbol="*" />
      <scope classrefs="TkObject" doc="tk/texttag.rb - methods for treating text tags" ilk="class" line="8" lineend="227" name="TkTextTag">
        <scope attributes="__classmethod__" ilk="function" line="17" lineend="21" name="id2obj" signature="TkTextTag.id2obj(text, id)" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="47" name="initialize" signature="initialize(parent, *args)" />
        <scope ilk="function" line="49" lineend="51" name="id" signature="id" />
        <scope ilk="function" line="53" lineend="60" name="exist?" signature="exist?" />
        <scope ilk="function" line="62" lineend="64" name="first" signature="first" />
        <scope ilk="function" line="66" lineend="68" name="last" signature="last" />
        <scope ilk="function" line="70" lineend="74" name="add" signature="add(*indices)" />
        <scope ilk="function" line="76" lineend="80" name="remove" signature="remove(*indices)" />
        <scope ilk="function" line="82" lineend="89" name="ranges" signature="ranges" />
        <scope ilk="function" line="91" lineend="97" name="nextrange" signature="nextrange(first, last=None)" />
        <scope ilk="function" line="99" lineend="105" name="prevrange" signature="prevrange(first, last=None)" />
        <scope ilk="function" line="107" lineend="109" name="[]" signature="[](key" />
        <scope ilk="function" line="111" lineend="114" name="[]=" signature="[]=(key" />
        <scope ilk="function" line="116" lineend="118" name="cget" signature="cget(key)" />
        <scope ilk="function" line="144" lineend="146" name="configure" signature="configure(key, val=None)" />
        <scope doc="def configure(key, val=None) if key.kind_of?(Hash) tk_call&#xA;@t.path, &apos;tag&apos;, &apos;configure&apos;, @id, *hash_kv(key) else tk_call&#xA;@t.path, &apos;tag&apos;, &apos;configure&apos;, @id, &quot;-#{key}&quot;, val" ilk="function" line="163" lineend="165" name="configinfo" signature="configinfo(key=nil)" />
        <scope ilk="function" line="167" lineend="169" name="current_configinfo" signature="current_configinfo(key=nil)" />
        <scope doc="def bind(seq, cmd=Proc.new, *args) _bind([@t.path, &apos;tag&apos;,&#xA;&apos;bind&apos;, @id], seq, cmd, *args) self end" ilk="function" line="175" lineend="184" name="bind" signature="bind(seq, *args)" />
        <scope doc="def bind_append(seq, cmd=Proc.new, *args)&#xA;_bind_append([@t.path, &apos;tag&apos;, &apos;bind&apos;, @id], seq, cmd, *args)&#xA;self end" ilk="function" line="190" lineend="199" name="bind_append" signature="bind_append(seq, *args)" />
        <scope ilk="function" line="201" lineend="204" name="bind_remove" signature="bind_remove(seq)" />
        <scope ilk="function" line="206" lineend="208" name="bindinfo" signature="bindinfo(context=nil)" />
        <scope ilk="function" line="210" lineend="214" name="raise" signature="raise(above=None)" />
        <scope ilk="function" line="216" lineend="220" name="lower" signature="lower(below=None)" />
        <scope ilk="function" line="222" lineend="226" name="destroy" signature="destroy" />
        <import symbol="TkTreatTagFont" />
        <import symbol="TkText::IndexModMethods" />
      </scope>
      <scope classrefs="TkTextTag" ilk="class" line="229" lineend="273" name="TkTextNamedTag">
        <scope attributes="__classmethod__" ilk="function" line="230" lineend="247" name="new" signature="self.new(parent, name, *args)" />
        <scope attributes="__ctor__" ilk="function" line="249" lineend="272" name="initialize" signature="initialize(parent, name, *args)" />
      </scope>
      <scope classrefs="TkTextNamedTag" ilk="class" line="275" lineend="279" name="TkTextTagSel">
        <scope attributes="__classmethod__" ilk="function" line="276" lineend="278" name="new" signature="self.new(parent, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/textmark">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/text" symbol="*" />
      <scope classrefs="TkObject" doc="tk/textmark.rb - methods for treating text marks" ilk="class" line="7" lineend="123" name="TkTextMark">
        <scope attributes="__classmethod__" ilk="function" line="15" lineend="19" name="id2obj" signature="TkTextMark.id2obj(text, id)" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="36" name="initialize" signature="initialize(parent, index)" />
        <scope ilk="function" line="38" lineend="40" name="id" signature="id" />
        <scope ilk="function" line="42" lineend="49" name="exist?" signature="exist?" />
        <scope ilk="function" line="78" lineend="80" name="pos" signature="pos" />
        <scope ilk="function" line="82" lineend="84" name="pos=" signature="pos=(where)" />
        <scope ilk="function" line="86" lineend="90" name="set" signature="set(where)" />
        <scope ilk="function" line="92" lineend="95" name="unset" signature="unset" />
        <scope ilk="function" line="98" lineend="100" name="gravity" signature="gravity" />
        <scope ilk="function" line="102" lineend="106" name="gravity=" signature="gravity=(direction)" />
        <scope ilk="function" line="108" lineend="114" name="next" signature="next(index = nil)" />
        <scope ilk="function" line="116" lineend="122" name="previous" signature="previous(index = nil)" />
        <import symbol="TkText::IndexModMethods" />
      </scope>
      <scope classrefs="TkTextMark" ilk="class" line="125" lineend="148" name="TkTextNamedMark">
        <scope attributes="__classmethod__" ilk="function" line="126" lineend="132" name="new" signature="self.new(parent, name, *args)" />
        <scope attributes="__ctor__" ilk="function" line="134" lineend="147" name="initialize" signature="initialize(parent, name, index=nil)" />
      </scope>
      <scope classrefs="TkTextNamedMark" ilk="class" line="150" lineend="154" name="TkTextMarkInsert">
        <scope attributes="__classmethod__" ilk="function" line="151" lineend="153" name="new" signature="self.new(parent,*args)" />
      </scope>
      <scope classrefs="TkTextNamedMark" ilk="class" line="156" lineend="160" name="TkTextMarkCurrent">
        <scope attributes="__classmethod__" ilk="function" line="157" lineend="159" name="new" signature="self.new(parent,*args)" />
      </scope>
      <scope classrefs="TkTextNamedMark" ilk="class" line="162" lineend="166" name="TkTextMarkAnchor">
        <scope attributes="__classmethod__" ilk="function" line="163" lineend="165" name="new" signature="self.new(parent,*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/textimage">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/text" symbol="*" />
      <scope classrefs="TkObject" doc="tk/textimage.rb - treat Tk text image object" ilk="class" line="7" lineend="82" name="TkTextImage">
        <scope attributes="__ctor__" ilk="function" line="10" lineend="34" name="initialize" signature="initialize(parent, index, keys)" />
        <scope ilk="function" line="36" lineend="38" name="id" signature="id" />
        <scope ilk="function" line="39" lineend="41" name="mark" signature="mark" />
        <scope ilk="function" line="43" lineend="45" name="[]" signature="[](slot" />
        <scope ilk="function" line="46" lineend="49" name="[]=" signature="[]=(slot" />
        <scope ilk="function" line="51" lineend="53" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="55" lineend="58" name="configure" signature="configure(slot, value=None)" />
        <scope doc="def configure(slot, value) tk_call @t.path, &apos;image&apos;,&#xA;&apos;configure&apos;, @index, &quot;-#{slot}&quot;, value end" ilk="function" line="63" lineend="65" name="configinfo" signature="configinfo(slot = nil)" />
        <scope ilk="function" line="67" lineend="69" name="current_configinfo" signature="current_configinfo(slot = nil)" />
        <scope ilk="function" line="71" lineend="74" name="image" signature="image" />
        <scope ilk="function" line="76" lineend="81" name="image=" signature="image=(value)" />
        <import symbol="TkText::IndexModMethods" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/text">
      <import line="5" module="tk" symbol="*" />
      <import line="6" module="tk/itemfont" symbol="*" />
      <import line="7" module="tk/itemconfig" symbol="*" />
      <import line="8" module="tk/scrollable" symbol="*" />
      <import line="9" module="tk/txtwin_abst" symbol="*" />
      <scope doc="tk/text.rb - Tk text classes $Date: 2005/11/23 12:01:05 $ by&#xA;Yukihiro Matsumoto &lt;matz@caelum.co.jp&gt;" ilk="namespace" line="11" lineend="61" name="TkTextTagConfig">
        <scope ilk="function" line="15" lineend="17" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="20" lineend="22" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="25" lineend="30" name="__item_pathname" signature="__item_pathname(id)" />
        <scope ilk="function" line="33" lineend="35" name="tag_cget" signature="tag_cget(tagOrId, option)" />
        <scope ilk="function" line="36" lineend="38" name="tag_configure" signature="tag_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="39" lineend="41" name="tag_configinfo" signature="tag_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="42" lineend="44" name="current_tag_configinfo" signature="current_tag_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="46" lineend="48" name="window_cget" signature="window_cget(tagOrId, option)" />
        <scope ilk="function" line="49" lineend="51" name="window_configure" signature="window_configure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="52" lineend="54" name="window_configinfo" signature="window_configinfo(tagOrId, slot=nil)" />
        <scope ilk="function" line="55" lineend="57" name="current_window_configinfo" signature="current_window_configinfo(tagOrId, slot=nil)" />
      </scope>
      <scope classrefs="TkTextWin" ilk="class" line="63" lineend="1528" name="TkText">
        <scope ilk="namespace" line="71" lineend="221" name="IndexModMethods">
          <scope ilk="function" line="72" lineend="81" name="+" signature="+(mod" />
          <scope ilk="function" line="83" lineend="94" name="-" signature="-(mod" />
          <scope ilk="function" line="96" lineend="103" name="chars" signature="chars(mod)" />
          <scope ilk="function" line="106" lineend="114" name="display_chars" signature="display_chars(mod)" />
          <scope ilk="function" line="117" lineend="125" name="any_chars" signature="any_chars(mod)" />
          <scope ilk="function" line="128" lineend="136" name="indices" signature="indices(mod)" />
          <scope ilk="function" line="138" lineend="146" name="display_indices" signature="display_indices(mod)" />
          <scope ilk="function" line="148" lineend="156" name="any_indices" signature="any_indices(mod)" />
          <scope ilk="function" line="158" lineend="165" name="lines" signature="lines(mod)" />
          <scope ilk="function" line="168" lineend="176" name="display_lines" signature="display_lines(mod)" />
          <scope ilk="function" line="179" lineend="187" name="any_lines" signature="any_lines(mod)" />
          <scope ilk="function" line="190" lineend="192" name="linestart" signature="linestart" />
          <scope ilk="function" line="193" lineend="195" name="lineend" signature="lineend" />
          <scope ilk="function" line="197" lineend="200" name="display_linestart" signature="display_linestart" />
          <scope ilk="function" line="201" lineend="204" name="display_lineend" signature="display_lineend" />
          <scope ilk="function" line="206" lineend="208" name="wordstart" signature="wordstart" />
          <scope ilk="function" line="209" lineend="211" name="wordend" signature="wordend" />
          <scope ilk="function" line="213" lineend="216" name="display_wordstart" signature="display_wordstart" />
          <scope ilk="function" line="217" lineend="220" name="display_wordend" signature="display_wordend" />
        </scope>
        <scope classrefs="String" ilk="class" line="223" lineend="243" name="IndexString">
          <scope attributes="__classmethod__" ilk="function" line="226" lineend="228" name="at" signature="self.at(x,y)" />
          <scope attributes="__classmethod__" ilk="function" line="230" lineend="238" name="new" signature="self.new(str)" />
          <scope ilk="function" line="240" lineend="242" name="id" signature="id" />
          <import symbol="IndexModMethods" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="251" lineend="256" name="new" signature="self.new(*args, &amp;block)" />
        <scope ilk="function" line="258" lineend="261" name="init_instance_variable" signature="init_instance_variable" />
        <scope ilk="function" line="263" lineend="266" name="__destroy_hook__" signature="__destroy_hook__" />
        <scope ilk="function" line="268" lineend="279" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="282" lineend="284" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="287" lineend="289" name="at" signature="self.at(x, y)" />
        <scope ilk="function" line="291" lineend="293" name="at" signature="at(x, y)" />
        <scope ilk="function" line="295" lineend="298" name="index" signature="index(idx)" />
        <scope ilk="function" line="300" lineend="303" name="get_displaychars" signature="get_displaychars(*index)" />
        <scope ilk="function" line="305" lineend="307" name="value" signature="value" />
        <scope ilk="function" line="309" lineend="313" name="value=" signature="value= (val)" />
        <scope ilk="function" line="315" lineend="318" name="clear" signature="clear" />
        <scope ilk="function" line="321" lineend="323" name="_addcmd" signature="_addcmd(cmd)" />
        <scope ilk="function" line="325" lineend="327" name="_addtag" signature="_addtag(name, obj)" />
        <scope ilk="function" line="329" lineend="338" name="tagid" signature="tagid(tag)" />
        <scope ilk="function" line="341" lineend="347" name="tagid2obj" signature="tagid2obj(tagid)" />
        <scope ilk="function" line="349" lineend="354" name="tag_names" signature="tag_names(index=None)" />
        <scope ilk="function" line="356" lineend="361" name="mark_names" signature="mark_names" />
        <scope ilk="function" line="363" lineend="371" name="mark_gravity" signature="mark_gravity(mark, direction=nil)" />
        <scope ilk="function" line="373" lineend="377" name="mark_set" signature="mark_set(mark, index)" />
        <scope ilk="function" line="380" lineend="384" name="mark_unset" signature="mark_unset(*marks)" />
        <scope ilk="function" line="387" lineend="390" name="mark_next" signature="mark_next(index)" />
        <scope ilk="function" line="393" lineend="396" name="mark_previous" signature="mark_previous(index)" />
        <scope ilk="function" line="399" lineend="409" name="image_cget" signature="image_cget(index, slot)" />
        <scope ilk="function" line="411" lineend="423" name="image_configure" signature="image_configure(index, slot, value=None)" />
        <scope ilk="function" line="425" lineend="512" name="image_configinfo" signature="image_configinfo(index, slot = nil)" />
        <scope ilk="function" line="514" lineend="533" name="current_image_configinfo" signature="current_image_configinfo(index, slot = nil)" />
        <scope ilk="function" line="535" lineend="540" name="image_names" signature="image_names" />
        <scope ilk="function" line="542" lineend="545" name="set_insert" signature="set_insert(index)" />
        <scope ilk="function" line="547" lineend="550" name="set_current" signature="set_current(index)" />
        <scope ilk="function" line="552" lineend="569" name="insert" signature="insert(index, chars, *tags)" />
        <scope ilk="function" line="571" lineend="577" name="destroy" signature="destroy" />
        <scope ilk="function" line="579" lineend="581" name="backspace" signature="backspace" />
        <scope ilk="function" line="583" lineend="585" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="587" lineend="590" name="compare" signature="compare(idx1, op, idx2)" />
        <scope ilk="function" line="592" lineend="606" name="count" signature="count(idx1, idx2, *opts)" />
        <scope ilk="function" line="608" lineend="622" name="count_info" signature="count_info(idx1, idx2, update=true)" />
        <scope ilk="function" line="624" lineend="627" name="peer_names" signature="peer_names()" />
        <scope ilk="function" line="629" lineend="632" name="replace" signature="replace(idx1, idx2, *opts)" />
        <scope ilk="function" line="634" lineend="636" name="debug" signature="debug" />
        <scope ilk="function" line="637" lineend="641" name="debug=" signature="debug=(boolean)" />
        <scope ilk="function" line="643" lineend="645" name="dlineinfo" signature="dlineinfo(index)" />
        <scope ilk="function" line="647" lineend="649" name="modified?" signature="modified?" />
        <scope ilk="function" line="650" lineend="653" name="modified" signature="modified(mode)" />
        <scope ilk="function" line="654" lineend="657" name="modified=" signature="modified=(mode)" />
        <scope ilk="function" line="659" lineend="662" name="edit_redo" signature="edit_redo" />
        <scope ilk="function" line="663" lineend="666" name="edit_reset" signature="edit_reset" />
        <scope ilk="function" line="667" lineend="670" name="edit_separator" signature="edit_separator" />
        <scope ilk="function" line="671" lineend="674" name="edit_undo" signature="edit_undo" />
        <scope ilk="function" line="676" lineend="679" name="xview_pickplace" signature="xview_pickplace(index)" />
        <scope ilk="function" line="681" lineend="684" name="yview_pickplace" signature="yview_pickplace(index)" />
        <scope ilk="function" line="686" lineend="690" name="text_copy" signature="text_copy" />
        <scope ilk="function" line="692" lineend="696" name="text_cut" signature="text_cut" />
        <scope ilk="function" line="698" lineend="702" name="text_paste" signature="text_paste" />
        <scope ilk="function" line="704" lineend="709" name="tag_add" signature="tag_add(tag, index1, index2=None)" />
        <scope ilk="function" line="713" lineend="726" name="tag_delete" signature="tag_delete(*tags)" />
        <scope doc="def tag_bind(tag, seq, cmd=Proc.new, *args) _bind([@path,&#xA;&apos;tag&apos;, &apos;bind&apos;, tag], seq, cmd, *args) self end" ilk="function" line="734" lineend="743" name="tag_bind" signature="tag_bind(tag, seq, *args)" />
        <scope doc="def tag_bind_append(tag, seq, cmd=Proc.new, *args)&#xA;_bind_append([@path, &apos;tag&apos;, &apos;bind&apos;, tag], seq, cmd, *args)&#xA;self end" ilk="function" line="749" lineend="758" name="tag_bind_append" signature="tag_bind_append(tag, seq, *args)" />
        <scope ilk="function" line="760" lineend="763" name="tag_bind_remove" signature="tag_bind_remove(tag, seq)" />
        <scope ilk="function" line="765" lineend="767" name="tag_bindinfo" signature="tag_bindinfo(tag, context=nil)" />
        <scope ilk="function" line="945" lineend="949" name="tag_raise" signature="tag_raise(tag, above=None)" />
        <scope ilk="function" line="951" lineend="955" name="tag_lower" signature="tag_lower(tag, below=None)" />
        <scope ilk="function" line="957" lineend="961" name="tag_remove" signature="tag_remove(tag, *indices)" />
        <scope ilk="function" line="963" lineend="974" name="tag_ranges" signature="tag_ranges(tag)" />
        <scope ilk="function" line="976" lineend="983" name="tag_nextrange" signature="tag_nextrange(tag, first, last=None)" />
        <scope ilk="function" line="985" lineend="992" name="tag_prevrange" signature="tag_prevrange(tag, first, last=None)" />
        <scope ilk="function" line="1178" lineend="1183" name="window_names" signature="window_names" />
        <scope ilk="function" line="1185" lineend="1203" name="_ktext_length" signature="_ktext_length(txt)" />
        <scope ilk="function" line="1206" lineend="1237" name="tksearch" signature="tksearch(*args)" />
        <scope ilk="function" line="1239" lineend="1272" name="tksearch_with_count" signature="tksearch_with_count(*args)" />
        <scope ilk="function" line="1274" lineend="1329" name="search_with_length" signature="search_with_length(pat,start,stop=None)" />
        <scope ilk="function" line="1331" lineend="1333" name="search" signature="search(pat,start,stop=None)" />
        <scope ilk="function" line="1335" lineend="1385" name="rsearch_with_length" signature="rsearch_with_length(pat,start,stop=None)" />
        <scope ilk="function" line="1387" lineend="1389" name="rsearch" signature="rsearch(pat,start,stop=None)" />
        <scope ilk="function" line="1391" lineend="1472" name="dump" signature="dump(type_info, *index, &amp;block)" />
        <scope ilk="function" line="1474" lineend="1490" name="_retrieve_braced_text" signature="_retrieve_braced_text(str, i)" />
        <scope ilk="function" line="1493" lineend="1507" name="_retrieve_backslashed_text" signature="_retrieve_backslashed_text(str, i)" />
        <scope ilk="function" line="1510" lineend="1512" name="dump_all" signature="dump_all(*index, &amp;block)" />
        <scope ilk="function" line="1513" lineend="1515" name="dump_mark" signature="dump_mark(*index, &amp;block)" />
        <scope ilk="function" line="1516" lineend="1518" name="dump_tag" signature="dump_tag(*index, &amp;block)" />
        <scope ilk="function" line="1519" lineend="1521" name="dump_text" signature="dump_text(*index, &amp;block)" />
        <scope ilk="function" line="1522" lineend="1524" name="dump_window" signature="dump_window(*index, &amp;block)" />
        <scope ilk="function" line="1525" lineend="1527" name="dump_image" signature="dump_image(*index, &amp;block)" />
        <import symbol="TkTextTagConfig" />
        <import symbol="Scrollable" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1532" lineend="1550" name="TkText::Peer&lt;">
        <scope attributes="__ctor__" doc="Tk8.5 feature" ilk="function" line="1534" lineend="1540" name="initialize" signature="initialize(text, parent=nil, keys={})" />
        <scope ilk="function" line="1542" lineend="1548" name="create_self" signature="create_self(keys)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/tagfont">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/tagfont.rb : control font of tags" ilk="namespace" line="6" lineend="43" name="TkTreatTagFont">
        <scope ilk="function" line="7" lineend="9" name="font_configinfo" signature="font_configinfo" />
        <scope doc="alias font font_configinfo" ilk="function" line="12" lineend="15" name="font_configure" signature="font_configure(slot)" />
        <scope ilk="function" line="17" lineend="20" name="latinfont_configure" signature="latinfont_configure(ltn, keys=nil)" />
        <scope ilk="function" line="23" lineend="26" name="kanjifont_configure" signature="kanjifont_configure(knj, keys=nil)" />
        <scope ilk="function" line="28" lineend="31" name="font_copy" signature="font_copy(win, wintag=nil)" />
        <scope ilk="function" line="33" lineend="36" name="latinfont_copy" signature="latinfont_copy(win, wintag=nil)" />
        <scope ilk="function" line="39" lineend="42" name="kanjifont_copy" signature="kanjifont_copy(win, wintag=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/spinbox">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/entry" symbol="*" />
      <scope classrefs="TkEntry" doc="tk/spinbox.rb - Tk spinbox classes $Date: 2005/10/22&#xA;22:16:24 $ by Yukihiro Matsumoto &lt;matz@caelum.co.jp&gt;" ilk="class" line="9" lineend="99" name="TkSpinbox">
        <scope classrefs="TkValidateCommand" ilk="class" line="14" lineend="51" name="SpinCommand">
          <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="15" lineend="46" name="ValidateArgs">
            <scope attributes="__classmethod__" doc="enc = Tk.encoding" ilk="function" line="43" lineend="45" name="ret_val" signature="self.ret_val(val)" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="48" lineend="50" name="_config_keys[" signature="self._config_keys [" />
        </scope>
        <scope ilk="function" line="53" lineend="55" name="__validation_class_list" signature="__validation_class_list" />
        <scope doc="def create_self(keys) tk_call_without_enc(&apos;spinbox&apos;, @path)&#xA;if keys and keys != None configure(keys) end" ilk="function" line="67" lineend="69" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="72" lineend="74" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="77" lineend="79" name="__listval_optkeys" signature="__listval_optkeys" />
        <scope ilk="function" line="82" lineend="84" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="86" lineend="89" name="spinup" signature="spinup" />
        <scope ilk="function" line="91" lineend="94" name="spindown" signature="spindown" />
        <scope ilk="function" line="96" lineend="98" name="set" signature="set(str)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/selection">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/selection.rb : control selection" ilk="namespace" line="6" lineend="86" name="TkSelection">
        <scope attributes="__classmethod__" ilk="function" line="12" lineend="18" name="clear" signature="self.clear(sel=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="19" lineend="26" name="clear_on_display" signature="self.clear_on_display(win, sel=nil)" />
        <scope ilk="function" line="27" lineend="30" name="clear" signature="clear(sel=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="32" lineend="35" name="get" signature="self.get(keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="36" lineend="40" name="get_on_display" signature="self.get_on_display(win, keys=nil)" />
        <scope ilk="function" line="41" lineend="43" name="get" signature="get(keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="45" lineend="54" name="handle" signature="self.handle(win, func=Proc.new, keys=nil, &amp;b)" />
        <scope ilk="function" line="55" lineend="57" name="handle" signature="handle(func=Proc.new, keys=nil, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="59" lineend="65" name="get_owner" signature="self.get_owner(sel=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="66" lineend="73" name="get_owner_on_display" signature="self.get_owner_on_display(win, sel=nil)" />
        <scope ilk="function" line="74" lineend="77" name="get_owner" signature="get_owner(sel=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="79" lineend="81" name="set_owner" signature="self.set_owner(win, keys=nil)" />
        <scope ilk="function" line="82" lineend="85" name="set_owner" signature="set_owner(keys=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/scrollbox">
      <import line="7" module="tk" symbol="*" />
      <import line="8" module="tk/listbox" symbol="*" />
      <scope classrefs="TkListbox" doc="tk/scrollbox.rb - Tk Listbox with Scrollbar as an example of&#xA;Composite Widget $Date: 2004/10/11 04:51:07 $ by Yukihiro&#xA;Matsumoto &lt;matz@netlab.co.jp&gt;" ilk="class" line="10" lineend="36" name="TkScrollbox">
        <scope ilk="function" line="12" lineend="34" name="initialize_composite" signature="initialize_composite(keys=nil)" />
        <import symbol="TkComposite" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/scrollbar">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/scrollbar.rb : treat scrollbar widget" ilk="class" line="6" lineend="106" name="TkScrollbar">
        <scope ilk="function" line="11" lineend="29" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="32" lineend="39" name="propagate_set" signature="propagate_set(src_win, first, last)" />
        <scope ilk="function" line="41" lineend="58" name="assign" signature="assign(*wins)" />
        <scope ilk="function" line="60" lineend="66" name="assigned_list" signature="assigned_list" />
        <scope ilk="function" line="68" lineend="72" name="configure" signature="configure(*args)" />
        <scope doc="def delta(deltax=None, deltay=None)" ilk="function" line="75" lineend="77" name="delta" signature="delta(deltax, deltay)" />
        <scope doc="def fraction(x=None, y=None)" ilk="function" line="80" lineend="82" name="fraction" signature="fraction(x, y)" />
        <scope ilk="function" line="84" lineend="86" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="88" lineend="96" name="get" signature="get" />
        <scope ilk="function" line="98" lineend="101" name="set" signature="set(first, last)" />
        <scope ilk="function" line="103" lineend="105" name="activate" signature="activate(element=None)" />
      </scope>
      <scope classrefs="TkScrollbar" ilk="class" line="108" lineend="115" name="TkXScrollbar">
        <scope ilk="function" line="109" lineend="113" name="create_self" signature="create_self(keys)" />
      </scope>
      <scope classrefs="TkScrollbar" ilk="class" line="117" lineend="124" name="TkYScrollbar">
        <scope ilk="function" line="118" lineend="122" name="create_self" signature="create_self(keys)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/scrollable">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/scrollable.rb : module for scrollable widget" ilk="namespace" line="6" lineend="79" name="Tk">
        <scope ilk="namespace" line="7" lineend="39" name="X_Scrollable">
          <scope ilk="function" line="8" lineend="12" name="xscrollcommand" signature="xscrollcommand(cmd=Proc.new)" />
          <scope ilk="function" line="14" lineend="21" name="xview" signature="xview(*index)" />
          <scope ilk="function" line="22" lineend="24" name="xview_moveto" signature="xview_moveto(*index)" />
          <scope ilk="function" line="25" lineend="27" name="xview_scroll" signature="xview_scroll(*index)" />
          <scope ilk="function" line="29" lineend="38" name="xscrollbar" signature="xscrollbar(bar=nil)" />
        </scope>
        <scope ilk="namespace" line="41" lineend="73" name="Y_Scrollable">
          <scope ilk="function" line="42" lineend="46" name="yscrollcommand" signature="yscrollcommand(cmd=Proc.new)" />
          <scope ilk="function" line="48" lineend="55" name="yview" signature="yview(*index)" />
          <scope ilk="function" line="56" lineend="58" name="yview_moveto" signature="yview_moveto(*index)" />
          <scope ilk="function" line="59" lineend="61" name="yview_scroll" signature="yview_scroll(*index)" />
          <scope ilk="function" line="63" lineend="72" name="yscrollbar" signature="yscrollbar(bar=nil)" />
        </scope>
        <scope ilk="namespace" line="75" lineend="78" name="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/scale">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/scale.rb : treat scale widget" ilk="class" line="6" lineend="86" name="TkScale">
        <scope ilk="function" line="11" lineend="24" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="27" lineend="29" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="32" lineend="40" name="_wrap_command_arg" signature="_wrap_command_arg(cmd)" />
        <scope ilk="function" line="43" lineend="45" name="configure_cmd" signature="configure_cmd(slot, value)" />
        <scope ilk="function" line="47" lineend="56" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="58" lineend="60" name="command" signature="command(cmd=Proc.new)" />
        <scope ilk="function" line="62" lineend="64" name="get" signature="get(x=None, y=None)" />
        <scope ilk="function" line="66" lineend="68" name="coords" signature="coords(val=None)" />
        <scope ilk="function" line="70" lineend="72" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="74" lineend="76" name="set" signature="set(val)" />
        <scope ilk="function" line="78" lineend="80" name="value" signature="value" />
        <scope ilk="function" line="82" lineend="85" name="value=" signature="value= (val)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/root">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/wm" symbol="*" />
      <import line="6" module="tk/menuspec" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/root.rb : treat root widget" ilk="class" line="8" lineend="108" name="TkRoot">
        <scope ilk="function" line="12" lineend="14" name="__methodcall_optkeys" signature="__methodcall_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="67" name="new" signature="TkRoot.new(keys=nil, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="72" lineend="75" name="to_eval" signature="self.to_eval" />
        <scope ilk="function" line="77" lineend="79" name="create_self" signature="create_self" />
        <scope ilk="function" line="82" lineend="84" name="path" signature="path" />
        <scope ilk="function" line="86" lineend="95" name="add_menu" signature="add_menu(menu_info, tearoff=false, opts=nil)" />
        <scope ilk="function" line="97" lineend="103" name="add_menubar" signature="add_menubar(menu_spec, tearoff=false, opts=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="105" lineend="107" name="destroy" signature="TkRoot.destroy" />
        <import symbol="Wm" />
        <import symbol="TkMenuSpec" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/radiobutton">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/button" symbol="*" />
      <scope classrefs="TkButton" doc="tk/radiobutton.rb : treat radiobutton widget" ilk="class" line="7" lineend="65" name="TkRadioButton">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;radiobutton&apos;, @path, *hash_kv(keys,&#xA;true)) else tk_call_without_enc(&apos;radiobutton&apos;, @path)" ilk="function" line="20" lineend="22" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="25" lineend="27" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="30" lineend="34" name="__ruby2val_optkeys" signature="__ruby2val_optkeys" />
        <scope ilk="function" line="38" lineend="41" name="deselect" signature="deselect" />
        <scope ilk="function" line="42" lineend="45" name="select" signature="select" />
        <scope ilk="function" line="47" lineend="54" name="get_value" signature="get_value" />
        <scope ilk="function" line="56" lineend="64" name="set_value" signature="set_value(val)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/place">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/place.rb : control place geometry manager" ilk="namespace" line="6" lineend="112" name="TkPlace">
        <scope ilk="function" line="12" lineend="29" name="configure" signature="configure(win, slot, value=None)" />
        <scope ilk="function" line="32" lineend="60" name="configinfo" signature="configinfo(win, slot = nil)" />
        <scope ilk="function" line="62" lineend="83" name="current_configinfo" signature="current_configinfo(win, slot = nil)" />
        <scope ilk="function" line="85" lineend="89" name="forget" signature="forget(win)" />
        <scope ilk="function" line="91" lineend="102" name="info" signature="info(win)" />
        <scope ilk="function" line="104" lineend="108" name="slaves" signature="slaves(master)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/panedwindow">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/panedwindow.rb : treat panedwindow" ilk="class" line="6" lineend="231" name="TkPanedWindow">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;panedwindow&apos;, @path, *hash_kv(keys,&#xA;true)) else tk_call_without_enc(&apos;panedwindow&apos;, @path)" ilk="function" line="19" lineend="35" name="add" signature="add(*args)" />
        <scope ilk="function" line="37" lineend="42" name="forget" signature="forget(win, *wins)" />
        <scope ilk="function" line="47" lineend="49" name="identify" signature="identify(x, y)" />
        <scope ilk="function" line="51" lineend="53" name="proxy_coord" signature="proxy_coord" />
        <scope ilk="function" line="54" lineend="57" name="proxy_forget" signature="proxy_forget" />
        <scope ilk="function" line="58" lineend="61" name="proxy_place" signature="proxy_place(x, y)" />
        <scope ilk="function" line="63" lineend="65" name="sash_coord" signature="sash_coord(index)" />
        <scope ilk="function" line="66" lineend="69" name="sash_dragto" signature="sash_dragto(index, x, y)" />
        <scope ilk="function" line="70" lineend="73" name="sash_mark" signature="sash_mark(index, x, y)" />
        <scope ilk="function" line="74" lineend="77" name="sash_place" signature="sash_place(index, x, y)" />
        <scope ilk="function" line="79" lineend="83" name="panecget" signature="panecget(win, key)" />
        <scope ilk="function" line="85" lineend="102" name="paneconfigure" signature="paneconfigure(win, key, value=nil)" />
        <scope ilk="function" line="105" lineend="202" name="paneconfiginfo" signature="paneconfiginfo(win, key=nil)" />
        <scope ilk="function" line="205" lineend="224" name="current_paneconfiginfo" signature="current_paneconfiginfo(win, key=nil)" />
        <scope ilk="function" line="228" lineend="230" name="panes" signature="panes" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/palette">
      <import line="5" module="tk" symbol="*" />
      <scope doc="tk/palette.rb : methods for Tcl/Tk standard library&#xA;&apos;palette.tcl&apos; 1998/06/21 by Hidetoshi Nagai&#xA;&lt;nagai@ai.kyutech.ac.jp&gt;" ilk="namespace" line="7" lineend="55" name="TkPalette">
        <scope attributes="__classmethod__" ilk="function" line="17" lineend="20" name="set" signature="TkPalette.set(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="21" lineend="23" name="setPalette" signature="TkPalette.setPalette(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="25" lineend="27" name="bisque" signature="TkPalette.bisque" />
        <scope attributes="__classmethod__" ilk="function" line="29" lineend="31" name="darken" signature="TkPalette.darken(color, percent)" />
        <scope attributes="__classmethod__" ilk="function" line="33" lineend="50" name="recolorTree" signature="TkPalette.recolorTree(win, colors)" />
        <scope ilk="function" line="52" lineend="54" name="recolorTree" signature="recolorTree(colors)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/package">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/package.rb : package command" ilk="namespace" line="6" lineend="139" name="TkPackage">
        <scope ilk="function" line="12" lineend="14" name="add_path" signature="add_path(path)" />
        <scope ilk="function" line="16" lineend="19" name="forget" signature="forget(package)" />
        <scope ilk="function" line="21" lineend="49" name="if_needed" signature="if_needed(pkg, ver, *arg, &amp;b)" />
        <scope ilk="function" line="51" lineend="53" name="names" signature="names" />
        <scope ilk="function" line="55" lineend="64" name="provide" signature="provide(package, version=nil)" />
        <scope ilk="function" line="66" lineend="72" name="present" signature="present(package, version=None)" />
        <scope ilk="function" line="74" lineend="80" name="present_exact" signature="present_exact(package, version)" />
        <scope ilk="function" line="82" lineend="88" name="require" signature="require(package, version=None)" />
        <scope ilk="function" line="90" lineend="96" name="require_exact" signature="require_exact(package, version)" />
        <scope ilk="function" line="98" lineend="126" name="unknown_proc" signature="unknown_proc(*arg, &amp;b)" />
        <scope ilk="function" line="128" lineend="130" name="versions" signature="versions(package)" />
        <scope ilk="function" line="132" lineend="134" name="vcompare" signature="vcompare(version1, version2)" />
        <scope ilk="function" line="136" lineend="138" name="vsatisfies" signature="vsatisfies(version1, version2)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/pack">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/pack.rb : control pack geometry manager" ilk="namespace" line="6" lineend="71" name="TkPack">
        <scope ilk="function" line="12" lineend="31" name="configure" signature="configure(win, *args)" />
        <scope ilk="function" line="34" lineend="41" name="forget" signature="forget(*args)" />
        <scope ilk="function" line="43" lineend="52" name="info" signature="info(slave)" />
        <scope ilk="function" line="54" lineend="62" name="propagate" signature="propagate(master, mode=None)" />
        <scope ilk="function" line="64" lineend="68" name="slaves" signature="slaves(master)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/optionobj">
      <import line="10" module="tk" symbol="*" />
      <scope doc="tk/optionobj.rb : control options for a group of widgets" ilk="namespace" line="12" lineend="212" name="Tk">
        <scope classrefs="Hash" ilk="class" line="13" lineend="211" name="OptionObj">
          <scope attributes="__ctor__" ilk="function" line="16" lineend="20" name="initialize" signature="initialize(hash = nil)" />
          <scope ilk="function" line="22" lineend="24" name="observ_info" signature="observ_info" />
          <scope ilk="function" line="26" lineend="34" name="observs" signature="observs" />
          <scope ilk="function" line="36" lineend="55" name="_remove_win" signature="_remove_win(win)" />
          <scope ilk="function" line="58" lineend="89" name="assign" signature="assign(*wins)" />
          <scope ilk="function" line="91" lineend="96" name="unassign" signature="unassign(*wins)" />
          <scope ilk="function" line="98" lineend="159" name="notify" signature="notify(target = nil)" />
          <scope ilk="function" line="162" lineend="169" name="+" signature="+(hash" />
          <scope ilk="function" line="173" lineend="176" name="update" signature="update(hash)" />
          <scope ilk="function" line="178" lineend="184" name="configure" signature="configure(key, value=nil)" />
          <scope ilk="function" line="186" lineend="188" name="[]" signature="[](key" />
          <scope ilk="function" line="191" lineend="195" name="store" signature="store(key, val)" />
          <scope ilk="function" line="196" lineend="198" name="[]=" signature="[]=(key" />
          <scope ilk="function" line="200" lineend="203" name="replace" signature="replace(hash)" />
          <scope ilk="function" line="205" lineend="207" name="default" signature="default(opt)" />
          <import symbol="TkUtil" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/optiondb">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/optiondb.rb : treat option database" ilk="namespace" line="6" lineend="369" name="TkOptionDB">
        <scope ilk="namespace" line="13" lineend="18" name="Priority" />
        <scope ilk="function" line="20" lineend="25" name="add" signature="add(pat, value, pri=None)" />
        <scope ilk="function" line="26" lineend="31" name="clear" signature="clear" />
        <scope ilk="function" line="32" lineend="34" name="get" signature="get(win, name, klass)" />
        <scope ilk="function" line="35" lineend="37" name="readfile" signature="readfile(file, pri=None)" />
        <scope ilk="function" line="41" lineend="83" name="read_entries" signature="read_entries(file, f_enc=nil)" />
        <scope ilk="function" line="86" lineend="127" name="read_with_encoding" signature="read_with_encoding(file, f_enc=nil, pri=None)" />
        <scope classrefs="Object" doc="support procs on the resource database" ilk="class" line="140" lineend="209" name="@@resource_proc_class">
          <scope ilk="function" line="168" lineend="172" name="__check_proc_string__" signature="__check_proc_string__(str)" />
          <scope ilk="function" line="174" lineend="206" name="method_missing" signature="method_missing(id, *args)" />
        </scope>
        <scope ilk="function" line="250" lineend="299" name="__create_new_class" signature="__create_new_class(klass, func, safe = 4, add = false, parent = nil)" />
        <scope ilk="function" line="303" lineend="320" name="__remove_methods_of_proc_class" signature="__remove_methods_of_proc_class(klass)">
          <scope classrefs="Object" doc="for security, make these methods invalid" ilk="class" line="305" lineend="319" name="klass">
            <scope ilk="function" line="306" name="__null_method" signature="__null_method(*args)" />
          </scope>
        </scope>
        <scope ilk="function" line="327" lineend="336" name="__get_random_basename" signature="__get_random_basename" />
        <scope doc="define new proc class : If you want to modify the new class&#xA;or create a new subclass, you must do such operation in the&#xA;block parameter." ilk="function" line="344" lineend="350" name="new_proc_class" signature="new_proc_class(klass, func, safe = 4, add = false, parent = nil, &amp;b)" />
        <scope ilk="function" line="353" lineend="360" name="eval_under_random_base" signature="eval_under_random_base(parent = nil, &amp;b)" />
        <scope ilk="function" line="363" lineend="367" name="new_proc_class_random" signature="new_proc_class_random(klass, func, safe = 4, add = false, &amp;b)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/namespace">
      <import line="5" module="tk" symbol="*" />
      <scope classrefs="TkObject" doc="tk/namespace.rb : methods to manipulate Tcl/Tk namespace by&#xA;Hidetoshi Nagai &lt;nagai@ai.kyutech.ac.jp&gt;" ilk="class" line="7" lineend="484" name="TkNamespace">
        <scope attributes="__classmethod__" ilk="function" line="24" lineend="26" name="id2obj" signature="TkNamespace.id2obj(id)" />
        <scope classrefs="TkObject" ilk="class" line="30" lineend="121" name="Ensemble">
          <scope ilk="function" line="31" lineend="33" name="__cget_cmd" signature="__cget_cmd" />
          <scope ilk="function" line="36" lineend="38" name="__config_cmd" signature="__config_cmd" />
          <scope ilk="function" line="41" lineend="44" name="__configinfo_struct" signature="__configinfo_struct" />
          <scope ilk="function" line="47" lineend="49" name="__boolval_optkeys" signature="__boolval_optkeys" />
          <scope ilk="function" line="52" lineend="54" name="__listval_optkeys" signature="__listval_optkeys" />
          <scope attributes="__classmethod__" ilk="function" line="57" lineend="59" name="exist?" signature="self.exist?(ensemble)" />
          <scope attributes="__ctor__" ilk="function" line="61" lineend="63" name="initialize" signature="initialize(keys = {})" />
          <scope ilk="function" line="65" lineend="76" name="cget" signature="cget(slot)" />
          <scope ilk="function" line="78" lineend="116" name="configinfo" signature="configinfo(slot = nil)" />
          <scope ilk="function" line="118" lineend="120" name="exists?" signature="exists?" />
        </scope>
        <scope classrefs="Array" ilk="class" line="125" lineend="155" name="ScopeArgs">
          <scope doc="alias __tk_call             tk_call alias&#xA;__tk_call_without_enc tk_call_without_enc alias&#xA;__tk_call_with_enc    tk_call_with_enc" ilk="function" line="131" lineend="136" name="tk_call" signature="tk_call(*args)" />
          <scope ilk="function" line="137" lineend="142" name="tk_call_without_enc" signature="tk_call_without_enc(*args)" />
          <scope ilk="function" line="143" lineend="148" name="tk_call_with_enc" signature="tk_call_with_enc(*args)" />
          <scope attributes="__ctor__" ilk="function" line="150" lineend="154" name="initialize" signature="initialize(namespace, *args)" />
          <import symbol="Tk" />
        </scope>
        <scope classrefs="TkObject" ilk="class" line="159" lineend="177" name="NsCode">
          <scope attributes="__ctor__" ilk="function" line="160" lineend="163" name="initialize" signature="initialize(scope, use_obj_id = false)" />
          <scope ilk="function" line="164" lineend="166" name="path" signature="path" />
          <scope ilk="function" line="167" lineend="169" name="to_eval" signature="to_eval" />
          <scope ilk="function" line="170" lineend="176" name="call" signature="call(*args)" />
        </scope>
        <scope ilk="function" line="181" lineend="189" name="install_cmd" signature="install_cmd(cmd)" />
        <scope ilk="function" line="194" lineend="199" name="tk_call" signature="tk_call(*args)" />
        <scope ilk="function" line="200" lineend="205" name="tk_call_without_enc" signature="tk_call_without_enc(*args)" />
        <scope ilk="function" line="206" lineend="211" name="tk_call_with_enc" signature="tk_call_with_enc(*args)" />
        <scope attributes="__ctor__" ilk="function" line="216" lineend="256" name="initialize" signature="initialize(name = nil, parent = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="258" lineend="269" name="children" signature="self.children(*args)" />
        <scope ilk="function" line="270" lineend="272" name="children" signature="children(pattern=None)" />
        <scope attributes="__classmethod__" ilk="function" line="274" lineend="276" name="code" signature="self.code(script = Proc.new)" />
        <scope ilk="function" line="290" lineend="311" name="code" signature="code(script = Proc.new)" />
        <scope attributes="__classmethod__" ilk="function" line="313" lineend="315" name="current_path" signature="self.current_path" />
        <scope ilk="function" line="316" lineend="318" name="current_path" signature="current_path" />
        <scope attributes="__classmethod__" ilk="function" line="320" lineend="327" name="current" signature="self.current" />
        <scope ilk="function" line="328" lineend="332" name="current_namespace" signature="current_namespace" />
        <scope attributes="__classmethod__" ilk="function" line="335" lineend="344" name="delete" signature="self.delete(*ns_list)" />
        <scope ilk="function" line="345" lineend="347" name="delete" signature="delete" />
        <scope attributes="__classmethod__" ilk="function" line="349" lineend="351" name="ensemble_create" signature="self.ensemble_create(*keys)" />
        <scope attributes="__classmethod__" ilk="function" line="352" lineend="358" name="ensemble_configure" signature="self.ensemble_configure(cmd, slot, value=None)" />
        <scope attributes="__classmethod__" ilk="function" line="359" lineend="367" name="ensemble_configinfo" signature="self.ensemble_configinfo(cmd, slot = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="368" lineend="370" name="ensemble_exist?" signature="self.ensemble_exist?(cmd)" />
        <scope attributes="__classmethod__" ilk="function" line="372" lineend="375" name="eval" signature="self.eval(namespace, cmd = Proc.new, *args)" />
        <scope ilk="function" line="387" lineend="392" name="eval" signature="eval(cmd = Proc.new, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="394" lineend="396" name="exist?" signature="self.exist?(ns)" />
        <scope ilk="function" line="397" lineend="399" name="exist?" signature="exist?" />
        <scope attributes="__classmethod__" ilk="function" line="401" lineend="403" name="export" signature="self.export(*patterns)" />
        <scope attributes="__classmethod__" ilk="function" line="404" lineend="406" name="export_with_clear" signature="self.export_with_clear(*patterns)" />
        <scope ilk="function" line="407" lineend="409" name="export" signature="export" />
        <scope ilk="function" line="410" lineend="412" name="export_with_clear" signature="export_with_clear" />
        <scope attributes="__classmethod__" ilk="function" line="414" lineend="416" name="forget" signature="self.forget(*patterns)" />
        <scope ilk="function" line="417" lineend="419" name="forget" signature="forget" />
        <scope attributes="__classmethod__" ilk="function" line="421" lineend="423" name="import" signature="self.import(*patterns)" />
        <scope attributes="__classmethod__" ilk="function" line="424" lineend="426" name="force_import" signature="self.force_import(*patterns)" />
        <scope ilk="function" line="427" lineend="429" name="import" signature="import" />
        <scope ilk="function" line="430" lineend="432" name="force_import" signature="force_import" />
        <scope attributes="__classmethod__" ilk="function" line="434" lineend="436" name="inscope" signature="self.inscope(namespace, script, *args)" />
        <scope ilk="function" line="437" lineend="439" name="inscope" signature="inscope(script, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="441" lineend="443" name="origin" signature="self.origin(cmd)" />
        <scope attributes="__classmethod__" ilk="function" line="445" lineend="452" name="parent" signature="self.parent(namespace=None)" />
        <scope ilk="function" line="453" lineend="455" name="parent" signature="parent" />
        <scope attributes="__classmethod__" ilk="function" line="457" lineend="459" name="get_path" signature="self.get_path" />
        <scope attributes="__classmethod__" ilk="function" line="460" lineend="462" name="set_path" signature="self.set_path(*namespace_list)" />
        <scope ilk="function" line="463" lineend="465" name="set_path" signature="set_path" />
        <scope attributes="__classmethod__" ilk="function" line="467" lineend="469" name="qualifiers" signature="self.qualifiers(str)" />
        <scope attributes="__classmethod__" ilk="function" line="471" lineend="473" name="tail" signature="self.tail(str)" />
        <scope attributes="__classmethod__" ilk="function" line="475" lineend="477" name="which" signature="self.which(name)" />
        <scope attributes="__classmethod__" ilk="function" line="478" lineend="480" name="which_command" signature="self.which_command(name)" />
        <scope attributes="__classmethod__" ilk="function" line="481" lineend="483" name="which_variable" signature="self.which_variable(name)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/msgcat">
      <import line="5" module="tk" symbol="*" />
      <scope classrefs="TkObject" doc="class TkMsgCatalog" ilk="class" line="8" lineend="289" name="TkMsgCatalog">
        <scope attributes="__classmethod__" doc="extend TkMsgCatalog" ilk="function" line="27" lineend="29" name="package_name" signature="self.package_name" />
        <scope attributes="__classmethod__" ilk="function" line="58" lineend="86" name="callback" signature="self.callback(namespace, locale, src_str, *args)" />
        <scope attributes="__ctor__" ilk="function" line="88" lineend="99" name="initialize" signature="initialize(namespace = nil)" />
        <scope ilk="function" line="100" lineend="100" name="msgcat_ext" />
        <scope ilk="function" line="100" lineend="100" name="msgcat_ext=" />
        <scope ilk="function" line="102" lineend="136" name="method_missing" signature="method_missing(id, *args)" />
        <scope attributes="__classmethod__" doc="*args ::= form, arg, arg, ..." ilk="function" line="139" lineend="144" name="translate" signature="self.translate(*args)" />
        <scope classrefs="Object" ilk="class" line="145" lineend="148" name="self" />
        <scope ilk="function" line="149" lineend="155" name="translate" signature="translate(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="159" lineend="161" name="maxlen" signature="self.maxlen(*src_strings)" />
        <scope ilk="function" line="162" lineend="164" name="maxlen" signature="maxlen(*src_strings)" />
        <scope attributes="__classmethod__" ilk="function" line="166" lineend="168" name="locale" signature="self.locale" />
        <scope ilk="function" line="169" lineend="171" name="locale" signature="locale" />
        <scope attributes="__classmethod__" ilk="function" line="173" lineend="175" name="locale=" signature="self.locale=(locale)" />
        <scope ilk="function" line="176" lineend="178" name="locale=" signature="locale=(locale)" />
        <scope attributes="__classmethod__" ilk="function" line="180" lineend="182" name="preferences" signature="self.preferences" />
        <scope ilk="function" line="183" lineend="185" name="preferences" signature="preferences" />
        <scope attributes="__classmethod__" ilk="function" line="187" lineend="189" name="load_tk" signature="self.load_tk(dir)" />
        <scope attributes="__classmethod__" ilk="function" line="191" lineend="201" name="load_rb" signature="self.load_rb(dir)" />
        <scope ilk="function" line="203" lineend="205" name="load_tk" signature="load_tk(dir)" />
        <scope ilk="function" line="207" lineend="217" name="load_rb" signature="load_rb(dir)" />
        <scope attributes="__classmethod__" ilk="function" line="219" lineend="221" name="load" signature="self.load(dir)" />
        <scope attributes="__classmethod__" ilk="function" line="224" lineend="236" name="set_translation" signature="self.set_translation(locale, src_str, trans_str=None, enc=&apos;utf-8&apos;)" />
        <scope ilk="function" line="237" lineend="252" name="set_translation" signature="set_translation(locale, src_str, trans_str=None, enc=&apos;utf-8&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="254" lineend="266" name="set_translation_list" signature="self.set_translation_list(locale, trans_list, enc=&apos;utf-8&apos;)" />
        <scope ilk="function" line="267" lineend="281" name="set_translation_list" signature="set_translation_list(locale, trans_list, enc=&apos;utf-8&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="283" lineend="285" name="def_unknown_proc" signature="self.def_unknown_proc(cmd=Proc.new)" />
        <scope ilk="function" line="286" lineend="288" name="def_unknown_proc" signature="def_unknown_proc(cmd=Proc.new)" />
        <import symbol="TkCore" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/mngfocus">
      <import line="5" module="tk" symbol="*" />
      <scope doc="tk/mngfocus.rb : methods for Tcl/Tk standard library&#xA;&apos;focus.tcl&apos; by Hidetoshi Nagai &lt;nagai@ai.kyutech.ac.jp&gt;" ilk="namespace" line="7" lineend="33" name="TkManageFocus">
        <scope attributes="__classmethod__" ilk="function" line="16" lineend="18" name="followsMouse" signature="TkManageFocus.followsMouse" />
        <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="next" signature="TkManageFocus.next(win)" />
        <scope ilk="function" line="23" lineend="25" name="focusNext" signature="focusNext" />
        <scope attributes="__classmethod__" ilk="function" line="27" lineend="29" name="prev" signature="TkManageFocus.prev(win)" />
        <scope ilk="function" line="30" lineend="32" name="focusPrev" signature="focusPrev" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/message">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/label" symbol="*" />
      <scope classrefs="TkLabel" doc="tk/message.rb : treat message widget" ilk="class" line="7" lineend="19" name="TkMessage" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/menuspec">
      <scope doc="tk/menuspec.rb Hidethoshi NAGAI (nagai@ai.kyutech.ac.jp)" ilk="namespace" line="41" lineend="269" name="TkMenuSpec">
        <scope ilk="function" line="42" lineend="148" name="_create_menu" signature="_create_menu(parent, menu_info, menu_name = nil, tearoff = false, default_opts = nil)" />
        <scope ilk="function" line="151" lineend="163" name="_use_menubar?" signature="_use_menubar?(parent)" />
        <scope ilk="function" line="166" lineend="172" name="_create_menu_for_menubar" signature="_create_menu_for_menubar(parent)" />
        <scope ilk="function" line="175" lineend="255" name="_create_menubutton" signature="_create_menubutton(parent, menu_info, tearoff=false, default_opts = nil)" />
        <scope ilk="function" line="258" lineend="267" name="_get_cascade_menus" signature="_get_cascade_menus(menu)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/menubar">
      <import line="87" module="tk" symbol="*" />
      <import line="88" module="tk/frame" symbol="*" />
      <import line="89" module="tk/composite" symbol="*" />
      <import line="90" module="tk/menuspec" symbol="*" />
      <scope classrefs="TkFrame" doc="tk/menubar.rb" ilk="class" line="92" lineend="131" name="TkMenubar">
        <scope attributes="__ctor__" ilk="function" line="96" lineend="110" name="initialize" signature="initialize(parent = nil, spec = nil, options = nil)" />
        <scope ilk="function" line="112" lineend="126" name="add_menu" signature="add_menu(menu_info)" />
        <scope ilk="function" line="128" lineend="130" name="[]" signature="[](index" />
        <import symbol="TkComposite" />
        <import symbol="TkMenuSpec" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/menu">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/itemconfig" symbol="*" />
      <import line="6" module="tk/menuspec" symbol="*" />
      <scope doc="tk/menu.rb : treat menu and menubutton" ilk="namespace" line="8" lineend="43" name="TkMenuEntryConfig">
        <scope ilk="function" line="11" lineend="13" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="16" lineend="18" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="21" lineend="23" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="26" lineend="28" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
        <scope ilk="function" line="31" lineend="33" name="__item_val2ruby_optkeys" signature="__item_val2ruby_optkeys(id)" />
      </scope>
      <scope classrefs="TkWindow" ilk="class" line="45" lineend="351" name="TkMenu">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;menu&apos;, @path, *hash_kv(keys, true))&#xA;else tk_call_without_enc(&apos;menu&apos;, @path)" ilk="function" line="62" lineend="64" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="67" lineend="69" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope attributes="__classmethod__" ilk="function" line="72" lineend="88" name="new_menuspec" signature="self.new_menuspec(menu_spec, parent = nil, tearoff = false, keys = nil)" />
        <scope ilk="function" line="90" lineend="93" name="tagid" signature="tagid(id)" />
        <scope ilk="function" line="95" lineend="98" name="activate" signature="activate(index)" />
        <scope ilk="function" line="99" lineend="102" name="add" signature="add(type, keys=nil)" />
        <scope ilk="function" line="103" lineend="105" name="add_cascade" signature="add_cascade(keys=nil)" />
        <scope ilk="function" line="106" lineend="108" name="add_checkbutton" signature="add_checkbutton(keys=nil)" />
        <scope ilk="function" line="109" lineend="111" name="add_command" signature="add_command(keys=nil)" />
        <scope ilk="function" line="112" lineend="114" name="add_radiobutton" signature="add_radiobutton(keys=nil)" />
        <scope ilk="function" line="115" lineend="117" name="add_separator" signature="add_separator(keys=nil)" />
        <scope ilk="function" line="118" lineend="121" name="index" signature="index(idx)" />
        <scope ilk="function" line="122" lineend="124" name="invoke" signature="invoke(index)" />
        <scope ilk="function" line="125" lineend="129" name="insert" signature="insert(index, type, keys=nil)" />
        <scope ilk="function" line="130" lineend="138" name="delete" signature="delete(first, last=nil)" />
        <scope ilk="function" line="139" lineend="147" name="popup" signature="popup(x, y, index=nil)" />
        <scope ilk="function" line="148" lineend="150" name="post" signature="post(x, y)" />
        <scope ilk="function" line="151" lineend="154" name="postcascade" signature="postcascade(index)" />
        <scope ilk="function" line="155" lineend="158" name="postcommand" signature="postcommand(cmd=Proc.new)" />
        <scope ilk="function" line="159" lineend="162" name="set_focus" signature="set_focus" />
        <scope ilk="function" line="163" lineend="166" name="tearoffcommand" signature="tearoffcommand(cmd=Proc.new)" />
        <scope ilk="function" line="167" lineend="169" name="menutype" signature="menutype(index)" />
        <scope ilk="function" line="170" lineend="173" name="unpost" signature="unpost" />
        <scope ilk="function" line="174" lineend="176" name="yposition" signature="yposition(index)" />
        <import symbol="TkMenuEntryConfig" />
      </scope>
      <scope classrefs="TkMenu" ilk="class" line="354" lineend="370" name="TkMenuClone">
        <scope attributes="__ctor__" ilk="function" line="355" lineend="369" name="initialize" signature="initialize(parent, type=None)" />
      </scope>
      <scope ilk="namespace" line="373" lineend="395" name="TkSystemMenu">
        <scope attributes="__ctor__" ilk="function" line="374" lineend="394" name="initialize" signature="initialize(parent, keys=nil)" />
      </scope>
      <scope classrefs="TkMenu" ilk="class" line="398" lineend="402" name="TkSysMenu_Help">
        <import symbol="TkSystemMenu" />
      </scope>
      <scope classrefs="TkMenu" ilk="class" line="405" lineend="409" name="TkSysMenu_System">
        <import symbol="TkSystemMenu" />
      </scope>
      <scope classrefs="TkMenu" ilk="class" line="412" lineend="416" name="TkSysMenu_Apple">
        <import symbol="TkSystemMenu" />
      </scope>
      <scope classrefs="TkLabel" ilk="class" line="419" lineend="440" name="TkMenubutton">
        <scope ilk="function" line="423" lineend="432" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="435" lineend="437" name="__boolval_optkeys" signature="__boolval_optkeys" />
      </scope>
      <scope classrefs="TkMenubutton" ilk="class" line="444" lineend="563" name="TkOptionMenubutton">
        <scope classrefs="TkMenu" ilk="class" line="447" lineend="453" name="OptionMenu">
          <scope attributes="__ctor__" ilk="function" line="448" lineend="452" name="initialize" signature="initialize(path)" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="455" lineend="497" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="499" lineend="501" name="value" signature="value" />
        <scope ilk="function" line="503" lineend="505" name="value=" signature="value=(val)" />
        <scope ilk="function" line="507" lineend="510" name="activate" signature="activate(index)" />
        <scope ilk="function" line="511" lineend="515" name="add" signature="add(value)" />
        <scope ilk="function" line="516" lineend="518" name="index" signature="index(index)" />
        <scope ilk="function" line="519" lineend="521" name="invoke" signature="invoke(index)" />
        <scope ilk="function" line="522" lineend="526" name="insert" signature="insert(index, value)" />
        <scope ilk="function" line="527" lineend="530" name="delete" signature="delete(index, last=None)" />
        <scope ilk="function" line="531" lineend="533" name="yposition" signature="yposition(index)" />
        <scope ilk="function" line="534" lineend="536" name="menu" signature="menu" />
        <scope ilk="function" line="537" lineend="539" name="menucget" signature="menucget(key)" />
        <scope ilk="function" line="540" lineend="543" name="menuconfigure" signature="menuconfigure(key, val=None)" />
        <scope ilk="function" line="544" lineend="546" name="menuconfiginfo" signature="menuconfiginfo(key=nil)" />
        <scope ilk="function" line="547" lineend="549" name="current_menuconfiginfo" signature="current_menuconfiginfo(key=nil)" />
        <scope ilk="function" line="550" lineend="552" name="entrycget" signature="entrycget(index, key)" />
        <scope ilk="function" line="553" lineend="556" name="entryconfigure" signature="entryconfigure(index, key, val=None)" />
        <scope ilk="function" line="557" lineend="559" name="entryconfiginfo" signature="entryconfiginfo(index, key=nil)" />
        <scope ilk="function" line="560" lineend="562" name="current_entryconfiginfo" signature="current_entryconfiginfo(index, key=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/macpkg">
      <import line="9" module="tk" symbol="*" />
      <scope doc="tk/macpkg.rb : methods for Tcl/Tk packages for Macintosh&#xA;2000/11/22 by Hidetoshi Nagai &lt;nagai@ai.kyutech.ac.jp&gt;" ilk="namespace" line="11" lineend="21" name="Tk">
        <scope attributes="__classmethod__" ilk="function" line="12" lineend="15" name="load_tclscript_rsrc" signature="Tk.load_tclscript_rsrc(resource_name, file=None)" />
        <scope attributes="__classmethod__" ilk="function" line="17" lineend="20" name="load_tclscript_rsrcid" signature="Tk.load_tclscript_rsrcid(resource_id, file=None)" />
      </scope>
      <scope ilk="namespace" line="23" lineend="73" name="TkMacResource">
        <scope attributes="__classmethod__" ilk="function" line="30" lineend="32" name="package_name" signature="self.package_name" />
        <scope ilk="function" line="36" lineend="38" name="close" signature="close(rsrcRef)" />
        <scope ilk="function" line="40" lineend="42" name="delete" signature="delete(rsrcType, opts=nil)" />
        <scope ilk="function" line="44" lineend="50" name="files" signature="files(rsrcRef=nil)" />
        <scope ilk="function" line="52" lineend="54" name="list" signature="list(rsrcType, rsrcRef=nil)" />
        <scope ilk="function" line="56" lineend="58" name="open" signature="open(fname, access=nil)" />
        <scope ilk="function" line="60" lineend="62" name="read" signature="read(rsrcType, rsrcID, rsrcRef=nil)" />
        <scope ilk="function" line="64" lineend="66" name="types" signature="types(rsrcRef=nil)" />
        <scope ilk="function" line="68" lineend="70" name="write" signature="write(rsrcType, data, opts=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/listbox">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/itemconfig" symbol="*" />
      <import line="6" module="tk/scrollable" symbol="*" />
      <import line="7" module="tk/txtwin_abst" symbol="*" />
      <scope doc="tk/listbox.rb : treat listbox widget" ilk="namespace" line="9" lineend="16" name="TkListItemConfig">
        <scope ilk="function" line="12" lineend="14" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
      </scope>
      <scope classrefs="TkTextWin" ilk="class" line="18" lineend="279" name="TkListbox">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;listbox&apos;, @path, *hash_kv(keys, true))&#xA;else tk_call_without_enc(&apos;listbox&apos;, @path)" ilk="function" line="35" lineend="37" name="__tkvariable_optkeys" signature="__tkvariable_optkeys" />
        <scope ilk="function" line="40" lineend="43" name="tagid" signature="tagid(id)" />
        <scope ilk="function" line="45" lineend="48" name="activate" signature="activate(y)" />
        <scope ilk="function" line="49" lineend="51" name="curselection" signature="curselection" />
        <scope ilk="function" line="52" lineend="59" name="get" signature="get(first, last=nil)" />
        <scope ilk="function" line="60" lineend="62" name="nearest" signature="nearest(y)" />
        <scope ilk="function" line="63" lineend="65" name="size" signature="size" />
        <scope ilk="function" line="66" lineend="69" name="selection_anchor" signature="selection_anchor(index)" />
        <scope ilk="function" line="70" lineend="73" name="selection_clear" signature="selection_clear(first, last=None)" />
        <scope ilk="function" line="74" lineend="76" name="selection_includes" signature="selection_includes(index)" />
        <scope ilk="function" line="77" lineend="80" name="selection_set" signature="selection_set(first, last=None)" />
        <scope ilk="function" line="82" lineend="84" name="index" signature="index(idx)" />
        <scope ilk="function" line="86" lineend="88" name="value" signature="value" />
        <scope ilk="function" line="90" lineend="98" name="value=" signature="value= (vals)" />
        <scope ilk="function" line="100" lineend="103" name="clear" signature="clear" />
        <import symbol="TkListItemConfig" />
        <import symbol="Scrollable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/labelframe">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/frame" symbol="*" />
      <scope classrefs="TkFrame" doc="tk/labelframe.rb : treat labelframe widget" ilk="class" line="7" lineend="24" name="TkLabelFrame">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;labelframe&apos;, @path, *hash_kv(keys,&#xA;true)) else tk_call_without_enc(&apos;labelframe&apos;, @path)" ilk="function" line="20" lineend="22" name="__val2ruby_optkeys" signature="__val2ruby_optkeys" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/label">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/label.rb : treat label widget" ilk="class" line="6" lineend="18" name="TkLabel" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/kinput">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/kinput.rb : control kinput" ilk="namespace" line="6" lineend="71" name="TkKinput">
        <scope attributes="__classmethod__" ilk="function" line="16" lineend="18" name="start" signature="TkKinput.start(win, style=None)" />
        <scope ilk="function" line="19" lineend="21" name="kinput_start" signature="kinput_start(style=None)" />
        <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="send_spot" signature="TkKinput.send_spot(win)" />
        <scope ilk="function" line="26" lineend="28" name="kinput_send_spot" signature="kinput_send_spot" />
        <scope attributes="__classmethod__" ilk="function" line="30" lineend="32" name="input_start" signature="TkKinput.input_start(win, keys=nil)" />
        <scope ilk="function" line="33" lineend="35" name="kanji_input_start" signature="kanji_input_start(keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="37" lineend="43" name="attribute_config" signature="TkKinput.attribute_config(win, slot, value=None)" />
        <scope ilk="function" line="44" lineend="46" name="kinput_attribute_config" signature="kinput_attribute_config(slot, value=None)" />
        <scope attributes="__classmethod__" ilk="function" line="48" lineend="60" name="attribute_info" signature="TkKinput.attribute_info(win, slot=nil)" />
        <scope ilk="function" line="61" lineend="63" name="kinput_attribute_info" signature="kinput_attribute_info(slot=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="65" lineend="67" name="input_end" signature="TkKinput.input_end(win)" />
        <scope ilk="function" line="68" lineend="70" name="kanji_input_end" signature="kanji_input_end" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/itemfont">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/itemfont.rb : control font of widget items" ilk="namespace" line="6" lineend="12" name="TkItemFontOptkeys">
        <scope ilk="function" line="7" lineend="10" name="__item_font_optkeys" signature="__item_font_optkeys(id)" />
      </scope>
      <scope ilk="namespace" line="14" lineend="300" name="TkTreatItemFont">
        <scope ilk="function" line="17" lineend="20" name="__item_pathname" signature="__item_pathname(id)" />
        <scope ilk="function" line="25" lineend="55" name="tagfont_configinfo" signature="tagfont_configinfo(tagOrId, key = nil)" />
        <scope ilk="function" line="58" lineend="121" name="tagfont_configure" signature="tagfont_configure(tagOrId, slot)" />
        <scope ilk="function" line="123" lineend="171" name="latintagfont_configure" signature="latintagfont_configure(tagOrId, ltn, keys=nil)" />
        <scope ilk="function" line="174" lineend="222" name="kanjitagfont_configure" signature="kanjitagfont_configure(tagOrId, knj, keys=nil)" />
        <scope ilk="function" line="224" lineend="247" name="tagfont_copy" signature="tagfont_copy(tagOrId, win, wintag=nil, winkey=nil, targetkey=nil)" />
        <scope ilk="function" line="250" lineend="273" name="latintagfont_copy" signature="latintagfont_copy(tagOrId, win, wintag=nil, winkey=nil, targetkey=nil)" />
        <scope ilk="function" line="276" lineend="299" name="kanjifont_copy" signature="kanjifont_copy(tagOrId, win, wintag=nil, winkey=nil, targetkey=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/itemconfig">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tkutil" symbol="*" />
      <import line="6" module="tk/itemfont.rb" symbol="*" />
      <scope doc="tk/itemconfig.rb : control item/tag configuration of widget" ilk="namespace" line="8" lineend="111" name="TkItemConfigOptkeys">
        <scope ilk="function" line="11" lineend="13" name="__item_numval_optkeys" signature="__item_numval_optkeys(id)" />
        <scope ilk="function" line="16" lineend="18" name="__item_numstrval_optkeys" signature="__item_numstrval_optkeys(id)" />
        <scope ilk="function" line="21" lineend="23" name="__item_boolval_optkeys" signature="__item_boolval_optkeys(id)" />
        <scope ilk="function" line="26" lineend="35" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="38" lineend="40" name="__item_listval_optkeys" signature="__item_listval_optkeys(id)" />
        <scope ilk="function" line="43" lineend="46" name="__item_numlistval_optkeys" signature="__item_numlistval_optkeys(id)" />
        <scope ilk="function" line="49" lineend="51" name="__item_tkvariable_optkeys" signature="__item_tkvariable_optkeys(id)" />
        <scope ilk="function" line="54" lineend="58" name="__item_val2ruby_optkeys" signature="__item_val2ruby_optkeys(id)" />
        <scope ilk="function" line="61" lineend="66" name="__item_ruby2val_optkeys" signature="__item_ruby2val_optkeys(id)" />
        <scope ilk="function" line="69" lineend="76" name="__item_methodcall_optkeys" signature="__item_methodcall_optkeys(id)" />
        <scope ilk="function" line="81" lineend="84" name="__item_keyonly_optkeys" signature="__item_keyonly_optkeys(id)" />
        <scope ilk="function" line="88" lineend="106" name="__conv_item_keyonly_opts" signature="__conv_item_keyonly_opts(id, keys)" />
        <scope ilk="function" line="108" lineend="110" name="itemconfig_hash_kv" signature="itemconfig_hash_kv(id, keys, enc_mode = nil, conf = nil)" />
      </scope>
      <scope ilk="namespace" line="113" lineend="1056" name="TkItemConfigMethod">
        <scope ilk="function" line="118" lineend="121" name="__item_cget_cmd" signature="__item_cget_cmd(id)" />
        <scope ilk="function" line="124" lineend="127" name="__item_config_cmd" signature="__item_config_cmd(id)" />
        <scope ilk="function" line="130" lineend="133" name="__item_confinfo_cmd" signature="__item_confinfo_cmd(id)" />
        <scope ilk="function" line="136" lineend="140" name="__item_configinfo_struct" signature="__item_configinfo_struct(id)" />
        <scope ilk="function" line="145" lineend="148" name="tagid" signature="tagid(tagOrId)" />
        <scope ilk="function" line="152" lineend="226" name="itemcget" signature="itemcget(tagOrId, option)" />
        <scope ilk="function" line="228" lineend="290" name="itemconfigure" signature="itemconfigure(tagOrId, slot, value=None)" />
        <scope ilk="function" line="292" lineend="1022" name="itemconfiginfo" signature="itemconfiginfo(tagOrId, slot = nil)" />
        <scope ilk="function" line="1024" lineend="1055" name="current_itemconfiginfo" signature="current_itemconfiginfo(tagOrId, slot = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/image">
      <import line="5" module="tk" symbol="*" />
      <scope classrefs="TkObject" doc="tk/image.rb : treat Tk image objects" ilk="class" line="7" lineend="96" name="TkImage">
        <scope attributes="__classmethod__" ilk="function" line="17" lineend="47" name="new" signature="self.new(keys=nil)" />
        <scope attributes="__ctor__" ilk="function" line="49" lineend="67" name="initialize" signature="initialize(keys=nil)" />
        <scope ilk="function" line="69" lineend="73" name="delete" signature="delete" />
        <scope ilk="function" line="74" lineend="76" name="height" signature="height" />
        <scope ilk="function" line="77" lineend="79" name="inuse" signature="inuse" />
        <scope ilk="function" line="80" lineend="82" name="itemtype" signature="itemtype" />
        <scope ilk="function" line="83" lineend="85" name="width" signature="width" />
        <scope attributes="__classmethod__" ilk="function" line="87" lineend="91" name="names" signature="TkImage.names" />
        <scope attributes="__classmethod__" ilk="function" line="93" lineend="95" name="types" signature="TkImage.types" />
        <import symbol="Tk" />
      </scope>
      <scope classrefs="TkImage" ilk="class" line="98" lineend="108" name="TkBitmapImage">
        <scope ilk="function" line="99" lineend="101" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="104" lineend="107" name="initialize" signature="initialize(*args)" />
      </scope>
      <scope classrefs="TkImage" ilk="class" line="110" lineend="237" name="TkPhotoImage">
        <scope ilk="function" line="113" lineend="125" name="_photo_hash_kv" signature="_photo_hash_kv(keys)" />
        <scope attributes="__ctor__" ilk="function" line="128" lineend="131" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="133" lineend="136" name="blank" signature="blank" />
        <scope ilk="function" line="138" lineend="145" name="cget" signature="cget(option)" />
        <scope ilk="function" line="147" lineend="164" name="copy" signature="copy(src, *opts)" />
        <scope ilk="function" line="166" lineend="169" name="data" signature="data(keys={})" />
        <scope ilk="function" line="171" lineend="173" name="get" signature="get(x, y)" />
        <scope ilk="function" line="175" lineend="185" name="put" signature="put(data, *opts)" />
        <scope ilk="function" line="187" lineend="204" name="read" signature="read(file, *opts)" />
        <scope ilk="function" line="206" lineend="209" name="redither" signature="redither" />
        <scope ilk="function" line="211" lineend="213" name="get_transparency" signature="get_transparency(x, y)" />
        <scope ilk="function" line="214" lineend="217" name="set_transparency" signature="set_transparency(x, y, st)" />
        <scope ilk="function" line="219" lineend="236" name="write" signature="write(file, *opts)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/grid">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/grid.rb : control grid geometry manager" ilk="namespace" line="6" lineend="196" name="TkGrid">
        <scope ilk="function" line="12" lineend="16" name="anchor" signature="anchor(master, anchor=None)" />
        <scope ilk="function" line="18" lineend="23" name="bbox" signature="bbox(master, *args)" />
        <scope ilk="function" line="25" lineend="55" name="configure" signature="configure(win, *args)" />
        <scope ilk="function" line="58" lineend="63" name="columnconfigure" signature="columnconfigure(master, index, args)" />
        <scope ilk="function" line="65" lineend="69" name="rowconfigure" signature="rowconfigure(master, index, args)" />
        <scope ilk="function" line="71" lineend="98" name="columnconfiginfo" signature="columnconfiginfo(master, index, slot=nil)" />
        <scope ilk="function" line="100" lineend="127" name="rowconfiginfo" signature="rowconfiginfo(master, index, slot=nil)" />
        <scope ilk="function" line="129" lineend="131" name="add" signature="add(widget, *args)" />
        <scope ilk="function" line="133" lineend="140" name="forget" signature="forget(*args)" />
        <scope ilk="function" line="142" lineend="153" name="info" signature="info(slave)" />
        <scope ilk="function" line="155" lineend="159" name="location" signature="location(master, x, y)" />
        <scope ilk="function" line="161" lineend="169" name="propagate" signature="propagate(master, mode=None)" />
        <scope ilk="function" line="171" lineend="178" name="remove" signature="remove(*args)" />
        <scope ilk="function" line="180" lineend="184" name="size" signature="size(master)" />
        <scope ilk="function" line="186" lineend="190" name="slaves" signature="slaves(master, args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/frame">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/frame.rb : treat frame widget" ilk="class" line="6" lineend="128" name="TkFrame">
        <scope doc="old version def initialize(parent=nil, keys=nil) if&#xA;keys.kind_of? Hash keys = keys.dup @classname =&#xA;keys.delete(&apos;classname&apos;) if keys.key?(&apos;classname&apos;)" ilk="function" line="33" lineend="35" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope attributes="__ctor__" ilk="function" line="38" lineend="74" name="initialize" signature="initialize(parent=nil, keys=nil)" />
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;frame&apos;, @path, *hash_kv(keys)) else&#xA;tk_call_without_enc( &apos;frame&apos;, @path)" ilk="function" line="85" lineend="87" name="database_classname" signature="database_classname" />
        <scope attributes="__classmethod__" ilk="function" line="89" lineend="95" name="database_class" signature="self.database_class" />
        <scope attributes="__classmethod__" ilk="function" line="96" lineend="98" name="database_classname" signature="self.database_classname" />
        <scope attributes="__classmethod__" ilk="function" line="100" lineend="106" name="bind" signature="self.bind(*args, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="107" lineend="113" name="bind_append" signature="self.bind_append(*args, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="114" lineend="120" name="bind_remove" signature="self.bind_remove(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="121" lineend="127" name="bindinfo" signature="self.bindinfo(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/font">
      <import line="6" module="tk" symbol="*" />
      <scope classrefs="Object" doc="tk/font.rb - the class to treat fonts on Ruby/Tk" ilk="class" line="8" lineend="1206" name="TkFont">
        <scope classrefs="Object" ilk="class" line="119" lineend="160" name="DescendantFont">
          <scope attributes="__ctor__" ilk="function" line="120" lineend="133" name="initialize" signature="initialize(compound, type)" />
          <scope ilk="function" line="135" lineend="137" name="dup" signature="dup" />
          <scope ilk="function" line="138" lineend="140" name="clone" signature="clone" />
          <scope ilk="function" line="142" lineend="144" name="to_eval" signature="to_eval" />
          <scope ilk="function" line="145" lineend="147" name="font" signature="font" />
          <scope ilk="function" line="149" lineend="151" name="[]" signature="[](slot" />
          <scope ilk="function" line="152" lineend="155" name="[]=" signature="[]=(slot" />
          <scope ilk="function" line="157" lineend="159" name="method_missing" signature="method_missing(id, *args)" />
        </scope>
        <scope attributes="__classmethod__" doc="class methods" ilk="function" line="166" lineend="173" name="actual" signature="TkFont.actual(fnt, option=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="175" lineend="183" name="actual_displayof" signature="TkFont.actual_displayof(fnt, win, option=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="185" lineend="192" name="configure" signature="TkFont.configure(fnt, slot, value=None)" />
        <scope attributes="__classmethod__" ilk="function" line="194" lineend="200" name="configinfo" signature="TkFont.configinfo(fnt, slot=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="202" lineend="208" name="current_configinfo" signature="TkFont.current_configinfo(fnt, slot=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="210" lineend="217" name="measure" signature="TkFont.measure(fnt, text)" />
        <scope attributes="__classmethod__" ilk="function" line="219" lineend="227" name="measure_displayof" signature="TkFont.measure_displayof(fnt, win, text)" />
        <scope attributes="__classmethod__" ilk="function" line="229" lineend="236" name="metrics" signature="TkFont.metrics(fnt, option=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="238" lineend="246" name="metrics_displayof" signature="TkFont.metrics_displayof(fnt, win, option=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="248" lineend="260" name="families" signature="TkFont.families(win=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="262" lineend="274" name="names" signature="TkFont.names" />
        <scope attributes="__classmethod__" ilk="function" line="276" lineend="285" name="create_copy" signature="TkFont.create_copy(font)" />
        <scope attributes="__classmethod__" ilk="function" line="287" lineend="293" name="get_obj" signature="TkFont.get_obj(name)" />
        <scope attributes="__classmethod__" ilk="function" line="295" lineend="370" name="init_widget_font" signature="TkFont.init_widget_font(pathname, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="372" lineend="378" name="used_on" signature="TkFont.used_on(path=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="380" lineend="387" name="failsafe" signature="TkFont.failsafe(font)" />
        <scope ilk="function" line="394" lineend="433" name="init_dummy_fontobj" signature="init_dummy_fontobj" />
        <scope attributes="__ctor__" ilk="function" line="435" lineend="489" name="initialize" signature="initialize(ltn=nil, knj=nil, keys=nil)" />
        <scope ilk="function" line="491" lineend="502" name="initialize_copy" signature="initialize_copy(font)" />
        <scope ilk="function" line="504" lineend="523" name="_get_font_info_from_hash" signature="_get_font_info_from_hash(font)" />
        <scope ilk="function" line="525" lineend="570" name="create_latinfont_tk4x" signature="create_latinfont_tk4x(font)" />
        <scope ilk="function" line="572" lineend="619" name="create_kanjifont_tk4x" signature="create_kanjifont_tk4x(font)" />
        <scope ilk="function" line="621" lineend="632" name="create_compoundfont_tk4x" signature="create_compoundfont_tk4x(ltn, knj, keys)" />
        <scope ilk="function" line="634" lineend="677" name="create_latinfont_tk8x" signature="create_latinfont_tk8x(font)" />
        <scope ilk="function" line="679" lineend="724" name="create_kanjifont_tk8x" signature="create_kanjifont_tk8x(font)" />
        <scope ilk="function" line="726" lineend="838" name="create_compoundfont_tk8x" signature="create_compoundfont_tk8x(ltn, knj, keys)" />
        <scope ilk="function" line="843" lineend="845" name="inspect" signature="inspect" />
        <scope ilk="function" line="847" lineend="867" name="method_missing" signature="method_missing(id, *args)" />
        <scope ilk="function" line="869" lineend="891" name="call_font_configure" signature="call_font_configure(path, *args)" />
        <scope ilk="function" line="893" lineend="944" name="used" signature="used" />
        <scope ilk="function" line="946" lineend="948" name="id" signature="id" />
        <scope ilk="function" line="950" lineend="952" name="to_eval" signature="to_eval" />
        <scope ilk="function" line="954" lineend="956" name="font" signature="font" />
        <scope ilk="function" line="959" lineend="961" name="latin_font_id" signature="latin_font_id" />
        <scope ilk="function" line="963" lineend="970" name="latin_font" signature="latin_font" />
        <scope ilk="function" line="973" lineend="975" name="kanji_font_id" signature="kanji_font_id" />
        <scope ilk="function" line="977" lineend="984" name="kanji_font" signature="kanji_font" />
        <scope ilk="function" line="987" lineend="989" name="actual" signature="actual(option=nil)" />
        <scope ilk="function" line="991" lineend="994" name="actual_displayof" signature="actual_displayof(win, option=nil)" />
        <scope ilk="function" line="996" lineend="998" name="latin_actual" signature="latin_actual(option=nil)" />
        <scope ilk="function" line="1000" lineend="1003" name="latin_actual_displayof" signature="latin_actual_displayof(win, option=nil)" />
        <scope ilk="function" line="1005" lineend="10121501212" name="kanji_actual" signature="kanji_actual(option=nil)" />
        <scope ilk="function" line="1014" lineend="1022" name="kanji_actual_displayof" signature="kanji_actual_displayof(win, option=nil)" />
        <scope ilk="function" line="1024" lineend="1026" name="[]" signature="[](slot" />
        <scope ilk="function" line="1028" lineend="1031" name="[]=" signature="[]=(slot" />
        <scope ilk="function" line="1033" lineend="1036" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="1038" lineend="1040" name="configinfo" signature="configinfo(slot=nil)" />
        <scope ilk="function" line="1042" lineend="1044" name="current_configinfo" signature="current_configinfo(slot=nil)" />
        <scope ilk="function" line="1046" lineend="1048" name="delete" signature="delete" />
        <scope ilk="function" line="1050" lineend="1057" name="latin_configure" signature="latin_configure(slot, value=None)" />
        <scope ilk="function" line="1059" lineend="1065" name="latin_configinfo" signature="latin_configinfo(slot=nil)" />
        <scope ilk="function" line="1067" lineend="1077" name="kanji_configure" signature="kanji_configure(slot, value=None)" />
        <scope ilk="function" line="1079" lineend="1087" name="kanji_configinfo" signature="kanji_configinfo(slot=nil)" />
        <scope ilk="function" line="1089" lineend="1094" name="replace" signature="replace(ltn, knj=None)" />
        <scope ilk="function" line="1096" lineend="1100" name="latin_replace" signature="latin_replace(ltn)" />
        <scope ilk="function" line="1102" lineend="1106" name="kanji_replace" signature="kanji_replace(knj)" />
        <scope ilk="function" line="1108" lineend="1110" name="measure" signature="measure(text)" />
        <scope ilk="function" line="1112" lineend="1115" name="measure_displayof" signature="measure_displayof(win, text)" />
        <scope ilk="function" line="1117" lineend="1119" name="metrics" signature="metrics(option=nil)" />
        <scope ilk="function" line="1121" lineend="1124" name="metrics_displayof" signature="metrics_displayof(win, option=nil)" />
        <scope ilk="function" line="1126" lineend="1128" name="latin_metrics" signature="latin_metrics(option=nil)" />
        <scope ilk="function" line="1130" lineend="1133" name="latin_metrics_displayof" signature="latin_metrics_displayof(win, option=nil)" />
        <scope ilk="function" line="1135" lineend="1141" name="kanji_metrics" signature="kanji_metrics(option=nil)" />
        <scope ilk="function" line="1143" lineend="1150" name="kanji_metrics_displayof" signature="kanji_metrics_displayof(win, option=nil)" />
        <scope ilk="function" line="1152" lineend="1161" name="reset_pointadjust" signature="reset_pointadjust" />
        <import symbol="Tk" />
      </scope>
      <scope ilk="namespace" line="1208" lineend="1755" name="TkFont::CoreMethods">
        <scope ilk="function" line="1214" lineend="1232" name="actual_core_tk4x" signature="actual_core_tk4x(font, win=nil, option=nil)" />
        <scope ilk="function" line="1234" lineend="1280" name="actual_core_tk8x" signature="actual_core_tk8x(font, win=nil, option=nil)" />
        <scope ilk="function" line="1282" lineend="1285" name="configure_core_tk4x" signature="configure_core_tk4x(font, slot, value=None)" />
        <scope ilk="function" line="1287" lineend="1309" name="configinfo_core_tk4x" signature="configinfo_core_tk4x(font, option=nil)" />
        <scope ilk="function" line="1311" lineend="1326" name="current_configinfo_core_tk4x" signature="current_configinfo_core_tk4x(font, option=nil)" />
        <scope ilk="function" line="1328" lineend="1393" name="configure_core_tk8x" signature="configure_core_tk8x(font, slot, value=None)" />
        <scope ilk="function" line="1395" lineend="1433" name="configinfo_core_tk8x" signature="configinfo_core_tk8x(font, option=nil)" />
        <scope ilk="function" line="1435" lineend="1469" name="current_configinfo_core_tk8x" signature="current_configinfo_core_tk8x(font, option=nil)" />
        <scope ilk="function" line="1471" lineend="1474" name="delete_core_tk4x" signature="delete_core_tk4x" />
        <scope ilk="function" line="1476" lineend="1491" name="delete_core_tk8x" signature="delete_core_tk8x" />
        <scope ilk="function" line="1493" lineend="1524" name="latin_replace_core_tk4x" signature="latin_replace_core_tk4x(ltn)" />
        <scope ilk="function" line="1526" lineend="1559" name="kanji_replace_core_tk4x" signature="kanji_replace_core_tk4x(knj)" />
        <scope ilk="function" line="1561" lineend="1624" name="latin_replace_core_tk8x" signature="latin_replace_core_tk8x(ltn)" />
        <scope ilk="function" line="1626" lineend="1667" name="kanji_replace_core_tk8x" signature="kanji_replace_core_tk8x(knj)" />
        <scope ilk="function" line="1669" lineend="1671" name="measure_core_tk4x" signature="measure_core_tk4x(font, win, text)" />
        <scope ilk="function" line="1673" lineend="1682" name="measure_core_tk8x" signature="measure_core_tk8x(font, win, text)" />
        <scope ilk="function" line="1684" lineend="1691" name="metrics_core_tk4x" signature="metrics_core_tk4x(font, win, option=nil)" />
        <scope ilk="function" line="1693" lineend="1715" name="metrics_core_tk8x" signature="metrics_core_tk8x(font, win, option=nil)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1757" lineend="1760" name="TkFont">
        <import symbol="TkFont::CoreMethods" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/event">
      <import line="10" module="tkutil" symbol="*" />
      <import line="11" module="tk" symbol="*" />
      <scope doc="tk/event.rb - module for event" ilk="namespace" line="5" lineend="6" name="TkEvent" />
      <scope ilk="namespace" line="15" lineend="445" name="TkEvent">
        <scope classrefs="TkUtil::CallbackSubst" ilk="class" line="16" lineend="400" name="Event">
          <scope ilk="namespace" line="17" lineend="48" name="Grp" />
          <scope doc="-----+-------------------+------------------+---------------&#xA;--------# ID |  const            |  group_flag      |&#xA;context_name         # -----+-------------------+-----------&#xA;-------+-----------------------#" ilk="namespace" line="94" lineend="95" name="TypeNum" />
          <scope attributes="__classmethod__" ilk="function" line="111" lineend="113" name="type_id" signature="self.type_id(name)" />
          <scope attributes="__classmethod__" ilk="function" line="115" lineend="117" name="type_name" signature="self.type_name(id)" />
          <scope attributes="__classmethod__" ilk="function" line="119" lineend="121" name="group_flag" signature="self.group_flag(id)" />
          <scope ilk="namespace" line="125" lineend="148" name="StateMask" />
          <scope doc="-------------------------------------------" ilk="function" line="215" lineend="231" name="valid_fields" signature="valid_fields(group_flag=nil)" />
          <scope ilk="function" line="233" lineend="247" name="valid_for_generate" signature="valid_for_generate(group_flag=nil)" />
          <scope ilk="function" line="249" lineend="290" name="generate" signature="generate(win, modkeys={})" />
        </scope>
        <scope ilk="function" line="404" lineend="440" name="install_bind_for_event_class" signature="install_bind_for_event_class(klass, cmd, *args)" />
        <scope ilk="function" line="442" lineend="444" name="install_bind" signature="install_bind(cmd, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/entry">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/label" symbol="*" />
      <import line="8" module="tk/scrollable" symbol="*" />
      <import line="9" module="tk/validation" symbol="*" />
      <scope classrefs="TkLabel" doc="tk/entry.rb - Tk entry classes $Date: 2005/10/22 22:16:24 $&#xA;by Yukihiro Matsumoto &lt;matz@caelum.co.jp&gt;" ilk="class" line="11" lineend="117" name="TkEntry">
        <scope doc="def create_self(keys) super(__conv_vcmd_on_hash_kv(keys))&#xA;end private :create_self" ilk="function" line="24" lineend="26" name="__strval_optkeys" signature="__strval_optkeys" />
        <scope ilk="function" line="29" lineend="31" name="bbox" signature="bbox(index)" />
        <scope ilk="function" line="32" lineend="34" name="cursor" signature="cursor" />
        <scope ilk="function" line="36" lineend="40" name="cursor=" signature="cursor=(index)" />
        <scope ilk="function" line="42" lineend="44" name="index" signature="index(idx)" />
        <scope ilk="function" line="45" lineend="48" name="insert" signature="insert(pos,text)" />
        <scope ilk="function" line="49" lineend="52" name="delete" signature="delete(first, last=None)" />
        <scope ilk="function" line="53" lineend="56" name="mark" signature="mark(pos)" />
        <scope ilk="function" line="57" lineend="60" name="dragto" signature="dragto(pos)" />
        <scope ilk="function" line="61" lineend="64" name="selection_adjust" signature="selection_adjust(index)" />
        <scope ilk="function" line="65" lineend="68" name="selection_clear" signature="selection_clear" />
        <scope ilk="function" line="69" lineend="72" name="selection_from" signature="selection_from(index)" />
        <scope ilk="function" line="73" lineend="75" name="selection_present" signature="selection_present()" />
        <scope ilk="function" line="76" lineend="79" name="selection_range" signature="selection_range(s, e)" />
        <scope ilk="function" line="80" lineend="83" name="selection_to" signature="selection_to(index)" />
        <scope ilk="function" line="85" lineend="87" name="invoke_validate" signature="invoke_validate" />
        <scope ilk="function" line="88" lineend="94" name="validate" signature="validate(mode = nil)" />
        <scope ilk="function" line="96" lineend="98" name="value" signature="value" />
        <scope ilk="function" line="99" lineend="103" name="value=" signature="value= (val)" />
        <scope ilk="function" line="107" lineend="109" name="[]" signature="[](*args" />
        <scope ilk="function" line="110" lineend="116" name="[]=" signature="[]=(*args" />
        <import symbol="X_Scrollable" />
        <import symbol="TkValidation" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/encodedstr">
      <import line="4" module="tk" symbol="*" />
      <scope doc="string with Tcl&apos;s encoding" ilk="namespace" line="9" lineend="111" name="Tk">
        <scope classrefs="String" ilk="class" line="10" lineend="80" name="EncodedString">
          <scope attributes="__classmethod__" ilk="function" line="13" lineend="16" name="subst_utf_backslash" signature="self.subst_utf_backslash(str)" />
          <scope attributes="__classmethod__" ilk="function" line="17" lineend="19" name="utf_backslash" signature="self.utf_backslash(str)" />
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="23" name="subst_tk_backslash" signature="self.subst_tk_backslash(str)" />
          <scope attributes="__classmethod__" ilk="function" line="25" lineend="33" name="utf_to_backslash_sequence" signature="self.utf_to_backslash_sequence(str)" />
          <scope attributes="__classmethod__" ilk="function" line="34" lineend="36" name="utf_to_backslash" signature="self.utf_to_backslash(str)" />
          <scope attributes="__classmethod__" ilk="function" line="38" lineend="58" name="to_backslash_sequence" signature="self.to_backslash_sequence(str)" />
          <scope attributes="__classmethod__" ilk="function" line="60" lineend="62" name="new_with_utf_backslash" signature="self.new_with_utf_backslash(str, enc = nil)" />
          <scope attributes="__classmethod__" ilk="function" line="64" lineend="66" name="new_without_utf_backslash" signature="self.new_without_utf_backslash(str, enc = nil)" />
          <scope attributes="__ctor__" ilk="function" line="68" lineend="77" name="initialize" signature="initialize(str, enc = nil)" />
          <scope ilk="function" line="79" lineend="79" name="encoding" />
        </scope>
        <scope classrefs="EncodedString" doc="def Tk.EncodedString(str, enc = nil)&#xA;Tk::EncodedString.new(str, enc) end" ilk="class" line="87" lineend="89" name="BinaryString" />
        <scope classrefs="EncodedString" doc="def Tk.BinaryString(str) Tk::BinaryString.new(str) end" ilk="class" line="96" lineend="106" name="UTF8_String">
          <scope attributes="__classmethod__" ilk="function" line="98" lineend="100" name="new" signature="self.new(str)" />
          <scope ilk="function" line="102" lineend="104" name="to_backslash_sequence" signature="to_backslash_sequence" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/dialog">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/variable.rb" symbol="*" />
      <scope classrefs="TkWindow" doc="tk/dialog.rb : create dialog boxes" ilk="class" line="7" lineend="258" name="TkDialogObj">
        <scope attributes="__classmethod__" ilk="function" line="12" lineend="16" name="show" signature="self.show(*args)" />
        <scope ilk="function" line="18" lineend="55" name="_set_button_config" signature="_set_button_config(configs)" />
        <scope doc="initialize tk_dialog" ilk="function" line="59" lineend="162" name="create_self" signature="create_self(keys)" />
        <scope ilk="function" line="165" lineend="194" name="show" signature="show" />
        <scope ilk="function" line="196" lineend="199" name="value" signature="value" />
        <scope ilk="function" line="201" lineend="203" name="name" signature="name (@val" />
        <scope doc="# following methods should be overridden for each dialog  #&#xA;#" ilk="function" line="212" lineend="215" name="title" signature="title" />
        <scope ilk="function" line="216" lineend="219" name="message" signature="message" />
        <scope ilk="function" line="220" lineend="223" name="message_config" signature="message_config" />
        <scope ilk="function" line="224" lineend="227" name="msgframe_config" signature="msgframe_config" />
        <scope ilk="function" line="228" lineend="232" name="bitmap" signature="bitmap" />
        <scope ilk="function" line="233" lineend="236" name="bitmap_config" signature="bitmap_config" />
        <scope ilk="function" line="237" lineend="241" name="default_button" signature="default_button" />
        <scope ilk="function" line="242" lineend="245" name="buttons" signature="buttons" />
        <scope ilk="function" line="246" lineend="249" name="button_configs" signature="button_configs(num)" />
        <scope ilk="function" line="250" lineend="253" name="btnframe_config" signature="btnframe_config" />
        <scope ilk="function" line="254" lineend="257" name="prev_command" signature="prev_command" />
      </scope>
      <scope classrefs="TkDialogObj" doc="TkDialog : with showing at initialize" ilk="class" line="264" lineend="273" name="TkDialog">
        <scope attributes="__classmethod__" ilk="function" line="265" lineend="267" name="show" signature="self.show(*args)" />
        <scope attributes="__ctor__" ilk="function" line="269" lineend="272" name="initialize" signature="initialize(*args)" />
      </scope>
      <scope classrefs="TkDialogObj" doc="dialog for warning" ilk="class" line="279" lineend="315" name="TkWarningObj">
        <scope attributes="__ctor__" ilk="function" line="280" lineend="290" name="initialize" signature="initialize(parent = nil, mes = nil)" />
        <scope ilk="function" line="292" lineend="298" name="show" signature="show(mes = nil)" />
        <scope ilk="function" line="303" lineend="305" name="title" signature="title" />
        <scope ilk="function" line="306" lineend="308" name="bitmap" signature="bitmap" />
        <scope ilk="function" line="309" lineend="311" name="default_button" signature="default_button" />
        <scope ilk="function" line="312" lineend="314" name="buttons" signature="buttons" />
      </scope>
      <scope classrefs="TkWarningObj" ilk="class" line="318" lineend="326" name="TkWarning">
        <scope attributes="__classmethod__" ilk="function" line="319" lineend="321" name="show" signature="self.show(*args)" />
        <scope attributes="__ctor__" ilk="function" line="322" lineend="325" name="initialize" signature="initialize(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/console">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/console.rb : control the console on system without a real&#xA;console" ilk="namespace" line="6" lineend="52" name="TkConsole">
        <scope attributes="__classmethod__" ilk="function" line="12" lineend="14" name="create" signature="self.create" />
        <scope attributes="__classmethod__" doc="initialize console" ilk="function" line="17" lineend="19" name="title" signature="self.title(str=None)" />
        <scope attributes="__classmethod__" ilk="function" line="20" lineend="22" name="hide" signature="self.hide" />
        <scope attributes="__classmethod__" ilk="function" line="23" lineend="25" name="show" signature="self.show" />
        <scope attributes="__classmethod__" ilk="function" line="26" lineend="33" name="eval" signature="self.eval(tcl_script)" />
        <scope attributes="__classmethod__" ilk="function" line="34" lineend="42" name="maininterp_eval" signature="self.maininterp_eval(tcl_script)" />
        <scope attributes="__classmethod__" ilk="function" line="43" lineend="51" name="maininterp_record" signature="self.maininterp_record(tcl_script)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/composite">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/composite.rb :" ilk="namespace" line="6" lineend="293" name="TkComposite">
        <scope attributes="__ctor__" ilk="function" line="10" lineend="26" name="initialize" signature="initialize(parent=nil, *args)" />
        <scope ilk="function" line="28" lineend="30" name="epath" signature="epath" />
        <scope ilk="function" line="32" name="initialize_composite" signature="initialize_composite(*args)" />
        <scope ilk="function" line="35" lineend="45" name="option_methods" signature="option_methods(*opts)" />
        <scope ilk="function" line="47" lineend="65" name="delegate_alias" signature="delegate_alias(alias_opt, option, *wins)" />
        <scope ilk="function" line="67" lineend="69" name="delegate" signature="delegate(option, *wins)" />
        <scope ilk="function" line="71" lineend="101" name="cget" signature="cget(slot)" />
        <scope ilk="function" line="103" lineend="138" name="configure" signature="configure(slot, value=None)" />
        <scope ilk="function" line="140" lineend="292" name="configinfo" signature="configinfo(slot = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/clock">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/clock.rb : methods for clock command" ilk="namespace" line="6" lineend="71" name="Tk">
        <scope ilk="namespace" line="7" lineend="70" name="Clock">
          <scope attributes="__classmethod__" ilk="function" line="11" lineend="13" name="add" signature="self.add(clk, *args)" />
          <scope attributes="__classmethod__" ilk="function" line="15" lineend="27" name="clicks" signature="self.clicks(ms=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="29" lineend="35" name="format" signature="self.format(clk, form=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="37" lineend="43" name="formatGMT" signature="self.formatGMT(clk, form=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="45" lineend="51" name="scan" signature="self.scan(str, base=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="53" lineend="59" name="scanGMT" signature="self.scanGMT(str, base=nil)" />
          <scope attributes="__classmethod__" ilk="function" line="61" lineend="63" name="seconds" signature="self.seconds" />
          <scope attributes="__classmethod__" ilk="function" line="64" lineend="66" name="milliseconds" signature="self.milliseconds" />
          <scope attributes="__classmethod__" ilk="function" line="67" lineend="69" name="microseconds" signature="self.microseconds" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/clipboard">
      <import line="4" module="tk" symbol="*" />
      <scope doc="tk/clipboard.rb : methods to treat clipboard" ilk="namespace" line="6" lineend="75" name="TkClipboard">
        <scope attributes="__classmethod__" ilk="function" line="12" lineend="18" name="clear" signature="self.clear(win=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="clear_on_display" signature="self.clear_on_display(win)" />
        <scope attributes="__classmethod__" ilk="function" line="23" lineend="29" name="get" signature="self.get(type=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="30" lineend="36" name="get_on_display" signature="self.get_on_display(win, type=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="41" name="set" signature="self.set(data, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="42" lineend="45" name="set_on_display" signature="self.set_on_display(win, data, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="47" lineend="52" name="append" signature="self.append(data, keys=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="53" lineend="58" name="append_on_display" signature="self.append_on_display(win, data, keys=nil)" />
        <scope ilk="function" line="60" lineend="63" name="clear" signature="clear" />
        <scope ilk="function" line="64" lineend="66" name="get" signature="get(type=nil)" />
        <scope ilk="function" line="67" lineend="70" name="set" signature="set(data, keys=nil)" />
        <scope ilk="function" line="71" lineend="74" name="append" signature="append(data, keys=nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/checkbutton">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/radiobutton" symbol="*" />
      <scope classrefs="TkRadioButton" doc="tk/checkbutton.rb : treat checkbutton widget" ilk="class" line="7" lineend="24" name="TkCheckButton">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;checkbutton&apos;, @path, *hash_kv(keys,&#xA;true)) else tk_call_without_enc(&apos;checkbutton&apos;, @path)" ilk="function" line="20" lineend="23" name="toggle" signature="toggle" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/canvastag">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/tagfont" symbol="*" />
      <import line="12" module="tk/canvas" symbol="*" />
      <scope doc="tk/canvastag.rb - methods for treating canvas tags" ilk="namespace" line="7" lineend="10" name="TkcTagAccess" />
      <scope ilk="namespace" line="14" lineend="196" name="TkcTagAccess">
        <scope ilk="function" line="15" lineend="18" name="addtag" signature="addtag(tag)" />
        <scope ilk="function" line="20" lineend="22" name="bbox" signature="bbox" />
        <scope doc="def bind(seq, cmd=Proc.new, *args) @c.itembind(@id, seq,&#xA;cmd, *args) self end" ilk="function" line="28" lineend="37" name="bind" signature="bind(seq, *args)" />
        <scope doc="def bind_append(seq, cmd=Proc.new, *args)&#xA;@c.itembind_append(@id, seq, cmd, *args) self end" ilk="function" line="43" lineend="52" name="bind_append" signature="bind_append(seq, *args)" />
        <scope ilk="function" line="54" lineend="57" name="bind_remove" signature="bind_remove(seq)" />
        <scope ilk="function" line="59" lineend="61" name="bindinfo" signature="bindinfo(seq=nil)" />
        <scope ilk="function" line="63" lineend="65" name="cget" signature="cget(option)" />
        <scope ilk="function" line="67" lineend="70" name="configure" signature="configure(key, value=None)" />
        <scope doc="def configure(keys) @c.itemconfigure @id, keys end" ilk="function" line="75" lineend="77" name="configinfo" signature="configinfo(key=nil)" />
        <scope ilk="function" line="79" lineend="81" name="current_configinfo" signature="current_configinfo(key=nil)" />
        <scope ilk="function" line="83" lineend="85" name="coords" signature="coords(*args)" />
        <scope ilk="function" line="87" lineend="90" name="dchars" signature="dchars(first, last=None)" />
        <scope ilk="function" line="92" lineend="95" name="dtag" signature="dtag(tag_to_del=None)" />
        <scope ilk="function" line="98" lineend="100" name="find" signature="find" />
        <scope ilk="function" line="103" lineend="105" name="focus" signature="focus" />
        <scope ilk="function" line="107" lineend="109" name="gettags" signature="gettags" />
        <scope ilk="function" line="111" lineend="114" name="icursor" signature="icursor(index)" />
        <scope ilk="function" line="116" lineend="118" name="index" signature="index(idx)" />
        <scope ilk="function" line="120" lineend="123" name="insert" signature="insert(beforethis, string)" />
        <scope ilk="function" line="125" lineend="128" name="lower" signature="lower(belowthis=None)" />
        <scope ilk="function" line="130" lineend="133" name="move" signature="move(xamount, yamount)" />
        <scope ilk="function" line="135" lineend="138" name="raise" signature="raise(abovethis=None)" />
        <scope ilk="function" line="140" lineend="143" name="scale" signature="scale(xorigin, yorigin, xscale, yscale)" />
        <scope ilk="function" line="145" lineend="148" name="select_adjust" signature="select_adjust(index)" />
        <scope ilk="function" line="149" lineend="152" name="select_from" signature="select_from(index)" />
        <scope ilk="function" line="153" lineend="156" name="select_to" signature="select_to(index)" />
        <scope ilk="function" line="158" lineend="160" name="itemtype" signature="itemtype" />
        <scope doc="Following operators support logical expressions of canvas&#xA;tags (for Tk8.3+)." ilk="function" line="169" lineend="175" name="&amp;" signature="&amp; (tag" />
        <scope ilk="function" line="177" lineend="183" name="|" signature="| (tag" />
        <scope ilk="function" line="185" lineend="191" name="^" signature="^ (tag" />
        <scope ilk="function" line="193" lineend="195" name="-" signature="-" />
      </scope>
      <scope classrefs="TkObject" ilk="class" line="198" lineend="288" name="TkcTag">
        <scope attributes="__classmethod__" ilk="function" line="206" lineend="210" name="id2obj" signature="TkcTag.id2obj(canvas, id)" />
        <scope attributes="__ctor__" ilk="function" line="212" lineend="226" name="initialize" signature="initialize(parent, mode=nil, *args)" />
        <scope ilk="function" line="227" lineend="229" name="id" signature="id" />
        <scope ilk="function" line="231" lineend="237" name="exist?" signature="exist?" />
        <scope ilk="function" line="239" lineend="243" name="delete" signature="delete" />
        <scope ilk="function" line="247" lineend="250" name="set_to_above" signature="set_to_above(target)" />
        <scope ilk="function" line="253" lineend="256" name="set_to_all" signature="set_to_all" />
        <scope ilk="function" line="259" lineend="262" name="set_to_below" signature="set_to_below(target)" />
        <scope ilk="function" line="265" lineend="268" name="set_to_closest" signature="set_to_closest(x, y, halo=None, start=None)" />
        <scope ilk="function" line="271" lineend="274" name="set_to_enclosed" signature="set_to_enclosed(x1, y1, x2, y2)" />
        <scope ilk="function" line="277" lineend="280" name="set_to_overlapping" signature="set_to_overlapping(x1, y1, x2, y2)" />
        <scope ilk="function" line="283" lineend="286" name="set_to_withtag" signature="set_to_withtag(target)" />
        <import symbol="TkcTagAccess" />
      </scope>
      <scope classrefs="TkcTag" ilk="class" line="290" lineend="312" name="TkcTagString">
        <scope attributes="__classmethod__" ilk="function" line="291" lineend="297" name="new" signature="self.new(parent, name, *args)" />
        <scope attributes="__ctor__" ilk="function" line="299" lineend="311" name="initialize" signature="initialize(parent, name, mode=nil, *args)" />
      </scope>
      <scope classrefs="TkcTag" ilk="class" line="315" lineend="326" name="TkcTagAll">
        <scope attributes="__ctor__" ilk="function" line="316" lineend="325" name="initialize" signature="initialize(parent)" />
      </scope>
      <scope classrefs="TkcTag" ilk="class" line="328" lineend="339" name="TkcTagCurrent">
        <scope attributes="__ctor__" ilk="function" line="329" lineend="338" name="initialize" signature="initialize(parent)" />
      </scope>
      <scope classrefs="TkcTag" ilk="class" line="341" lineend="375" name="TkcGroup">
        <scope attributes="__ctor__" doc="def create_self(parent, *args)" ilk="function" line="344" lineend="356" name="initialize" signature="initialize(parent, *args)" />
        <scope doc="private :create_self" ilk="function" line="359" lineend="365" name="include" signature="include(*tags)" />
        <import symbol="def" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/canvas">
      <import line="6" module="tk" symbol="*" />
      <import line="7" module="tk/canvastag" symbol="*" />
      <import line="8" module="tk/itemconfig" symbol="*" />
      <import line="9" module="tk/scrollable" symbol="*" />
      <scope doc="tk/canvas.rb - Tk canvas classes $Date: 2005/10/24 00:07:00&#xA;$ by Yukihiro Matsumoto &lt;matz@caelum.co.jp&gt;" ilk="namespace" line="11" lineend="41" name="TkCanvasItemConfig">
        <scope ilk="function" line="14" lineend="20" name="__item_strval_optkeys" signature="__item_strval_optkeys(id)" />
        <scope ilk="function" line="23" lineend="25" name="__item_methodcall_optkeys" signature="__item_methodcall_optkeys(id)" />
        <scope ilk="function" line="28" lineend="30" name="__item_val2ruby_optkeys" signature="__item_val2ruby_optkeys(id)" />
        <scope ilk="function" line="33" lineend="39" name="__item_pathname" signature="__item_pathname(tagOrId)" />
      </scope>
      <scope classrefs="TkWindow" ilk="class" line="43" lineend="574" name="TkCanvas">
        <scope ilk="function" line="51" lineend="53" name="__destroy_hook__" signature="__destroy_hook__" />
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;canvas&apos;, @path, *hash_kv(keys, true))&#xA;else tk_call_without_enc(&apos;canvas&apos;, @path)" ilk="function" line="64" lineend="66" name="__numval_optkeys" signature="__numval_optkeys" />
        <scope ilk="function" line="69" lineend="71" name="__boolval_optkeys" signature="__boolval_optkeys" />
        <scope ilk="function" line="74" lineend="80" name="tagid" signature="tagid(tag)" />
        <scope doc="create a canvas item without creating a TkcItem object" ilk="function" line="85" lineend="87" name="create" signature="create(type, *args)" />
        <scope ilk="function" line="90" lineend="97" name="addtag" signature="addtag(tag, mode, *args)" />
        <scope ilk="function" line="98" lineend="100" name="addtag_above" signature="addtag_above(tagOrId, target)" />
        <scope ilk="function" line="101" lineend="103" name="addtag_all" signature="addtag_all(tagOrId)" />
        <scope ilk="function" line="104" lineend="106" name="addtag_below" signature="addtag_below(tagOrId, target)" />
        <scope ilk="function" line="107" lineend="109" name="addtag_closest" signature="addtag_closest(tagOrId, x, y, halo=None, start=None)" />
        <scope ilk="function" line="110" lineend="112" name="addtag_enclosed" signature="addtag_enclosed(tagOrId, x1, y1, x2, y2)" />
        <scope ilk="function" line="113" lineend="115" name="addtag_overlapping" signature="addtag_overlapping(tagOrId, x1, y1, x2, y2)" />
        <scope ilk="function" line="116" lineend="118" name="addtag_withtag" signature="addtag_withtag(tagOrId, tag)" />
        <scope ilk="function" line="120" lineend="123" name="bbox" signature="bbox(tagOrId, *tags)" />
        <scope doc="def itembind(tag, context, cmd=Proc.new, *args) _bind([path,&#xA;&quot;bind&quot;, tagid(tag)], context, cmd, *args) self end" ilk="function" line="129" lineend="138" name="itembind" signature="itembind(tag, context, *args)" />
        <scope doc="def itembind_append(tag, context, cmd=Proc.new, *args)&#xA;_bind_append([path, &quot;bind&quot;, tagid(tag)], context, cmd,&#xA;*args) self end" ilk="function" line="144" lineend="153" name="itembind_append" signature="itembind_append(tag, context, *args)" />
        <scope ilk="function" line="155" lineend="158" name="itembind_remove" signature="itembind_remove(tag, context)" />
        <scope ilk="function" line="160" lineend="162" name="itembindinfo" signature="itembindinfo(tag, context=nil)" />
        <scope ilk="function" line="164" lineend="167" name="canvasx" signature="canvasx(screen_x, *args)" />
        <scope ilk="function" line="168" lineend="171" name="canvasy" signature="canvasy(screen_y, *args)" />
        <scope ilk="function" line="173" lineend="180" name="coords" signature="coords(tag, *args)" />
        <scope ilk="function" line="182" lineend="186" name="dchars" signature="dchars(tag, first, last=None)" />
        <scope ilk="function" line="188" lineend="200" name="delete" signature="delete(*args)" />
        <scope ilk="function" line="203" lineend="206" name="dtag" signature="dtag(tag, tag_to_del=None)" />
        <scope ilk="function" line="209" lineend="213" name="find" signature="find(mode, *args)" />
        <scope ilk="function" line="214" lineend="216" name="find_above" signature="find_above(target)" />
        <scope ilk="function" line="217" lineend="219" name="find_all" signature="find_all" />
        <scope ilk="function" line="220" lineend="222" name="find_below" signature="find_below(target)" />
        <scope ilk="function" line="223" lineend="225" name="find_closest" signature="find_closest(x, y, halo=None, start=None)" />
        <scope ilk="function" line="226" lineend="228" name="find_enclosed" signature="find_enclosed(x1, y1, x2, y2)" />
        <scope ilk="function" line="229" lineend="231" name="find_overlapping" signature="find_overlapping(x1, y1, x2, y2)" />
        <scope ilk="function" line="232" lineend="234" name="find_withtag" signature="find_withtag(tag)" />
        <scope ilk="function" line="236" lineend="248" name="itemfocus" signature="itemfocus(tagOrId=nil)" />
        <scope ilk="function" line="250" lineend="254" name="gettags" signature="gettags(tagOrId)" />
        <scope ilk="function" line="256" lineend="259" name="icursor" signature="icursor(tagOrId, index)" />
        <scope ilk="function" line="261" lineend="263" name="index" signature="index(tagOrId, idx)" />
        <scope ilk="function" line="265" lineend="269" name="insert" signature="insert(tagOrId, index, string)" />
        <scope ilk="function" line="510" lineend="517" name="lower" signature="lower(tag, below=nil)" />
        <scope ilk="function" line="519" lineend="522" name="move" signature="move(tag, x, y)" />
        <scope ilk="function" line="524" lineend="526" name="postscript" signature="postscript(keys)" />
        <scope ilk="function" line="528" lineend="535" name="raise" signature="raise(tag, above=nil)" />
        <scope ilk="function" line="537" lineend="540" name="scale" signature="scale(tag, x, y, xs, ys)" />
        <scope ilk="function" line="542" lineend="545" name="scan_mark" signature="scan_mark(x, y)" />
        <scope ilk="function" line="546" lineend="549" name="scan_dragto" signature="scan_dragto(x, y)" />
        <scope ilk="function" line="551" lineend="554" name="select" signature="select(mode, *args)" />
        <scope ilk="function" line="555" lineend="557" name="select_adjust" signature="select_adjust(tagOrId, index)" />
        <scope ilk="function" line="558" lineend="560" name="select_clear" signature="select_clear" />
        <scope ilk="function" line="561" lineend="563" name="select_from" signature="select_from(tagOrId, index)" />
        <scope ilk="function" line="564" lineend="566" name="select_item" signature="select_item" />
        <scope ilk="function" line="567" lineend="569" name="select_to" signature="select_to(tagOrId, index)" />
        <scope ilk="function" line="571" lineend="573" name="itemtype" signature="itemtype(tag)" />
        <import symbol="TkCanvasItemConfig" />
        <import symbol="Scrollable" />
      </scope>
      <scope classrefs="TkObject" ilk="class" line="576" lineend="695" name="TkcItem">
        <scope attributes="__classmethod__" ilk="function" line="588" lineend="590" name="type2class" signature="TkcItem.type2class(type)" />
        <scope attributes="__classmethod__" ilk="function" line="592" lineend="596" name="id2obj" signature="TkcItem.id2obj(canvas, id)" />
        <scope attributes="__classmethod__" ilk="function" line="599" lineend="645" name="_parse_create_args" signature="self._parse_create_args(args)" />
        <scope attributes="__classmethod__" ilk="function" line="648" lineend="657" name="create" signature="self.create(canvas, *args)" />
        <scope attributes="__ctor__" ilk="function" line="660" lineend="670" name="initialize" signature="initialize(parent, *args)" />
        <scope ilk="function" line="671" lineend="673" name="create_self" signature="create_self(*args)" />
        <scope ilk="function" line="676" lineend="678" name="id" signature="id" />
        <scope ilk="function" line="680" lineend="686" name="exist?" signature="exist?" />
        <scope ilk="function" line="688" lineend="692" name="delete" signature="delete" />
        <import symbol="TkcTagAccess" />
      </scope>
      <scope classrefs="TkcItem" ilk="class" line="697" lineend="700" name="TkcArc" />
      <scope classrefs="TkcItem" ilk="class" line="702" lineend="705" name="TkcBitmap" />
      <scope classrefs="TkcItem" ilk="class" line="707" lineend="710" name="TkcImage" />
      <scope classrefs="TkcItem" ilk="class" line="712" lineend="715" name="TkcLine" />
      <scope classrefs="TkcItem" ilk="class" line="717" lineend="720" name="TkcOval" />
      <scope classrefs="TkcItem" ilk="class" line="722" lineend="725" name="TkcPolygon" />
      <scope classrefs="TkcItem" ilk="class" line="727" lineend="730" name="TkcRectangle" />
      <scope classrefs="TkcItem" ilk="class" line="732" lineend="744" name="TkcText">
        <scope attributes="__classmethod__" ilk="function" line="735" lineend="743" name="create" signature="self.create(canvas, *args)" />
      </scope>
      <scope classrefs="TkcItem" ilk="class" line="746" lineend="759" name="TkcWindow">
        <scope attributes="__classmethod__" ilk="function" line="749" lineend="758" name="create" signature="self.create(canvas, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/button">
      <import line="4" module="tk" symbol="*" />
      <import line="5" module="tk/label" symbol="*" />
      <scope classrefs="TkLabel" doc="tk/button.rb : treat button widget" ilk="class" line="7" lineend="27" name="TkButton">
        <scope doc="def create_self(keys) if keys and keys != None&#xA;tk_call_without_enc(&apos;button&apos;, @path, *hash_kv(keys, true))&#xA;else tk_call_without_enc(&apos;button&apos;, @path)" ilk="function" line="20" lineend="22" name="invoke" signature="invoke" />
        <scope ilk="function" line="23" lineend="26" name="flash" signature="flash" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/bindtag">
      <import line="4" module="tk" symbol="*" />
      <scope classrefs="Object" doc="tk/bind.rb : control event binding" ilk="class" line="6" lineend="52" name="TkBindTag">
        <scope attributes="__classmethod__" doc="BTagID_TBL = {}" ilk="function" line="15" lineend="17" name="id2obj" signature="TkBindTag.id2obj(id)" />
        <scope attributes="__classmethod__" ilk="function" line="19" lineend="28" name="new_by_name" signature="TkBindTag.new_by_name(name, *args, &amp;b)" />
        <scope attributes="__ctor__" ilk="function" line="30" lineend="36" name="initialize" signature="initialize(*args, &amp;b)" />
        <scope ilk="function" line="40" lineend="42" name="name" signature="name" />
        <scope ilk="function" line="44" lineend="46" name="to_eval" signature="to_eval" />
        <scope ilk="function" line="48" lineend="51" name="inspect" signature="inspect" />
        <import symbol="TkBindCore" />
      </scope>
      <scope classrefs="TkBindTag" ilk="class" line="55" lineend="62" name="TkBindTagAll">
        <scope attributes="__classmethod__" ilk="function" line="56" lineend="61" name="new" signature="TkBindTagAll.new(*args, &amp;b)" />
      </scope>
      <scope classrefs="TkBindTag" ilk="class" line="65" lineend="81" name="TkDatabaseClass">
        <scope attributes="__classmethod__" ilk="function" line="66" lineend="69" name="new" signature="self.new(name, *args, &amp;b)" />
        <scope attributes="__ctor__" ilk="function" line="71" lineend="75" name="initialize" signature="initialize(name, *args, &amp;b)" />
        <scope ilk="function" line="77" lineend="80" name="inspect" signature="inspect" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/bgerror">
      <import line="5" module="tk" symbol="*" />
      <scope doc="tkbgerror -- bgerror ( tkerror ) module 1998/07/16 by&#xA;Hidetoshi Nagai &lt;nagai@ai.kyutech.ac.jp&gt;" ilk="namespace" line="7" lineend="29" name="TkBgError">
        <scope ilk="function" line="12" lineend="14" name="bgerror" signature="bgerror(message)" />
        <scope ilk="function" line="19" lineend="21" name="set_handler" signature="set_handler(hdlr = Proc.new)" />
        <scope ilk="function" line="22" lineend="27" name="set_default" signature="set_default" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/autoload">
      <scope doc="autoload" ilk="function" line="8" name="TkGrid" signature="TkGrid(*args)" />
      <scope ilk="function" line="11" name="TkPack" signature="TkPack(*args)" />
      <scope ilk="function" line="14" name="TkPlace" signature="TkPlace(*args)" />
      <scope doc="sub-module of Tk" ilk="namespace" line="177" lineend="196" name="Tk">
        <scope attributes="__classmethod__" ilk="function" line="189" name="EncodedString" signature="Tk.EncodedString(str, enc = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="192" name="BinaryString" signature="Tk.BinaryString(str)" />
        <scope attributes="__classmethod__" ilk="function" line="195" name="UTF8_String" signature="Tk.UTF8_String(str)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tk/after">
      <import line="6" module="tk/timer" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="timeout">
      <scope ilk="namespace" name="Timeout">
        <scope classrefs="Interrupt" doc="Raised by Timeout#timeout when the block times out." ilk="class" name="Error" />
        <scope doc="Executes the method&apos;s block. If the block execution&#xA;terminates before sec seconds has passed, it returns true." ilk="function" name="timeout" signature="(sec, exception=Error) {|if sec == nil or sec.zero?| ...}" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="time">
      <import line="43" module="parsedate" symbol="*" />
      <import line="466" module="test/unit" symbol="*" />
      <scope classrefs="Object" doc="Implements the extensions to the Time class that are&#xA;described in the documentation for the time.rb library." ilk="class" line="49" lineend="463" name="Time">
        <scope classrefs="Object" ilk="class" line="50" lineend="380" name="Time">
          <scope doc="Following definition of military zones is original one." ilk="function" line="69" lineend="84" name="zone_offset" signature="zone_offset(zone, year=Time.now.year)" />
          <scope ilk="function" line="86" lineend="94" name="zone_utc?" signature="zone_utc?(zone)" />
          <scope ilk="function" line="99" lineend="105" name="month_days" signature="month_days(y, m)" />
          <scope ilk="function" line="108" lineend="148" name="apply_offset" signature="apply_offset(year, mon, day, hour, min, sec, off)" />
          <scope ilk="function" line="151" lineend="186" name="make_time" signature="make_time(year, mon, day, hour, min, sec, sec_fraction, zone, now)" />
          <scope doc="Parses +date+ using Date._parse and converts it to a Time&#xA;object." ilk="function" line="239" lineend="244" name="parse" signature="parse(date, now=Time.now)" />
          <scope doc="Parses +date+ as date-time defined by RFC 2822 and converts&#xA;it to a Time object." ilk="function" line="261" lineend="298" name="rfc2822" signature="rfc2822(date)" />
          <scope doc="Parses +date+ as HTTP-date defined by RFC 2616 and converts&#xA;it to a Time object." ilk="function" line="310" lineend="339" name="httpdate" signature="httpdate(date)" />
          <scope doc="Parses +date+ as dateTime defined by XML Schema and converts&#xA;it to a Time object." ilk="function" line="351" lineend="378" name="xmlschema" signature="xmlschema(date)" />
        </scope>
        <scope doc="class &lt;&lt; self" ilk="function" line="391" lineend="403" name="rfc2822" signature="rfc2822" />
        <scope doc="Returns a string which represents the time as rfc1123-date&#xA;of HTTP-date defined by RFC 2616:" ilk="function" line="422" lineend="428" name="httpdate" signature="httpdate" />
        <scope doc="Returns a string which represents the time as dateTime&#xA;defined by XML Schema:" ilk="function" line="444" lineend="461" name="xmlschema" signature="xmlschema(fraction_digits=0)" />
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="468" lineend="796" name="TimeExtentionTest">
        <scope doc=":nodoc:" ilk="function" line="469" lineend="474" name="test_rfc822" signature="test_rfc822" />
        <scope ilk="function" line="476" lineend="510" name="test_rfc2822" signature="test_rfc2822" />
        <scope ilk="function" line="512" lineend="531" name="test_rfc2616" signature="test_rfc2616" />
        <scope ilk="function" line="533" lineend="563" name="test_rfc3339" signature="test_rfc3339" />
        <scope doc="http://www.w3.org/TR/xmlschema-2/" ilk="function" line="566" lineend="601" name="test_xmlschema" signature="test_xmlschema" />
        <scope ilk="function" line="603" lineend="624" name="test_encode_xmlschema" signature="test_encode_xmlschema" />
        <scope ilk="function" line="626" lineend="637" name="test_completion" signature="test_completion" />
        <scope ilk="function" line="639" lineend="700" name="test_invalid" signature="test_invalid" />
        <scope ilk="function" line="702" lineend="713" name="test_zone_0000" signature="test_zone_0000" />
        <scope ilk="function" line="715" lineend="737" name="test_parse_leap_second" signature="test_parse_leap_second" />
        <scope ilk="function" line="739" lineend="761" name="test_rfc2822_leap_second" signature="test_rfc2822_leap_second" />
        <scope ilk="function" line="763" lineend="785" name="test_xmlschema_leap_second" signature="test_xmlschema_leap_second" />
        <scope ilk="function" line="787" lineend="791" name="test_ruby_talk_152866" signature="test_ruby_talk_152866" />
        <scope ilk="function" line="793" lineend="795" name="test_parse_fraction" signature="test_parse_fraction" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="thwait">
      <import line="39" module="thread.rb" symbol="*" />
      <import line="40" module="e2mmap.rb" symbol="*" />
      <scope classrefs="Object" doc="This class watches for termination of multiple threads." ilk="class" line="54" lineend="158" name="ThreadsWait">
        <scope attributes="__classmethod__" doc="Waits until all specified threads have terminated." ilk="function" line="65" lineend="74" name="all_waits" signature="ThreadsWait.all_waits(*threads)" />
        <scope attributes="__ctor__" doc="Creates a ThreadsWait object, specifying the threads to wait&#xA;on." ilk="function" line="80" lineend="84" name="initialize" signature="initialize(*threads)" />
        <scope ilk="function" line="87" lineend="87" name="threads" />
        <scope doc="Returns +true+ if there are no threads to be synchronized." ilk="function" line="92" lineend="94" name="empty?" signature="empty?" />
        <scope doc="Returns +true+ if any thread has terminated." ilk="function" line="99" lineend="101" name="finished?" signature="finished?" />
        <scope doc="Waits for specified threads to terminate." ilk="function" line="106" lineend="109" name="join" signature="join(*threads)" />
        <scope doc="Specifies the threads that this object will wait for, but&#xA;does not actually wait." ilk="function" line="115" lineend="127" name="join_nowait" signature="join_nowait(*threads)" />
        <scope doc="Waits until any of the specified threads has terminated, and&#xA;returns the one that does." ilk="function" line="136" lineend="144" name="next_wait" signature="next_wait(nonblock = nil)" />
        <scope doc="Waits until all of the specified threads are terminated." ilk="function" line="152" lineend="157" name="all_waits" signature="all_waits" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="thread">
      <scope classrefs="StandardError" doc="thread.rb - thread support classes $Date: 2005/06/07&#xA;09:41:17 $ by Yukihiro Matsumoto &lt;matz@netlab.co.jp&gt;" ilk="class" line="16" lineend="17" name="ThreadError" />
      <scope classrefs="Object" ilk="class" line="24" lineend="38" name="Thread">
        <scope attributes="__classmethod__" doc="Wraps a block in Thread.critical, restoring the original&#xA;value upon exit from the critical section." ilk="function" line="29" lineend="37" name="exclusive" signature="Thread.exclusive" />
      </scope>
      <scope classrefs="Object" doc="Mutex implements a simple semaphore that can be used to&#xA;coordinate access to shared data from multiple concurrent&#xA;threads." ilk="class" line="61" lineend="159" name="Mutex">
        <scope attributes="__ctor__" doc="Creates a new Mutex" ilk="function" line="65" lineend="70" name="initialize" signature="initialize" />
        <scope doc="Returns +true+ if this lock is currently held by some&#xA;thread." ilk="function" line="75" lineend="77" name="locked?" signature="locked?" />
        <scope doc="Attempts to obtain the lock and returns immediately." ilk="function" line="83" lineend="92" name="try_lock" signature="try_lock" />
        <scope doc="Attempts to grab the lock and waits if it isn&apos;t available." ilk="function" line="97" lineend="105" name="lock" signature="lock" />
        <scope doc="Releases the lock. Returns +nil+ if ref wasn&apos;t locked." ilk="function" line="110" lineend="126" name="unlock" signature="unlock" />
        <scope doc="Obtains a lock, runs the block, and releases the lock when&#xA;the block completes." ilk="function" line="132" lineend="139" name="synchronize" signature="synchronize" />
        <scope doc="If the mutex is locked, unlocks the mutex, wakes one waiting&#xA;thread, and yields in a critical section." ilk="function" line="145" lineend="158" name="exclusive_unlock" signature="exclusive_unlock" />
      </scope>
      <scope classrefs="Object" doc="ConditionVariable objects augment class Mutex." ilk="class" line="188" lineend="238" name="ConditionVariable">
        <scope attributes="__ctor__" doc="Creates a new ConditionVariable" ilk="function" line="192" lineend="194" name="initialize" signature="initialize" />
        <scope doc="Releases the lock held in +mutex+ and waits; reacquires the&#xA;lock on wakeup." ilk="function" line="199" lineend="208" name="wait" signature="wait(mutex)" />
        <scope doc="Wakes up the first thread in line waiting for this lock." ilk="function" line="213" lineend="220" name="signal" signature="signal" />
        <scope doc="Wakes up all threads waiting for this lock." ilk="function" line="225" lineend="237" name="broadcast" signature="broadcast" />
      </scope>
      <scope classrefs="Object" doc="This class provides a way to synchronize communication&#xA;between threads." ilk="class" line="267" lineend="367" name="Queue">
        <scope attributes="__ctor__" doc="Creates a new queue." ilk="function" line="271" lineend="277" name="initialize" signature="initialize" />
        <scope doc="Pushes +obj+ to the queue." ilk="function" line="282" lineend="297" name="push" signature="push(obj)" />
        <scope doc="Retrieves data from the queue." ilk="function" line="314" lineend="323" name="pop" signature="pop(non_block=false)" />
        <scope doc="Returns +true+ is the queue is empty." ilk="function" line="338" lineend="340" name="empty?" signature="empty?" />
        <scope doc="Removes all objects from the queue." ilk="function" line="345" lineend="347" name="clear" signature="clear" />
        <scope doc="Returns the length of the queue." ilk="function" line="352" lineend="354" name="length" signature="length" />
        <scope doc="Returns the number of threads waiting on the queue." ilk="function" line="364" lineend="366" name="num_waiting" signature="num_waiting" />
      </scope>
      <scope classrefs="Queue" doc="This class represents queues of specified size capacity." ilk="class" line="375" lineend="481" name="SizedQueue">
        <scope attributes="__ctor__" doc="Creates a fixed-length queue with a maximum size of +max+." ilk="function" line="379" lineend="385" name="initialize" signature="initialize(max)" />
        <scope doc="Returns the maximum size of the queue." ilk="function" line="390" lineend="392" name="max" signature="max" />
        <scope doc="Sets the maximum size of the queue." ilk="function" line="397" lineend="416" name="max=" signature="max=(max)" />
        <scope doc="Pushes +obj+ to the queue." ilk="function" line="422" lineend="430" name="push" signature="push(obj)" />
        <scope doc="Retrieves data from the queue and runs a waiting thread, if&#xA;any." ilk="function" line="445" lineend="463" name="pop" signature="pop(*args)" />
        <scope doc="Returns the number of threads waiting on the queue." ilk="function" line="478" lineend="480" name="num_waiting" signature="num_waiting" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit">
      <import line="11" module="test/unit/testcase" symbol="*" />
      <import line="12" module="test/unit/autorunner" symbol="*" />
      <scope doc="= test/unit.rb" ilk="namespace" line="14" lineend="281" name="Test">
        <scope doc="= Test::Unit - Ruby Unit Testing Framework" ilk="namespace" line="272" lineend="280" name="Unit">
          <scope attributes="__classmethod__" ilk="function" line="273" lineend="275" name="run=" signature="self.run=(flag)" />
          <scope attributes="__classmethod__" ilk="function" line="277" lineend="279" name="run?" signature="self.run?" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/util/procwrapper">
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="5" lineend="46" name="Test">
        <scope ilk="namespace" line="6" lineend="45" name="Unit">
          <scope ilk="namespace" line="7" lineend="44" name="Util">
            <scope classrefs="Object" doc="Allows the storage of a Proc passed through &apos;&amp;&apos; in a hash." ilk="class" line="18" lineend="43" name="ProcWrapper">
              <scope attributes="__ctor__" doc="Creates a new wrapper for a_proc." ilk="function" line="21" lineend="24" name="initialize" signature="initialize(a_proc)" />
              <scope ilk="function" line="26" lineend="28" name="hash" signature="hash" />
              <scope ilk="function" line="30" lineend="37" name="==" signature="==(other" />
              <scope ilk="function" line="40" lineend="42" name="to_proc" signature="to_proc" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/util/observable">
      <import line="5" module="test/unit/util/procwrapper" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="88" name="Test">
        <scope ilk="namespace" line="8" lineend="87" name="Unit">
          <scope ilk="namespace" line="9" lineend="86" name="Util">
            <scope doc="This is a utility class that allows anything mixing it in to&#xA;notify a set of listeners about interesting events." ilk="namespace" line="14" lineend="85" name="Observable">
              <scope doc="Adds the passed proc as a listener on the channel indicated&#xA;by channel_name." ilk="function" line="29" lineend="43" name="add_listener" signature="add_listener(channel_name, listener_key=NOTHING, &amp;listener)" />
              <scope doc="Removes the listener indicated by listener_key from the&#xA;channel indicated by channel_name." ilk="function" line="49" lineend="60" name="remove_listener" signature="remove_listener(channel_name, listener_key)" />
              <scope doc="Calls all the procs registered on the channel indicated by&#xA;channel_name." ilk="function" line="72" lineend="78" name="notify_listeners" signature="notify_listeners(channel_name, *arguments)" />
              <scope ilk="function" line="81" lineend="84" name="channels" signature="channels" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/util/backtracefilter">
      <scope ilk="namespace" line="1" lineend="40" name="Test">
        <scope ilk="namespace" line="2" lineend="39" name="Unit">
          <scope ilk="namespace" line="3" lineend="38" name="Util">
            <scope ilk="namespace" line="4" lineend="37" name="BacktraceFilter">
              <scope ilk="function" line="9" lineend="36" name="filter_backtrace" signature="filter_backtrace(backtrace, prefix=nil)" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/tk/testrunner">
      <import line="7" module="tk" symbol="*" />
      <import line="8" module="test/unit/ui/testrunnermediator" symbol="*" />
      <import line="9" module="test/unit/ui/testrunnerutilities" symbol="*" />
      <scope doc="Original Author:: Nathaniel Talbott." ilk="namespace" line="11" lineend="254" name="Test">
        <scope ilk="namespace" line="12" lineend="253" name="Unit">
          <scope ilk="namespace" line="13" lineend="252" name="UI">
            <scope ilk="namespace" line="14" lineend="251" name="Tk">
              <scope classrefs="Object" doc="Runs a Test::Unit::TestSuite in a Tk UI." ilk="class" line="19" lineend="250" name="TestRunner">
                <scope attributes="__ctor__" doc="Creates a new TestRunner for running the passed suite." ilk="function" line="24" lineend="41" name="initialize" signature="initialize(suite, output_level = NORMAL)" />
                <scope doc="Begins the test run." ilk="function" line="44" lineend="50" name="start" signature="start" />
                <scope ilk="function" line="53" lineend="60" name="setup_mediator" signature="setup_mediator" />
                <scope ilk="function" line="62" lineend="76" name="attach_to_mediator" signature="attach_to_mediator" />
                <scope ilk="function" line="78" lineend="80" name="run_test" signature="run_test" />
                <scope ilk="function" line="82" lineend="100" name="start_ui" signature="start_ui" />
                <scope ilk="function" line="102" lineend="104" name="stop::Tk." signature="stop ::Tk." />
                <scope ilk="function" line="106" lineend="120" name="reset_ui" signature="reset_ui(count)" />
                <scope ilk="function" line="122" lineend="129" name="add_fault" signature="add_fault(fault)" />
                <scope ilk="function" line="131" lineend="133" name="show_fault" signature="show_fault(fault)" />
                <scope ilk="function" line="135" lineend="137" name="raw_show_fault" signature="raw_show_fault(string)" />
                <scope ilk="function" line="139" lineend="141" name="clear_fault" signature="clear_fault" />
                <scope ilk="function" line="143" lineend="149" name="result_changed" signature="result_changed(result)" />
                <scope ilk="function" line="151" lineend="154" name="started" signature="started(result)" />
                <scope ilk="function" line="156" lineend="158" name="test_started" signature="test_started(test_name)" />
                <scope ilk="function" line="160" lineend="162" name="finished" signature="finished(elapsed_time)" />
                <scope ilk="function" line="164" lineend="166" name="output_status" signature="output_status(string)" />
                <scope ilk="function" line="168" lineend="242" name="setup_ui" signature="setup_ui" />
                <scope ilk="function" line="244" lineend="249" name="create_count_label" signature="create_count_label(parent, label)" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/testrunnerutilities">
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="5" lineend="44" name="Test">
        <scope ilk="namespace" line="6" lineend="43" name="Unit">
          <scope ilk="namespace" line="7" lineend="42" name="UI">
            <scope doc="Provides some utilities common to most, if not all,&#xA;TestRunners." ilk="namespace" line="23" lineend="41" name="TestRunnerUtilities">
              <scope doc="Creates a new TestRunner and runs the suite." ilk="function" line="26" lineend="28" name="run" signature="run(suite, output_level=NORMAL)" />
              <scope doc="Takes care of the ARGV parsing and suite determination&#xA;necessary for running one of the TestRunners from the&#xA;command line." ilk="function" line="33" lineend="40" name="start_command_line_test" signature="start_command_line_test" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/testrunnermediator">
      <import line="5" module="test/unit" symbol="*" />
      <import line="6" module="test/unit/util/observable" symbol="*" />
      <import line="7" module="test/unit/testresult" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="9" lineend="66" name="Test">
        <scope ilk="namespace" line="10" lineend="65" name="Unit">
          <scope ilk="namespace" line="11" lineend="64" name="UI">
            <scope classrefs="Object" doc="Provides an interface to write any given UI against,&#xA;hopefully making it easy to write new UIs." ilk="class" line="15" lineend="63" name="TestRunnerMediator">
              <scope attributes="__ctor__" doc="Creates a new TestRunnerMediator initialized to run the&#xA;passed suite." ilk="function" line="24" lineend="26" name="initialize" signature="initialize(suite)" />
              <scope doc="Runs the suite the TestRunnerMediator was created with." ilk="function" line="30" lineend="54" name="run_suite" signature="run_suite" />
              <scope doc="A factory method to create the result the mediator should&#xA;run with." ilk="function" line="60" lineend="62" name="create_result" signature="create_result" />
              <import symbol="Util::Observable" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/gtk2/testrunner">
      <import line="5" module="gtk2" symbol="*" />
      <import line="6" module="test/unit/ui/testrunnermediator" symbol="*" />
      <import line="7" module="test/unit/ui/testrunnerutilities" symbol="*" />
      <scope doc="Author:: Kenta MURATA." ilk="namespace" line="9" lineend="463" name="Test">
        <scope ilk="namespace" line="10" lineend="462" name="Unit">
          <scope ilk="namespace" line="11" lineend="461" name="UI">
            <scope ilk="namespace" line="12" lineend="460" name="GTK2">
              <scope classrefs="Gtk::Label" ilk="class" line="16" lineend="20" name="EnhancedLabel">
                <scope ilk="function" line="17" lineend="19" name="set_text" signature="set_text(text)" />
              </scope>
              <scope classrefs="Gtk::TreeView" ilk="class" line="22" lineend="52" name="FaultList">
                <scope attributes="__ctor__" ilk="function" line="23" lineend="36" name="initialize" signature="initialize" />
                <scope doc="def initialize" ilk="function" line="38" lineend="43" name="add_fault" signature="add_fault(fault)" />
                <scope doc="def add_fault(fault)" ilk="function" line="45" lineend="47" name="get_fault" signature="get_fault(iter)" />
                <scope doc="def get_fault" ilk="function" line="49" lineend="51" name="clear" signature="clear" />
              </scope>
              <scope classrefs="Object" ilk="class" line="54" lineend="458" name="TestRunner">
                <scope ilk="function" line="57" lineend="62" name="lazy_initialize" signature="lazy_initialize(symbol)" />
                <scope ilk="function" line="65" lineend="70" name="status_entry" signature="status_entry" />
                <scope ilk="function" line="73" lineend="79" name="status_panel" signature="status_panel" />
                <scope ilk="function" line="82" lineend="93" name="fault_detail_label" signature="fault_detail_label" />
                <scope ilk="function" line="96" lineend="101" name="inner_detail_sub_panel" signature="inner_detail_sub_panel" />
                <scope ilk="function" line="104" lineend="109" name="outer_detail_sub_panel" signature="outer_detail_sub_panel" />
                <scope ilk="function" line="112" lineend="120" name="detail_scrolled_window" signature="detail_scrolled_window" />
                <scope ilk="function" line="123" lineend="129" name="detail_panel" signature="detail_panel" />
                <scope ilk="function" line="132" lineend="136" name="fault_list" signature="fault_list" />
                <scope ilk="function" line="139" lineend="147" name="list_scrolled_window" signature="list_scrolled_window" />
                <scope ilk="function" line="150" lineend="156" name="list_panel" signature="list_panel" />
                <scope ilk="function" line="159" lineend="164" name="error_count_label" signature="error_count_label" />
                <scope ilk="function" line="167" lineend="172" name="failure_count_label" signature="failure_count_label" />
                <scope ilk="function" line="175" lineend="180" name="assertion_count_label" signature="assertion_count_label" />
                <scope ilk="function" line="183" lineend="188" name="run_count_label" signature="run_count_label" />
                <scope ilk="function" line="191" lineend="204" name="info_panel" signature="info_panel" />
                <scope doc="def info_panel" ilk="function" line="207" lineend="212" name="green_style" signature="green_style" />
                <scope doc="def green_style" ilk="function" line="215" lineend="220" name="red_style" signature="red_style" />
                <scope doc="def red_style" ilk="function" line="223" lineend="232" name="test_progress_bar" signature="test_progress_bar" />
                <scope doc="def test_progress_bar" ilk="function" line="235" lineend="241" name="progress_panel" signature="progress_panel" />
                <scope doc="def progress_panel" ilk="function" line="243" lineend="247" name="run_button" signature="run_button" />
                <scope doc="def run_button" ilk="function" line="249" lineend="254" name="suite_name_entry" signature="suite_name_entry" />
                <scope doc="def suite_name_entry" ilk="function" line="257" lineend="265" name="suite_panel" signature="suite_panel" />
                <scope doc="def suite_panel" ilk="function" line="268" lineend="278" name="main_panel" signature="main_panel" />
                <scope doc="def main_panel" ilk="function" line="281" lineend="289" name="main_window" signature="main_window" />
                <scope doc="def main_window" ilk="function" line="292" lineend="303" name="setup_ui" signature="setup_ui" />
                <scope doc="def setup_ui" ilk="function" line="306" lineend="308" name="output_status" signature="output_status(string)" />
                <scope doc="def output_status(string)" ilk="function" line="311" lineend="314" name="finished" signature="finished(elapsed_time)" />
                <scope doc="def finished(elapsed_time)" ilk="function" line="317" lineend="319" name="test_started" signature="test_started(test_name)" />
                <scope doc="def test_started(test_name)" ilk="function" line="322" lineend="325" name="started" signature="started(result)" />
                <scope doc="def started(result)" ilk="function" line="328" lineend="330" name="test_finished" signature="test_finished(result)" />
                <scope doc="def test_finished(result)" ilk="function" line="332" lineend="337" name="result_changed" signature="result_changed(result)" />
                <scope doc="def result_changed(result)" ilk="function" line="340" lineend="342" name="clear_fault" signature="clear_fault" />
                <scope doc="def clear_fault" ilk="function" line="345" lineend="348" name="raw_show_fault" signature="raw_show_fault(string)" />
                <scope doc="def raw_show_fault(string)" ilk="function" line="351" lineend="353" name="show_fault" signature="show_fault(fault)" />
                <scope doc="def show_fault(fault)" ilk="function" line="356" lineend="362" name="add_fault" signature="add_fault(fault)" />
                <scope doc="def add_fault(fault)" ilk="function" line="365" lineend="377" name="reset_ui" signature="reset_ui(count)" />
                <scope doc="def reset_ui(count)" ilk="function" line="380" lineend="382" name="stop" signature="stop" />
                <scope doc="def stop" ilk="function" line="385" lineend="387" name="run_test" signature="run_test" />
                <scope ilk="function" line="390" lineend="408" name="start_ui" signature="start_ui" />
                <scope doc="def start_ui" ilk="function" line="411" lineend="420" name="attach_to_mediator" signature="attach_to_mediator" />
                <scope doc="def attach_to_mediator" ilk="function" line="423" lineend="430" name="setup_mediator" signature="setup_mediator" />
                <scope doc="def setup_mediator" ilk="function" line="433" lineend="439" name="start" signature="start" />
                <scope attributes="__ctor__" doc="def start" ilk="function" line="441" lineend="456" name="initialize" signature="initialize(suite, output_level = NORMAL)" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/gtk/testrunner">
      <import line="5" module="gtk" symbol="*" />
      <import line="6" module="test/unit/ui/testrunnermediator" symbol="*" />
      <import line="7" module="test/unit/ui/testrunnerutilities" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="9" lineend="410" name="Test">
        <scope ilk="namespace" line="10" lineend="409" name="Unit">
          <scope ilk="namespace" line="11" lineend="408" name="UI">
            <scope ilk="namespace" line="12" lineend="407" name="GTK">
              <scope classrefs="Object" doc="Runs a Test::Unit::TestSuite in a Gtk UI." ilk="class" line="18" lineend="384" name="TestRunner">
                <scope attributes="__ctor__" doc="Creates a new TestRunner for running the passed suite." ilk="function" line="23" lineend="38" name="initialize" signature="initialize(suite, output_level = NORMAL)" />
                <scope doc="Begins the test run." ilk="function" line="41" lineend="47" name="start" signature="start" />
                <scope ilk="function" line="50" lineend="57" name="setup_mediator" signature="setup_mediator" />
                <scope ilk="function" line="59" lineend="68" name="attach_to_mediator" signature="attach_to_mediator" />
                <scope ilk="function" line="70" lineend="72" name="run_test" signature="run_test(*)" />
                <scope ilk="function" line="74" lineend="92" name="start_ui" signature="start_ui" />
                <scope ilk="function" line="94" lineend="96" name="stop" signature="stop(*)" />
                <scope ilk="function" line="98" lineend="109" name="reset_ui" signature="reset_ui(count)" />
                <scope ilk="function" line="111" lineend="119" name="add_fault" signature="add_fault(fault)" />
                <scope ilk="function" line="121" lineend="123" name="show_fault" signature="show_fault(fault)" />
                <scope ilk="function" line="125" lineend="128" name="raw_show_fault" signature="raw_show_fault(string)" />
                <scope ilk="function" line="130" lineend="132" name="clear_fault" signature="clear_fault" />
                <scope ilk="function" line="134" lineend="139" name="result_changed" signature="result_changed(result)" />
                <scope ilk="function" line="141" lineend="144" name="started" signature="started(result)" />
                <scope ilk="function" line="146" lineend="148" name="test_started" signature="test_started(test_name)" />
                <scope ilk="function" line="150" lineend="152" name="test_finished" signature="test_finished(test_name)" />
                <scope ilk="function" line="154" lineend="156" name="finished" signature="finished(elapsed_time)" />
                <scope ilk="function" line="158" lineend="160" name="output_status" signature="output_status(string)" />
                <scope ilk="function" line="162" lineend="173" name="setup_ui" signature="setup_ui" />
                <scope ilk="function" line="175" lineend="184" name="main_window" signature="main_window" />
                <scope ilk="function" line="186" lineend="196" name="main_panel" signature="main_panel" />
                <scope ilk="function" line="198" lineend="206" name="suite_panel" signature="suite_panel" />
                <scope ilk="function" line="208" lineend="213" name="suite_name_entry" signature="suite_name_entry" />
                <scope ilk="function" line="215" lineend="219" name="run_button" signature="run_button" />
                <scope ilk="function" line="221" lineend="227" name="progress_panel" signature="progress_panel" />
                <scope ilk="function" line="229" lineend="236" name="test_progress_bar" signature="test_progress_bar" />
                <scope ilk="function" line="238" lineend="243" name="green_style" signature="green_style" />
                <scope ilk="function" line="245" lineend="250" name="red_style" signature="red_style" />
                <scope ilk="function" line="252" lineend="265" name="info_panel" signature="info_panel" />
                <scope ilk="function" line="267" lineend="272" name="run_count_label" signature="run_count_label" />
                <scope ilk="function" line="274" lineend="279" name="assertion_count_label" signature="assertion_count_label" />
                <scope ilk="function" line="281" lineend="286" name="failure_count_label" signature="failure_count_label" />
                <scope ilk="function" line="288" lineend="293" name="error_count_label" signature="error_count_label" />
                <scope ilk="function" line="295" lineend="301" name="list_panel" signature="list_panel" />
                <scope ilk="function" line="303" lineend="310" name="list_scrolled_window" signature="list_scrolled_window" />
                <scope ilk="function" line="312" lineend="316" name="fault_list" signature="fault_list" />
                <scope ilk="function" line="318" lineend="324" name="detail_panel" signature="detail_panel" />
                <scope ilk="function" line="326" lineend="333" name="detail_scrolled_window" signature="detail_scrolled_window" />
                <scope ilk="function" line="335" lineend="340" name="outer_detail_sub_panel" signature="outer_detail_sub_panel" />
                <scope ilk="function" line="342" lineend="347" name="inner_detail_sub_panel" signature="inner_detail_sub_panel" />
                <scope ilk="function" line="349" lineend="361" name="fault_detail_label" signature="fault_detail_label" />
                <scope ilk="function" line="363" lineend="369" name="status_panel" signature="status_panel" />
                <scope ilk="function" line="371" lineend="376" name="status_entry" signature="status_entry" />
                <scope ilk="function" line="378" lineend="383" name="lazy_initialize" signature="lazy_initialize(symbol)" />
              </scope>
              <scope classrefs="Gtk::ProgressBar" ilk="class" line="386" lineend="392" name="EnhancedProgressBar">
                <scope ilk="function" line="387" lineend="391" name="set_style" signature="set_style(style)" />
              </scope>
              <scope classrefs="Gtk::Label" ilk="class" line="394" lineend="398" name="EnhancedLabel">
                <scope ilk="function" line="395" lineend="397" name="set_text" signature="set_text(text)" />
              </scope>
              <scope classrefs="Gtk::ListItem" ilk="class" line="400" lineend="406" name="FaultListItem">
                <scope ilk="function" line="401" lineend="401" name="fault" />
                <scope attributes="__ctor__" ilk="function" line="402" lineend="405" name="initialize" signature="initialize(fault)" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/fox/testrunner">
      <import line="5" module="fox" symbol="*" />
      <import line="6" module="test/unit/ui/testrunnermediator" symbol="*" />
      <import line="7" module="test/unit/ui/testrunnerutilities" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="11" lineend="262" name="Test">
        <scope ilk="namespace" line="12" lineend="261" name="Unit">
          <scope ilk="namespace" line="13" lineend="260" name="UI">
            <scope ilk="namespace" line="14" lineend="259" name="Fox">
              <scope classrefs="Object" doc="Runs a Test::Unit::TestSuite in a Fox UI." ilk="class" line="21" lineend="250" name="TestRunner">
                <scope attributes="__ctor__" doc="0x00FF0000 Creates a new TestRunner for running the passed&#xA;suite." ilk="function" line="30" lineend="39" name="initialize" signature="initialize(suite, output_level = NORMAL)" />
                <scope doc="Begins the test run." ilk="function" line="42" lineend="48" name="start" signature="start" />
                <scope ilk="function" line="50" lineend="57" name="setup_mediator" signature="setup_mediator" />
                <scope ilk="function" line="59" lineend="66" name="attach_to_mediator" signature="attach_to_mediator" />
                <scope ilk="function" line="68" lineend="75" name="start_ui" signature="start_ui" />
                <scope ilk="function" line="77" lineend="79" name="stop" signature="stop" />
                <scope ilk="function" line="81" lineend="93" name="reset_ui" signature="reset_ui(count)" />
                <scope ilk="function" line="95" lineend="102" name="add_fault" signature="add_fault(fault)" />
                <scope ilk="function" line="104" lineend="106" name="show_fault" signature="show_fault(fault)" />
                <scope ilk="function" line="108" lineend="110" name="raw_show_fault" signature="raw_show_fault(string)" />
                <scope ilk="function" line="112" lineend="114" name="clear_fault" signature="clear_fault" />
                <scope ilk="function" line="116" lineend="127" name="result_changed" signature="result_changed(result)" />
                <scope ilk="function" line="129" lineend="132" name="started" signature="started(result)" />
                <scope ilk="function" line="134" lineend="136" name="test_started" signature="test_started(test_name)" />
                <scope ilk="function" line="138" lineend="140" name="finished" signature="finished(elapsed_time)" />
                <scope ilk="function" line="142" lineend="145" name="output_status" signature="output_status(string)" />
                <scope ilk="function" line="147" lineend="179" name="setup_ui" signature="setup_ui" />
                <scope ilk="function" line="181" lineend="185" name="create_application" signature="create_application" />
                <scope ilk="function" line="187" lineend="189" name="create_window" signature="create_window(app)" />
                <scope ilk="function" line="191" lineend="193" name="create_tooltip" signature="create_tooltip(app)" />
                <scope ilk="function" line="195" lineend="199" name="create_main_panel" signature="create_main_panel(parent)" />
                <scope ilk="function" line="201" lineend="203" name="create_suite_panel" signature="create_suite_panel(parent)" />
                <scope ilk="function" line="205" lineend="207" name="create_button" signature="create_button(parent, text, action)" />
                <scope ilk="function" line="209" lineend="211" name="create_progress_bar" signature="create_progress_bar(parent)" />
                <scope ilk="function" line="213" lineend="215" name="create_info_panel" signature="create_info_panel(parent)" />
                <scope ilk="function" line="217" lineend="219" name="create_label" signature="create_label(parent, text)" />
                <scope ilk="function" line="221" lineend="223" name="create_list_panel" signature="create_list_panel(parent)" />
                <scope ilk="function" line="225" lineend="235" name="create_fault_list" signature="create_fault_list(parent)" />
                <scope ilk="function" line="237" lineend="239" name="create_detail_panel" signature="create_detail_panel(parent)" />
                <scope ilk="function" line="241" lineend="243" name="create_text" signature="create_text(parent)" />
                <scope ilk="function" line="245" lineend="249" name="create_entry" signature="create_entry(parent)" />
              </scope>
              <scope classrefs="FXListItem" ilk="class" line="252" lineend="258" name="FaultListItem">
                <scope ilk="function" line="253" lineend="253" name="fault" />
                <scope attributes="__ctor__" ilk="function" line="254" lineend="257" name="initialize" signature="initialize(fault)" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/ui/console/testrunner">
      <import line="5" module="test/unit/ui/testrunnermediator" symbol="*" />
      <import line="6" module="test/unit/ui/testrunnerutilities" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="8" lineend="121" name="Test">
        <scope ilk="namespace" line="9" lineend="120" name="Unit">
          <scope ilk="namespace" line="10" lineend="119" name="UI">
            <scope ilk="namespace" line="11" lineend="118" name="Console">
              <scope classrefs="Object" doc="Runs a Test::Unit::TestSuite on the console." ilk="class" line="14" lineend="117" name="TestRunner">
                <scope attributes="__ctor__" doc="Creates a new TestRunner for running the passed suite." ilk="function" line="23" lineend="33" name="initialize" signature="initialize(suite, output_level=NORMAL, io=STDOUT)" />
                <scope doc="Begins the test run." ilk="function" line="36" lineend="40" name="start" signature="start" />
                <scope ilk="function" line="43" lineend="50" name="setup_mediator" signature="setup_mediator" />
                <scope ilk="function" line="52" lineend="54" name="create_mediator" signature="create_mediator(suite)" />
                <scope ilk="function" line="56" lineend="62" name="attach_to_mediator" signature="attach_to_mediator" />
                <scope ilk="function" line="64" lineend="66" name="start_mediator" signature="start_mediator" />
                <scope ilk="function" line="68" lineend="72" name="add_fault" signature="add_fault(fault)" />
                <scope ilk="function" line="74" lineend="77" name="started" signature="started(result)" />
                <scope ilk="function" line="79" lineend="88" name="finished" signature="finished(elapsed_time)" />
                <scope ilk="function" line="90" lineend="92" name="test_started" signature="test_started(name)" />
                <scope ilk="function" line="94" lineend="98" name="test_finished" signature="test_finished(name)" />
                <scope ilk="function" line="100" lineend="102" name="nl" signature="nl(level=NORMAL)" />
                <scope ilk="function" line="104" lineend="107" name="output" signature="output(something, level=NORMAL)" />
                <scope ilk="function" line="109" lineend="112" name="output_single" signature="output_single(something, level=NORMAL)" />
                <scope ilk="function" line="114" lineend="116" name="output?" signature="output?(level)" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/testsuite">
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="5" lineend="74" name="Test">
        <scope ilk="namespace" line="6" lineend="73" name="Unit">
          <scope classrefs="Object" doc="A collection of tests which can be #run." ilk="class" line="15" lineend="72" name="TestSuite">
            <scope ilk="function" line="16" lineend="16" name="name" />
            <scope ilk="function" line="16" lineend="16" name="tests" />
            <scope attributes="__ctor__" doc="Creates a new TestSuite with the given name." ilk="function" line="22" lineend="25" name="initialize" signature="initialize(name=&quot;Unnamed TestSuite&quot;)" />
            <scope doc="Runs the tests and/or suites contained in this TestSuite." ilk="function" line="29" lineend="35" name="run" signature="run(result, &amp;progress_block)" />
            <scope doc="Adds the test to the suite." ilk="function" line="38" lineend="41" name="&lt;&lt;" signature="&lt;&lt;(test" />
            <scope ilk="function" line="43" lineend="45" name="delete" signature="delete(test)" />
            <scope doc="Retuns the rolled up number of tests in this suite; i.e." ilk="function" line="50" lineend="54" name="size" signature="size" />
            <scope ilk="function" line="56" lineend="58" name="empty?" signature="empty?" />
            <scope doc="Overridden to return the name given the suite at creation." ilk="function" line="62" lineend="64" name="to_s" signature="to_s" />
            <scope doc="It&apos;s handy to be able to compare TestSuite instances." ilk="function" line="67" lineend="71" name="==" signature="==(other" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/testresult">
      <import line="5" module="test/unit/util/observable" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="79" name="Test">
        <scope ilk="namespace" line="8" lineend="78" name="Unit">
          <scope classrefs="Object" doc="Collects Test::Unit::Failure and Test::Unit::Error so that&#xA;they can be displayed to the user." ilk="class" line="14" lineend="77" name="TestResult">
            <scope ilk="function" line="20" lineend="20" name="run_count" />
            <scope ilk="function" line="20" lineend="20" name="assertion_count" />
            <scope attributes="__ctor__" doc="Constructs a new, empty TestResult." ilk="function" line="23" lineend="26" name="initialize" signature="initialize" />
            <scope doc="Records a test run." ilk="function" line="29" lineend="32" name="add_run" signature="add_run" />
            <scope doc="Records a Test::Unit::Failure." ilk="function" line="35" lineend="39" name="add_failure" signature="add_failure(failure)" />
            <scope doc="Records a Test::Unit::Error." ilk="function" line="42" lineend="46" name="add_error" signature="add_error(error)" />
            <scope doc="Records an individual assertion." ilk="function" line="49" lineend="52" name="add_assertion" signature="add_assertion" />
            <scope doc="Returns a string contain the recorded runs, assertions,&#xA;failures and errors in this TestResult." ilk="function" line="56" lineend="58" name="to_s" signature="to_s" />
            <scope doc="Returns whether or not this TestResult represents successful&#xA;completion." ilk="function" line="62" lineend="64" name="passed?" signature="passed?" />
            <scope doc="Returns the number of failures this TestResult has recorded." ilk="function" line="68" lineend="70" name="failure_count" signature="failure_count" />
            <scope doc="Returns the number of errors this TestResult has recorded." ilk="function" line="74" lineend="76" name="error_count" signature="error_count" />
            <import symbol="Util::Observable" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/testcase">
      <import line="5" module="test/unit/assertions" symbol="*" />
      <import line="6" module="test/unit/failure" symbol="*" />
      <import line="7" module="test/unit/error" symbol="*" />
      <import line="8" module="test/unit/testsuite" symbol="*" />
      <import line="9" module="test/unit/assertionfailederror" symbol="*" />
      <import line="10" module="test/unit/util/backtracefilter" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="12" lineend="150" name="Test">
        <scope ilk="namespace" line="13" lineend="149" name="Unit">
          <scope classrefs="Object" doc="Ties everything together." ilk="class" line="20" lineend="148" name="TestCase">
            <scope ilk="function" line="24" lineend="24" name="method_name" />
            <scope attributes="__ctor__" doc="Creates a new instance of the fixture for running the test&#xA;represented by test_method_name." ilk="function" line="31" lineend="39" name="initialize" signature="initialize(test_method_name)" />
            <scope attributes="__classmethod__" doc="Rolls up all of the test* methods in the fixture into one&#xA;suite, creating a new instance of the fixture for each&#xA;method." ilk="function" line="44" lineend="60" name="suite" signature="self.suite" />
            <scope doc="Runs the individual test method represented by this instance&#xA;of the fixture, collecting statistics, failures and errors&#xA;in result." ilk="function" line="65" lineend="86" name="run" signature="run(result)" />
            <scope doc="Called before every test method runs." ilk="function" line="90" lineend="91" name="setup" signature="setup" />
            <scope doc="Called after every test method runs." ilk="function" line="95" lineend="96" name="teardown" signature="teardown" />
            <scope ilk="function" line="98" lineend="100" name="default_test" signature="default_test" />
            <scope doc="Returns whether this individual test passed or not." ilk="function" line="105" lineend="107" name="passed?" signature="passed?" />
            <scope ilk="function" line="110" lineend="112" name="size" signature="size" />
            <scope ilk="function" line="114" lineend="116" name="add_assertion" signature="add_assertion" />
            <scope ilk="function" line="119" lineend="122" name="add_failure" signature="add_failure(message, all_locations=caller())" />
            <scope ilk="function" line="125" lineend="128" name="add_error" signature="add_error(exception)" />
            <scope doc="Returns a human-readable name for the specific test that&#xA;this instance of TestCase represents." ilk="function" line="133" lineend="135" name="name" signature="name" />
            <scope doc="Overridden to return #name." ilk="function" line="138" lineend="140" name="to_s" signature="to_s" />
            <scope doc="It&apos;s handy to be able to compare TestCase instances." ilk="function" line="143" lineend="147" name="==" signature="==(other" />
            <import symbol="Assertions" />
            <import symbol="Util::BacktraceFilter" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/failure">
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="5" lineend="49" name="Test">
        <scope ilk="namespace" line="6" lineend="48" name="Unit">
          <scope classrefs="Object" doc="Encapsulates a test failure." ilk="class" line="10" lineend="47" name="Failure">
            <scope ilk="function" line="11" lineend="11" name="test_name" />
            <scope ilk="function" line="11" lineend="11" name="location" />
            <scope ilk="function" line="11" lineend="11" name="message" />
            <scope attributes="__ctor__" doc="Creates a new Failure with the given location and message." ilk="function" line="17" lineend="21" name="initialize" signature="initialize(test_name, location, message)" />
            <scope doc="Returns a single character representation of a failure." ilk="function" line="24" lineend="26" name="single_character_display" signature="single_character_display" />
            <scope doc="Returns a brief version of the error description." ilk="function" line="29" lineend="31" name="short_display" signature="short_display" />
            <scope doc="Returns a verbose version of the error description." ilk="function" line="34" lineend="41" name="long_display" signature="long_display" />
            <scope doc="Overridden to return long_display." ilk="function" line="44" lineend="46" name="to_s" signature="to_s" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/error">
      <import line="5" module="test/unit/util/backtracefilter" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="54" name="Test">
        <scope ilk="namespace" line="8" lineend="53" name="Unit">
          <scope classrefs="Object" doc="Encapsulates an error in a test." ilk="class" line="13" lineend="52" name="Error">
            <scope ilk="function" line="16" lineend="16" name="test_name" />
            <scope ilk="function" line="16" lineend="16" name="exception" />
            <scope attributes="__ctor__" doc="Creates a new Error with the given test_name and exception." ilk="function" line="22" lineend="25" name="initialize" signature="initialize(test_name, exception)" />
            <scope doc="Returns a single character representation of an error." ilk="function" line="28" lineend="30" name="single_character_display" signature="single_character_display" />
            <scope doc="Returns the message associated with the error." ilk="function" line="33" lineend="35" name="message" signature="message" />
            <scope doc="Returns a brief version of the error description." ilk="function" line="38" lineend="40" name="short_display" signature="short_display" />
            <scope doc="Returns a verbose version of the error description." ilk="function" line="43" lineend="46" name="long_display" signature="long_display" />
            <scope doc="Overridden to return long_display." ilk="function" line="49" lineend="51" name="to_s" signature="to_s" />
            <import symbol="Util::BacktraceFilter" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/collector">
      <scope ilk="namespace" line="1" lineend="43" name="Test">
        <scope ilk="namespace" line="2" lineend="42" name="Unit">
          <scope ilk="namespace" line="3" lineend="41" name="Collector">
            <scope attributes="__ctor__" ilk="function" line="4" lineend="6" name="initialize" signature="initialize" />
            <scope ilk="function" line="8" lineend="15" name="filter=" signature="filter=(filters)" />
            <scope ilk="function" line="17" lineend="21" name="add_suite" signature="add_suite(destination, suite)" />
            <scope ilk="function" line="23" lineend="36" name="include?" signature="include?(test)" />
            <scope ilk="function" line="38" lineend="40" name="sort" signature="sort(suites)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/collector/objectspace">
      <import line="5" module="test/unit/collector" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="34" name="Test">
        <scope ilk="namespace" line="8" lineend="33" name="Unit">
          <scope ilk="namespace" line="9" lineend="32" name="Collector">
            <scope classrefs="Object" ilk="class" line="10" lineend="31" name="ObjectSpace">
              <scope attributes="__ctor__" ilk="function" line="15" lineend="18" name="initialize" signature="initialize(source=::ObjectSpace)" />
              <scope ilk="function" line="20" lineend="30" name="collect" signature="collect(name=NAME)" />
              <import symbol="Collector" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/collector/dir">
      <import line="1" module="test/unit/testsuite" symbol="*" />
      <import line="2" module="test/unit/collector" symbol="*" />
      <scope ilk="namespace" line="4" lineend="92" name="Test">
        <scope ilk="namespace" line="5" lineend="91" name="Unit">
          <scope ilk="namespace" line="6" lineend="90" name="Collector">
            <scope classrefs="Object" ilk="class" line="7" lineend="89" name="Dir">
              <scope ilk="function" line="10" lineend="10" name="pattern" />
              <scope ilk="function" line="10" lineend="10" name="exclude" />
              <scope attributes="__ctor__" ilk="function" line="12" lineend="20" name="initialize" signature="initialize(dir=::Dir, file=::File, object_space=::ObjectSpace, req=nil)" />
              <scope ilk="function" line="22" lineend="37" name="collect" signature="collect(*from)" />
              <scope ilk="function" line="39" lineend="46" name="find_test_cases" signature="find_test_cases(ignore=[])" />
              <scope ilk="function" line="48" lineend="75" name="recursive_collect" signature="recursive_collect(name, already_gathered)" />
              <scope ilk="function" line="77" lineend="88" name="collect_file" signature="collect_file(name, suites, already_gathered)" />
              <import symbol="Collector" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/autorunner">
      <import line="1" module="test/unit" symbol="*" />
      <import line="2" module="test/unit/ui/testrunnerutilities" symbol="*" />
      <import line="3" module="optparse" symbol="*" />
      <scope ilk="namespace" line="5" lineend="204" name="Test">
        <scope ilk="namespace" line="6" lineend="203" name="Unit">
          <scope classrefs="Object" ilk="class" line="7" lineend="202" name="AutoRunner">
            <import line="30" module="test/unit/ui/gtk/testrunner" symbol="*" />
            <import line="34" module="test/unit/ui/gtk2/testrunner" symbol="*" />
            <import line="38" module="test/unit/ui/fox/testrunner" symbol="*" />
            <import line="42" module="test/unit/ui/tk/testrunner" symbol="*" />
            <import line="62" module="test/unit/collector/dir" symbol="*" />
            <scope attributes="__classmethod__" ilk="function" line="8" lineend="14" name="run" signature="self.run(force_standalone=false, default_dir=nil, argv=ARGV, &amp;block)" />
            <scope attributes="__classmethod__" ilk="function" line="16" lineend="22" name="standalone?" signature="self.standalone?" />
            <scope ilk="function" line="71" lineend="71" name="suite" />
            <scope ilk="function" line="72" lineend="72" name="output_level" />
            <scope ilk="function" line="72" lineend="72" name="output_level=" />
            <scope ilk="function" line="72" lineend="72" name="filters" />
            <scope ilk="function" line="72" lineend="72" name="filters=" />
            <scope ilk="function" line="72" lineend="72" name="to_run" />
            <scope ilk="function" line="72" lineend="72" name="to_run=" />
            <scope ilk="function" line="72" lineend="72" name="pattern" />
            <scope ilk="function" line="72" lineend="72" name="pattern=" />
            <scope ilk="function" line="72" lineend="72" name="exclude" />
            <scope ilk="function" line="72" lineend="72" name="exclude=" />
            <scope ilk="function" line="73" lineend="73" name="runner=" />
            <scope ilk="function" line="73" lineend="73" name="collector=" />
            <scope attributes="__ctor__" ilk="function" line="75" lineend="84" name="initialize" signature="initialize(standalone)" />
            <scope ilk="function" line="86" lineend="98" name="process_args" signature="process_args(args = ARGV)" />
            <scope ilk="function" line="100" lineend="189" name="options" signature="options" />
            <scope ilk="function" line="191" lineend="195" name="keyword_display" signature="keyword_display(array)" />
            <scope ilk="function" line="197" lineend="201" name="run" signature="run" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/assertions">
      <import line="5" module="test/unit/assertionfailederror" symbol="*" />
      <import line="6" module="test/unit/util/backtracefilter" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="8" lineend="472" name="Test">
        <scope ilk="namespace" line="9" lineend="471" name="Unit">
          <scope doc="Contains all of the standard Test::Unit assertions." ilk="namespace" line="22" lineend="470" name="Assertions">
            <scope doc="The assertion upon which all other assertions are based." ilk="function" line="27" lineend="33" name="assert_block" signature="assert_block(message=&quot;assert_block failed.&quot;)" />
            <scope doc="Passes if boolean is true." ilk="function" line="37" lineend="42" name="assert" signature="assert(boolean, message=nil)" />
            <scope doc="Passes if expected == actual." ilk="function" line="49" lineend="55" name="assert_equal" signature="assert_equal(expected, actual, message=nil)" />
            <scope ilk="function" line="58" lineend="64" name="_check_exception_class" signature="_check_exception_class(args)" />
            <scope ilk="function" line="67" lineend="70" name="_expected_exception?" signature="_expected_exception?(actual_exception, exceptions, modules)" />
            <scope doc="Passes if block raises one of the given exceptions." ilk="function" line="74" lineend="97" name="assert_raise" signature="assert_raise(*args)" />
            <scope doc="Alias of assert_raise. Will be deprecated in 1.9, and&#xA;removed in 2.0." ilk="function" line="101" lineend="103" name="assert_raises" signature="assert_raises(*args, &amp;block)" />
            <scope doc="Passes if object.class == klass." ilk="function" line="107" lineend="117" name="assert_instance_of" signature="assert_instance_of(klass, object, message=&quot;&quot;)" />
            <scope doc="Passes if object.nil?." ilk="function" line="121" lineend="123" name="assert_nil" signature="assert_nil(object, message=&quot;&quot;)" />
            <scope doc="Passes if object.kind_of?(klass)." ilk="function" line="127" lineend="133" name="assert_kind_of" signature="assert_kind_of(klass, object, message=&quot;&quot;)" />
            <scope doc="Passes if object.respond_to?(method) is true." ilk="function" line="137" lineend="151" name="assert_respond_to" signature="assert_respond_to(object, method, message=&quot;&quot;)" />
            <scope doc="Passes if string =~ pattern." ilk="function" line="155" lineend="166" name="assert_match" signature="assert_match(pattern, string, message=&quot;&quot;)" />
            <scope doc="Passes if actual.equal?(expected) (i.e." ilk="function" line="171" lineend="179" name="assert_same" signature="assert_same(expected, actual, message=&quot;&quot;)" />
            <scope doc="Compares the two objects based on the passed operator." ilk="function" line="185" lineend="196" name="assert_operator" signature="assert_operator(object1, operator, object2, message=&quot;&quot;)" />
            <scope doc="Passes if block does not raise an exception." ilk="function" line="200" lineend="220" name="assert_nothing_raised" signature="assert_nothing_raised(*args)" />
            <scope doc="Always fails." ilk="function" line="224" lineend="226" name="flunk" signature="flunk(message=&quot;Flunked&quot;)" />
            <scope doc="Passes if !actual.equal?(expected)." ilk="function" line="230" lineend="238" name="assert_not_same" signature="assert_not_same(expected, actual, message=&quot;&quot;)" />
            <scope doc="Passes if expected != actual." ilk="function" line="242" lineend="245" name="assert_not_equal" signature="assert_not_equal(expected, actual, message=&quot;&quot;)" />
            <scope doc="Passes if !object.nil?." ilk="function" line="249" lineend="252" name="assert_not_nil" signature="assert_not_nil(object, message=&quot;&quot;)" />
            <scope doc="Passes if string !~ regularExpression." ilk="function" line="256" lineend="262" name="assert_no_match" signature="assert_no_match(regexp, string, message=&quot;&quot;)" />
            <scope doc="` Passes if block throws symbol." ilk="function" line="269" lineend="289" name="assert_throws" signature="assert_throws(expected_symbol, message=&quot;&quot;, &amp;proc)" />
            <scope doc="Passes if block does not throw anything." ilk="function" line="293" lineend="307" name="assert_nothing_thrown" signature="assert_nothing_thrown(message=&quot;&quot;, &amp;proc)" />
            <scope doc="Passes if expected_float and actual_float are equal within&#xA;delta tolerance." ilk="function" line="312" lineend="325" name="assert_in_delta" signature="assert_in_delta(expected_float, actual_float, delta, message=&quot;&quot;)" />
            <scope doc="Passes if the method sent returns a true value." ilk="function" line="329" lineend="339" name="assert_send" signature="assert_send(send_array, message=&quot;&quot;)" />
            <scope ilk="function" line="342" lineend="345" name="build_message" signature="build_message(head, template=nil, *arguments)" />
            <scope ilk="function" line="348" lineend="361" name="_wrap_assertion" signature="_wrap_assertion" />
            <scope doc="Called whenever an assertion is made." ilk="function" line="365" lineend="366" name="add_assertion" signature="add_assertion" />
            <scope attributes="__classmethod__" doc="Select whether or not to use the prettyprinter." ilk="function" line="372" lineend="374" name="use_pp=" signature="self.use_pp=(value)" />
            <scope classrefs="Object" ilk="class" line="376" lineend="469" name="AssertionMessage">
              <scope classrefs="Object" ilk="class" line="378" lineend="380" name="self">
                <scope ilk="function" line="379" lineend="379" name="use_pp" />
                <scope ilk="function" line="379" lineend="379" name="use_pp=" />
              </scope>
              <scope classrefs="Object" ilk="class" line="382" lineend="390" name="Literal">
                <scope attributes="__ctor__" ilk="function" line="383" lineend="385" name="initialize" signature="initialize(value)" />
                <scope ilk="function" line="387" lineend="389" name="inspect" signature="inspect" />
              </scope>
              <scope classrefs="Object" ilk="class" line="392" lineend="410" name="Template">
                <scope attributes="__classmethod__" ilk="function" line="393" lineend="396" name="create" signature="self.create(string)" />
                <scope ilk="function" line="398" lineend="398" name="count" />
                <scope attributes="__ctor__" ilk="function" line="400" lineend="403" name="initialize" signature="initialize(parts)" />
                <scope ilk="function" line="405" lineend="409" name="result" signature="result(parameters)" />
              </scope>
              <scope attributes="__classmethod__" ilk="function" line="412" lineend="414" name="literal" signature="self.literal(value)" />
              <scope attributes="__ctor__" ilk="function" line="418" lineend="422" name="initialize" signature="initialize(head, template_string, parameters)" />
              <scope ilk="function" line="424" lineend="447" name="convert" signature="convert(object)">
                <import line="437" module="pp" symbol="*" />
              </scope>
              <scope ilk="function" line="449" lineend="451" name="template" signature="template" />
              <scope ilk="function" line="453" lineend="455" name="add_period" signature="add_period(string)" />
              <scope ilk="function" line="457" lineend="468" name="to_s" signature="to_s" />
              <import symbol="Util::BacktraceFilter" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="test/unit/assertionfailederror">
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="5" lineend="12" name="Test">
        <scope ilk="namespace" line="6" lineend="11" name="Unit">
          <scope classrefs="StandardError" doc="Thrown by Test::Unit::Assertions when an assertion fails." ilk="class" line="9" lineend="10" name="AssertionFailedError" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tempfile">
      <scope classrefs="DelegateClass(File)" doc="A class for managing temporary files. This library is&#xA;written to be thread safe." ilk="class" name="Tempfile">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a temporary file of mode 0600 in the temporary&#xA;directory whose name is basename.pid.n and opens with mode&#xA;&quot;w+&quot;. A Tempfile object works just like a File object." ilk="function" name="new" signature="(basename, tmpdir=Dir::tmpdir)" />
        <scope attributes="__classmethod__" doc="If no block is given, this is a synonym for new()." ilk="function" name="open" signature="(*args) {|tempfile| ...}" />
        <scope doc="Closes the file. If the optional flag is true, unlinks the&#xA;file after closing." ilk="function" name="close" signature="(unlink_now=false)" />
        <scope doc="Closes and unlinks the file." ilk="function" name="close!" signature="()" />
        <scope doc="Alias for #unlink" ilk="function" name="delete" signature="()" />
        <scope doc="Alias for #size" ilk="function" name="length" signature="()" />
        <scope attributes="private" ilk="function" name="make_tmpname" signature="(basename, n)" />
        <scope doc="Opens or reopens the file with mode &quot;r+&quot;." ilk="function" name="open" signature="()" />
        <scope doc="Returns the full path name of the temporary file." ilk="function" name="path" signature="()" />
        <scope doc="Returns the size of the temporary file. As a side effect,&#xA;the IO buffer is flushed before determining the size." ilk="function" name="size" signature="()" />
        <scope doc="Unlinks the file. On UNIX-like systems, it is often a good&#xA;idea to unlink a temporary file immediately after creating&#xA;and opening it, because it leaves other programs zero chance&#xA;to access the file." ilk="function" name="unlink" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="tcltk">
      <import line="6" module="tcltklib" symbol="*" />
      <scope doc="module TclTk: collection of tcl/tk utilities (supplies&#xA;namespace.)" ilk="namespace" line="11" lineend="18" name="TclTk" />
      <scope doc="TclTk.mainloop(): call TclTkLib.mainloop()" ilk="function" line="21" lineend="25" name="TclTk.mainloop" signature="TclTk.mainloop()" />
      <scope doc="TclTk.deletecallbackkey(ca): remove callback from TclTk&#xA;module this does not remove callbacks from tcl/tk&#xA;interpreter without calling this method, TclTkInterpreter&#xA;will not be GCed ca: callback(TclTkCallback)" ilk="function" line="31" lineend="34" name="TclTk.deletecallbackkey" signature="TclTk.deletecallbackkey(ca)" />
      <scope doc="TclTk.dcb(ca, wid, W): call TclTk.deletecallbackkey() for&#xA;each callbacks in an array." ilk="function" line="42" lineend="48" name="TclTk.dcb" signature="TclTk.dcb(ca, wid, w)" />
      <scope doc="TclTk._addcallback(ca): register callback ca:&#xA;callback(TclTkCallback)" ilk="function" line="52" lineend="55" name="TclTk._addcallback" signature="TclTk._addcallback(ca)" />
      <scope doc="TclTk._callcallback(key, arg): invoke registered callback&#xA;key: key to select callback (to_s value of the&#xA;TclTkCallback) arg: parameter from tcl/tk interpreter" ilk="function" line="60" lineend="66" name="TclTk._callcallback" signature="TclTk._callcallback(key, arg)" />
      <scope doc="TclTk._newname(prefix): generate unique name(String) prefix:&#xA;prefix of the unique name" ilk="function" line="70" lineend="80" name="TclTk._newname" signature="TclTk._newname(prefix)" />
      <scope classrefs="Object" doc="class TclTkInterpreter: tcl/tk interpreter" ilk="class" line="85" lineend="179" name="TclTkInterpreter">
        <scope attributes="__ctor__" doc="initialize():" ilk="function" line="88" lineend="150" name="initialize" signature="initialize()">
          <scope doc="@ip._get_eval_string(*args): generate string to evaluate in&#xA;tcl interpreter *args: script which is going to be evaluated&#xA;under tcl/tk" ilk="function" line="103" lineend="116" name="@ip" signature="@ip." />
          <scope doc="@ip._eval_args(*args): evaluate string under tcl/tk&#xA;interpreter returns result string." ilk="function" line="121" lineend="135" name="@ip" signature="@ip." />
        </scope>
        <scope doc="commands(): returns hash of the tcl/tk commands" ilk="function" line="153" lineend="155" name="commands" signature="commands()" />
        <scope doc="rootwidget(): returns root widget(TclTkWidget)" ilk="function" line="158" lineend="160" name="rootwidget" signature="rootwidget()" />
        <scope doc="_tcltkip(): returns @ip(TclTkIp)" ilk="function" line="163" lineend="165" name="_tcltkip" signature="_tcltkip()" />
        <scope doc="method_missing(id, *args): execute undefined method as&#xA;tcl/tk command id: method symbol *args: method arguments" ilk="function" line="170" lineend="178" name="method_missing" signature="method_missing(id, *args)" />
      </scope>
      <scope classrefs="Object" doc="class TclTkObject: base class of the tcl/tk objects" ilk="class" line="182" lineend="197" name="TclTkObject">
        <scope attributes="__ctor__" doc="initialize(ip, exp): ip: interpreter(TclTkIp) exp: tcl/tk&#xA;representation" ilk="function" line="187" lineend="191" name="initialize" signature="initialize(ip, exp)" />
        <scope doc="to_s(): returns tcl/tk representation" ilk="function" line="194" lineend="196" name="to_s" signature="to_s()" />
      </scope>
      <scope classrefs="TclTkObject" doc="class TclTkCommand: tcl/tk commands you should not call&#xA;TclTkCommand.new() commands are created by&#xA;TclTkInterpreter:initialize()" ilk="class" line="202" lineend="209" name="TclTkCommand">
        <scope doc="e(*args): execute command." ilk="function" line="206" lineend="208" name="e" signature="e(*args)" />
      </scope>
      <scope classrefs="TclTkCommand" doc="class TclTkLibCommand: tcl/tk commands in the library" ilk="class" line="212" lineend="220" name="TclTkLibCommand">
        <scope attributes="__ctor__" doc="initialize(ip, name): ip: interpreter(TclTkInterpreter)&#xA;name: command name (String)" ilk="function" line="217" lineend="219" name="initialize" signature="initialize(ip, name)" />
      </scope>
      <scope classrefs="TclTkObject" doc="class TclTkVariable: tcl/tk variable" ilk="class" line="223" lineend="253" name="TclTkVariable">
        <scope attributes="__ctor__" doc="initialize(interp, dat): interp:&#xA;interpreter(TclTkInterpreter) dat: the value to set(String)&#xA;if nil, not initialize variable" ilk="function" line="229" lineend="238" name="initialize" signature="initialize(interp, dat)" />
        <scope doc="although you can set/refer variable by using set in tcl/tk,&#xA;we provide the method for accessing variables set(data): set&#xA;tcl/tk variable using `set&apos; data: new value" ilk="function" line="245" lineend="247" name="set" signature="set(data)" />
        <scope doc="get(): read tcl/tk variable(String) using `set&apos;" ilk="function" line="250" lineend="252" name="get" signature="get()" />
      </scope>
      <scope classrefs="TclTkCommand" doc="class TclTkWidget: tcl/tk widget" ilk="class" line="256" lineend="301" name="TclTkWidget">
        <scope attributes="__ctor__" doc="initialize(*args): *args: parameters" ilk="function" line="260" lineend="300" name="initialize" signature="initialize(*args)" />
      </scope>
      <scope classrefs="TclTkObject" doc="class TclTkCallback: tcl/tk callbacks" ilk="class" line="304" lineend="345" name="TclTkCallback">
        <scope attributes="__ctor__" doc="initialize(interp, pr, arg): interp:&#xA;interpreter(TclTkInterpreter) pr: callback procedure(Proc)&#xA;arg: string to pass as block parameters of pr bind command&#xA;of tcl/tk uses % replacement for parameters" ilk="function" line="316" lineend="326" name="initialize" signature="initialize(interp, pr, arg = nil)" />
        <scope doc="to_eval(): retuens string representation for @ip._eval_args" ilk="function" line="329" lineend="338" name="to_eval" signature="to_eval()" />
        <scope doc="_call(arg): invoke callback arg: callback parameter" ilk="function" line="342" lineend="344" name="_call" signature="_call(arg)" />
      </scope>
      <scope classrefs="TclTkCommand" doc="class TclTkImage: tcl/tk images" ilk="class" line="348" lineend="365" name="TclTkImage">
        <scope attributes="__ctor__" doc="initialize(interp, t, *args): generating image is done by&#xA;TclTkImage.new() destrying is done by image delete&#xA;(inconsistent, sigh) interp: interpreter(TclTkInterpreter)&#xA;t: image type (photo, bitmap, etc.)" ilk="function" line="356" lineend="364" name="initialize" signature="initialize(interp, t, *args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="sync">
      <scope doc="sync.rb - 2 phase lock with counter $Release Version: 1.0$&#xA;$Revision: 1.4 $ $Date: 2001/06/06 14:19:33 $ by Keiju&#xA;ISHITSUKA(keiju@ishitsuka.com)" ilk="namespace" line="46" lineend="299" name="Sync_m">
        <scope classrefs="StandardError" doc="exceptions" ilk="class" line="55" lineend="76" name="Err">
          <scope attributes="__classmethod__" ilk="function" line="56" lineend="58" name="Fail" signature="Err.Fail(*opt)" />
          <scope classrefs="Err" ilk="class" line="60" lineend="65" name="UnknownLocker">
            <scope attributes="__classmethod__" ilk="function" line="62" lineend="64" name="Fail" signature="UnknownLocker.Fail(th)" />
          </scope>
          <scope classrefs="Err" ilk="class" line="67" lineend="75" name="LockModeFailer">
            <scope attributes="__classmethod__" ilk="function" line="69" lineend="74" name="Fail" signature="LockModeFailer.Fail(mode)" />
          </scope>
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="78" lineend="88" name="define_aliases" signature="Sync_m.define_aliases(cl)" />
        <scope attributes="__classmethod__" ilk="function" line="90" lineend="97" name="append_features" signature="Sync_m.append_features(cl)" />
        <scope attributes="__classmethod__" ilk="function" line="99" lineend="102" name="extend_object" signature="Sync_m.extend_object(obj)" />
        <scope ilk="function" line="104" lineend="115" name="sync_extended" signature="sync_extended">
          <scope classrefs="Object" ilk="class" line="112" lineend="112" name="self" />
        </scope>
        <scope doc="accessing" ilk="function" line="118" lineend="120" name="sync_locked?" signature="sync_locked?" />
        <scope ilk="function" line="122" lineend="124" name="sync_shared?" signature="sync_shared?" />
        <scope ilk="function" line="126" lineend="128" name="sync_exclusive?" signature="sync_exclusive?" />
        <scope doc="locking methods." ilk="function" line="131" lineend="138" name="sync_try_lock" signature="sync_try_lock(mode = EX)" />
        <scope ilk="function" line="140" lineend="154" name="sync_lock" signature="sync_lock(m = EX)" />
        <scope ilk="function" line="156" lineend="224" name="sync_unlock" signature="sync_unlock(m = EX)" />
        <scope ilk="function" line="226" lineend="233" name="sync_synchronize" signature="sync_synchronize(mode = EX)" />
        <scope ilk="function" line="245" lineend="252" name="sync_initialize" signature="sync_initialize" />
        <scope attributes="__ctor__" ilk="function" line="254" lineend="257" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="259" lineend="298" name="sync_try_lock_sub" signature="sync_try_lock_sub(m)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="302" lineend="310" name="Sync">
        <scope attributes="__ctor__" doc="Sync_m.extend_class self" ilk="function" line="306" lineend="308" name="initialize" signature="initialize" />
        <import symbol="Sync_m" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/wsdlDriver">
      <import line="9" module="wsdl/parser" symbol="*" />
      <import line="10" module="wsdl/importer" symbol="*" />
      <import line="11" module="xsd/qname" symbol="*" />
      <import line="12" module="xsd/codegen/gensupport" symbol="*" />
      <import line="13" module="soap/mapping/wsdlencodedregistry" symbol="*" />
      <import line="14" module="soap/mapping/wsdlliteralregistry" symbol="*" />
      <import line="15" module="soap/rpc/driver" symbol="*" />
      <import line="16" module="wsdl/soap/methodDefCreator" symbol="*" />
      <scope doc="SOAP4R - SOAP WSDL driver Copyright (C) 2002, 2003, 2005&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="19" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="22" lineend="158" name="WSDLDriverFactory">
        <scope classrefs="StandardError" ilk="class" line="23" lineend="23" name="FactoryError" />
        <scope ilk="function" line="25" lineend="25" name="wsdl" />
        <scope attributes="__ctor__" ilk="function" line="27" lineend="30" name="initialize" signature="initialize(wsdl)" />
        <scope ilk="function" line="32" lineend="34" name="inspect" signature="inspect" />
        <scope ilk="function" line="36" lineend="42" name="create_rpc_driver" signature="create_rpc_driver(servicename = nil, portname = nil)" />
        <scope doc="depricated old interface" ilk="function" line="45" lineend="49" name="create_driver" signature="create_driver(servicename = nil, portname = nil)" />
        <scope doc="Backward compatibility." ilk="function" line="56" lineend="82" name="find_port" signature="find_port(servicename = nil, portname = nil)" />
        <scope ilk="function" line="84" lineend="93" name="init_driver" signature="init_driver(drv, port)" />
        <scope ilk="function" line="95" lineend="121" name="add_operation" signature="add_operation(drv, port)" />
        <scope ilk="function" line="123" lineend="125" name="import" signature="import(location)" />
        <scope ilk="function" line="127" lineend="140" name="create_param_def" signature="create_param_def(op_bind)" />
        <scope ilk="function" line="142" lineend="148" name="partqname" signature="partqname(part)" />
        <scope ilk="function" line="150" lineend="152" name="param_def" signature="param_def(type, name, klass, partqname)" />
        <scope ilk="function" line="154" lineend="157" name="filter_parts" signature="filter_parts(partsdef, partssource)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="161" lineend="572" name="WSDLDriver">
        <scope classrefs="Object" ilk="class" line="162" lineend="193" name="self">
          <scope ilk="function" line="164" lineend="175" name="__attr_proxy" signature="__attr_proxy(symbol, assignable = false)" />
          <scope ilk="function" line="177" lineend="191" name="__attr_proxy" signature="__attr_proxy(symbol, assignable = false)" />
        </scope>
        <scope doc="for RPC marshal" ilk="function" line="206" lineend="208" name="httpproxy" signature="httpproxy" />
        <scope ilk="function" line="210" lineend="212" name="httpproxy=" signature="httpproxy=(httpproxy)" />
        <scope ilk="function" line="214" lineend="216" name="wiredump_dev" signature="wiredump_dev" />
        <scope ilk="function" line="218" lineend="220" name="wiredump_dev=" signature="wiredump_dev=(wiredump_dev)" />
        <scope ilk="function" line="222" lineend="224" name="mandatorycharset" signature="mandatorycharset" />
        <scope ilk="function" line="226" lineend="228" name="mandatorycharset=" signature="mandatorycharset=(mandatorycharset)" />
        <scope ilk="function" line="230" lineend="232" name="wiredump_file_base" signature="wiredump_file_base" />
        <scope ilk="function" line="234" lineend="236" name="wiredump_file_base=" signature="wiredump_file_base=(wiredump_file_base)" />
        <scope attributes="__ctor__" ilk="function" line="238" lineend="240" name="initialize" signature="initialize(wsdl, port, logdev)" />
        <scope ilk="function" line="242" lineend="244" name="inspect" signature="inspect" />
        <scope ilk="function" line="246" lineend="248" name="reset_stream" signature="reset_stream" />
        <scope classrefs="Object" doc="Backward compatibility." ilk="class" line="253" lineend="571" name="Servant__">
          <scope ilk="function" line="256" lineend="256" name="options" />
          <scope ilk="function" line="257" lineend="257" name="port" />
          <scope ilk="function" line="259" lineend="259" name="soapaction" />
          <scope ilk="function" line="259" lineend="259" name="soapaction=" />
          <scope ilk="function" line="260" lineend="260" name="default_encodingstyle" />
          <scope ilk="function" line="260" lineend="260" name="default_encodingstyle=" />
          <scope ilk="function" line="261" lineend="261" name="allow_unqualified_element" />
          <scope ilk="function" line="261" lineend="261" name="allow_unqualified_element=" />
          <scope ilk="function" line="262" lineend="262" name="generate_explicit_type" />
          <scope ilk="function" line="262" lineend="262" name="generate_explicit_type=" />
          <scope ilk="function" line="263" lineend="263" name="mapping_registry" />
          <scope ilk="function" line="263" lineend="263" name="mapping_registry=" />
          <scope ilk="function" line="264" lineend="264" name="wsdl_mapping_registry" />
          <scope ilk="function" line="264" lineend="264" name="wsdl_mapping_registry=" />
          <scope attributes="__ctor__" ilk="function" line="266" lineend="298" name="initialize" signature="initialize(host, wsdl, port, logdev)" />
          <scope ilk="function" line="300" lineend="302" name="inspect" signature="inspect" />
          <scope ilk="function" line="304" lineend="306" name="endpoint_url" signature="endpoint_url" />
          <scope ilk="function" line="308" lineend="310" name="endpoint_url=" signature="endpoint_url=(endpoint_url)" />
          <scope ilk="function" line="312" lineend="314" name="headerhandler" signature="headerhandler" />
          <scope ilk="function" line="316" lineend="318" name="streamhandler" signature="streamhandler" />
          <scope ilk="function" line="320" lineend="322" name="test_loopback_response" signature="test_loopback_response" />
          <scope ilk="function" line="324" lineend="326" name="reset_stream" signature="reset_stream" />
          <scope ilk="function" line="328" lineend="357" name="rpc_call" signature="rpc_call(name, *values)" />
          <scope doc="req_header: [[element, mustunderstand,&#xA;encodingstyle(QName/String)], ...] req_body:&#xA;SOAPBasetype/SOAPCompoundtype" ilk="function" line="361" lineend="379" name="document_send" signature="document_send(name, header_obj, body_obj)" />
          <scope ilk="function" line="383" lineend="390" name="create_options" signature="create_options(hash = nil)" />
          <scope ilk="function" line="392" lineend="396" name="set_wiredump_file_base" signature="set_wiredump_file_base(name)" />
          <scope ilk="function" line="398" lineend="409" name="create_request_header" signature="create_request_header" />
          <scope ilk="function" line="411" lineend="413" name="receive_headers" signature="receive_headers(headers)" />
          <scope ilk="function" line="415" lineend="418" name="create_request_body" signature="create_request_body(op_info, *values)" />
          <scope ilk="function" line="420" lineend="436" name="create_method_struct" signature="create_method_struct(op_info, *params)" />
          <scope ilk="function" line="438" lineend="446" name="create_method_obj" signature="create_method_obj(names, params)" />
          <scope ilk="function" line="448" lineend="471" name="header_from_obj" signature="header_from_obj(obj, op_info)" />
          <scope ilk="function" line="473" lineend="481" name="headeritem_from_obj" signature="headeritem_from_obj(obj, name)" />
          <scope ilk="function" line="483" lineend="505" name="body_from_obj" signature="body_from_obj(obj, op_info)" />
          <scope ilk="function" line="507" lineend="515" name="bodyitem_from_obj" signature="bodyitem_from_obj(obj, name)" />
          <scope ilk="function" line="517" lineend="535" name="add_method_interface" signature="add_method_interface(op_info)" />
          <scope ilk="function" line="537" lineend="546" name="add_rpc_method_interface" signature="add_rpc_method_interface(name, parts_names)" />
          <scope ilk="function" line="548" lineend="553" name="add_document_method_interface" signature="add_document_method_interface(name, parts_names)" />
          <scope ilk="function" line="555" lineend="570" name="setup_options" signature="setup_options" />
          <import symbol="SOAP" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/streamHandler">
      <import line="9" module="soap/soap" symbol="*" />
      <import line="10" module="soap/httpconfigloader" symbol="*" />
      <import line="12" module="stringio" symbol="*" />
      <import line="13" module="zlib" symbol="*" />
      <scope doc="SOAP4R - Stream handler." ilk="namespace" line="19" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="22" lineend="55" name="StreamHandler">
        <scope classrefs="Object" ilk="class" line="25" lineend="41" name="ConnectionData">
          <scope ilk="function" line="26" lineend="26" name="send_string" />
          <scope ilk="function" line="26" lineend="26" name="send_string=" />
          <scope ilk="function" line="27" lineend="27" name="send_contenttype" />
          <scope ilk="function" line="27" lineend="27" name="send_contenttype=" />
          <scope ilk="function" line="28" lineend="28" name="receive_string" />
          <scope ilk="function" line="28" lineend="28" name="receive_string=" />
          <scope ilk="function" line="29" lineend="29" name="receive_contenttype" />
          <scope ilk="function" line="29" lineend="29" name="receive_contenttype=" />
          <scope ilk="function" line="30" lineend="30" name="is_fault" />
          <scope ilk="function" line="30" lineend="30" name="is_fault=" />
          <scope ilk="function" line="31" lineend="31" name="soapaction" />
          <scope ilk="function" line="31" lineend="31" name="soapaction=" />
          <scope attributes="__ctor__" ilk="function" line="33" lineend="40" name="initialize" signature="initialize(send_string = nil)" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="43" lineend="50" name="parse_media_type" signature="self.parse_media_type(str)" />
        <scope attributes="__classmethod__" ilk="function" line="52" lineend="54" name="create_media_type" signature="self.create_media_type(charset)" />
      </scope>
      <scope classrefs="StreamHandler" ilk="class" line="58" lineend="226" name="HTTPStreamHandler">
        <import line="62" module="http-access2" symbol="*" />
        <import line="70" module="soap/netHttpClient" symbol="*" />
        <scope ilk="function" line="78" lineend="78" name="client" />
        <scope ilk="function" line="79" lineend="79" name="wiredump_file_base" />
        <scope ilk="function" line="79" lineend="79" name="wiredump_file_base=" />
        <scope attributes="__ctor__" doc="[times]" ilk="function" line="83" lineend="93" name="initialize" signature="initialize(options)" />
        <scope ilk="function" line="95" lineend="97" name="test_loopback_response" signature="test_loopback_response" />
        <scope ilk="function" line="99" lineend="101" name="accept_encoding_gzip=" signature="accept_encoding_gzip=(allow)" />
        <scope ilk="function" line="103" lineend="105" name="inspect" signature="inspect" />
        <scope ilk="function" line="107" lineend="110" name="send" signature="send(endpoint_url, conn_data, soapaction = nil, charset = @charset)" />
        <scope ilk="function" line="112" lineend="119" name="reset" signature="reset(endpoint_url = nil)" />
        <scope ilk="function" line="123" lineend="143" name="set_options" signature="set_options" />
        <scope ilk="function" line="145" lineend="149" name="set_cookie_store_file" signature="set_cookie_store_file(value)" />
        <scope ilk="function" line="151" lineend="209" name="send_post" signature="send_post(endpoint_url, conn_data, charset)" />
        <scope ilk="function" line="211" lineend="213" name="send_accept_encoding_gzip?" signature="send_accept_encoding_gzip?" />
        <scope ilk="function" line="215" lineend="225" name="decode_gzip" signature="decode_gzip(instring)" />
        <import symbol="SOAP" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/soap">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="xsd/charset" symbol="*" />
      <scope doc="soap/soap.rb: SOAP4R - Base definitions." ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="StandardError" ilk="class" line="67" lineend="67" name="Error" />
      <scope classrefs="Error" ilk="class" line="69" lineend="69" name="StreamError" />
      <scope classrefs="StreamError" ilk="class" line="70" lineend="70" name="HTTPStreamError" />
      <scope classrefs="HTTPStreamError" ilk="class" line="71" lineend="71" name="PostUnavailableError" />
      <scope classrefs="HTTPStreamError" ilk="class" line="72" lineend="72" name="MPostUnavailableError" />
      <scope classrefs="Error" ilk="class" line="74" lineend="74" name="ArrayIndexOutOfBoundsError" />
      <scope classrefs="Error" ilk="class" line="75" lineend="75" name="ArrayStoreError" />
      <scope classrefs="Error" ilk="class" line="77" lineend="77" name="RPCRoutingError" />
      <scope classrefs="Error" ilk="class" line="78" lineend="78" name="EmptyResponseError" />
      <scope classrefs="Error" ilk="class" line="79" lineend="79" name="ResponseFormatError" />
      <scope classrefs="Error" ilk="class" line="81" lineend="81" name="UnhandledMustUnderstandHeaderError" />
      <scope classrefs="Error" ilk="class" line="83" lineend="104" name="FaultError">
        <scope ilk="function" line="84" lineend="84" name="faultcode" />
        <scope ilk="function" line="85" lineend="85" name="faultstring" />
        <scope ilk="function" line="86" lineend="86" name="faultactor" />
        <scope ilk="function" line="87" lineend="87" name="detail" />
        <scope ilk="function" line="87" lineend="87" name="detail=" />
        <scope attributes="__ctor__" ilk="function" line="89" lineend="95" name="initialize" signature="initialize(fault)" />
        <scope ilk="function" line="97" lineend="103" name="to_s" signature="to_s" />
      </scope>
      <scope ilk="namespace" line="107" lineend="115" name="Env">
        <scope attributes="__classmethod__" ilk="function" line="108" lineend="110" name="getenv" signature="self.getenv(name)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="122" lineend="130" name="Object">
        <scope ilk="function" line="123" lineend="125" name="instance_variable_get" signature="instance_variable_get(ivarname)" />
        <scope ilk="function" line="127" lineend="129" name="instance_variable_set" signature="instance_variable_set(ivarname, value)" />
      </scope>
      <scope ilk="namespace" line="135" lineend="139" name="Kernel">
        <scope ilk="function" line="136" lineend="138" name="warn" signature="warn(msg)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/standaloneServer">
      <import line="9" module="soap/rpc/httpserver" symbol="*" />
      <scope doc="SOAP4R - WEBrick Server Copyright (C) 2003 by NAKAMURA,&#xA;Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="13" name="RPC" />
      <scope classrefs="HTTPServer" ilk="class" line="16" lineend="39" name="StandaloneServer">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="23" name="initialize" signature="initialize(appname, default_namespace, host = &quot;0.0.0.0&quot;, port = 8080)" />
        <scope ilk="function" line="30" lineend="38" name="create_config" signature="create_config" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/soaplet">
      <import line="9" module="webrick/httpservlet/abstract" symbol="*" />
      <import line="10" module="webrick/httpstatus" symbol="*" />
      <import line="11" module="soap/rpc/router" symbol="*" />
      <import line="12" module="soap/streamHandler" symbol="*" />
      <import line="14" module="stringio" symbol="*" />
      <import line="15" module="zlib" symbol="*" />
      <import line="22" module="webrick/log" symbol="*" />
      <scope doc="SOAP4R - SOAP handler servlet for WEBrick Copyright (C)&#xA;2001-2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="23" lineend="34" name="WEBrick">
        <scope classrefs="BasicLog" ilk="class" line="24" lineend="33" name="Log">
          <scope ilk="function" line="26" lineend="32" name="debug" signature="debug(msg = nil)" />
        </scope>
      </scope>
      <scope ilk="namespace" line="37" name="SOAP" />
      <scope ilk="namespace" line="38" name="RPC" />
      <scope classrefs="WEBrick::HTTPServlet::" ilk="class" line="41" lineend="158" name="SOAPlet">
        <scope ilk="function" line="43" lineend="43" name="options" />
        <scope attributes="__ctor__" ilk="function" line="45" lineend="49" name="initialize" signature="initialize(router = nil)" />
        <scope doc="for backward compatibility" ilk="function" line="52" lineend="54" name="app_scope_router" signature="app_scope_router" />
        <scope doc="for backward compatibility" ilk="function" line="57" lineend="59" name="add_servant" signature="add_servant(obj, namespace)" />
        <scope ilk="function" line="61" lineend="63" name="allow_content_encoding_gzip=" signature="allow_content_encoding_gzip=(allow)" />
        <scope doc="Servlet interfaces for WEBrick." ilk="function" line="68" lineend="71" name="get_instance" signature="get_instance(config, *options)" />
        <scope ilk="function" line="73" lineend="75" name="require_path_info?" signature="require_path_info?" />
        <scope ilk="function" line="77" lineend="80" name="do_GET" signature="do_GET(req, res)" />
        <scope ilk="function" line="82" lineend="102" name="do_POST" signature="do_POST(req, res)" />
        <scope ilk="function" line="106" lineend="108" name="logger" signature="logger" />
        <scope ilk="function" line="110" lineend="114" name="setup_req" signature="setup_req(conn_data, req)" />
        <scope ilk="function" line="116" lineend="128" name="setup_res" signature="setup_res(conn_data, req, res)" />
        <scope ilk="function" line="130" lineend="137" name="parse_soapaction" signature="parse_soapaction(soapaction)" />
        <scope ilk="function" line="139" lineend="151" name="encode_gzip" signature="encode_gzip(req, outstring)" />
        <scope ilk="function" line="153" lineend="157" name="encode_gzip?" signature="encode_gzip?(req)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/rpc">
      <scope doc="SOAP4R - RPC utility." ilk="namespace" line="9" name="SOAP" />
      <scope ilk="namespace" line="12" lineend="22" name="RPC">
        <scope attributes="__classmethod__" ilk="function" line="15" lineend="21" name="defined_methods" signature="self.defined_methods(obj)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/router">
      <import line="9" module="soap/soap" symbol="*" />
      <import line="10" module="soap/processor" symbol="*" />
      <import line="11" module="soap/mapping" symbol="*" />
      <import line="12" module="soap/mapping/wsdlliteralregistry" symbol="*" />
      <import line="13" module="soap/rpc/rpc" symbol="*" />
      <import line="14" module="soap/rpc/element" symbol="*" />
      <import line="15" module="soap/streamHandler" symbol="*" />
      <import line="16" module="soap/mimemessage" symbol="*" />
      <import line="17" module="soap/header/handlerset" symbol="*" />
      <scope doc="SOAP4R - RPC Routing library Copyright (C) 2001, 2002, 2004,&#xA;2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="20" name="SOAP" />
      <scope ilk="namespace" line="21" name="RPC" />
      <scope classrefs="Object" ilk="class" line="24" lineend="590" name="Router">
        <scope ilk="function" line="27" lineend="27" name="actor" />
        <scope ilk="function" line="28" lineend="28" name="mapping_registry" />
        <scope ilk="function" line="28" lineend="28" name="mapping_registry=" />
        <scope ilk="function" line="29" lineend="29" name="literal_mapping_registry" />
        <scope ilk="function" line="29" lineend="29" name="literal_mapping_registry=" />
        <scope ilk="function" line="30" lineend="30" name="generate_explicit_type" />
        <scope ilk="function" line="30" lineend="30" name="generate_explicit_type=" />
        <scope ilk="function" line="31" lineend="31" name="external_ces" />
        <scope ilk="function" line="31" lineend="31" name="external_ces=" />
        <scope attributes="__ctor__" ilk="function" line="33" lineend="43" name="initialize" signature="initialize(actor)" />
        <scope doc="header handler interface" ilk="function" line="48" lineend="53" name="add_request_headerhandler" signature="add_request_headerhandler(factory)" />
        <scope ilk="function" line="55" lineend="57" name="add_headerhandler" signature="add_headerhandler(handler)" />
        <scope doc="servant definition interface" ilk="function" line="62" lineend="77" name="add_rpc_request_servant" signature="add_rpc_request_servant(factory, namespace)" />
        <scope ilk="function" line="79" lineend="90" name="add_rpc_servant" signature="add_rpc_servant(obj, namespace)" />
        <scope doc="operation definition interface" ilk="function" line="96" lineend="105" name="add_rpc_operation" signature="add_rpc_operation(receiver, qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="109" lineend="117" name="add_rpc_request_operation" signature="add_rpc_request_operation(factory, qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="119" lineend="134" name="add_document_operation" signature="add_document_operation(receiver, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="137" lineend="151" name="add_document_request_operation" signature="add_document_request_operation(factory, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="153" lineend="180" name="route" signature="route(conn_data)" />
        <scope doc="Create fault response string." ilk="function" line="183" lineend="194" name="create_fault_response" signature="create_fault_response(e)" />
        <scope ilk="function" line="198" lineend="206" name="first_input_part_qname" signature="first_input_part_qname(param_def)" />
        <scope ilk="function" line="208" lineend="213" name="create_styleuse_option" signature="create_styleuse_option(style, use)" />
        <scope ilk="function" line="215" lineend="220" name="ensure_styleuse_option" signature="ensure_styleuse_option(opt, style, use)" />
        <scope ilk="function" line="222" lineend="235" name="assign_operation" signature="assign_operation(soapaction, qname, op)" />
        <scope ilk="function" line="237" lineend="251" name="lookup_operation" signature="lookup_operation(soapaction, body)" />
        <scope ilk="function" line="253" lineend="264" name="call_headers" signature="call_headers(headerhandler)" />
        <scope ilk="function" line="266" lineend="268" name="receive_headers" signature="receive_headers(headerhandler, headers)" />
        <scope ilk="function" line="270" lineend="293" name="unmarshal" signature="unmarshal(conn_data)" />
        <scope ilk="function" line="295" lineend="306" name="marshal" signature="marshal(conn_data, env, default_encodingstyle = nil)" />
        <scope ilk="function" line="308" lineend="318" name="mimeize" signature="mimeize(conn_data, ext)" />
        <scope doc="Create fault response." ilk="function" line="321" lineend="328" name="fault" signature="fault(e)" />
        <scope ilk="function" line="330" lineend="332" name="create_mapping_opt" signature="create_mapping_opt" />
        <scope classrefs="Object" ilk="class" line="334" lineend="560" name="Operation">
          <scope ilk="function" line="335" lineend="335" name="name" />
          <scope ilk="function" line="336" lineend="336" name="soapaction" />
          <scope ilk="function" line="337" lineend="337" name="request_style" />
          <scope ilk="function" line="338" lineend="338" name="response_style" />
          <scope ilk="function" line="339" lineend="339" name="request_use" />
          <scope ilk="function" line="340" lineend="340" name="response_use" />
          <scope attributes="__ctor__" ilk="function" line="342" lineend="379" name="initialize" signature="initialize(soapaction, name, param_def, opt)" />
          <scope ilk="function" line="381" lineend="383" name="request_default_encodingstyle" signature="request_default_encodingstyle (@request_use" />
          <scope ilk="function" line="385" lineend="387" name="response_default_encodingstyle" signature="response_default_encodingstyle (@response_use" />
          <scope ilk="function" line="389" lineend="404" name="call" signature="call(body, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="408" lineend="410" name="receiver" signature="receiver" />
          <scope ilk="function" line="412" lineend="422" name="request_rpc" signature="request_rpc(body, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="424" lineend="431" name="request_document" signature="request_document(body, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="433" lineend="438" name="request_rpc_enc" signature="request_rpc_enc(request, mapping_registry, opt)" />
          <scope ilk="function" line="440" lineend="444" name="request_rpc_lit" signature="request_rpc_lit(request, mapping_registry, opt)" />
          <scope ilk="function" line="446" lineend="450" name="request_doc_enc" signature="request_doc_enc(body, mapping_registry, opt)" />
          <scope ilk="function" line="452" lineend="456" name="request_doc_lit" signature="request_doc_lit(body, mapping_registry, opt)" />
          <scope ilk="function" line="458" lineend="464" name="response_rpc" signature="response_rpc(result, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="466" lineend="479" name="response_doc" signature="response_doc(result, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="481" lineend="503" name="response_rpc_enc" signature="response_rpc_enc(result, mapping_registry, opt)" />
          <scope ilk="function" line="505" lineend="527" name="response_rpc_lit" signature="response_rpc_lit(result, mapping_registry, opt)" />
          <scope ilk="function" line="529" lineend="535" name="response_doc_enc" signature="response_doc_enc(result, mapping_registry, opt)" />
          <scope ilk="function" line="537" lineend="547" name="response_doc_lit" signature="response_doc_lit(result, mapping_registry, opt)" />
          <scope ilk="function" line="549" lineend="553" name="check_style" signature="check_style(style)" />
          <scope ilk="function" line="555" lineend="559" name="check_use" signature="check_use(use)" />
        </scope>
        <scope classrefs="Operation" ilk="class" line="562" lineend="573" name="ApplicationScopeOperation">
          <scope attributes="__ctor__" ilk="function" line="563" lineend="566" name="initialize" signature="initialize(soapaction, receiver, name, param_def, opt)" />
          <scope ilk="function" line="570" lineend="572" name="receiver" signature="receiver" />
        </scope>
        <scope classrefs="Operation" ilk="class" line="575" lineend="589" name="RequestScopeOperation">
          <scope attributes="__ctor__" ilk="function" line="576" lineend="582" name="initialize" signature="initialize(soapaction, receiver_factory, name, param_def, opt)" />
          <scope ilk="function" line="586" lineend="588" name="receiver" signature="receiver" />
        </scope>
        <import symbol="SOAP" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/proxy">
      <import line="9" module="soap/soap" symbol="*" />
      <import line="10" module="soap/processor" symbol="*" />
      <import line="11" module="soap/mapping" symbol="*" />
      <import line="12" module="soap/rpc/rpc" symbol="*" />
      <import line="13" module="soap/rpc/element" symbol="*" />
      <import line="14" module="soap/streamHandler" symbol="*" />
      <import line="15" module="soap/mimemessage" symbol="*" />
      <scope doc="SOAP4R - RPC Proxy library." ilk="namespace" line="18" name="SOAP" />
      <scope ilk="namespace" line="19" name="RPC" />
      <scope classrefs="Object" ilk="class" line="22" lineend="493" name="Proxy">
        <scope ilk="function" line="27" lineend="27" name="soapaction" />
        <scope ilk="function" line="27" lineend="27" name="soapaction=" />
        <scope ilk="function" line="28" lineend="28" name="mandatorycharset" />
        <scope ilk="function" line="28" lineend="28" name="mandatorycharset=" />
        <scope ilk="function" line="29" lineend="29" name="allow_unqualified_element" />
        <scope ilk="function" line="29" lineend="29" name="allow_unqualified_element=" />
        <scope ilk="function" line="30" lineend="30" name="default_encodingstyle" />
        <scope ilk="function" line="30" lineend="30" name="default_encodingstyle=" />
        <scope ilk="function" line="31" lineend="31" name="generate_explicit_type" />
        <scope ilk="function" line="31" lineend="31" name="generate_explicit_type=" />
        <scope ilk="function" line="32" lineend="32" name="headerhandler" />
        <scope ilk="function" line="33" lineend="33" name="streamhandler" />
        <scope ilk="function" line="35" lineend="35" name="mapping_registry" />
        <scope ilk="function" line="35" lineend="35" name="mapping_registry=" />
        <scope ilk="function" line="36" lineend="36" name="literal_mapping_registry" />
        <scope ilk="function" line="36" lineend="36" name="literal_mapping_registry=" />
        <scope ilk="function" line="38" lineend="38" name="operation" />
        <scope attributes="__ctor__" ilk="function" line="40" lineend="54" name="initialize" signature="initialize(endpoint_url, soapaction, options)" />
        <scope ilk="function" line="56" lineend="58" name="inspect" signature="inspect" />
        <scope ilk="function" line="60" lineend="62" name="endpoint_url" signature="endpoint_url" />
        <scope ilk="function" line="64" lineend="67" name="endpoint_url=" signature="endpoint_url=(endpoint_url)" />
        <scope ilk="function" line="69" lineend="71" name="reset_stream" signature="reset_stream" />
        <scope ilk="function" line="73" lineend="75" name="set_wiredump_file_base" signature="set_wiredump_file_base(wiredump_file_base)" />
        <scope ilk="function" line="77" lineend="79" name="test_loopback_response" signature="test_loopback_response" />
        <scope ilk="function" line="81" lineend="88" name="add_rpc_operation" signature="add_rpc_operation(qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="90" lineend="104" name="add_document_operation" signature="add_document_operation(soapaction, name, param_def, opt = {})" />
        <scope doc="add_method is for shortcut of typical rpc/encoded method&#xA;definition." ilk="function" line="111" lineend="114" name="invoke" signature="invoke(req_header, req_body, opt = nil)" />
        <scope ilk="function" line="116" lineend="151" name="call" signature="call(name, *params)" />
        <scope ilk="function" line="153" lineend="176" name="route" signature="route(req_header, req_body, reqopt, resopt)" />
        <scope ilk="function" line="178" lineend="182" name="check_fault" signature="check_fault(body)" />
        <scope ilk="function" line="186" lineend="194" name="set_envelopenamespace" signature="set_envelopenamespace(env, namespace)" />
        <scope ilk="function" line="196" lineend="207" name="create_request_header" signature="create_request_header" />
        <scope ilk="function" line="209" lineend="211" name="receive_headers" signature="receive_headers(headers)" />
        <scope ilk="function" line="213" lineend="216" name="marshal" signature="marshal(env, opt)" />
        <scope ilk="function" line="218" lineend="243" name="unmarshal" signature="unmarshal(conn_data, opt)" />
        <scope ilk="function" line="245" lineend="251" name="create_header" signature="create_header(headers)" />
        <scope ilk="function" line="253" lineend="263" name="create_encoding_opt" signature="create_encoding_opt(hash = nil)" />
        <scope ilk="function" line="265" lineend="271" name="create_mapping_opt" signature="create_mapping_opt(hash = nil)" />
        <scope classrefs="Object" ilk="class" line="273" lineend="492" name="Operation">
          <scope ilk="function" line="274" lineend="274" name="soapaction" />
          <scope ilk="function" line="275" lineend="275" name="request_style" />
          <scope ilk="function" line="276" lineend="276" name="response_style" />
          <scope ilk="function" line="277" lineend="277" name="request_use" />
          <scope ilk="function" line="278" lineend="278" name="response_use" />
          <scope ilk="function" line="279" lineend="279" name="elementformdefault" />
          <scope ilk="function" line="280" lineend="280" name="attributeformdefault" />
          <scope attributes="__ctor__" ilk="function" line="282" lineend="326" name="initialize" signature="initialize(soapaction, param_def, opt)" />
          <scope ilk="function" line="328" lineend="330" name="request_default_encodingstyle" signature="request_default_encodingstyle (@request_use" />
          <scope ilk="function" line="332" lineend="334" name="response_default_encodingstyle" signature="response_default_encodingstyle (@response_use" />
          <scope ilk="function" line="336" lineend="342" name="request_body" signature="request_body(values, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="344" lineend="350" name="response_obj" signature="response_obj(body, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="352" lineend="358" name="raise_fault" signature="raise_fault(e, mapping_registry, literal_mapping_registry)" />
          <scope ilk="function" line="362" lineend="366" name="check_style" signature="check_style(style)" />
          <scope ilk="function" line="368" lineend="372" name="check_use" signature="check_use(use)" />
          <scope ilk="function" line="374" lineend="380" name="request_rpc" signature="request_rpc(values, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="382" lineend="388" name="request_doc" signature="request_doc(values, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="390" lineend="397" name="request_rpc_enc" signature="request_rpc_enc(values, mapping_registry, opt)" />
          <scope ilk="function" line="399" lineend="410" name="request_rpc_lit" signature="request_rpc_lit(values, mapping_registry, opt)" />
          <scope ilk="function" line="412" lineend="418" name="request_doc_enc" signature="request_doc_enc(values, mapping_registry, opt)" />
          <scope ilk="function" line="420" lineend="430" name="request_doc_lit" signature="request_doc_lit(values, mapping_registry, opt)" />
          <scope ilk="function" line="432" lineend="438" name="response_rpc" signature="response_rpc(body, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="440" lineend="446" name="response_doc" signature="response_doc(body, mapping_registry, literal_mapping_registry, opt)" />
          <scope ilk="function" line="448" lineend="462" name="response_rpc_enc" signature="response_rpc_enc(body, mapping_registry, opt)" />
          <scope ilk="function" line="464" lineend="469" name="response_rpc_lit" signature="response_rpc_lit(body, mapping_registry, opt)" />
          <scope ilk="function" line="471" lineend="475" name="response_doc_enc" signature="response_doc_enc(body, mapping_registry, opt)" />
          <scope ilk="function" line="477" lineend="481" name="response_doc_lit" signature="response_doc_lit(body, mapping_registry, opt)" />
          <scope ilk="function" line="483" lineend="491" name="create_request_obj" signature="create_request_obj(names, params)" />
        </scope>
        <import symbol="SOAP" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/httpserver">
      <import line="9" module="logger" symbol="*" />
      <import line="10" module="soap/rpc/soaplet" symbol="*" />
      <import line="11" module="soap/streamHandler" symbol="*" />
      <import line="12" module="webrick" symbol="*" />
      <scope doc="SOAP4R - WEBrick HTTP Server Copyright (C) 2003, 2004 by&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="15" name="SOAP" />
      <scope ilk="namespace" line="16" name="RPC" />
      <scope classrefs="Logger::Application" ilk="class" line="19" lineend="125" name="HTTPServer">
        <scope ilk="function" line="20" lineend="20" name="server" />
        <scope ilk="function" line="21" lineend="21" name="default_namespace" />
        <scope ilk="function" line="21" lineend="21" name="default_namespace=" />
        <scope attributes="__ctor__" ilk="function" line="23" lineend="35" name="initialize" signature="initialize(config)" />
        <scope ilk="function" line="37" lineend="39" name="on_init" signature="on_init" />
        <scope ilk="function" line="41" lineend="43" name="status" signature="status" />
        <scope ilk="function" line="45" lineend="47" name="shutdown" signature="shutdown" />
        <scope ilk="function" line="49" lineend="51" name="mapping_registry" signature="mapping_registry" />
        <scope ilk="function" line="53" lineend="55" name="mapping_registry=" signature="mapping_registry=(mapping_registry)" />
        <scope ilk="function" line="57" lineend="59" name="generate_explicit_type" signature="generate_explicit_type" />
        <scope ilk="function" line="61" lineend="63" name="generate_explicit_type=" signature="generate_explicit_type=(generate_explicit_type)" />
        <scope doc="servant entry interface" ilk="function" line="67" lineend="69" name="add_rpc_request_servant" signature="add_rpc_request_servant(factory, namespace = @default_namespace)" />
        <scope ilk="function" line="71" lineend="73" name="add_rpc_servant" signature="add_rpc_servant(obj, namespace = @default_namespace)" />
        <scope ilk="function" line="75" lineend="77" name="add_request_headerhandler" signature="add_request_headerhandler(factory)" />
        <scope ilk="function" line="79" lineend="81" name="add_headerhandler" signature="add_headerhandler(obj)" />
        <scope doc="method entry interface" ilk="function" line="86" lineend="88" name="add_rpc_method" signature="add_rpc_method(obj, name, *param)" />
        <scope ilk="function" line="91" lineend="96" name="add_rpc_method_as" signature="add_rpc_method_as(obj, name, name_as, *param)" />
        <scope ilk="function" line="99" lineend="102" name="add_document_method" signature="add_document_method(obj, soapaction, name, req_qnames, res_qnames)" />
        <scope ilk="function" line="104" lineend="106" name="add_rpc_operation" signature="add_rpc_operation(receiver, qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="108" lineend="110" name="add_rpc_request_operation" signature="add_rpc_request_operation(factory, qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="112" lineend="114" name="add_document_operation" signature="add_document_operation(receiver, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="116" lineend="118" name="add_document_request_operation" signature="add_document_request_operation(factory, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="122" lineend="124" name="run" signature="run" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/element">
      <import line="9" module="soap/baseData" symbol="*" />
      <scope doc="SOAP4R - RPC element definition." ilk="namespace" line="12" name="SOAP" />
      <scope classrefs="SOAPStruct" ilk="class" line="15" lineend="61" name="SOAPBody">
        <scope ilk="function" line="18" lineend="20" name="request" signature="request" />
        <scope ilk="function" line="22" lineend="36" name="response" signature="response" />
        <scope ilk="function" line="38" lineend="47" name="outparams" signature="outparams" />
        <scope ilk="function" line="49" lineend="55" name="fault" signature="fault" />
        <scope ilk="function" line="57" lineend="60" name="fault=" signature="fault=(fault)" />
      </scope>
      <scope ilk="namespace" line="64" name="RPC" />
      <scope classrefs="Error" ilk="class" line="67" lineend="67" name="RPCError" />
      <scope classrefs="RPCError" ilk="class" line="68" lineend="68" name="MethodDefinitionError" />
      <scope classrefs="RPCError" ilk="class" line="69" lineend="69" name="ParameterError" />
      <scope classrefs="SOAPStruct" ilk="class" line="71" lineend="215" name="SOAPMethod">
        <scope ilk="function" line="77" lineend="77" name="param_def" />
        <scope ilk="function" line="78" lineend="78" name="inparam" />
        <scope ilk="function" line="79" lineend="79" name="outparam" />
        <scope ilk="function" line="80" lineend="80" name="retval_name" />
        <scope ilk="function" line="81" lineend="81" name="retval_class_name" />
        <scope attributes="__ctor__" ilk="function" line="83" lineend="101" name="initialize" signature="initialize(qname, param_def = nil)" />
        <scope ilk="function" line="103" lineend="105" name="have_outparam?" signature="have_outparam?" />
        <scope ilk="function" line="107" lineend="109" name="input_params" signature="input_params" />
        <scope ilk="function" line="111" lineend="113" name="output_params" signature="output_params" />
        <scope ilk="function" line="115" lineend="121" name="set_param" signature="set_param(params)" />
        <scope ilk="function" line="123" lineend="128" name="set_outparam" signature="set_outparam(params)" />
        <scope attributes="__classmethod__" ilk="function" line="130" lineend="138" name="param_count" signature="SOAPMethod.param_count(param_def, *type)" />
        <scope attributes="__classmethod__" ilk="function" line="140" lineend="151" name="derive_rpc_param_def" signature="SOAPMethod.derive_rpc_param_def(obj, name, *param)" />
        <scope attributes="__classmethod__" ilk="function" line="153" lineend="160" name="create_rpc_param_def" signature="SOAPMethod.create_rpc_param_def(param_names)" />
        <scope attributes="__classmethod__" ilk="function" line="162" lineend="173" name="create_doc_param_def" signature="SOAPMethod.create_doc_param_def(req_qnames, res_qnames)" />
        <scope ilk="function" line="177" lineend="183" name="collect_params" signature="collect_params(*type)" />
        <scope ilk="function" line="185" lineend="214" name="init_param" signature="init_param(param_def)" />
      </scope>
      <scope classrefs="SOAPMethod" ilk="class" line="218" lineend="272" name="SOAPMethodRequest">
        <scope ilk="function" line="219" lineend="219" name="soapaction" />
        <scope ilk="function" line="219" lineend="219" name="soapaction=" />
        <scope attributes="__classmethod__" ilk="function" line="221" lineend="235" name="create_request" signature="SOAPMethodRequest.create_request(qname, *params)" />
        <scope attributes="__ctor__" ilk="function" line="237" lineend="241" name="initialize" signature="initialize(qname, param_def = nil, soapaction = nil)" />
        <scope ilk="function" line="243" lineend="250" name="each" signature="each" />
        <scope ilk="function" line="252" lineend="256" name="dup" signature="dup" />
        <scope ilk="function" line="258" lineend="262" name="create_method_response" signature="create_method_response(response_name = nil)" />
        <scope ilk="function" line="266" lineend="271" name="check_elename" signature="check_elename(qname)" />
      </scope>
      <scope classrefs="SOAPMethod" ilk="class" line="275" lineend="301" name="SOAPMethodResponse">
        <scope attributes="__ctor__" ilk="function" line="277" lineend="280" name="initialize" signature="initialize(qname, param_def = nil)" />
        <scope ilk="function" line="282" lineend="287" name="retval=" signature="retval=(retval)" />
        <scope ilk="function" line="289" lineend="300" name="each" signature="each" />
      </scope>
      <scope classrefs="XSD::XSDAnySimpleType" doc="To return(?) void explicitly." ilk="class" line="309" lineend="321" name="SOAPVoid">
        <scope attributes="__ctor__" ilk="function" line="315" lineend="320" name="initialize" signature="initialize()" />
        <import symbol="SOAPBasetype" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/driver">
      <import line="9" module="soap/soap" symbol="*" />
      <import line="10" module="soap/mapping" symbol="*" />
      <import line="11" module="soap/mapping/wsdlliteralregistry" symbol="*" />
      <import line="12" module="soap/rpc/rpc" symbol="*" />
      <import line="13" module="soap/rpc/proxy" symbol="*" />
      <import line="14" module="soap/rpc/element" symbol="*" />
      <import line="15" module="soap/streamHandler" symbol="*" />
      <import line="16" module="soap/property" symbol="*" />
      <import line="17" module="soap/header/handlerset" symbol="*" />
      <scope doc="SOAP4R - SOAP RPC driver Copyright (C) 2000, 2001, 2003-2005&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="20" name="SOAP" />
      <scope ilk="namespace" line="21" name="RPC" />
      <scope classrefs="Object" ilk="class" line="24" lineend="250" name="Driver">
        <scope classrefs="Object" ilk="class" line="25" lineend="56" name="self">
          <scope ilk="function" line="27" lineend="38" name="__attr_proxy" signature="__attr_proxy(symbol, assignable = false)" />
          <scope ilk="function" line="40" lineend="54" name="__attr_proxy" signature="__attr_proxy(symbol, assignable = false)" />
        </scope>
        <scope ilk="function" line="68" lineend="68" name="proxy" />
        <scope ilk="function" line="69" lineend="69" name="options" />
        <scope ilk="function" line="70" lineend="70" name="soapaction" />
        <scope ilk="function" line="70" lineend="70" name="soapaction=" />
        <scope ilk="function" line="72" lineend="74" name="inspect" signature="inspect" />
        <scope ilk="function" line="76" lineend="78" name="httpproxy" signature="httpproxy" />
        <scope ilk="function" line="80" lineend="82" name="httpproxy=" signature="httpproxy=(httpproxy)" />
        <scope ilk="function" line="84" lineend="86" name="wiredump_dev" signature="wiredump_dev" />
        <scope ilk="function" line="88" lineend="90" name="wiredump_dev=" signature="wiredump_dev=(wiredump_dev)" />
        <scope ilk="function" line="92" lineend="94" name="mandatorycharset" signature="mandatorycharset" />
        <scope ilk="function" line="96" lineend="98" name="mandatorycharset=" signature="mandatorycharset=(mandatorycharset)" />
        <scope ilk="function" line="100" lineend="102" name="wiredump_file_base" signature="wiredump_file_base" />
        <scope ilk="function" line="104" lineend="106" name="wiredump_file_base=" signature="wiredump_file_base=(wiredump_file_base)" />
        <scope attributes="__ctor__" ilk="function" line="108" lineend="114" name="initialize" signature="initialize(endpoint_url, namespace = nil, soapaction = nil)" />
        <scope ilk="function" line="116" lineend="120" name="loadproperty" signature="loadproperty(propertyname)" />
        <scope ilk="function" line="122" lineend="124" name="add_rpc_method" signature="add_rpc_method(name, *params)" />
        <scope ilk="function" line="126" lineend="128" name="add_rpc_method_as" signature="add_rpc_method_as(name, name_as, *params)" />
        <scope ilk="function" line="130" lineend="132" name="add_rpc_method_with_soapaction" signature="add_rpc_method_with_soapaction(name, soapaction, *params)" />
        <scope ilk="function" line="134" lineend="139" name="add_rpc_method_with_soapaction_as" signature="add_rpc_method_with_soapaction_as(name, name_as, soapaction, *params)" />
        <scope doc="add_method is for shortcut of typical rpc/encoded method&#xA;definition." ilk="function" line="147" lineend="151" name="add_document_method" signature="add_document_method(name, soapaction, req_qname, res_qname)" />
        <scope ilk="function" line="153" lineend="156" name="add_rpc_operation" signature="add_rpc_operation(qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="158" lineend="161" name="add_document_operation" signature="add_document_operation(soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="163" lineend="174" name="invoke" signature="invoke(headers, body)" />
        <scope ilk="function" line="176" lineend="179" name="call" signature="call(name, *params)" />
        <scope ilk="function" line="183" lineend="187" name="set_wiredump_file_base" signature="set_wiredump_file_base(name)" />
        <scope ilk="function" line="189" lineend="195" name="create_header" signature="create_header(headers)" />
        <scope ilk="function" line="197" lineend="212" name="setup_options" signature="setup_options" />
        <scope ilk="function" line="214" lineend="218" name="add_rpc_method_interface" signature="add_rpc_method_interface(name, param_def)" />
        <scope ilk="function" line="220" lineend="223" name="add_document_method_interface" signature="add_document_method_interface(name, param_def)" />
        <scope ilk="function" line="226" lineend="235" name="add_method_interface" signature="add_method_interface(name, param_count)" />
        <scope ilk="function" line="237" lineend="248" name="add_method_interface" signature="add_method_interface(name, param_count)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/rpc/cgistub">
      <import line="9" module="soap/streamHandler" symbol="*" />
      <import line="10" module="webrick/httpresponse" symbol="*" />
      <import line="11" module="webrick/httpstatus" symbol="*" />
      <import line="12" module="logger" symbol="*" />
      <import line="13" module="soap/rpc/soaplet" symbol="*" />
      <scope doc="SOAP4R - CGI/mod_ruby stub library Copyright (C) 2001,&#xA;2003-2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="16" name="SOAP" />
      <scope ilk="namespace" line="17" name="RPC" />
      <scope classrefs="Logger::Application" ilk="class" line="27" lineend="202" name="CGIStub">
        <scope classrefs="Object" ilk="class" line="31" lineend="37" name="SOAPRequest">
          <scope ilk="function" line="32" lineend="32" name="body" />
          <scope ilk="function" line="34" name="[]" signature="[](var" />
          <scope ilk="function" line="36" name="meta_vars" signature="meta_vars" />
        </scope>
        <scope classrefs="SOAPRequest" ilk="class" line="39" lineend="56" name="SOAPStdinRequest">
          <scope ilk="function" line="40" lineend="40" name="body" />
          <scope attributes="__ctor__" ilk="function" line="42" lineend="45" name="initialize" signature="initialize(stream)" />
          <scope ilk="function" line="47" lineend="49" name="[]" signature="[](var" />
          <scope ilk="function" line="51" lineend="55" name="meta_vars" signature="meta_vars" />
        </scope>
        <scope classrefs="SOAPRequest" ilk="class" line="58" lineend="75" name="SOAPFCGIRequest">
          <scope ilk="function" line="59" lineend="59" name="body" />
          <scope attributes="__ctor__" ilk="function" line="61" lineend="64" name="initialize" signature="initialize(request)" />
          <scope ilk="function" line="66" lineend="68" name="[]" signature="[](var" />
          <scope ilk="function" line="70" lineend="74" name="meta_vars" signature="meta_vars" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="77" lineend="86" name="initialize" signature="initialize(appname, default_namespace)" />
        <scope ilk="function" line="88" lineend="90" name="on_init" signature="on_init" />
        <scope ilk="function" line="92" lineend="94" name="mapping_registry" signature="mapping_registry" />
        <scope ilk="function" line="96" lineend="98" name="mapping_registry=" signature="mapping_registry=(value)" />
        <scope ilk="function" line="100" lineend="102" name="generate_explicit_type" signature="generate_explicit_type" />
        <scope ilk="function" line="104" lineend="106" name="generate_explicit_type=" signature="generate_explicit_type=(generate_explicit_type)" />
        <scope doc="servant entry interface" ilk="function" line="110" lineend="112" name="add_rpc_servant" signature="add_rpc_servant(obj, namespace = @default_namespace)" />
        <scope ilk="function" line="115" lineend="117" name="add_headerhandler" signature="add_headerhandler(obj)" />
        <scope doc="method entry interface" ilk="function" line="122" lineend="124" name="add_rpc_method" signature="add_rpc_method(obj, name, *param)" />
        <scope ilk="function" line="127" lineend="129" name="add_rpc_method_as" signature="add_rpc_method_as(obj, name, name_as, *param)" />
        <scope ilk="function" line="132" lineend="134" name="add_rpc_method_with_namespace" signature="add_rpc_method_with_namespace(namespace, obj, name, *param)" />
        <scope ilk="function" line="137" lineend="142" name="add_rpc_method_with_namespace_as" signature="add_rpc_method_with_namespace_as(namespace, obj, name, name_as, *param)" />
        <scope ilk="function" line="145" lineend="147" name="add_rpc_operation" signature="add_rpc_operation(receiver, qname, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="149" lineend="151" name="add_document_operation" signature="add_document_operation(receiver, soapaction, name, param_def, opt = {})" />
        <scope ilk="function" line="153" lineend="155" name="set_fcgi_request" signature="set_fcgi_request(request)" />
        <scope doc="dummy; ignored" ilk="function" line="161" lineend="201" name="run" signature="run" />
        <import symbol="SOAP" />
        <import symbol="WEBrick" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/property">
      <scope doc="soap/property.rb: SOAP4R - Property implementation." ilk="namespace" line="9" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="34" lineend="316" name="Property">
        <scope ilk="namespace" line="39" lineend="49" name="Util">
          <scope ilk="function" line="40" lineend="42" name="const_from_name" signature="const_from_name(fqname)" />
          <scope ilk="function" line="45" lineend="47" name="require_from_name" signature="require_from_name(fqname)" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="51" lineend="53" name="load" signature="self.load(stream)" />
        <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="loadproperty" signature="self.loadproperty(propname)" />
        <scope attributes="__ctor__" ilk="function" line="59" lineend="64" name="initialize" signature="initialize" />
        <scope ilk="function" line="71" lineend="91" name="load" signature="load(stream)" />
        <scope doc="find property from $:." ilk="function" line="94" lineend="102" name="loadproperty" signature="loadproperty(propname)" />
        <scope doc="name: a Symbol, String or an Array" ilk="function" line="105" lineend="107" name="[]" signature="[](name" />
        <scope doc="name: a Symbol, String or an Array value: an Object" ilk="function" line="111" lineend="118" name="[]=" signature="[]=(name" />
        <scope doc="value: an Object key is generated by property" ilk="function" line="122" lineend="124" name="&lt;&lt;" signature="&lt;&lt;(value" />
        <scope doc="name: a Symbol, String or an Array; nil means hook to the&#xA;root cascade: true/false; for cascading hook of sub key&#xA;hook: block which will be called with 2 args, name and value" ilk="function" line="129" lineend="136" name="add_hook" signature="add_hook(name = nil, cascade = false, &amp;hook)" />
        <scope ilk="function" line="138" lineend="142" name="each" signature="each" />
        <scope ilk="function" line="144" lineend="146" name="empty?" signature="empty?" />
        <scope ilk="function" line="148" lineend="150" name="keys" signature="keys" />
        <scope ilk="function" line="152" lineend="154" name="values" signature="values" />
        <scope ilk="function" line="156" lineend="164" name="lock" signature="lock(cascade = false)" />
        <scope ilk="function" line="166" lineend="174" name="unlock" signature="unlock(cascade = false)" />
        <scope ilk="function" line="176" lineend="178" name="locked?" signature="locked?" />
        <scope ilk="function" line="182" lineend="189" name="deref_key" signature="deref_key(key)" />
        <scope ilk="function" line="191" lineend="197" name="local_referent" signature="local_referent(key)" />
        <scope ilk="function" line="199" lineend="209" name="local_assign" signature="local_assign(key, value)" />
        <scope ilk="function" line="211" lineend="217" name="local_hook" signature="local_hook(key, direct)" />
        <scope ilk="function" line="219" lineend="223" name="local_assign_hook" signature="local_assign_hook(key, cascade, &amp;hook)" />
        <scope ilk="function" line="229" lineend="233" name="referent" signature="referent(ary)" />
        <scope ilk="function" line="235" lineend="246" name="assign" signature="assign(ary, value)" />
        <scope ilk="function" line="248" lineend="252" name="assign_hook" signature="assign_hook(ary, cascade, &amp;hook)" />
        <scope ilk="function" line="254" lineend="257" name="assign_self_hook" signature="assign_self_hook(cascade, &amp;hook)" />
        <scope ilk="function" line="259" lineend="265" name="each_key" signature="each_key" />
        <scope ilk="function" line="267" lineend="271" name="check_lock" signature="check_lock(key)" />
        <scope ilk="function" line="273" lineend="275" name="propkey?" signature="propkey?(value)" />
        <scope ilk="function" line="277" lineend="288" name="name_to_a" signature="name_to_a(name)" />
        <scope ilk="function" line="290" lineend="292" name="to_key" signature="to_key(name)" />
        <scope ilk="function" line="294" lineend="300" name="generate_new_key" signature="generate_new_key" />
        <scope ilk="function" line="302" lineend="304" name="key_max" signature="key_max (@store" />
        <scope ilk="function" line="306" lineend="311" name="loadpropertyfile" signature="loadpropertyfile(file)" />
        <scope ilk="function" line="313" lineend="315" name="loadstr" signature="loadstr(str)" />
        <import symbol="Enumerable" />
      </scope>
      <scope doc="for ruby/1.6." ilk="namespace" line="324" lineend="332" name="Enumerable">
        <scope ilk="function" line="325" lineend="331" name="inject" signature="inject(init)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/processor">
      <import line="9" module="xsd/datatypes" symbol="*" />
      <import line="10" module="soap/soap" symbol="*" />
      <import line="11" module="soap/element" symbol="*" />
      <import line="12" module="soap/parser" symbol="*" />
      <import line="13" module="soap/generator" symbol="*" />
      <import line="14" module="soap/encodingstyle/soapHandler" symbol="*" />
      <import line="15" module="soap/encodingstyle/literalHandler" symbol="*" />
      <import line="16" module="soap/encodingstyle/aspDotNetHandler" symbol="*" />
      <scope doc="SOAP4R - marshal/unmarshal interface." ilk="namespace" line="19" name="SOAP" />
      <scope ilk="namespace" line="22" lineend="63" name="Processor">
        <scope classrefs="Object" ilk="class" line="25" lineend="62" name="self">
          <scope ilk="function" line="28" lineend="35" name="marshal" signature="marshal(env, opt = {}, io = nil)" />
          <scope ilk="function" line="37" lineend="40" name="unmarshal" signature="unmarshal(stream, opt = {})" />
          <scope ilk="function" line="42" lineend="44" name="default_parser_option=" signature="default_parser_option=(rhs)" />
          <scope ilk="function" line="46" lineend="48" name="default_parser_option" signature="default_parser_option" />
          <scope ilk="function" line="52" lineend="54" name="create_generator" signature="create_generator(opt)" />
          <scope ilk="function" line="56" lineend="61" name="create_parser" signature="create_parser(opt)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/parser">
      <import line="9" module="xsd/ns" symbol="*" />
      <import line="10" module="xsd/xmlparser" symbol="*" />
      <import line="11" module="soap/soap" symbol="*" />
      <import line="12" module="soap/baseData" symbol="*" />
      <import line="13" module="soap/encodingstyle/handler" symbol="*" />
      <scope doc="SOAP4R - SOAP XML Instance Parser library." ilk="namespace" line="16" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="19" lineend="248" name="Parser">
        <scope classrefs="Error" ilk="class" line="22" lineend="22" name="ParseError" />
        <scope classrefs="ParseError" ilk="class" line="23" lineend="23" name="FormatDecodeError" />
        <scope classrefs="ParseError" ilk="class" line="24" lineend="24" name="UnexpectedElementError" />
        <scope classrefs="Object" ilk="class" line="28" lineend="59" name="ParseFrame">
          <scope ilk="function" line="29" lineend="29" name="node" />
          <scope ilk="function" line="30" lineend="30" name="name" />
          <scope ilk="function" line="31" lineend="31" name="ns" />
          <scope ilk="function" line="31" lineend="31" name="encodingstyle" />
          <scope classrefs="Object" ilk="class" line="33" lineend="45" name="NodeContainer">
            <scope attributes="__ctor__" ilk="function" line="34" lineend="36" name="initialize" signature="initialize(node)" />
            <scope ilk="function" line="38" lineend="40" name="node" signature="node" />
            <scope ilk="function" line="42" lineend="44" name="replace_node" signature="replace_node(node)" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="49" lineend="54" name="initialize" signature="initialize(ns, name, node, encodingstyle)" />
          <scope ilk="function" line="56" lineend="58" name="node=" signature="node=(node)" />
        </scope>
        <scope ilk="function" line="63" lineend="63" name="envelopenamespace" />
        <scope ilk="function" line="63" lineend="63" name="envelopenamespace=" />
        <scope ilk="function" line="64" lineend="64" name="default_encodingstyle" />
        <scope ilk="function" line="64" lineend="64" name="default_encodingstyle=" />
        <scope ilk="function" line="65" lineend="65" name="decode_typemap" />
        <scope ilk="function" line="65" lineend="65" name="decode_typemap=" />
        <scope ilk="function" line="66" lineend="66" name="allow_unqualified_element" />
        <scope ilk="function" line="66" lineend="66" name="allow_unqualified_element=" />
        <scope attributes="__ctor__" ilk="function" line="68" lineend="78" name="initialize" signature="initialize(opt = {})" />
        <scope ilk="function" line="80" lineend="82" name="charset" signature="charset" />
        <scope ilk="function" line="84" lineend="103" name="parse" signature="parse(string_or_readable)" />
        <scope ilk="function" line="105" lineend="133" name="start_element" signature="start_element(name, attrs)" />
        <scope ilk="function" line="135" lineend="144" name="characters" signature="characters(text)" />
        <scope ilk="function" line="146" lineend="153" name="end_element" signature="end_element(name)" />
        <scope ilk="function" line="157" lineend="164" name="find_encodingstyle" signature="find_encodingstyle(ns, attrs)" />
        <scope ilk="function" line="166" lineend="183" name="decode_tag" signature="decode_tag(ns, name, attrs, parent, encodingstyle)" />
        <scope ilk="function" line="185" lineend="194" name="decode_tag_end" signature="decode_tag_end(ns, node, encodingstyle)" />
        <scope ilk="function" line="196" lineend="204" name="decode_text" signature="decode_text(ns, text, encodingstyle)" />
        <scope ilk="function" line="206" lineend="235" name="decode_soap_envelope" signature="decode_soap_envelope(ns, ele, attrs, parent)" />
        <scope ilk="function" line="237" lineend="247" name="find_handler" signature="find_handler(encodingstyle)" />
        <import symbol="SOAP" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/netHttpClient">
      <import line="9" module="net/http" symbol="*" />
      <scope doc="SOAP4R - net/http wrapper Copyright (C) 2003  NAKAMURA,&#xA;Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="15" lineend="187" name="NetHttpClient">
        <import line="18" module="net/https" symbol="*" />
        <scope ilk="function" line="24" lineend="24" name="proxy" />
        <scope ilk="function" line="25" lineend="25" name="no_proxy" />
        <scope ilk="function" line="25" lineend="25" name="no_proxy=" />
        <scope ilk="function" line="26" lineend="26" name="debug_dev" />
        <scope ilk="function" line="26" lineend="26" name="debug_dev=" />
        <scope ilk="function" line="27" lineend="27" name="ssl_config" />
        <scope ilk="function" line="27" lineend="27" name="ssl_config=" />
        <scope ilk="function" line="28" lineend="28" name="protocol_version" />
        <scope ilk="function" line="28" lineend="28" name="protocol_version=" />
        <scope ilk="function" line="29" lineend="29" name="connect_timeout" />
        <scope ilk="function" line="29" lineend="29" name="connect_timeout=" />
        <scope ilk="function" line="30" lineend="30" name="send_timeout" />
        <scope ilk="function" line="30" lineend="30" name="send_timeout=" />
        <scope ilk="function" line="31" lineend="31" name="receive_timeout" />
        <scope ilk="function" line="31" lineend="31" name="receive_timeout=" />
        <scope attributes="__ctor__" doc="ignored for now." ilk="function" line="33" lineend="40" name="initialize" signature="initialize(proxy = nil, agent = nil)" />
        <scope ilk="function" line="42" lineend="44" name="test_loopback_response" signature="test_loopback_response" />
        <scope ilk="function" line="46" lineend="62" name="proxy=" signature="proxy=(proxy)" />
        <scope ilk="function" line="64" lineend="68" name="set_basic_auth" signature="set_basic_auth(uri, user_id, passwd)" />
        <scope ilk="function" line="70" lineend="72" name="set_cookie_store" signature="set_cookie_store(filename)" />
        <scope ilk="function" line="74" lineend="76" name="save_cookie_store" signature="save_cookie_store(filename)" />
        <scope ilk="function" line="78" lineend="80" name="reset" signature="reset(url)" />
        <scope ilk="function" line="82" lineend="84" name="reset_all" signature="reset_all" />
        <scope ilk="function" line="86" lineend="96" name="post" signature="post(url, req_body, header = {})" />
        <scope ilk="function" line="98" lineend="108" name="get_content" signature="get_content(url, header = {})" />
        <scope ilk="function" line="112" lineend="121" name="start" signature="start(url)" />
        <scope ilk="function" line="123" lineend="148" name="create_connection" signature="create_connection(url)" />
        <scope ilk="function" line="152" lineend="166" name="no_proxy?" signature="no_proxy?(uri)" />
        <scope classrefs="Object" ilk="class" line="168" lineend="172" name="SessionManager">
          <scope ilk="function" line="169" lineend="169" name="connect_timeout" />
          <scope ilk="function" line="169" lineend="169" name="connect_timeout=" />
          <scope ilk="function" line="170" lineend="170" name="send_timeout" />
          <scope ilk="function" line="170" lineend="170" name="send_timeout=" />
          <scope ilk="function" line="171" lineend="171" name="receive_timeout" />
          <scope ilk="function" line="171" lineend="171" name="receive_timeout=" />
        </scope>
        <scope classrefs="Object" ilk="class" line="174" lineend="186" name="Response">
          <scope ilk="function" line="175" lineend="175" name="content" />
          <scope ilk="function" line="176" lineend="176" name="status" />
          <scope ilk="function" line="177" lineend="177" name="reason" />
          <scope ilk="function" line="178" lineend="178" name="contenttype" />
          <scope attributes="__ctor__" ilk="function" line="180" lineend="185" name="initialize" signature="initialize(res)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mimemessage">
      <import line="9" module="soap/attachment" symbol="*" />
      <scope doc="SOAP4R - MIME Message implementation." ilk="namespace" line="12" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="20" lineend="237" name="MIMEMessage">
        <scope classrefs="StandardError" ilk="class" line="21" lineend="21" name="MIMEMessageError" />
        <scope classrefs="Object" ilk="class" line="25" lineend="43" name="Header">
          <scope ilk="function" line="26" lineend="26" name="str" />
          <scope ilk="function" line="26" lineend="26" name="str=" />
          <scope ilk="function" line="26" lineend="26" name="key" />
          <scope ilk="function" line="26" lineend="26" name="key=" />
          <scope ilk="function" line="26" lineend="26" name="root" />
          <scope ilk="function" line="26" lineend="26" name="root=" />
          <scope attributes="__ctor__" ilk="function" line="28" lineend="30" name="initialize" signature="initialize" />
          <scope ilk="function" line="32" lineend="34" name="[]" signature="[](key" />
          <scope ilk="function" line="36" lineend="38" name="[]=" signature="[]=(key" />
          <scope ilk="function" line="40" lineend="42" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="Hash" ilk="class" line="45" lineend="106" name="Headers">
          <scope attributes="__classmethod__" ilk="function" line="46" lineend="48" name="parse" signature="self.parse(str)" />
          <scope ilk="function" line="50" lineend="66" name="parse" signature="parse(str)" />
          <scope ilk="function" line="68" lineend="76" name="parse_line" signature="parse_line(line)" />
          <scope ilk="function" line="78" lineend="91" name="parse_rhs" signature="parse_rhs(str)" />
          <scope ilk="function" line="93" lineend="99" name="add" signature="add(key, value)" />
          <scope ilk="function" line="101" lineend="105" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="Object" ilk="class" line="108" lineend="146" name="Part">
          <scope ilk="function" line="109" lineend="109" name="headers" />
          <scope ilk="function" line="109" lineend="109" name="headers=" />
          <scope ilk="function" line="109" lineend="109" name="body" />
          <scope ilk="function" line="109" lineend="109" name="body=" />
          <scope attributes="__ctor__" ilk="function" line="111" lineend="116" name="initialize" signature="initialize" />
          <scope attributes="__classmethod__" ilk="function" line="118" lineend="120" name="parse" signature="self.parse(str)" />
          <scope ilk="function" line="122" lineend="131" name="parse" signature="parse(str)" />
          <scope ilk="function" line="133" lineend="139" name="contentid" signature="contentid" />
          <scope ilk="function" line="143" lineend="145" name="to_s" signature="to_s" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="148" lineend="152" name="initialize" signature="initialize" />
        <scope attributes="__classmethod__" ilk="function" line="154" lineend="156" name="parse" signature="self.parse(head, str)" />
        <scope ilk="function" line="158" lineend="158" name="parts" />
        <scope ilk="function" line="158" lineend="158" name="headers" />
        <scope ilk="function" line="160" lineend="165" name="close" signature="close" />
        <scope ilk="function" line="167" lineend="181" name="parse" signature="parse(head, str)" />
        <scope ilk="function" line="183" lineend="190" name="root" signature="root" />
        <scope ilk="function" line="192" lineend="197" name="boundary" signature="boundary" />
        <scope ilk="function" line="199" lineend="206" name="add_part" signature="add_part(content)" />
        <scope ilk="function" line="208" lineend="214" name="add_attachment" signature="add_attachment(attach)" />
        <scope ilk="function" line="216" lineend="218" name="has_parts?" signature="has_parts? (@parts" />
        <scope ilk="function" line="220" lineend="222" name="headers_str" signature="headers_str" />
        <scope ilk="function" line="224" lineend="232" name="content_str" signature="content_str" />
        <scope ilk="function" line="234" lineend="236" name="to_s" signature="to_s" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/marshal">
      <import line="9" module="soap/mapping" symbol="*" />
      <import line="10" module="soap/processor" symbol="*" />
      <scope doc="SOAP4R - Marshalling/Unmarshalling Ruby&apos;s object using SOAP&#xA;Encoding." ilk="namespace" line="13" name="SOAP" />
      <scope ilk="namespace" line="16" lineend="53" name="Marshal">
        <scope classrefs="Object" doc="Trying xsd:dateTime data to be recovered as aTime." ilk="class" line="26" lineend="52" name="self">
          <scope ilk="function" line="28" lineend="30" name="dump" signature="dump(obj, io = nil)" />
          <scope ilk="function" line="32" lineend="34" name="load" signature="load(stream)" />
          <scope ilk="function" line="36" lineend="43" name="marshal" signature="marshal(obj, mapping_registry = MarshalMappingRegistry, io = nil)" />
          <scope ilk="function" line="45" lineend="51" name="unmarshal" signature="unmarshal(stream, mapping_registry = MarshalMappingRegistry)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping">
      <import line="9" module="soap/mapping/mapping" symbol="*" />
      <import line="10" module="soap/mapping/registry" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/wsdlliteralregistry">
      <import line="9" module="soap/baseData" symbol="*" />
      <import line="10" module="soap/mapping/mapping" symbol="*" />
      <import line="11" module="soap/mapping/typeMap" symbol="*" />
      <import line="12" module="xsd/codegen/gensupport" symbol="*" />
      <import line="13" module="xsd/namedelements" symbol="*" />
      <scope doc="SOAP4R - WSDL literal mapping registry." ilk="namespace" line="16" name="SOAP" />
      <scope ilk="namespace" line="17" name="Mapping" />
      <scope classrefs="Registry" ilk="class" line="20" lineend="414" name="WSDLLiteralRegistry">
        <scope ilk="function" line="21" lineend="21" name="definedelements" />
        <scope ilk="function" line="22" lineend="22" name="definedtypes" />
        <scope ilk="function" line="23" lineend="23" name="excn_handler_obj2soap" />
        <scope ilk="function" line="23" lineend="23" name="excn_handler_obj2soap=" />
        <scope ilk="function" line="24" lineend="24" name="excn_handler_soap2obj" />
        <scope ilk="function" line="24" lineend="24" name="excn_handler_soap2obj=" />
        <scope attributes="__ctor__" ilk="function" line="26" lineend="34" name="initialize" signature="initialize(definedtypes = XSD::NamedElements::Empty, definedelements = XSD::NamedElements::Empty)" />
        <scope ilk="function" line="36" lineend="53" name="obj2soap" signature="obj2soap(obj, qname)" />
        <scope doc="node should be a SOAPElement" ilk="function" line="56" lineend="75" name="soap2obj" signature="soap2obj(node, obj_class = nil)" />
        <scope ilk="function" line="81" lineend="102" name="obj2elesoap" signature="obj2elesoap(obj, ele)" />
        <scope ilk="function" line="104" lineend="110" name="obj2typesoap" signature="obj2typesoap(obj, type, qualified)" />
        <scope ilk="function" line="112" lineend="117" name="simpleobj2soap" signature="simpleobj2soap(obj, type)" />
        <scope ilk="function" line="119" lineend="146" name="complexobj2soap" signature="complexobj2soap(obj, type, qualified)" />
        <scope ilk="function" line="148" lineend="176" name="any2soap" signature="any2soap(obj, qname)" />
        <scope ilk="function" line="178" lineend="186" name="stubobj2soap" signature="stubobj2soap(obj, qname)" />
        <scope ilk="function" line="188" lineend="203" name="mappingobj2soap" signature="mappingobj2soap(obj, qname)" />
        <scope ilk="function" line="205" lineend="224" name="add_elements2soap" signature="add_elements2soap(obj, ele)" />
        <scope ilk="function" line="226" lineend="235" name="add_attributes2soap" signature="add_attributes2soap(obj, ele)" />
        <scope ilk="function" line="237" lineend="247" name="base2soap" signature="base2soap(obj, type)" />
        <scope ilk="function" line="249" lineend="256" name="anytype2obj" signature="anytype2obj(node)" />
        <scope ilk="function" line="258" lineend="273" name="any2obj" signature="any2obj(node, obj_class = nil)" />
        <scope ilk="function" line="275" lineend="280" name="soapele2stubobj" signature="soapele2stubobj(node, obj_class)" />
        <scope ilk="function" line="282" lineend="287" name="soapele2plainobj" signature="soapele2plainobj(node)" />
        <scope ilk="function" line="289" lineend="328" name="add_elements2stubobj" signature="add_elements2stubobj(node, obj)" />
        <scope ilk="function" line="330" lineend="346" name="add_attributes2stubobj" signature="add_attributes2stubobj(node, obj)" />
        <scope ilk="function" line="348" lineend="352" name="add_elements2plainobj" signature="add_elements2plainobj(node, obj)" />
        <scope ilk="function" line="354" lineend="361" name="add_attributes2plainobj" signature="add_attributes2plainobj(node, obj)" />
        <scope ilk="function" line="364" lineend="369" name="define_xmlattr_accessor" signature="define_xmlattr_accessor(obj, qname)" />
        <scope ilk="function" line="371" lineend="382" name="define_xmlattr_accessor" signature="define_xmlattr_accessor(obj, qname)" />
        <scope ilk="function" line="386" lineend="391" name="define_xmlattr" signature="define_xmlattr(obj)" />
        <scope ilk="function" line="393" lineend="402" name="define_xmlattr" signature="define_xmlattr(obj)" />
        <scope doc="it caches @@schema_element." ilk="function" line="407" lineend="409" name="schema_element_definition" signature="schema_element_definition(klass)" />
        <scope ilk="function" line="411" lineend="413" name="schema_attribute_definition" signature="schema_attribute_definition(klass)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/wsdlencodedregistry">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="xsd/namedelements" symbol="*" />
      <import line="11" module="soap/baseData" symbol="*" />
      <import line="12" module="soap/mapping/mapping" symbol="*" />
      <import line="13" module="soap/mapping/typeMap" symbol="*" />
      <scope doc="SOAP4R - WSDL encoded mapping registry." ilk="namespace" line="16" name="SOAP" />
      <scope ilk="namespace" line="17" name="Mapping" />
      <scope classrefs="Registry" ilk="class" line="20" lineend="276" name="WSDLEncodedRegistry">
        <scope ilk="function" line="23" lineend="23" name="definedelements" />
        <scope ilk="function" line="24" lineend="24" name="definedtypes" />
        <scope ilk="function" line="25" lineend="25" name="excn_handler_obj2soap" />
        <scope ilk="function" line="25" lineend="25" name="excn_handler_obj2soap=" />
        <scope ilk="function" line="26" lineend="26" name="excn_handler_soap2obj" />
        <scope ilk="function" line="26" lineend="26" name="excn_handler_soap2obj=" />
        <scope attributes="__ctor__" ilk="function" line="28" lineend="39" name="initialize" signature="initialize(definedtypes = XSD::NamedElements::Empty)" />
        <scope ilk="function" line="41" lineend="60" name="obj2soap" signature="obj2soap(obj, qname = nil)" />
        <scope doc="map anything for now: must refer WSDL while mapping." ilk="function" line="63" lineend="77" name="soap2obj" signature="soap2obj(node, obj_class = nil)" />
        <scope ilk="function" line="81" lineend="93" name="any2soap" signature="any2soap(obj, qname)" />
        <scope ilk="function" line="95" lineend="114" name="soap2soap" signature="soap2soap(obj, type_qname)" />
        <scope ilk="function" line="116" lineend="122" name="obj2typesoap" signature="obj2typesoap(obj, type)" />
        <scope ilk="function" line="124" lineend="129" name="simpleobj2soap" signature="simpleobj2soap(obj, type)" />
        <scope ilk="function" line="131" lineend="147" name="complexobj2soap" signature="complexobj2soap(obj, type)" />
        <scope ilk="function" line="149" lineend="160" name="base2soap" signature="base2soap(obj, type)" />
        <scope ilk="function" line="162" lineend="170" name="struct2soap" signature="struct2soap(obj, type_qname, type)" />
        <scope ilk="function" line="172" lineend="183" name="array2soap" signature="array2soap(obj, type_qname, type)" />
        <scope ilk="function" line="187" lineend="203" name="map2soap" signature="map2soap(obj, type_qname, type)" />
        <scope ilk="function" line="205" lineend="212" name="elements2soap" signature="elements2soap(obj, soap_obj, elements)" />
        <scope ilk="function" line="214" lineend="224" name="any2obj" signature="any2obj(node, obj_class)" />
        <scope ilk="function" line="226" lineend="232" name="soap2stubobj" signature="soap2stubobj(node, obj_class)" />
        <scope ilk="function" line="234" lineend="269" name="add_elements2stubobj" signature="add_elements2stubobj(node, obj)" />
        <scope doc="it caches @@schema_element." ilk="function" line="273" lineend="275" name="schema_element_definition" signature="schema_element_definition(klass)" />
        <import symbol="TraverseSupport" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/typeMap">
      <scope doc="SOAP4R - Base type mapping definition Copyright (C) 2000,&#xA;2001, 2002, 2003  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="9" lineend="50" name="SOAP" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/rubytypeFactory">
      <scope doc="SOAP4R - Ruby type mapping factory." ilk="namespace" line="9" name="SOAP" />
      <scope ilk="namespace" line="10" name="Mapping" />
      <scope classrefs="Factory" ilk="class" line="13" lineend="471" name="RubytypeFactory">
        <scope attributes="__ctor__" ilk="function" line="25" lineend="36" name="initialize" signature="initialize(config = {})" />
        <scope ilk="function" line="38" lineend="242" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="244" lineend="253" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
        <scope ilk="function" line="257" lineend="262" name="addiv2soapattr" signature="addiv2soapattr(node, obj, map)" />
        <scope ilk="function" line="264" lineend="283" name="unknownobj2soap" signature="unknownobj2soap(soap_class, obj, info, map)">
          <scope classrefs="Object" ilk="class" line="268" lineend="268" name="obj" />
        </scope>
        <scope ilk="function" line="286" lineend="288" name="singleton_methods_true" signature="singleton_methods_true(obj)" />
        <scope ilk="function" line="290" lineend="292" name="singleton_methods_true" signature="singleton_methods_true(obj)" />
        <scope ilk="function" line="295" lineend="318" name="rubytype2obj" signature="rubytype2obj(node, info, map, rubytype)" />
        <scope ilk="function" line="320" lineend="375" name="rubytypestruct2obj" signature="rubytypestruct2obj(node, info, map, rubytype)" />
        <scope ilk="function" line="377" lineend="396" name="anytype2obj" signature="anytype2obj(node, info, map)" />
        <scope ilk="function" line="398" lineend="415" name="unknowntype2obj" signature="unknowntype2obj(node, info, map)" />
        <scope ilk="function" line="417" lineend="444" name="unknownstruct2obj" signature="unknownstruct2obj(node, info, map)" />
        <scope ilk="function" line="446" lineend="454" name="exception2obj" signature="exception2obj(klass, node, map)" />
        <scope doc="Only creates empty array. Do String#replace it with real&#xA;string." ilk="function" line="457" lineend="462" name="array2obj" signature="array2obj(node, map, rubytype)" />
        <scope doc="Only creates empty string. Do String#replace it with real&#xA;string." ilk="function" line="465" lineend="470" name="string2obj" signature="string2obj(node, map, rubytype)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/registry">
      <import line="9" module="soap/baseData" symbol="*" />
      <import line="10" module="soap/mapping/mapping" symbol="*" />
      <import line="11" module="soap/mapping/typeMap" symbol="*" />
      <import line="12" module="soap/mapping/factory" symbol="*" />
      <import line="13" module="soap/mapping/rubytypeFactory" symbol="*" />
      <scope doc="SOAP4R - Mapping registry." ilk="namespace" line="16" name="SOAP" />
      <scope ilk="namespace" line="19" lineend="21" name="Marshallable" />
      <scope ilk="namespace" line="24" name="Mapping" />
      <scope ilk="namespace" line="27" lineend="27" name="MappedException" />
      <scope classrefs="Object" doc="Inner class to pass an exception." ilk="class" line="36" lineend="60" name="SOAPException">
        <scope ilk="function" line="37" lineend="37" name="excn_type_name" />
        <scope ilk="function" line="37" lineend="37" name="cause" />
        <scope attributes="__ctor__" ilk="function" line="38" lineend="41" name="initialize" signature="initialize(e)" />
        <scope ilk="function" line="43" lineend="59" name="to_e" signature="to_e" />
        <import symbol="Marshallable" />
      </scope>
      <scope classrefs="Object" doc="For anyType object: SOAP::Mapping::Object not ::Object" ilk="class" line="64" lineend="170" name="Object">
        <scope attributes="__ctor__" ilk="function" line="65" lineend="69" name="initialize" signature="initialize" />
        <scope ilk="function" line="71" lineend="74" name="inspect" signature="inspect" />
        <scope ilk="function" line="76" lineend="78" name="__xmlattr" signature="__xmlattr" />
        <scope ilk="function" line="80" lineend="82" name="__xmlele" signature="__xmlele" />
        <scope ilk="function" line="84" lineend="96" name="[]" signature="[](qname" />
        <scope ilk="function" line="98" lineend="114" name="[]=" signature="[]=(qname" />
        <scope ilk="function" line="116" lineend="132" name="__add_xmlele_value" signature="__add_xmlele_value(qname, value)" />
        <scope ilk="function" line="137" lineend="142" name="__define_attr_accessor" signature="__define_attr_accessor(qname)" />
        <scope ilk="function" line="144" lineend="155" name="__define_attr_accessor" signature="__define_attr_accessor(qname)" />
        <scope ilk="function" line="158" lineend="169" name="__set_xmlele_value" signature="__set_xmlele_value(key, org, value)" />
        <import symbol="Marshallable" />
      </scope>
      <scope classrefs="Error" ilk="class" line="173" lineend="173" name="MappingError" />
      <scope classrefs="Object" ilk="class" line="176" lineend="533" name="Registry">
        <scope classrefs="Object" ilk="class" line="177" lineend="249" name="Map">
          <scope attributes="__ctor__" ilk="function" line="178" lineend="182" name="initialize" signature="initialize(registry)" />
          <scope ilk="function" line="184" lineend="207" name="obj2soap" signature="obj2soap(obj)" />
          <scope ilk="function" line="209" lineend="218" name="soap2obj" signature="soap2obj(node, klass = nil)" />
          <scope doc="Give priority to former entry." ilk="function" line="221" lineend="226" name="init" signature="init(init_map = [])" />
          <scope doc="Give priority to latter entry." ilk="function" line="229" lineend="233" name="add" signature="add(obj_class, soap_class, factory, info)" />
          <scope ilk="function" line="235" lineend="238" name="clear" signature="clear" />
          <scope ilk="function" line="240" lineend="243" name="find_mapped_soap_class" signature="find_mapped_soap_class(target_obj_class)" />
          <scope ilk="function" line="245" lineend="248" name="find_mapped_obj_class" signature="find_mapped_obj_class(target_soap_class)" />
        </scope>
        <scope ilk="function" line="388" lineend="388" name="default_factory" />
        <scope ilk="function" line="388" lineend="388" name="default_factory=" />
        <scope ilk="function" line="389" lineend="389" name="excn_handler_obj2soap" />
        <scope ilk="function" line="389" lineend="389" name="excn_handler_obj2soap=" />
        <scope ilk="function" line="390" lineend="390" name="excn_handler_soap2obj" />
        <scope ilk="function" line="390" lineend="390" name="excn_handler_soap2obj=" />
        <scope attributes="__ctor__" doc="Does not allow Array&apos;s subclass here." ilk="function" line="392" lineend="411" name="initialize" signature="initialize(config = {})" />
        <scope ilk="function" line="413" lineend="415" name="add" signature="add(obj_class, soap_class, factory, info = nil)" />
        <scope doc="general Registry ignores type_qname" ilk="function" line="419" lineend="425" name="obj2soap" signature="obj2soap(obj, type_qname = nil)" />
        <scope ilk="function" line="427" lineend="434" name="soap2obj" signature="soap2obj(node, klass = nil)" />
        <scope ilk="function" line="436" lineend="438" name="find_mapped_soap_class" signature="find_mapped_soap_class(obj_class)" />
        <scope ilk="function" line="440" lineend="442" name="find_mapped_obj_class" signature="find_mapped_obj_class(soap_class)" />
        <scope ilk="function" line="446" lineend="469" name="_obj2soap" signature="_obj2soap(obj)" />
        <scope doc="Might return nil as a mapping result." ilk="function" line="472" lineend="491" name="_soap2obj" signature="_soap2obj(node, klass = nil)" />
        <scope ilk="function" line="493" lineend="500" name="addiv2obj" signature="addiv2obj(obj, attr)" />
        <scope ilk="function" line="503" lineend="508" name="addextend2obj" signature="addextend2obj(obj, attr)" />
        <scope doc="(class &lt; false; self; end).ancestors includes &quot;TrueClass&quot;&#xA;under 1.6..." ilk="function" line="511" lineend="517" name="addextend2obj" signature="addextend2obj(obj, attr)" />
        <scope ilk="function" line="520" lineend="531" name="addextend2soap" signature="addextend2soap(node, obj)">
          <scope classrefs="Object" ilk="class" line="522" lineend="522" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/mapping">
      <import line="9" module="xsd/codegen/gensupport" symbol="*" />
      <scope doc="SOAP4R - Ruby type mapping utility." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="15" lineend="378" name="Mapping">
        <scope doc="TraverseSupport breaks following thread variables." ilk="namespace" line="25" lineend="36" name="TraverseSupport">
          <scope ilk="function" line="26" lineend="29" name="mark_marshalled_obj" signature="mark_marshalled_obj(obj, soap_obj)" />
          <scope ilk="function" line="31" lineend="35" name="mark_unmarshalled_obj" signature="mark_unmarshalled_obj(node, obj)" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="40" lineend="50" name="obj2soap" signature="self.obj2soap(obj, registry = nil, type = nil, opt = EMPTY_OPT)" />
        <scope attributes="__classmethod__" ilk="function" line="52" lineend="62" name="soap2obj" signature="self.soap2obj(node, registry = nil, klass = nil, opt = EMPTY_OPT)" />
        <scope attributes="__classmethod__" ilk="function" line="64" lineend="77" name="ary2soap" signature="self.ary2soap(ary, type_ns = XSD::Namespace, typename = XSD::AnyTypeLiteral, registry = nil, opt = EMPTY_OPT)" />
        <scope attributes="__classmethod__" ilk="function" line="79" lineend="90" name="ary2md" signature="self.ary2md(ary, rank, type_ns = XSD::Namespace, typename = XSD::AnyTypeLiteral, registry = nil, opt = EMPTY_OPT)" />
        <scope attributes="__classmethod__" ilk="function" line="92" lineend="120" name="fault2exception" signature="self.fault2exception(fault, registry = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="122" lineend="131" name="_obj2soap" signature="self._obj2soap(obj, registry, type = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="133" lineend="147" name="_soap2obj" signature="self._soap2obj(node, registry, klass = nil)" />
        <scope attributes="__classmethod__" doc="ruby/1.7 or later." ilk="function" line="151" lineend="153" name="create_empty_object" signature="self.create_empty_object(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="161" lineend="179" name="create_empty_object" signature="self.create_empty_object(klass)" />
        <scope attributes="__classmethod__" doc="Allow only (Letter | &apos;_&apos;) (Letter | Digit | &apos;-&apos; | &apos;_&apos;)*&#xA;here." ilk="function" line="188" lineend="192" name="name2elename" signature="self.name2elename(name)" />
        <scope attributes="__classmethod__" ilk="function" line="194" lineend="198" name="elename2name" signature="self.elename2name(name)" />
        <scope attributes="__classmethod__" ilk="function" line="200" lineend="218" name="const_from_name" signature="self.const_from_name(name, lenient = false)" />
        <scope attributes="__classmethod__" ilk="function" line="220" lineend="227" name="class_from_name" signature="self.class_from_name(name, lenient = false)" />
        <scope attributes="__classmethod__" ilk="function" line="229" lineend="236" name="module_from_name" signature="self.module_from_name(name, lenient = false)" />
        <scope attributes="__classmethod__" ilk="function" line="238" lineend="242" name="class2qname" signature="self.class2qname(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="244" lineend="249" name="class2element" signature="self.class2element(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="251" lineend="265" name="obj2element" signature="self.obj2element(obj)" />
        <scope attributes="__classmethod__" ilk="function" line="267" lineend="272" name="define_singleton_method" signature="self.define_singleton_method(obj, name, &amp;block)">
          <scope classrefs="Object" ilk="class" line="268" lineend="268" name="obj" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="274" lineend="286" name="get_attribute" signature="self.get_attribute(obj, attr_name)" />
        <scope attributes="__classmethod__" ilk="function" line="288" lineend="311" name="set_attributes" signature="self.set_attributes(obj, values)" />
        <scope attributes="__classmethod__" ilk="function" line="313" lineend="316" name="define_attr_accessor" signature="self.define_attr_accessor(obj, name, getterproc, setterproc = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="318" lineend="320" name="schema_type_definition" signature="self.schema_type_definition(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="322" lineend="324" name="schema_ns_definition" signature="self.schema_ns_definition(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="326" lineend="340" name="schema_element_definition" signature="self.schema_element_definition(klass)" />
        <scope attributes="__classmethod__" ilk="function" line="342" lineend="344" name="schema_attribute_definition" signature="self.schema_attribute_definition(klass)" />
        <scope classrefs="Object" ilk="class" line="346" lineend="377" name="Mapping">
          <scope ilk="function" line="349" lineend="352" name="class_schema_variable" signature="class_schema_variable(sym, klass)" />
          <scope ilk="function" line="354" lineend="366" name="protect_threadvars" signature="protect_threadvars(*symbols)" />
          <scope ilk="function" line="368" lineend="376" name="add_md_ary" signature="add_md_ary(md_ary, ary, indices, registry)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/mapping/factory">
      <scope doc="SOAP4R - Mapping factory." ilk="namespace" line="9" name="SOAP" />
      <scope ilk="namespace" line="10" name="Mapping" />
      <scope classrefs="Object" ilk="class" line="13" lineend="77" name="Factory">
        <scope attributes="__ctor__" ilk="function" line="16" lineend="18" name="initialize" signature="initialize" />
        <scope ilk="function" line="20" lineend="23" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="25" lineend="28" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
        <scope ilk="function" line="30" lineend="37" name="setiv2obj" signature="setiv2obj(obj, node, map)" />
        <scope ilk="function" line="39" lineend="60" name="setiv2soap" signature="setiv2soap(node, obj, map)" />
        <scope ilk="function" line="64" lineend="68" name="setiv2ary" signature="setiv2ary(obj, node, map)" />
        <scope ilk="function" line="70" lineend="76" name="setiv2struct" signature="setiv2struct(obj, node, map)" />
        <import symbol="TraverseSupport" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="79" lineend="111" name="StringFactory_">
        <scope attributes="__ctor__" ilk="function" line="80" lineend="83" name="initialize" signature="initialize(allow_original_mapping = false)" />
        <scope ilk="function" line="85" lineend="101" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="103" lineend="110" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="113" lineend="141" name="BasetypeFactory_">
        <scope attributes="__ctor__" ilk="function" line="114" lineend="117" name="initialize" signature="initialize(allow_original_mapping = false)" />
        <scope ilk="function" line="119" lineend="134" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="136" lineend="140" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="143" lineend="174" name="DateTimeFactory_">
        <scope attributes="__ctor__" ilk="function" line="144" lineend="147" name="initialize" signature="initialize(allow_original_mapping = false)" />
        <scope ilk="function" line="149" lineend="162" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="164" lineend="173" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="176" lineend="189" name="Base64Factory_">
        <scope ilk="function" line="177" lineend="182" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="184" lineend="188" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="191" lineend="203" name="URIFactory_">
        <scope ilk="function" line="192" lineend="196" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="198" lineend="202" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="205" lineend="239" name="ArrayFactory_">
        <scope attributes="__ctor__" ilk="function" line="206" lineend="209" name="initialize" signature="initialize(allow_original_mapping = false)" />
        <scope doc="[[1], [2]] is converted to Array of Array, not 2-D Array." ilk="function" line="213" lineend="229" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="231" lineend="238" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="241" lineend="275" name="TypedArrayFactory_">
        <scope attributes="__ctor__" ilk="function" line="242" lineend="245" name="initialize" signature="initialize(allow_original_mapping = false)" />
        <scope ilk="function" line="247" lineend="258" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="260" lineend="274" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="277" lineend="300" name="TypedStructFactory_">
        <scope ilk="function" line="278" lineend="288" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="290" lineend="299" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
      <scope classrefs="Factory" ilk="class" line="303" lineend="351" name="HashFactory_">
        <scope attributes="__ctor__" ilk="function" line="304" lineend="307" name="initialize" signature="initialize(allow_original_mapping = false)" />
        <scope ilk="function" line="309" lineend="327" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
        <scope ilk="function" line="329" lineend="350" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/httpconfigloader">
      <import line="9" module="soap/property" symbol="*" />
      <scope doc="SOAP4R - HTTP config loader." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="15" lineend="116" name="HTTPConfigLoader">
        <scope ilk="function" line="18" lineend="52" name="set_options" signature="set_options(client, options)" />
        <scope ilk="function" line="54" lineend="58" name="set_basic_auth" signature="set_basic_auth(client, basic_auth)" />
        <scope ilk="function" line="60" lineend="95" name="set_ssl_config" signature="set_ssl_config(client, ssl_config)" />
        <scope ilk="function" line="97" lineend="107" name="ssl_config_int" signature="ssl_config_int(value)" />
        <scope ilk="function" line="109" lineend="111" name="cert_from_file" signature="cert_from_file(filename)" />
        <scope ilk="function" line="113" lineend="115" name="key_from_file" signature="key_from_file(filename)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/header/simplehandler">
      <import line="9" module="soap/header/handler" symbol="*" />
      <import line="10" module="soap/baseData" symbol="*" />
      <scope doc="SOAP4R - SOAP Simple header item handler Copyright (C)&#xA;2003-2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="13" name="SOAP" />
      <scope ilk="namespace" line="14" name="Header" />
      <scope classrefs="SOAP::Header::" ilk="class" line="17" lineend="40" name="SimpleHandler">
        <scope attributes="__ctor__" ilk="function" line="18" lineend="20" name="initialize" signature="initialize(elename)" />
        <scope doc="Should return a Hash, String or nil." ilk="function" line="23" lineend="25" name="on_simple_outbound" signature="on_simple_outbound" />
        <scope doc="Given header is a Hash, String or nil." ilk="function" line="28" lineend="29" name="on_simple_inbound" signature="on_simple_inbound(header, mustunderstand)" />
        <scope ilk="function" line="31" lineend="34" name="on_outbound" signature="on_outbound" />
        <scope ilk="function" line="36" lineend="39" name="on_inbound" signature="on_inbound(header, mustunderstand)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/header/handlerset">
      <import line="9" module="xsd/namedelements" symbol="*" />
      <scope doc="SOAP4R - SOAP Header handler set Copyright (C) 2003, 2004&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="13" name="Header" />
      <scope classrefs="Object" ilk="class" line="16" lineend="66" name="HandlerSet">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
        <scope ilk="function" line="21" lineend="25" name="dup" signature="dup" />
        <scope ilk="function" line="27" lineend="29" name="add" signature="add(handler)" />
        <scope ilk="function" line="32" lineend="34" name="delete" signature="delete(handler)" />
        <scope ilk="function" line="36" lineend="38" name="include?" signature="include?(handler)" />
        <scope doc="returns: Array of SOAPHeaderItem" ilk="function" line="41" lineend="45" name="on_outbound" signature="on_outbound" />
        <scope doc="headers: SOAPHeaderItem enumerable object" ilk="function" line="48" lineend="59" name="on_inbound" signature="on_inbound(headers)" />
        <scope ilk="function" line="63" lineend="65" name="store=" signature="store=(store)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/header/handler">
      <import line="9" module="soap/element" symbol="*" />
      <scope doc="SOAP4R - SOAP Header handler item Copyright (C) 2003, 2003&#xA;NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="13" name="Header" />
      <scope classrefs="Object" ilk="class" line="16" lineend="53" name="Handler">
        <scope ilk="function" line="17" lineend="17" name="elename" />
        <scope ilk="function" line="18" lineend="18" name="mustunderstand" />
        <scope ilk="function" line="19" lineend="19" name="encodingstyle" />
        <scope attributes="__ctor__" ilk="function" line="21" lineend="25" name="initialize" signature="initialize(elename)" />
        <scope doc="Should return a SOAP/OM, a SOAPHeaderItem or nil." ilk="function" line="28" lineend="30" name="on_outbound" signature="on_outbound" />
        <scope doc="Given header is a SOAPHeaderItem or nil." ilk="function" line="33" lineend="35" name="on_inbound" signature="on_inbound(header, mustunderstand = false)" />
        <scope ilk="function" line="37" lineend="48" name="on_outbound_headeritem" signature="on_outbound_headeritem" />
        <scope ilk="function" line="50" lineend="52" name="on_inbound_headeritem" signature="on_inbound_headeritem(header)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/generator">
      <import line="9" module="xsd/ns" symbol="*" />
      <import line="10" module="soap/soap" symbol="*" />
      <import line="11" module="soap/baseData" symbol="*" />
      <import line="12" module="soap/encodingstyle/handler" symbol="*" />
      <scope doc="SOAP4R - SOAP XML Instance Generator library." ilk="namespace" line="15" name="SOAP" />
      <scope classrefs="Object" ilk="class" line="21" lineend="265" name="SOAPGenerator">
        <scope classrefs="Error" ilk="class" line="24" lineend="24" name="FormatEncodeError" />
        <scope ilk="function" line="28" lineend="28" name="charset" />
        <scope ilk="function" line="28" lineend="28" name="charset=" />
        <scope ilk="function" line="29" lineend="29" name="default_encodingstyle" />
        <scope ilk="function" line="29" lineend="29" name="default_encodingstyle=" />
        <scope ilk="function" line="30" lineend="30" name="generate_explicit_type" />
        <scope ilk="function" line="30" lineend="30" name="generate_explicit_type=" />
        <scope ilk="function" line="31" lineend="31" name="use_numeric_character_reference" />
        <scope ilk="function" line="31" lineend="31" name="use_numeric_character_reference=" />
        <scope attributes="__ctor__" ilk="function" line="33" lineend="45" name="initialize" signature="initialize(opt = {})" />
        <scope ilk="function" line="47" lineend="66" name="generate" signature="generate(obj, io = nil)" />
        <scope ilk="function" line="68" lineend="95" name="encode_data" signature="encode_data(ns, obj, parent)" />
        <scope ilk="function" line="97" lineend="102" name="add_reftarget" signature="add_reftarget(name, node)" />
        <scope ilk="function" line="104" lineend="108" name="encode_child" signature="encode_child(ns, child, parent)" />
        <scope ilk="function" line="110" lineend="135" name="encode_element" signature="encode_element(ns, obj, parent)" />
        <scope ilk="function" line="137" lineend="148" name="encode_name" signature="encode_name(ns, data, attrs)" />
        <scope ilk="function" line="150" lineend="156" name="encode_name_end" signature="encode_name_end(ns, data)" />
        <scope ilk="function" line="158" lineend="171" name="encode_tag" signature="encode_tag(elename, attrs = nil)" />
        <scope ilk="function" line="173" lineend="179" name="encode_tag_end" signature="encode_tag_end(elename, cr = nil)" />
        <scope ilk="function" line="181" lineend="183" name="encode_rawstring" signature="encode_rawstring(str)" />
        <scope ilk="function" line="194" lineend="207" name="encode_string" signature="encode_string(str)" />
        <scope ilk="function" line="209" lineend="211" name="element_local?" signature="element_local?(element)" />
        <scope ilk="function" line="213" lineend="223" name="element_qualified?" signature="element_qualified?(element)" />
        <scope attributes="__classmethod__" ilk="function" line="225" lineend="238" name="assign_ns" signature="self.assign_ns(attrs, ns, namespace, tag = nil)" />
        <scope ilk="function" line="242" lineend="243" name="prologue" signature="prologue" />
        <scope ilk="function" line="245" lineend="246" name="epilogue" signature="epilogue" />
        <scope ilk="function" line="248" lineend="256" name="find_handler" signature="find_handler(encodingstyle)" />
        <scope ilk="function" line="258" lineend="264" name="xmldecl" signature="xmldecl" />
        <import symbol="SOAP" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/encodingstyle/soapHandler">
      <import line="9" module="soap/encodingstyle/handler" symbol="*" />
      <scope doc="SOAP4R - SOAP EncodingStyle handler library Copyright (C)&#xA;2001, 2003, 2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="13" name="EncodingStyle" />
      <scope classrefs="Handler" ilk="class" line="16" lineend="576" name="SOAPHandler">
        <scope attributes="__ctor__" ilk="function" line="20" lineend="26" name="initialize" signature="initialize(charset = nil)" />
        <scope doc="encode interface." ilk="function" line="32" lineend="71" name="encode_data" signature="encode_data(generator, ns, data, parent)" />
        <scope ilk="function" line="73" lineend="77" name="encode_data_end" signature="encode_data_end(generator, ns, data, parent)" />
        <scope classrefs="Object" doc="decode interface." ilk="class" line="83" lineend="95" name="SOAPTemporalObject">
          <scope ilk="function" line="84" lineend="84" name="parent" />
          <scope ilk="function" line="84" lineend="84" name="parent=" />
          <scope ilk="function" line="85" lineend="85" name="position" />
          <scope ilk="function" line="85" lineend="85" name="position=" />
          <scope ilk="function" line="86" lineend="86" name="id" />
          <scope ilk="function" line="86" lineend="86" name="id=" />
          <scope ilk="function" line="87" lineend="87" name="root" />
          <scope ilk="function" line="87" lineend="87" name="root=" />
          <scope attributes="__ctor__" ilk="function" line="89" lineend="94" name="initialize" signature="initialize" />
        </scope>
        <scope classrefs="SOAPTemporalObject" ilk="class" line="97" lineend="143" name="SOAPUnknown">
          <scope ilk="function" line="98" lineend="98" name="type" />
          <scope ilk="function" line="99" lineend="99" name="definedtype" />
          <scope ilk="function" line="99" lineend="99" name="definedtype=" />
          <scope ilk="function" line="100" lineend="100" name="extraattr" />
          <scope attributes="__ctor__" ilk="function" line="102" lineend="109" name="initialize" signature="initialize(handler, elename, type, extraattr)" />
          <scope ilk="function" line="111" lineend="120" name="as_struct" signature="as_struct" />
          <scope ilk="function" line="122" lineend="131" name="as_string" signature="as_string" />
          <scope ilk="function" line="133" lineend="142" name="as_nil" signature="as_nil" />
        </scope>
        <scope ilk="function" line="145" lineend="180" name="decode_tag" signature="decode_tag(ns, elename, attrs, parent)" />
        <scope ilk="function" line="182" lineend="199" name="decode_tag_end" signature="decode_tag_end(ns, node)" />
        <scope ilk="function" line="201" lineend="203" name="decode_text" signature="decode_text(ns, text)" />
        <scope ilk="function" line="205" lineend="209" name="decode_prologue" signature="decode_prologue" />
        <scope ilk="function" line="211" lineend="213" name="decode_epilogue" signature="decode_epilogue" />
        <scope ilk="function" line="215" lineend="240" name="decode_parent" signature="decode_parent(parent, node)" />
        <scope ilk="function" line="244" lineend="246" name="content_ranksize" signature="content_ranksize(typename)" />
        <scope ilk="function" line="248" lineend="250" name="content_typename" signature="content_typename(typename)" />
        <scope ilk="function" line="252" lineend="255" name="create_arytype" signature="create_arytype(ns, data)" />
        <scope ilk="function" line="257" lineend="301" name="encode_attrs" signature="encode_attrs(generator, ns, data, parent)" />
        <scope ilk="function" line="303" lineend="311" name="encode_attr_value" signature="encode_attr_value(generator, ns, qname, value)" />
        <scope ilk="function" line="313" lineend="367" name="decode_tag_by_wsdl" signature="decode_tag_by_wsdl(ns, elename, typestr, parent, arytypestr, extraattr)" />
        <scope ilk="function" line="369" lineend="378" name="decode_definedtype" signature="decode_definedtype(elename, typename, typedef, arytypestr)" />
        <scope ilk="function" line="380" lineend="382" name="decode_basetype" signature="decode_basetype(klass, elename)" />
        <scope ilk="function" line="384" lineend="388" name="decode_defined_simpletype" signature="decode_defined_simpletype(elename, typename, typedef, arytypestr)" />
        <scope ilk="function" line="390" lineend="418" name="decode_defined_complextype" signature="decode_defined_complextype(elename, typename, typedef, arytypestr)" />
        <scope ilk="function" line="420" lineend="449" name="decode_tag_by_type" signature="decode_tag_by_type(ns, elename, typestr, parent, arytypestr, extraattr)" />
        <scope ilk="function" line="451" lineend="471" name="decode_textbuf" signature="decode_textbuf(node)" />
        <scope ilk="function" line="483" lineend="537" name="decode_attrs" signature="decode_attrs(ns, attrs)" />
        <scope ilk="function" line="539" lineend="547" name="decode_attr_value" signature="decode_attr_value(ns, qname, value)" />
        <scope ilk="function" line="549" lineend="552" name="decode_arypos" signature="decode_arypos(position)" />
        <scope ilk="function" line="554" lineend="575" name="decode_resolve_id" signature="decode_resolve_id" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/encodingstyle/literalHandler">
      <import line="9" module="soap/encodingstyle/handler" symbol="*" />
      <scope doc="SOAP4R - XML Literal EncodingStyle handler library Copyright&#xA;(C) 2001, 2003-2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="13" name="EncodingStyle" />
      <scope classrefs="Handler" ilk="class" line="16" lineend="220" name="LiteralHandler">
        <scope attributes="__ctor__" ilk="function" line="20" lineend="23" name="initialize" signature="initialize(charset = nil)" />
        <scope doc="encode interface." ilk="function" line="29" lineend="83" name="encode_data" signature="encode_data(generator, ns, data, parent)" />
        <scope ilk="function" line="85" lineend="90" name="encode_data_end" signature="encode_data_end(generator, ns, data, parent)" />
        <scope classrefs="Object" doc="decode interface." ilk="class" line="96" lineend="102" name="SOAPTemporalObject">
          <scope ilk="function" line="97" lineend="97" name="parent" />
          <scope ilk="function" line="97" lineend="97" name="parent=" />
          <scope attributes="__ctor__" ilk="function" line="99" lineend="101" name="initialize" signature="initialize" />
        </scope>
        <scope classrefs="SOAPTemporalObject" ilk="class" line="104" lineend="135" name="SOAPUnknown">
          <scope attributes="__ctor__" ilk="function" line="105" lineend="110" name="initialize" signature="initialize(handler, elename, extraattr)" />
          <scope ilk="function" line="112" lineend="118" name="as_element" signature="as_element" />
          <scope ilk="function" line="120" lineend="126" name="as_string" signature="as_string" />
          <scope ilk="function" line="128" lineend="134" name="as_nil" signature="as_nil" />
        </scope>
        <scope ilk="function" line="137" lineend="142" name="decode_tag" signature="decode_tag(ns, elename, attrs, parent)" />
        <scope ilk="function" line="144" lineend="158" name="decode_tag_end" signature="decode_tag_end(ns, node)" />
        <scope ilk="function" line="160" lineend="163" name="decode_text" signature="decode_text(ns, text)" />
        <scope ilk="function" line="165" lineend="172" name="decode_attrs" signature="decode_attrs(ns, attrs)" />
        <scope ilk="function" line="174" lineend="175" name="decode_prologue" signature="decode_prologue" />
        <scope ilk="function" line="177" lineend="178" name="decode_epilogue" signature="decode_epilogue" />
        <scope ilk="function" line="180" lineend="205" name="decode_parent" signature="decode_parent(parent, node)" />
        <scope ilk="function" line="209" lineend="219" name="decode_textbuf" signature="decode_textbuf(node)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/encodingstyle/handler">
      <import line="9" module="soap/soap" symbol="*" />
      <import line="10" module="soap/baseData" symbol="*" />
      <import line="11" module="soap/element" symbol="*" />
      <scope doc="SOAP4R - EncodingStyle handler library Copyright (C) 2001,&#xA;2003  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="14" name="SOAP" />
      <scope ilk="namespace" line="15" name="EncodingStyle" />
      <scope classrefs="Object" ilk="class" line="18" lineend="96" name="Handler">
        <scope classrefs="Error" ilk="class" line="21" lineend="21" name="EncodingStyleError" />
        <scope classrefs="Object" ilk="class" line="23" lineend="43" name="self">
          <scope ilk="function" line="24" lineend="26" name="uri" signature="uri" />
          <scope ilk="function" line="28" lineend="30" name="handler" signature="handler(uri)" />
          <scope ilk="function" line="32" lineend="36" name="each" signature="each" />
          <scope ilk="function" line="40" lineend="42" name="add_handler" signature="add_handler" />
        </scope>
        <scope ilk="function" line="45" lineend="45" name="charset" />
        <scope ilk="function" line="46" lineend="46" name="generate_explicit_type" />
        <scope ilk="function" line="46" lineend="46" name="generate_explicit_type=" />
        <scope ilk="function" line="47" lineend="49" name="decode_typemap=" signature="decode_typemap=(definedtypes)" />
        <scope attributes="__ctor__" ilk="function" line="51" lineend="55" name="initialize" signature="initialize(charset)" />
        <scope doc="encode interface." ilk="function" line="61" lineend="63" name="encode_data" signature="encode_data(generator, ns, data, parent)" />
        <scope ilk="function" line="65" lineend="67" name="encode_data_end" signature="encode_data_end(generator, ns, data, parent)" />
        <scope ilk="function" line="69" lineend="70" name="encode_prologue" signature="encode_prologue" />
        <scope ilk="function" line="72" lineend="73" name="encode_epilogue" signature="encode_epilogue" />
        <scope doc="decode interface." ilk="function" line="79" lineend="81" name="decode_tag" signature="decode_tag(ns, name, attrs, parent)" />
        <scope ilk="function" line="83" lineend="85" name="decode_tag_end" signature="decode_tag_end(ns, name)" />
        <scope ilk="function" line="87" lineend="89" name="decode_text" signature="decode_text(ns, text)" />
        <scope ilk="function" line="91" lineend="92" name="decode_prologue" signature="decode_prologue" />
        <scope ilk="function" line="94" lineend="95" name="decode_epilogue" signature="decode_epilogue" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/encodingstyle/aspDotNetHandler">
      <import line="9" module="soap/encodingstyle/handler" symbol="*" />
      <scope doc="SOAP4R - ASP.NET EncodingStyle handler library Copyright (C)&#xA;2001, 2003, 2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="12" name="SOAP" />
      <scope ilk="namespace" line="13" name="EncodingStyle" />
      <scope classrefs="Handler" ilk="class" line="16" lineend="207" name="ASPDotNetHandler">
        <scope attributes="__ctor__" ilk="function" line="20" lineend="24" name="initialize" signature="initialize(charset = nil)" />
        <scope doc="encode interface." ilk="function" line="30" lineend="65" name="encode_data" signature="encode_data(generator, ns, data, parent)" />
        <scope ilk="function" line="67" lineend="71" name="encode_data_end" signature="encode_data_end(generator, ns, data, parent)" />
        <scope classrefs="Object" doc="decode interface." ilk="class" line="77" lineend="83" name="SOAPTemporalObject">
          <scope ilk="function" line="78" lineend="78" name="parent" />
          <scope ilk="function" line="78" lineend="78" name="parent=" />
          <scope attributes="__ctor__" ilk="function" line="80" lineend="82" name="initialize" signature="initialize" />
        </scope>
        <scope classrefs="SOAPTemporalObject" ilk="class" line="85" lineend="113" name="SOAPUnknown">
          <scope attributes="__ctor__" ilk="function" line="86" lineend="90" name="initialize" signature="initialize(handler, elename)" />
          <scope ilk="function" line="92" lineend="98" name="as_struct" signature="as_struct" />
          <scope ilk="function" line="100" lineend="105" name="as_string" signature="as_string" />
          <scope ilk="function" line="107" lineend="112" name="as_nil" signature="as_nil" />
        </scope>
        <scope ilk="function" line="115" lineend="120" name="decode_tag" signature="decode_tag(ns, elename, attrs, parent)" />
        <scope ilk="function" line="122" lineend="137" name="decode_tag_end" signature="decode_tag_end(ns, node)" />
        <scope ilk="function" line="139" lineend="142" name="decode_text" signature="decode_text(ns, text)" />
        <scope ilk="function" line="144" lineend="145" name="decode_prologue" signature="decode_prologue" />
        <scope ilk="function" line="147" lineend="148" name="decode_epilogue" signature="decode_epilogue" />
        <scope ilk="function" line="150" lineend="192" name="decode_parent" signature="decode_parent(parent, node)" />
        <scope ilk="function" line="196" lineend="206" name="decode_textbuf" signature="decode_textbuf(node)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/element">
      <import line="9" module="xsd/qname" symbol="*" />
      <import line="10" module="soap/baseData" symbol="*" />
      <scope doc="SOAP4R - SOAP elements library Copyright (C) 2000, 2001,&#xA;2003-2005  NAKAMURA, Hiroshi &lt;nahi@ruby-lang.org&gt;." ilk="namespace" line="13" name="SOAP" />
      <scope ilk="namespace" line="19" lineend="19" name="SOAPEnvelopeElement" />
      <scope classrefs="SOAPStruct" ilk="class" line="21" lineend="92" name="SOAPFault">
        <scope ilk="function" line="27" lineend="29" name="faultcode" signature="faultcode" />
        <scope ilk="function" line="31" lineend="33" name="faultstring" signature="faultstring" />
        <scope ilk="function" line="35" lineend="37" name="faultactor" signature="faultactor" />
        <scope ilk="function" line="39" lineend="41" name="detail" signature="detail" />
        <scope ilk="function" line="43" lineend="45" name="faultcode=" signature="faultcode=(rhs)" />
        <scope ilk="function" line="47" lineend="49" name="faultstring=" signature="faultstring=(rhs)" />
        <scope ilk="function" line="51" lineend="53" name="faultactor=" signature="faultactor=(rhs)" />
        <scope ilk="function" line="55" lineend="57" name="detail=" signature="detail=(rhs)" />
        <scope attributes="__ctor__" ilk="function" line="59" lineend="78" name="initialize" signature="initialize(faultcode = nil, faultstring = nil, faultactor = nil, detail = nil)" />
        <scope ilk="function" line="80" lineend="91" name="encode" signature="encode(generator, ns, attrs = {})" />
        <import symbol="SOAPEnvelopeElement" />
        <import symbol="SOAPCompoundtype" />
      </scope>
      <scope classrefs="SOAPStruct" ilk="class" line="95" lineend="142" name="SOAPBody">
        <scope attributes="__ctor__" ilk="function" line="98" lineend="112" name="initialize" signature="initialize(data = nil, is_fault = false)" />
        <scope ilk="function" line="114" lineend="125" name="encode" signature="encode(generator, ns, attrs = {})" />
        <scope ilk="function" line="127" lineend="141" name="root_node" signature="root_node" />
        <import symbol="SOAPEnvelopeElement" />
      </scope>
      <scope classrefs="XSD::NSDBase" ilk="class" line="145" lineend="176" name="SOAPHeaderItem">
        <scope ilk="function" line="151" lineend="151" name="element" />
        <scope ilk="function" line="151" lineend="151" name="element=" />
        <scope ilk="function" line="152" lineend="152" name="mustunderstand" />
        <scope ilk="function" line="152" lineend="152" name="mustunderstand=" />
        <scope ilk="function" line="153" lineend="153" name="encodingstyle" />
        <scope ilk="function" line="153" lineend="153" name="encodingstyle=" />
        <scope attributes="__ctor__" ilk="function" line="155" lineend="162" name="initialize" signature="initialize(element, mustunderstand = true, encodingstyle = nil)" />
        <scope ilk="function" line="164" lineend="175" name="encode" signature="encode(generator, ns, attrs = {})" />
        <import symbol="SOAPEnvelopeElement" />
        <import symbol="SOAPCompoundtype" />
      </scope>
      <scope classrefs="SOAPStruct" ilk="class" line="179" lineend="208" name="SOAPHeader">
        <scope attributes="__ctor__" ilk="function" line="182" lineend="186" name="initialize" signature="initialize" />
        <scope ilk="function" line="188" lineend="195" name="encode" signature="encode(generator, ns, attrs = {})" />
        <scope ilk="function" line="197" lineend="202" name="add" signature="add(name, value)" />
        <scope ilk="function" line="204" lineend="206" name="length" signature="length" />
        <import symbol="SOAPEnvelopeElement" />
      </scope>
      <scope classrefs="XSD::NSDBase" ilk="class" line="211" lineend="255" name="SOAPEnvelope">
        <scope ilk="function" line="215" lineend="215" name="header" />
        <scope ilk="function" line="216" lineend="216" name="body" />
        <scope ilk="function" line="217" lineend="217" name="external_content" />
        <scope attributes="__ctor__" ilk="function" line="219" lineend="229" name="initialize" signature="initialize(header = nil, body = nil)" />
        <scope ilk="function" line="231" lineend="234" name="header=" signature="header=(header)" />
        <scope ilk="function" line="236" lineend="239" name="body=" signature="body=(body)" />
        <scope ilk="function" line="241" lineend="250" name="encode" signature="encode(generator, ns, attrs = {})" />
        <scope ilk="function" line="252" lineend="254" name="to_ary" signature="to_ary" />
        <import symbol="SOAPEnvelopeElement" />
        <import symbol="SOAPCompoundtype" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/baseData">
      <import line="9" module="xsd/datatypes" symbol="*" />
      <import line="10" module="soap/soap" symbol="*" />
      <import line="939" module="soap/mapping/typeMap" symbol="*" />
      <scope doc="soap/baseData.rb: SOAP4R - Base type library Copyright (C)&#xA;2000, 2001, 2003-2005  NAKAMURA, Hiroshi &lt;nahi@ruby-&#xA;lang.org&gt;." ilk="namespace" line="13" name="SOAP" />
      <scope ilk="namespace" line="19" lineend="29" name="SOAPModuleUtils">
        <scope ilk="function" line="24" lineend="28" name="decode" signature="decode(elename)" />
      </scope>
      <scope doc="for SOAP type(base and compound)" ilk="namespace" line="35" lineend="74" name="SOAPType">
        <scope attributes="__ctor__" ilk="function" line="46" lineend="57" name="initialize" signature="initialize(*arg)" />
        <scope ilk="function" line="59" lineend="65" name="inspect" signature="inspect" />
        <scope ilk="function" line="67" lineend="73" name="rootnode" signature="rootnode" />
      </scope>
      <scope doc="for SOAP base type" ilk="namespace" line="80" lineend="87" name="SOAPBasetype">
        <scope attributes="__ctor__" ilk="function" line="84" lineend="86" name="initialize" signature="initialize(*arg)" />
      </scope>
      <scope doc="for SOAP compound type" ilk="namespace" line="93" lineend="100" name="SOAPCompoundtype">
        <scope attributes="__ctor__" ilk="function" line="97" lineend="99" name="initialize" signature="initialize(*arg)" />
      </scope>
      <scope classrefs="XSD::NSDBase" doc="Convenience datatypes." ilk="class" line="106" lineend="172" name="SOAPReference">
        <scope ilk="function" line="112" lineend="112" name="refid" />
        <scope ilk="function" line="112" lineend="112" name="refid=" />
        <scope attributes="__ctor__" doc="Override the definition in SOAPBasetype." ilk="function" line="115" lineend="121" name="initialize" signature="initialize(obj = nil)" />
        <scope ilk="function" line="123" lineend="125" name="__getobj__" signature="__getobj__" />
        <scope ilk="function" line="127" lineend="134" name="__setobj__" signature="__setobj__(obj)" />
        <scope doc="Why don&apos;t I use delegate.rb? -&gt; delegate requires target&#xA;object type at initialize time." ilk="function" line="144" lineend="150" name="method_missing" signature="method_missing(msg_id, *params)" />
        <scope ilk="function" line="152" lineend="154" name="refidstr" signature="refidstr" />
        <scope attributes="__classmethod__" ilk="function" line="156" lineend="158" name="create_refid" signature="self.create_refid(obj)" />
        <scope attributes="__classmethod__" ilk="function" line="160" lineend="171" name="decode" signature="self.decode(elename, refidstr)" />
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::NSDBase" ilk="class" line="175" lineend="197" name="SOAPExternalReference">
        <scope attributes="__ctor__" ilk="function" line="179" lineend="182" name="initialize" signature="initialize" />
        <scope ilk="function" line="184" lineend="186" name="referred" signature="referred" />
        <scope ilk="function" line="188" lineend="190" name="refidstr" signature="refidstr" />
        <scope ilk="function" line="194" lineend="196" name="external_contentid" signature="external_contentid" />
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDNil" ilk="class" line="200" lineend="203" name="SOAPNil">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDString" doc="SOAPRawString is for sending raw string." ilk="class" line="208" lineend="211" name="SOAPRawString">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDAnySimpleType" doc="Basic datatypes." ilk="class" line="217" lineend="220" name="SOAPAnySimpleType">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDString" ilk="class" line="222" lineend="225" name="SOAPString">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDBoolean" ilk="class" line="227" lineend="230" name="SOAPBoolean">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDDecimal" ilk="class" line="232" lineend="235" name="SOAPDecimal">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDFloat" ilk="class" line="237" lineend="240" name="SOAPFloat">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDDouble" ilk="class" line="242" lineend="245" name="SOAPDouble">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDDuration" ilk="class" line="247" lineend="250" name="SOAPDuration">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDDateTime" ilk="class" line="252" lineend="255" name="SOAPDateTime">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDTime" ilk="class" line="257" lineend="260" name="SOAPTime">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDDate" ilk="class" line="262" lineend="265" name="SOAPDate">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDGYearMonth" ilk="class" line="267" lineend="270" name="SOAPGYearMonth">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDGYear" ilk="class" line="272" lineend="275" name="SOAPGYear">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDGMonthDay" ilk="class" line="277" lineend="280" name="SOAPGMonthDay">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDGDay" ilk="class" line="282" lineend="285" name="SOAPGDay">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDGMonth" ilk="class" line="287" lineend="290" name="SOAPGMonth">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDHexBinary" ilk="class" line="292" lineend="295" name="SOAPHexBinary">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDBase64Binary" ilk="class" line="297" lineend="312" name="SOAPBase64">
        <scope attributes="__ctor__" doc="Override the definition in SOAPBasetype." ilk="function" line="304" lineend="307" name="initialize" signature="initialize(value = nil)" />
        <scope ilk="function" line="309" lineend="311" name="as_xsd" signature="as_xsd" />
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDAnyURI" ilk="class" line="314" lineend="317" name="SOAPAnyURI">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDQName" ilk="class" line="319" lineend="322" name="SOAPQName">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDInteger" ilk="class" line="325" lineend="328" name="SOAPInteger">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDNonPositiveInteger" ilk="class" line="330" lineend="333" name="SOAPNonPositiveInteger">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDNegativeInteger" ilk="class" line="335" lineend="338" name="SOAPNegativeInteger">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDLong" ilk="class" line="340" lineend="343" name="SOAPLong">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDInt" ilk="class" line="345" lineend="348" name="SOAPInt">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDShort" ilk="class" line="350" lineend="353" name="SOAPShort">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDByte" ilk="class" line="355" lineend="358" name="SOAPByte">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDNonNegativeInteger" ilk="class" line="360" lineend="363" name="SOAPNonNegativeInteger">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDUnsignedLong" ilk="class" line="365" lineend="368" name="SOAPUnsignedLong">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDUnsignedInt" ilk="class" line="370" lineend="373" name="SOAPUnsignedInt">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDUnsignedShort" ilk="class" line="375" lineend="378" name="SOAPUnsignedShort">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDUnsignedByte" ilk="class" line="380" lineend="383" name="SOAPUnsignedByte">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::XSDPositiveInteger" ilk="class" line="385" lineend="388" name="SOAPPositiveInteger">
        <import symbol="SOAPBasetype" />
      </scope>
      <scope classrefs="XSD::NSDBase" doc="Compound datatypes." ilk="class" line="394" lineend="502" name="SOAPStruct">
        <scope attributes="__ctor__" ilk="function" line="400" lineend="405" name="initialize" signature="initialize(type = nil)" />
        <scope ilk="function" line="407" lineend="413" name="to_s" signature="to_s()" />
        <scope ilk="function" line="415" lineend="417" name="add" signature="add(name, value)" />
        <scope ilk="function" line="419" lineend="434" name="[]" signature="[](idx" />
        <scope ilk="function" line="436" lineend="443" name="[]=" signature="[]=(idx" />
        <scope ilk="function" line="445" lineend="447" name="key?" signature="key?(name)" />
        <scope ilk="function" line="449" lineend="451" name="members" signature="members" />
        <scope ilk="function" line="453" lineend="470" name="to_obj" signature="to_obj" />
        <scope ilk="function" line="472" lineend="478" name="each" signature="each" />
        <scope ilk="function" line="480" lineend="484" name="replace" signature="replace" />
        <scope attributes="__classmethod__" ilk="function" line="486" lineend="490" name="decode" signature="self.decode(elename, type)" />
        <scope ilk="function" line="494" lineend="501" name="add_member" signature="add_member(name, value = nil)" />
        <import symbol="SOAPCompoundtype" />
        <import symbol="Enumerable" />
      </scope>
      <scope classrefs="Object" doc="SOAPElement is not typed so it is not derived from NSDBase." ilk="class" line="506" lineend="691" name="SOAPElement">
        <scope ilk="function" line="509" lineend="509" name="encodingstyle" />
        <scope ilk="function" line="509" lineend="509" name="encodingstyle=" />
        <scope ilk="function" line="511" lineend="511" name="elename" />
        <scope ilk="function" line="511" lineend="511" name="elename=" />
        <scope ilk="function" line="512" lineend="512" name="id" />
        <scope ilk="function" line="512" lineend="512" name="id=" />
        <scope ilk="function" line="513" lineend="513" name="precedents" />
        <scope ilk="function" line="514" lineend="514" name="root" />
        <scope ilk="function" line="514" lineend="514" name="root=" />
        <scope ilk="function" line="515" lineend="515" name="parent" />
        <scope ilk="function" line="515" lineend="515" name="parent=" />
        <scope ilk="function" line="516" lineend="516" name="position" />
        <scope ilk="function" line="516" lineend="516" name="position=" />
        <scope ilk="function" line="517" lineend="517" name="extraattr" />
        <scope ilk="function" line="517" lineend="517" name="extraattr=" />
        <scope ilk="function" line="519" lineend="519" name="qualified" />
        <scope ilk="function" line="519" lineend="519" name="qualified=" />
        <scope attributes="__ctor__" ilk="function" line="521" lineend="539" name="initialize" signature="initialize(elename, text = nil)" />
        <scope ilk="function" line="541" lineend="543" name="inspect" signature="inspect" />
        <scope ilk="function" line="546" lineend="546" name="text" />
        <scope ilk="function" line="546" lineend="546" name="text=" />
        <scope doc="Element interfaces." ilk="function" line="550" lineend="552" name="add" signature="add(value)" />
        <scope ilk="function" line="554" lineend="560" name="[]" signature="[](idx" />
        <scope ilk="function" line="562" lineend="569" name="[]=" signature="[]=(idx" />
        <scope ilk="function" line="571" lineend="573" name="key?" signature="key?(name)" />
        <scope ilk="function" line="575" lineend="577" name="members" signature="members" />
        <scope ilk="function" line="579" lineend="600" name="to_obj" signature="to_obj" />
        <scope ilk="function" line="602" lineend="608" name="each" signature="each" />
        <scope attributes="__classmethod__" ilk="function" line="610" lineend="613" name="decode" signature="self.decode(elename)" />
        <scope attributes="__classmethod__" ilk="function" line="615" lineend="638" name="from_obj" signature="self.from_obj(obj, namespace = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="640" lineend="648" name="to_elename" signature="self.to_elename(obj, namespace = nil)" />
        <scope ilk="function" line="652" lineend="658" name="add_member" signature="add_member(name, value)" />
        <scope ilk="function" line="661" lineend="672" name="add_accessor" signature="add_accessor(name)" />
        <scope ilk="function" line="674" lineend="685" name="add_accessor" signature="add_accessor(name)" />
        <scope ilk="function" line="688" lineend="690" name="safe_accessor_name" signature="safe_accessor_name(name)" />
        <import symbol="Enumerable" />
      </scope>
      <scope classrefs="XSD::NSDBase" ilk="class" line="694" lineend="936" name="SOAPArray">
        <scope ilk="function" line="700" lineend="700" name="sparse" />
        <scope ilk="function" line="700" lineend="700" name="sparse=" />
        <scope ilk="function" line="702" lineend="702" name="offset" />
        <scope ilk="function" line="702" lineend="702" name="rank" />
        <scope ilk="function" line="703" lineend="703" name="size" />
        <scope ilk="function" line="703" lineend="703" name="size=" />
        <scope ilk="function" line="703" lineend="703" name="size_fixed" />
        <scope ilk="function" line="703" lineend="703" name="size_fixed=" />
        <scope ilk="function" line="704" lineend="704" name="arytype" />
        <scope attributes="__ctor__" ilk="function" line="706" lineend="717" name="initialize" signature="initialize(type = nil, rank = 1, arytype = nil)" />
        <scope ilk="function" line="719" lineend="722" name="offset=" signature="offset=(var)" />
        <scope ilk="function" line="724" lineend="726" name="add" signature="add(value)" />
        <scope ilk="function" line="728" lineend="734" name="[]" signature="[](*idxary" />
        <scope ilk="function" line="736" lineend="768" name="[]=" signature="[]=(*idxary" />
        <scope ilk="function" line="770" lineend="774" name="each" signature="each" />
        <scope ilk="function" line="776" lineend="778" name="to_a" signature="to_a" />
        <scope ilk="function" line="780" lineend="784" name="replace" signature="replace" />
        <scope ilk="function" line="786" lineend="796" name="deep_map" signature="deep_map(ary, &amp;block)" />
        <scope ilk="function" line="798" lineend="805" name="include?" signature="include?(var)" />
        <scope ilk="function" line="807" lineend="815" name="traverse" signature="traverse" />
        <scope ilk="function" line="817" lineend="836" name="soap2array" signature="soap2array(ary)" />
        <scope ilk="function" line="838" lineend="840" name="position" signature="position" />
        <scope ilk="function" line="846" lineend="859" name="retrieve" signature="retrieve(idxary)" />
        <scope ilk="function" line="861" lineend="874" name="traverse_data" signature="traverse_data(data, rank = 1)" />
        <scope ilk="function" line="876" lineend="878" name="ranksize" signature="ranksize(rank)" />
        <scope ilk="function" line="880" lineend="896" name="offsetnext" signature="offsetnext" />
        <scope attributes="__classmethod__" doc="Module function" ilk="function" line="902" lineend="922" name="decode" signature="self.decode(elename, type, arytype)" />
        <scope attributes="__classmethod__" ilk="function" line="926" lineend="928" name="create_arytype" signature="self.create_arytype(typename, rank)" />
        <scope attributes="__classmethod__" ilk="function" line="932" lineend="935" name="parse_type" signature="self.parse_type(string)" />
        <import symbol="SOAPCompoundtype" />
        <import symbol="Enumerable" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="soap/attachment">
      <import line="9" module="soap/baseData" symbol="*" />
      <import line="10" module="soap/mapping" symbol="*" />
      <scope doc="soap/attachment.rb: SOAP4R - SwA implementation." ilk="namespace" line="13" name="SOAP" />
      <scope classrefs="SOAPExternalReference" ilk="class" line="16" lineend="29" name="SOAPAttachment">
        <scope ilk="function" line="17" lineend="17" name="data" />
        <scope attributes="__ctor__" ilk="function" line="19" lineend="22" name="initialize" signature="initialize(value)" />
        <scope ilk="function" line="26" lineend="28" name="external_contentid" signature="external_contentid" />
      </scope>
      <scope classrefs="Object" ilk="class" line="32" lineend="84" name="Attachment">
        <scope ilk="function" line="33" lineend="33" name="io" />
        <scope ilk="function" line="34" lineend="34" name="contenttype" />
        <scope ilk="function" line="34" lineend="34" name="contenttype=" />
        <scope attributes="__ctor__" ilk="function" line="36" lineend="40" name="initialize" signature="initialize(string_or_readable = nil)" />
        <scope ilk="function" line="42" lineend="44" name="contentid" signature="contentid" />
        <scope ilk="function" line="46" lineend="48" name="contentid=" signature="contentid=(contentid)" />
        <scope ilk="function" line="50" lineend="52" name="mime_contentid" signature="mime_contentid" />
        <scope ilk="function" line="54" lineend="60" name="content" signature="content" />
        <scope ilk="function" line="62" lineend="64" name="to_s" signature="to_s" />
        <scope ilk="function" line="66" lineend="68" name="write" signature="write(out)" />
        <scope ilk="function" line="70" lineend="74" name="save" signature="save(filename)" />
        <scope attributes="__classmethod__" ilk="function" line="76" lineend="79" name="contentid" signature="self.contentid(obj)" />
        <scope attributes="__classmethod__" ilk="function" line="81" lineend="83" name="mime_contentid" signature="self.mime_contentid(obj)" />
      </scope>
      <scope ilk="namespace" line="87" lineend="104" name="Mapping">
        <scope classrefs="SOAP::Mapping::" ilk="class" line="88" lineend="100" name="AttachmentFactory">
          <scope ilk="function" line="89" lineend="93" name="obj2soap" signature="obj2soap(soap_class, obj, info, map)" />
          <scope ilk="function" line="95" lineend="99" name="soap2obj" signature="soap2obj(obj_class, node, info, map)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="singleton">
      <scope doc="The Singleton module implements the Singleton pattern." ilk="namespace" name="Singleton">
        <scope attributes="private" doc="default marshalling strategy" ilk="function" name="_dump" signature="(depth=-1)" />
        <scope doc="disable build-in copying methods" ilk="function" name="clone" signature="()" />
        <scope ilk="function" name="dup" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shellwords">
      <scope doc="This module is originally a port of shellwords.pl, but&#xA;modified to conform to POSIX / SUSv3 (IEEE Std 1003.1-2001)." ilk="namespace" name="Shellwords">
        <scope doc="Split text into an array of tokens in the same way the UNIX&#xA;Bourne shell does." ilk="function" name="shellwords" signature="(line)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell">
      <import line="13" module="e2mmap" symbol="*" />
      <import line="14" module="thread" symbol="*" />
      <import line="16" module="shell/error" symbol="*" />
      <import line="17" module="shell/command-processor" symbol="*" />
      <import line="18" module="shell/process-controller" symbol="*" />
      <scope classrefs="Object" doc="shell.rb - $Release Version: 0.6.0 $ $Revision: 1.8 $ $Date:&#xA;2001/03/19 09:01:11 $ by Keiju ISHITSUKA(Nippon Rational&#xA;Inc.)" ilk="class" line="20" lineend="269" name="Shell">
        <scope classrefs="Object" doc="@cascade = true debug: true -&gt; normal debug debug: 1    -&gt;&#xA;eval definition debug debug: 2    -&gt; detail inspect debug" ilk="class" line="33" lineend="77" name="Shell">
          <scope ilk="function" line="34" lineend="34" name="cascade" />
          <scope ilk="function" line="35" lineend="35" name="debug" />
          <scope ilk="function" line="36" lineend="36" name="verbose" />
          <scope doc="alias cascade? cascade" ilk="function" line="43" lineend="46" name="debug=" signature="debug=(val)" />
          <scope ilk="function" line="48" lineend="52" name="cd" signature="cd(path)" />
          <scope ilk="function" line="54" lineend="60" name="default_system_path" signature="default_system_path" />
          <scope ilk="function" line="62" lineend="64" name="default_system_path=" signature="default_system_path=(path)" />
          <scope ilk="function" line="66" lineend="72" name="default_record_separator" signature="default_record_separator" />
          <scope ilk="function" line="74" lineend="76" name="default_record_separator=" signature="default_record_separator=(rs)" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="79" lineend="92" name="initialize" signature="initialize" />
        <scope ilk="function" line="94" lineend="94" name="system_path" />
        <scope ilk="function" line="96" lineend="99" name="system_path=" signature="system_path=(path)" />
        <scope ilk="function" line="101" lineend="101" name="umask" />
        <scope ilk="function" line="102" lineend="102" name="record_separator" />
        <scope ilk="function" line="104" lineend="104" name="verbose" />
        <scope ilk="function" line="105" lineend="105" name="debug" />
        <scope ilk="function" line="107" lineend="110" name="debug=" signature="debug=(val)" />
        <scope ilk="function" line="115" lineend="115" name="command_processor" />
        <scope ilk="function" line="116" lineend="116" name="process_controller" />
        <scope ilk="function" line="118" lineend="120" name="expand_path" signature="expand_path(path)" />
        <scope ilk="function" line="134" lineend="134" name="cwd" />
        <scope ilk="function" line="139" lineend="139" name="dir_stack" />
        <scope doc="If called as iterator, it restores the current directory&#xA;when the block ends." ilk="function" line="144" lineend="160" name="chdir" signature="chdir(path = nil)" />
        <scope ilk="function" line="163" lineend="186" name="pushdir" signature="pushdir(path = nil)" />
        <scope ilk="function" line="189" lineend="197" name="popdir" signature="popdir" />
        <scope doc="process management" ilk="function" line="204" lineend="206" name="jobs" signature="jobs" />
        <scope ilk="function" line="208" lineend="210" name="kill" signature="kill(sig, command)" />
        <scope attributes="__classmethod__" doc="command definitions" ilk="function" line="215" lineend="217" name="def_system_command" signature="Shell.def_system_command(command, path = command)" />
        <scope attributes="__classmethod__" ilk="function" line="219" lineend="221" name="undef_system_command" signature="Shell.undef_system_command(command)" />
        <scope attributes="__classmethod__" ilk="function" line="223" lineend="225" name="alias_command" signature="Shell.alias_command(ali, command, *opts, &amp;block)" />
        <scope attributes="__classmethod__" ilk="function" line="227" lineend="229" name="unalias_command" signature="Shell.unalias_command(ali)" />
        <scope attributes="__classmethod__" ilk="function" line="231" lineend="233" name="install_system_commands" signature="Shell.install_system_commands(pre = &quot;sys_&quot;)" />
        <scope ilk="function" line="236" lineend="242" name="inspect" signature="inspect" />
        <scope attributes="__classmethod__" ilk="function" line="244" lineend="265" name="notify" signature="self.notify(*opts, &amp;block)" />
        <import symbol="Error" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/version">
      <scope classrefs="Object" doc="version.rb - shell version definition file $Release Version:&#xA;0.6.0$ $Revision: 1.1 $ $Date: 2001/05/17 10:02:48 $ by&#xA;Keiju ISHITSUKA(Nihon Rational Software Co.,Ltd)" ilk="class" line="13" lineend="16" name="Shell" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/system-command">
      <import line="13" module="shell/filter" symbol="*" />
      <scope classrefs="Object" doc="shell/system-command.rb - $Release Version: 0.6.0 $&#xA;$Revision: 1.2.2.1 $ $Date: 2004/03/21 12:21:11 $ by Keiju&#xA;ISHITSUKA(Nihon Rational Software Co.,Ltd)" ilk="class" line="15" lineend="168" name="Shell">
        <scope classrefs="Filter" ilk="class" line="16" lineend="167" name="SystemCommand">
          <scope attributes="__ctor__" ilk="function" line="17" lineend="29" name="initialize" signature="initialize(sh, command, *opts)" />
          <scope ilk="function" line="31" lineend="31" name="command" />
          <scope ilk="function" line="34" lineend="36" name="wait?" signature="wait?" />
          <scope ilk="function" line="38" lineend="40" name="active?" signature="active?" />
          <scope ilk="function" line="42" lineend="47" name="input=" signature="input=(inp)" />
          <scope ilk="function" line="49" lineend="58" name="start" signature="start" />
          <scope ilk="function" line="60" lineend="62" name="flush" signature="flush" />
          <scope ilk="function" line="64" lineend="73" name="terminate" signature="terminate" />
          <scope ilk="function" line="75" lineend="79" name="kill" signature="kill(sig)" />
          <scope ilk="function" line="82" lineend="114" name="start_import" signature="start_import" />
          <scope ilk="function" line="116" lineend="141" name="start_export" signature="start_export" />
          <scope ilk="function" line="144" lineend="148" name="each" signature="each(rs = nil)" />
          <scope doc="ex) if you wish to output: &quot;shell: job(#{@command}:#{@pid})&#xA;close pipe-out.&quot; then mes: &quot;job(%id) close pipe-out.&quot;" ilk="function" line="156" lineend="166" name="notify" signature="notify(*opts, &amp;block)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/process-controller">
      <import line="13" module="mutex_m" symbol="*" />
      <import line="14" module="monitor" symbol="*" />
      <import line="15" module="sync" symbol="*" />
      <scope classrefs="Object" doc="shell/process-controller.rb - $Release Version: 0.6.0 $&#xA;$Revision: 1.3 $ $Date: 2003/10/16 17:47:19 $ by Keiju&#xA;ISHITSUKA(Nihon Rational Software Co.,Ltd)" ilk="class" line="17" lineend="258" name="Shell">
        <scope classrefs="Object" ilk="class" line="18" lineend="257" name="ProcessController">
          <scope classrefs="Object" ilk="class" line="23" lineend="58" name="self">
            <scope ilk="function" line="25" lineend="32" name="process_controllers_exclusive" signature="process_controllers_exclusive" />
            <scope ilk="function" line="34" lineend="39" name="activate" signature="activate(pc)" />
            <scope ilk="function" line="41" lineend="49" name="inactivate" signature="inactivate(pc)" />
            <scope ilk="function" line="51" lineend="57" name="each_active_object" signature="each_active_object" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="60" lineend="68" name="initialize" signature="initialize(shell)" />
          <scope ilk="function" line="70" lineend="77" name="jobs" signature="jobs" />
          <scope ilk="function" line="79" lineend="81" name="active_jobs" signature="active_jobs" />
          <scope ilk="function" line="83" lineend="85" name="waiting_jobs" signature="waiting_jobs" />
          <scope ilk="function" line="87" lineend="91" name="jobs_exist?" signature="jobs_exist?" />
          <scope ilk="function" line="93" lineend="97" name="active_jobs_exist?" signature="active_jobs_exist?" />
          <scope ilk="function" line="99" lineend="103" name="waiting_jobs_exist?" signature="waiting_jobs_exist?" />
          <scope doc="schedule a command" ilk="function" line="106" lineend="115" name="add_schedule" signature="add_schedule(command)" />
          <scope doc="start a job" ilk="function" line="118" lineend="135" name="start_job" signature="start_job(command = nil)" />
          <scope ilk="function" line="137" lineend="141" name="waiting_job?" signature="waiting_job?(job)" />
          <scope ilk="function" line="143" lineend="147" name="active_job?" signature="active_job?(job)" />
          <scope doc="terminate a job" ilk="function" line="150" lineend="158" name="terminate_job" signature="terminate_job(command)" />
          <scope doc="kill a job" ilk="function" line="161" lineend="178" name="kill_job" signature="kill_job(sig, command)" />
          <scope doc="wait for all jobs to terminate" ilk="function" line="181" lineend="191" name="wait_all_jobs_execution" signature="wait_all_jobs_execution" />
          <scope doc="simple fork" ilk="function" line="194" lineend="256" name="sfork" signature="sfork(command, &amp;block)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/filter">
      <scope classrefs="Object" doc="shell/filter.rb - $Release Version: 0.6.0 $ $Revision:&#xA;1.3.2.1 $ $Date: 2004/03/21 12:21:11 $ by Keiju&#xA;ISHITSUKA(Nihon Rational Software Co.,Ltd)" ilk="class" line="13" lineend="110" name="Shell">
        <scope classrefs="Object" doc="Filter A method to require each()" ilk="class" line="19" lineend="109" name="Filter">
          <scope attributes="__ctor__" ilk="function" line="22" lineend="25" name="initialize" signature="initialize(sh)" />
          <scope ilk="function" line="27" lineend="27" name="input" />
          <scope ilk="function" line="29" lineend="31" name="input=" signature="input=(filter)" />
          <scope ilk="function" line="33" lineend="38" name="each" signature="each(rs = nil)" />
          <scope ilk="function" line="40" lineend="51" name="&lt;" signature="&lt; (src" />
          <scope ilk="function" line="53" lineend="68" name="&gt;" signature="&gt; (to" />
          <scope ilk="function" line="70" lineend="76" name="&gt;&gt;" signature="&gt;&gt; (to" />
          <scope ilk="function" line="78" lineend="84" name="|" signature="| (filter" />
          <scope ilk="function" line="86" lineend="88" name="+" signature="+ (filter" />
          <scope ilk="function" line="90" lineend="94" name="to_a" signature="to_a" />
          <scope ilk="function" line="96" lineend="100" name="to_s" signature="to_s" />
          <scope ilk="function" line="102" lineend="108" name="inspect" signature="inspect" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/error">
      <import line="13" module="e2mmap" symbol="*" />
      <scope classrefs="Object" doc="shell/error.rb - $Release Version: 0.6.0 $ $Revision: 1.2 $&#xA;$Date: 2003/02/07 19:00:21 $ by Keiju ISHITSUKA(Nihon&#xA;Rational Software Co.,Ltd)" ilk="class" line="15" lineend="25" name="Shell">
        <scope ilk="namespace" line="16" lineend="24" name="Error" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/command-processor">
      <import line="13" module="e2mmap" symbol="*" />
      <import line="14" module="ftools" symbol="*" />
      <import line="15" module="thread" symbol="*" />
      <import line="17" module="shell/error" symbol="*" />
      <import line="18" module="shell/filter" symbol="*" />
      <import line="19" module="shell/system-command" symbol="*" />
      <import line="20" module="shell/builtin-command" symbol="*" />
      <scope classrefs="Object" doc="shell/command-controller.rb - $Release Version: 0.6.0 $&#xA;$Revision: 1.8.2.2 $ $Date: 2004/04/18 23:20:33 $ by Keiju&#xA;ISHITSUKA(Nippon Rational Inc.)" ilk="class" line="22" lineend="592" name="Shell">
        <scope classrefs="Object" ilk="class" line="23" lineend="591" name="CommandProcessor">
          <scope attributes="__classmethod__" doc="include Error" ilk="function" line="30" lineend="42" name="initialize" signature="self.initialize">
            <scope attributes="__classmethod__" doc="define CommandProccessor#methods to Shell#methods and&#xA;Filter#methods" ilk="function" line="39" lineend="41" name="method_added" signature="self.method_added(id)" />
          </scope>
          <scope attributes="__classmethod__" doc="include run file." ilk="function" line="47" lineend="58" name="run_config" signature="self.run_config" />
          <scope attributes="__ctor__" ilk="function" line="60" lineend="63" name="initialize" signature="initialize(shell)" />
          <scope doc="CommandProcessor#expand_path(path) path:   String return:&#xA;String returns the absolute path for &lt;path&gt;" ilk="function" line="71" lineend="73" name="expand_path" signature="expand_path(path)" />
          <scope doc="File related commands Shell#foreach Shell#open Shell#unlink&#xA;Shell#test" ilk="function" line="93" lineend="102" name="foreach" signature="foreach(path = nil, *rs)" />
          <scope doc="CommandProcessor#open(path, mode) path:   String mode:&#xA;String return: File or Dir Same as:" ilk="function" line="114" lineend="123" name="open" signature="open(path, mode)" />
          <scope doc="public :open" ilk="function" line="132" lineend="139" name="unlink" signature="unlink(path)" />
          <scope doc="CommandProcessor#test(command, file1, file2)&#xA;CommandProcessor#[command, file1, file2] command: char or&#xA;String or Symbol file1:   String file2:   String(optional)" ilk="function" line="158" lineend="181" name="test" signature="test(command, file1, file2=nil)" />
          <scope doc="Dir related methods" ilk="function" line="196" lineend="200" name="mkdir" signature="mkdir(*path)" />
          <scope doc="CommandProcessor#rmdir(*path) path: String same as&#xA;Dir.rmdir()" ilk="function" line="207" lineend="211" name="rmdir" signature="rmdir(*path)" />
          <scope doc="CommandProcessor#system(command, *opts) command: String&#xA;opts:    String return:  SystemCommand Same as system()&#xA;function" ilk="function" line="223" lineend="232" name="system" signature="system(command, *opts)" />
          <scope doc="ProcessCommand#rehash clear command hash table." ilk="function" line="238" lineend="240" name="rehash" signature="rehash" />
          <scope doc="ProcessCommand#transact" ilk="function" line="245" lineend="247" name="check_point" signature="check_point" />
          <scope ilk="function" line="250" lineend="256" name="transact" signature="transact(&amp;block)" />
          <scope doc="internal commands" ilk="function" line="261" lineend="263" name="out" signature="out(dev = STDOUT, &amp;block)" />
          <scope ilk="function" line="265" lineend="267" name="echo" signature="echo(*strings)" />
          <scope ilk="function" line="269" lineend="271" name="cat" signature="cat(*filenames)" />
          <scope doc="def sort(*filenames) Sort.new(self, *filenames) end" ilk="function" line="277" lineend="279" name="glob" signature="glob(pattern)" />
          <scope ilk="function" line="281" lineend="290" name="append" signature="append(to, filter)" />
          <scope ilk="function" line="292" lineend="294" name="tee" signature="tee(file)" />
          <scope ilk="function" line="296" lineend="298" name="concat" signature="concat(*jobs)" />
          <scope doc="%pwd, %cwd -&gt; @pwd" ilk="function" line="301" lineend="310" name="notify" signature="notify(*opts, &amp;block)" />
          <scope doc="private functions" ilk="function" line="315" lineend="328" name="effect_umask" signature="effect_umask" />
          <scope ilk="function" line="331" lineend="353" name="find_system_command" signature="find_system_command(command)" />
          <scope attributes="__classmethod__" doc="CommandProcessor.def_system_command(command, path) command:&#xA;String path:     String define &apos;command()&apos; method as method." ilk="function" line="361" lineend="372" name="def_system_command" signature="self.def_system_command(command, path = command)" />
          <scope attributes="__classmethod__" ilk="function" line="374" lineend="380" name="undef_system_command" signature="self.undef_system_command(command)" />
          <scope attributes="__classmethod__" doc="define command alias ex) def_alias_command(&quot;ls_c&quot;, &quot;ls&quot;,&#xA;&quot;-C&quot;, &quot;-F&quot;) def_alias_command(&quot;ls_c&quot;, &quot;ls&quot;){|*opts| [&quot;-C&quot;,&#xA;&quot;-F&quot;, *opts]}" ilk="function" line="388" lineend="390" name="alias_map" signature="self.alias_map" />
          <scope attributes="__classmethod__" ilk="function" line="391" lineend="418" name="alias_command" signature="self.alias_command(ali, command, *opts, &amp;block)" />
          <scope attributes="__classmethod__" ilk="function" line="420" lineend="424" name="unalias_command" signature="self.unalias_command(ali)" />
          <scope attributes="__classmethod__" doc="CommandProcessor.def_builtin_commands(delegation_class,&#xA;command_specs) delegation_class: Class or Module&#xA;command_specs: [[command_name, [argument,...]],...]&#xA;command_name: String arguments:    String" ilk="function" line="437" lineend="460" name="def_builtin_commands" signature="self.def_builtin_commands(delegation_class, command_specs)" />
          <scope attributes="__classmethod__" doc="CommandProcessor.install_system_commands(pre) pre: String -&#xA;command name prefix defines every command which belongs in&#xA;default_system_path via CommandProcessor.command()." ilk="function" line="471" lineend="493" name="install_system_commands" signature="self.install_system_commands(pre = &quot;sys_&quot;)" />
          <scope attributes="__classmethod__" doc="------------------------------------------------------------&#xA;----------" ilk="function" line="500" lineend="534" name="add_delegate_command_to_shell" signature="self.add_delegate_command_to_shell(id)" />
          <scope attributes="__classmethod__" doc="define default builtin commands" ilk="function" line="539" lineend="589" name="install_builtin_commands" signature="self.install_builtin_commands" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="shell/builtin-command">
      <import line="13" module="shell/filter" symbol="*" />
      <scope classrefs="Object" doc="shell/builtin-command.rb - $Release Version: 0.6.0 $&#xA;$Revision: 1.1 $ $Date: 2001/05/17 10:02:48 $ by Keiju&#xA;ISHITSUKA(Nihon Rational Software Co.,Ltd)" ilk="class" line="15" lineend="154" name="Shell">
        <scope classrefs="Filter" ilk="class" line="16" lineend="23" name="BuiltInCommand">
          <scope ilk="function" line="17" lineend="19" name="wait?" signature="wait?" />
          <scope ilk="function" line="20" lineend="22" name="active?" signature="active?" />
        </scope>
        <scope classrefs="BuiltInCommand" ilk="class" line="25" lineend="37" name="Echo">
          <scope attributes="__ctor__" ilk="function" line="26" lineend="29" name="initialize" signature="initialize(sh, *strings)" />
          <scope ilk="function" line="31" lineend="36" name="each" signature="each(rs = nil)" />
        </scope>
        <scope classrefs="BuiltInCommand" ilk="class" line="39" lineend="54" name="Cat">
          <scope attributes="__ctor__" ilk="function" line="40" lineend="43" name="initialize" signature="initialize(sh, *filenames)" />
          <scope ilk="function" line="45" lineend="53" name="each" signature="each(rs = nil)" />
        </scope>
        <scope classrefs="BuiltInCommand" ilk="class" line="56" lineend="78" name="Glob">
          <scope attributes="__ctor__" ilk="function" line="57" lineend="70" name="initialize" signature="initialize(sh, pattern)" />
          <scope ilk="function" line="72" lineend="77" name="each" signature="each(rs = nil)" />
        </scope>
        <scope classrefs="BuiltInCommand" doc="class Sort &lt; Cat def initialize(sh, *filenames) super end" ilk="class" line="94" lineend="108" name="AppendIO">
          <scope attributes="__ctor__" ilk="function" line="95" lineend="99" name="initialize" signature="initialize(sh, io, filter)" />
          <scope ilk="function" line="101" lineend="106" name="input=" signature="input=(filter)" />
        </scope>
        <scope classrefs="AppendIO" ilk="class" line="110" lineend="124" name="AppendFile">
          <scope attributes="__ctor__" ilk="function" line="111" lineend="115" name="initialize" signature="initialize(sh, to_filename, filter)" />
          <scope ilk="function" line="117" lineend="123" name="input=" signature="input=(filter)" />
        </scope>
        <scope classrefs="BuiltInCommand" ilk="class" line="126" lineend="140" name="Tee">
          <scope attributes="__ctor__" ilk="function" line="127" lineend="130" name="initialize" signature="initialize(sh, filename)" />
          <scope ilk="function" line="132" lineend="139" name="each" signature="each(rs = nil)" />
        </scope>
        <scope classrefs="BuiltInCommand" ilk="class" line="142" lineend="153" name="Concat">
          <scope attributes="__ctor__" ilk="function" line="143" lineend="146" name="initialize" signature="initialize(sh, *jobs)" />
          <scope ilk="function" line="148" lineend="152" name="each" signature="each(rs = nil)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="sha1">
      <import line="6" module="digest/sha1" symbol="*" />
      <scope classrefs="Object" doc="just for compatibility; requiring &quot;sha1&quot; is obsoleted" ilk="class" line="10" lineend="14" name="SHA1">
        <scope attributes="__classmethod__" ilk="function" line="11" lineend="13" name="sha1" signature="self.sha1(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="set">
      <scope classrefs="Object" doc="Set implements a collection of unordered values with no&#xA;duplicates. This is a hybrid of Array&apos;s intuitive inter-&#xA;operation facilities and Hash&apos;s fast lookup." ilk="class" name="Set">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__" doc="Creates a new set containing the given objects." ilk="function" name="[]" signature="(*ary)" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new set containing the elements of the given&#xA;enumerable object." ilk="function" name="new" signature="(enum = nil) {|o| ...}" />
        <scope doc="Returns a new array containing elements common to the set&#xA;and the given enumerable object." ilk="function" name="&amp;" signature="(enum)" />
        <scope doc="Alias for #|" ilk="function" name="+" signature="(enum)" />
        <scope doc="Alias for #add" ilk="function" name="&lt;&lt;" signature="(o)" />
        <scope doc="Returns true if two sets are equal. The equality of each&#xA;couple of elements is defined according to Object#eql?." ilk="function" name="==" signature="(set)" />
        <scope doc="Returns a new array containing elements exclusive between&#xA;the set and the given enumerable object. (set ^ enum) is&#xA;equivalent to ((set | enum) - (set &amp; enum))." ilk="function" name="^" signature="(enum)" />
        <scope doc="Adds the given object to the set and returns self. Use merge&#xA;to add several elements at once." ilk="function" name="add" signature="(o)" />
        <scope doc="Adds the given object to the set and returns self. If the&#xA;object is already in the set, returns nil." ilk="function" name="add?" signature="(o)" />
        <scope doc="Classifies the set by the return value of the given block&#xA;and returns a hash of {value =&gt; set of elements} pairs. The&#xA;block is called once for each element of the set, passing&#xA;the element as parameter." ilk="function" name="classify" signature="( {|o| ...}" />
        <scope doc="Removes all elements and returns self." ilk="function" name="clear" signature="()" />
        <scope doc="Do collect() destructively." ilk="function" name="collect!" signature="() {|o| ...}" />
        <scope doc="Deletes the given object from the set and returns self. Use&#xA;subtract to delete several items at once." ilk="function" name="delete" signature="(o)" />
        <scope doc="Deletes the given object from the set and returns self. If&#xA;the object is not in the set, returns nil." ilk="function" name="delete?" signature="(o)" />
        <scope doc="Deletes every element of the set for which block evaluates&#xA;to true, and returns self." ilk="function" name="delete_if" signature="() {|o| ...}" />
        <scope doc="Alias for #-" ilk="function" name="difference" signature="(enum)" />
        <scope doc="Divides the set into a set of subsets according to the&#xA;commonality defined by the given block." ilk="function" name="divide" signature="(&amp;func)" />
        <scope doc="Calls the given block once for each element in the set,&#xA;passing the element as parameter." ilk="function" name="each" signature="() {|o| ...}" />
        <scope doc="Returns true if the set contains no elements." ilk="function" name="empty?" signature="()" />
        <scope doc="Returns a new set that is a copy of the set, flattening each&#xA;containing set recursively." ilk="function" name="flatten" signature="()" />
        <scope doc="Equivalent to Set#flatten, but replaces the receiver with&#xA;the result in place. Returns nil if no modifications were&#xA;made." ilk="function" name="flatten!" signature="()" />
        <scope ilk="function" name="flatten_merge" signature="(set, seen = Set.new)" />
        <scope doc="Returns true if the set contains the given object." ilk="function" name="include?" signature="(o)" />
        <scope doc="Copy internal hash." ilk="function" name="initialize_copy" signature="(orig)" />
        <scope doc="Returns a string containing a human-readable representation&#xA;of the set." ilk="function" name="inspect" signature="()" />
        <scope doc="Alias for #&amp;" ilk="function" name="intersection" signature="(enum)" />
        <scope doc="Alias for #size" ilk="function" name="length" signature="()" />
        <scope doc="Alias for #collect!" ilk="function" name="map!" signature="()" />
        <scope doc="Alias for #include?" ilk="function" name="member?" signature="(o)" />
        <scope doc="Merges the elements of the given enumerable object to the&#xA;set and returns self." ilk="function" name="merge" signature="(enum)" />
        <scope doc="Returns true if the set is a proper subset of the given set." ilk="function" name="proper_subset?" signature="(set)" />
        <scope doc="Returns true if the set is a proper superset of the given&#xA;set." ilk="function" name="proper_superset?" signature="(set)" />
        <scope doc="Equivalent to Set#delete_if, but returns nil if no changes&#xA;were made." ilk="function" name="reject!" signature="() {|o| ...}" />
        <scope doc="Replaces the contents of the set with the contents of the&#xA;given enumerable object and returns self." ilk="function" name="replace" signature="(enum)" />
        <scope doc="Returns the number of elements." ilk="function" name="size" signature="()" />
        <scope doc="Returns true if the set is a subset of the given set." ilk="function" name="subset?" signature="(set)" />
        <scope doc="Deletes every element that appears in the given enumerable&#xA;object and returns self." ilk="function" name="subtract" signature="(enum)" />
        <scope doc="Returns true if the set is a superset of the given set." ilk="function" name="superset?" signature="(set)" />
        <scope doc="Converts the set to an array. The order of elements is&#xA;uncertain." ilk="function" name="to_a" signature="()" />
        <scope doc="Alias for #|" ilk="function" name="union" signature="(enum)" />
        <scope doc="Returns a new set built by merging the set and the elements&#xA;of the given enumerable object." ilk="function" name="|" signature="(enum)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="scanf">
      <scope doc="scanf for Ruby" ilk="namespace" line="302" lineend="558" name="Scanf">
        <scope classrefs="Object" ilk="class" line="304" lineend="486" name="FormatSpecifier">
          <scope ilk="function" line="306" lineend="306" name="re_string" />
          <scope ilk="function" line="306" lineend="306" name="matched_string" />
          <scope ilk="function" line="306" lineend="306" name="conversion" />
          <scope ilk="function" line="306" lineend="306" name="matched" />
          <scope ilk="function" line="310" name="skip" signature="skip" />
          <scope ilk="function" line="312" name="extract_float" signature="extract_float(s)" />
          <scope ilk="function" line="313" name="extract_decimal" signature="extract_decimal(s)" />
          <scope ilk="function" line="314" name="extract_hex" signature="extract_hex(s)" />
          <scope ilk="function" line="315" name="extract_octal" signature="extract_octal(s)" />
          <scope ilk="function" line="316" name="extract_integer" signature="extract_integer(s)" />
          <scope ilk="function" line="317" name="extract_plain" signature="extract_plain(s)" />
          <scope ilk="function" line="319" name="nil_proc" signature="nil_proc(s)" />
          <scope ilk="function" line="323" lineend="325" name="to_s" signature="to_s" />
          <scope ilk="function" line="327" lineend="329" name="count_space?" signature="count_space?" />
          <scope attributes="__ctor__" ilk="function" line="331" lineend="449" name="initialize" signature="initialize(str)" />
          <scope ilk="function" line="451" lineend="453" name="to_re" signature="to_re" />
          <scope ilk="function" line="455" lineend="466" name="match" signature="match(str)" />
          <scope ilk="function" line="468" lineend="470" name="letter" signature="letter" />
          <scope ilk="function" line="472" lineend="475" name="width" signature="width" />
          <scope ilk="function" line="477" lineend="484" name="mid_match?" signature="mid_match?" />
        </scope>
        <scope classrefs="Object" ilk="class" line="488" lineend="557" name="FormatString">
          <scope ilk="function" line="490" lineend="490" name="string_left" />
          <scope ilk="function" line="490" lineend="490" name="last_spec_tried" />
          <scope ilk="function" line="491" lineend="491" name="last_match_tried" />
          <scope ilk="function" line="491" lineend="491" name="matched_count" />
          <scope ilk="function" line="491" lineend="491" name="space" />
          <scope attributes="__ctor__" doc="or miscellaneous characters" ilk="function" line="514" lineend="521" name="initialize" signature="initialize(str)" />
          <scope ilk="function" line="523" lineend="525" name="to_s" signature="to_s" />
          <scope ilk="function" line="527" lineend="529" name="prune" signature="prune(n=matched_count)" />
          <scope ilk="function" line="531" lineend="533" name="spec_count" signature="spec_count" />
          <scope ilk="function" line="535" lineend="537" name="last_spec" signature="last_spec" />
          <scope ilk="function" line="539" lineend="556" name="match" signature="match(str)" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="560" lineend="666" name="IO">
        <scope doc="The trick here is doing a match where you grab one *line* of&#xA;input at a time." ilk="function" line="590" lineend="640" name="scanf" signature="scanf(str,&amp;b)" />
        <scope ilk="function" line="644" lineend="651" name="soak_up_spaces" signature="soak_up_spaces" />
        <scope ilk="function" line="653" lineend="665" name="block_scanf" signature="block_scanf(str)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="668" lineend="695" name="String">
        <scope ilk="function" line="670" lineend="682" name="scanf" signature="scanf(fstr,&amp;b)" />
        <scope ilk="function" line="684" lineend="694" name="block_scanf" signature="block_scanf(fstr,&amp;b)" />
      </scope>
      <scope ilk="namespace" line="697" lineend="702" name="Kernel">
        <scope ilk="function" line="699" lineend="701" name="scanf" signature="scanf(fs,&amp;b)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/topublic">
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="5" lineend="8" name="RUNIT">
        <scope ilk="namespace" line="6" lineend="7" name="ToPublic" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/testsuite">
      <import line="5" module="test/unit/testsuite" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="26" name="RUNIT">
        <scope classrefs="Test::Unit::" ilk="class" line="8" lineend="25" name="TestSuite">
          <scope ilk="function" line="9" lineend="11" name="add_test" signature="add_test(*args)" />
          <scope ilk="function" line="13" lineend="15" name="add" signature="add(*args)" />
          <scope ilk="function" line="17" lineend="19" name="count_test_cases" signature="count_test_cases" />
          <scope ilk="function" line="21" lineend="24" name="run" signature="run(result, &amp;progress_block)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/testresult">
      <import line="5" module="test/unit/testresult" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="44" name="RUNIT">
        <scope classrefs="Test::Unit::" ilk="class" line="8" lineend="43" name="TestResult">
          <scope ilk="function" line="9" lineend="9" name="errors" />
          <scope ilk="function" line="9" lineend="9" name="failures" />
          <scope ilk="function" line="10" lineend="12" name="succeed?" signature="succeed?" />
          <scope ilk="function" line="13" lineend="15" name="failure_size" signature="failure_size" />
          <scope ilk="function" line="16" lineend="18" name="run_asserts" signature="run_asserts" />
          <scope ilk="function" line="19" lineend="21" name="error_size" signature="error_size" />
          <scope ilk="function" line="22" lineend="24" name="run_tests" signature="run_tests" />
          <scope ilk="function" line="25" lineend="33" name="add_failure" signature="add_failure(failure)">
            <scope ilk="function" line="26" lineend="28" name="failure.at" signature="failure.at" />
            <scope ilk="function" line="29" lineend="31" name="failure.err" signature="failure.err" />
          </scope>
          <scope ilk="function" line="34" lineend="42" name="add_error" signature="add_error(error)">
            <scope ilk="function" line="35" lineend="37" name="error.at" signature="error.at" />
            <scope ilk="function" line="38" lineend="40" name="error.err" signature="error.err" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/testcase">
      <import line="5" module="runit/testresult" symbol="*" />
      <import line="6" module="runit/testsuite" symbol="*" />
      <import line="7" module="runit/assert" symbol="*" />
      <import line="8" module="runit/error" symbol="*" />
      <import line="9" module="test/unit/testcase" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="11" lineend="45" name="RUNIT">
        <scope classrefs="Test::Unit::" ilk="class" line="12" lineend="44" name="TestCase">
          <scope attributes="__classmethod__" ilk="function" line="15" lineend="26" name="suite" signature="self.suite" />
          <scope attributes="__ctor__" ilk="function" line="28" lineend="30" name="initialize" signature="initialize(test_name, suite_name=self.class.name)" />
          <scope ilk="function" line="32" lineend="34" name="assert_equals" signature="assert_equals(*args)" />
          <scope ilk="function" line="36" lineend="38" name="name" signature="name" />
          <scope ilk="function" line="40" lineend="43" name="run" signature="run(result, &amp;progress_block)" />
          <import symbol="RUNIT::Assert" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/error">
      <import line="5" module="test/unit/assertionfailederror.rb" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="7" lineend="9" name="RUNIT" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/cui/testrunner">
      <import line="5" module="test/unit/ui/console/testrunner" symbol="*" />
      <import line="6" module="runit/testresult" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="8" lineend="51" name="RUNIT">
        <scope ilk="namespace" line="9" lineend="50" name="CUI">
          <scope classrefs="Test::Unit::" ilk="class" line="10" lineend="49" name="TestRunner">
            <scope attributes="__classmethod__" ilk="function" line="13" lineend="15" name="run" signature="self.run(suite)" />
            <scope attributes="__ctor__" ilk="function" line="17" lineend="19" name="initialize" signature="initialize" />
            <scope ilk="function" line="21" lineend="28" name="run" signature="run(suite, quiet_mode=@@quiet_mode)">
              <scope ilk="function" line="23" lineend="25" name="@suite" signature="@suite." />
            </scope>
            <scope ilk="function" line="30" lineend="40" name="create_mediator" signature="create_mediator(suite)">
              <scope classrefs="Object" ilk="class" line="32" lineend="37" name="mediator">
                <scope ilk="function" line="33" lineend="33" name="result_delegate=" />
                <scope ilk="function" line="34" lineend="36" name="create_result" signature="create_result" />
              </scope>
            </scope>
            <scope ilk="function" line="42" lineend="44" name="create_result" signature="create_result" />
            <scope attributes="__classmethod__" ilk="function" line="46" lineend="48" name="quiet_mode=" signature="self.quiet_mode=(boolean)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="runit/assert">
      <import line="5" module="test/unit/assertions" symbol="*" />
      <import line="6" module="runit/error" symbol="*" />
      <scope doc="Author:: Nathaniel Talbott." ilk="namespace" line="8" lineend="73" name="RUNIT">
        <scope ilk="namespace" line="9" lineend="72" name="Assert">
          <scope ilk="function" line="12" lineend="13" name="setup_assert" signature="setup_assert" />
          <scope ilk="function" line="15" lineend="17" name="assert_no_exception" signature="assert_no_exception(*args, &amp;block)" />
          <scope doc="To deal with the fact that RubyUnit does not check that the&#xA;regular expression is, indeed, a regular expression, if it&#xA;is not, we do our own assertion using the same semantics as&#xA;RubyUnit" ilk="function" line="23" lineend="31" name="assert_match" signature="assert_match(actual_string, expected_re, message=&quot;&quot;)" />
          <scope ilk="function" line="33" lineend="35" name="assert_not_nil" signature="assert_not_nil(actual, message=&quot;&quot;)" />
          <scope ilk="function" line="37" lineend="39" name="assert_not_match" signature="assert_not_match(actual_string, expected_re, message=&quot;&quot;)" />
          <scope ilk="function" line="41" lineend="43" name="assert_matches" signature="assert_matches(*args)" />
          <scope ilk="function" line="45" lineend="47" name="assert_fail" signature="assert_fail(message=&quot;&quot;)" />
          <scope ilk="function" line="49" lineend="51" name="assert_equal_float" signature="assert_equal_float(expected, actual, delta, message=&quot;&quot;)" />
          <scope ilk="function" line="53" lineend="55" name="assert_send" signature="assert_send(object, method, *args)" />
          <scope ilk="function" line="57" lineend="59" name="assert_exception" signature="assert_exception(exception, message=&quot;&quot;, &amp;block)" />
          <scope ilk="function" line="61" lineend="67" name="assert_respond_to" signature="assert_respond_to(method, object, message=&quot;&quot;)" />
          <scope ilk="function" line="69" lineend="71" name="called_internally?" signature="called_internally?" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rubyunit">
      <import line="5" module="runit/testcase" symbol="*" />
      <import line="6" module="test/unit" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss">
      <import line="7" module="rss/1.0" symbol="*" />
      <import line="8" module="rss/2.0" symbol="*" />
      <import line="9" module="rss/content" symbol="*" />
      <import line="10" module="rss/dublincore" symbol="*" />
      <import line="11" module="rss/image" symbol="*" />
      <import line="12" module="rss/syndication" symbol="*" />
      <import line="14" module="rss/trackback" symbol="*" />
      <import line="16" module="rss/maker" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/xmlscanner">
      <import line="1" module="xmlscan/scanner" symbol="*" />
      <scope ilk="namespace" line="3" lineend="102" name="RSS">
        <scope classrefs="BaseParser" ilk="class" line="5" lineend="20" name="XMLScanParser">
          <scope ilk="function" line="8" lineend="10" name="listener" signature="listener" />
          <scope ilk="function" line="12" lineend="18" name="_parse" signature="_parse" />
        </scope>
        <scope classrefs="BaseListener" ilk="class" line="22" lineend="100" name="XMLScanListener">
          <scope ilk="function" line="35" lineend="37" name="on_xmldecl_version" signature="on_xmldecl_version(str)" />
          <scope ilk="function" line="39" lineend="41" name="on_xmldecl_encoding" signature="on_xmldecl_encoding(str)" />
          <scope ilk="function" line="43" lineend="45" name="on_xmldecl_standalone" signature="on_xmldecl_standalone(str)" />
          <scope ilk="function" line="47" lineend="49" name="on_xmldecl_end" signature="on_xmldecl_end" />
          <scope ilk="function" line="55" lineend="57" name="on_etag" signature="on_etag(name)" />
          <scope ilk="function" line="59" lineend="61" name="on_entityref" signature="on_entityref(ref)" />
          <scope ilk="function" line="63" lineend="65" name="on_charref" signature="on_charref(code)" />
          <scope ilk="function" line="69" lineend="71" name="on_stag" signature="on_stag(name)" />
          <scope ilk="function" line="73" lineend="75" name="on_attribute" signature="on_attribute(name)" />
          <scope ilk="function" line="77" lineend="79" name="on_attr_value" signature="on_attr_value(str)" />
          <scope ilk="function" line="81" lineend="83" name="on_attr_entityref" signature="on_attr_entityref(ref)" />
          <scope ilk="function" line="85" lineend="87" name="on_attr_charref" signature="on_attr_charref(code)" />
          <scope ilk="function" line="91" lineend="93" name="on_stag_end" signature="on_stag_end(name)" />
          <scope ilk="function" line="95" lineend="98" name="on_stag_end_empty" signature="on_stag_end_empty(name)" />
          <import symbol="XMLScan::Visitor" />
          <import symbol="ListenerMixin" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/xmlparser">
      <import line="2" module="xml/parser" symbol="*" />
      <import line="4" module="xmlparser" symbol="*" />
      <import line="8" module="xml/encoding-ja" symbol="*" />
      <import line="10" module="xmlencoding-ja" symbol="*" />
      <scope ilk="namespace" line="12" lineend="16" name="XMLEncoding_ja">
        <scope classrefs="Object" ilk="class" line="13" lineend="15" name="SJISHandler">
          <import symbol="Kconv" />
        </scope>
      </scope>
      <scope ilk="namespace" line="20" lineend="26" name="XML">
        <scope classrefs="Object" ilk="class" line="21" lineend="25" name="Parser" />
      </scope>
      <scope ilk="namespace" line="28" lineend="91" name="RSS">
        <scope classrefs="::XML::Parser" ilk="class" line="30" lineend="58" name="REXMLLikeXMLParser">
          <scope ilk="function" line="34" lineend="36" name="listener=" signature="listener=(listener)" />
          <scope ilk="function" line="38" lineend="40" name="startElement" signature="startElement(name, attrs)" />
          <scope ilk="function" line="42" lineend="44" name="endElement" signature="endElement(name)" />
          <scope ilk="function" line="46" lineend="48" name="character" signature="character(data)" />
          <scope ilk="function" line="50" lineend="52" name="xmlDecl" signature="xmlDecl(version, encoding, standalone)" />
          <scope ilk="function" line="54" lineend="56" name="processingInstruction" signature="processingInstruction(target, content)" />
          <import symbol="::XML::Encoding_ja" />
        </scope>
        <scope classrefs="BaseParser" ilk="class" line="60" lineend="77" name="XMLParserParser">
          <scope ilk="function" line="63" lineend="65" name="listener" signature="listener" />
          <scope ilk="function" line="67" lineend="75" name="_parse" signature="_parse" />
        </scope>
        <scope classrefs="BaseListener" ilk="class" line="79" lineend="89" name="XMLParserListener">
          <scope ilk="function" line="83" lineend="87" name="xmldecl" signature="xmldecl(version, encoding, standalone)" />
          <import symbol="ListenerMixin" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/xml-stylesheet">
      <import line="1" module="rss/utils" symbol="*" />
      <scope ilk="namespace" line="3" lineend="101" name="RSS">
        <scope ilk="namespace" line="5" lineend="22" name="XMLStyleSheetMixin">
          <scope attributes="__ctor__" ilk="function" line="7" lineend="10" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="13" lineend="21" name="xml_stylesheet_pi" signature="xml_stylesheet_pi" />
        </scope>
        <scope classrefs="Object" ilk="class" line="24" lineend="100" name="XMLStyleSheet">
          <scope ilk="function" line="36" lineend="36" name="do_validate" />
          <scope ilk="function" line="36" lineend="36" name="do_validate=" />
          <scope attributes="__ctor__" ilk="function" line="37" lineend="49" name="initialize" signature="initialize(*attrs)" />
          <scope ilk="function" line="51" lineend="63" name="to_s" signature="to_s" />
          <scope ilk="function" line="66" lineend="72" name="href=" signature="href=(value)" />
          <scope ilk="function" line="75" lineend="85" name="alternate=" signature="alternate=(value)" />
          <scope ilk="function" line="87" lineend="92" name="setup_maker" signature="setup_maker(maker)" />
          <scope ilk="function" line="95" lineend="98" name="guess_type" signature="guess_type(filename)" />
          <import symbol="Utils" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/utils">
      <scope ilk="namespace" line="1" lineend="31" name="RSS">
        <scope ilk="namespace" line="3" lineend="29" name="Utils">
          <scope ilk="function" line="6" lineend="10" name="to_class_name" signature="to_class_name(name)" />
          <scope ilk="function" line="12" lineend="15" name="get_file_and_line_from_caller" signature="get_file_and_line_from_caller(i=0)" />
          <scope ilk="function" line="17" lineend="19" name="html_escape" signature="html_escape(s)" />
          <scope ilk="function" line="22" lineend="28" name="new_with_value_if_need" signature="new_with_value_if_need(klass, value)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/trackback">
      <import line="1" module="rss/1.0" symbol="*" />
      <import line="2" module="rss/2.0" symbol="*" />
      <scope ilk="namespace" line="4" lineend="290" name="RSS">
        <scope ilk="namespace" line="12" lineend="34" name="TrackBackUtils">
          <scope ilk="function" line="14" lineend="33" name="trackback_validate" signature="trackback_validate(tags)" />
        </scope>
        <scope ilk="namespace" line="36" lineend="102" name="BaseTrackBackModel">
          <scope ilk="function" line="37" lineend="101" name="append_features" signature="append_features(klass)" />
        </scope>
        <scope ilk="namespace" line="104" lineend="211" name="TrackBackModel10">
          <scope classrefs="Element" ilk="class" line="108" lineend="154" name="Ping">
            <scope classrefs="Object" ilk="class" line="111" lineend="121" name="self">
              <scope ilk="function" line="113" lineend="115" name="required_prefix" signature="required_prefix" />
              <scope ilk="function" line="117" lineend="119" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="132" lineend="135" name="initialize" signature="initialize(resource=nil)" />
            <scope ilk="function" line="137" lineend="139" name="full_name" signature="full_name" />
            <scope ilk="function" line="141" lineend="145" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="148" lineend="152" name="_attrs" signature="_attrs" />
            <import symbol="RSS10" />
          </scope>
          <scope classrefs="Element" ilk="class" line="156" lineend="210" name="About">
            <scope classrefs="Object" ilk="class" line="159" lineend="169" name="self">
              <scope ilk="function" line="161" lineend="163" name="required_prefix" signature="required_prefix" />
              <scope ilk="function" line="165" lineend="167" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="180" lineend="183" name="initialize" signature="initialize(resource=nil)" />
            <scope ilk="function" line="185" lineend="187" name="full_name" signature="full_name" />
            <scope ilk="function" line="189" lineend="193" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="196" lineend="200" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="202" lineend="204" name="maker_target" signature="maker_target(abouts)" />
            <scope ilk="function" line="206" lineend="208" name="setup_maker_attributes" signature="setup_maker_attributes(about)" />
            <import symbol="RSS10" />
          </scope>
        </scope>
        <scope ilk="namespace" line="213" lineend="278" name="TrackBackModel20">
          <scope classrefs="Element" ilk="class" line="217" lineend="246" name="Ping">
            <scope classrefs="Object" ilk="class" line="222" lineend="232" name="self">
              <scope ilk="function" line="224" lineend="226" name="required_prefix" signature="required_prefix" />
              <scope ilk="function" line="228" lineend="230" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="237" lineend="240" name="initialize" signature="initialize(content=nil)" />
            <scope ilk="function" line="242" lineend="244" name="full_name" signature="full_name" />
            <import symbol="RSS09" />
          </scope>
          <scope classrefs="Element" ilk="class" line="248" lineend="277" name="About">
            <scope classrefs="Object" ilk="class" line="253" lineend="263" name="self">
              <scope ilk="function" line="255" lineend="257" name="required_prefix" signature="required_prefix" />
              <scope ilk="function" line="259" lineend="261" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="268" lineend="271" name="initialize" signature="initialize(content=nil)" />
            <scope ilk="function" line="273" lineend="275" name="full_name" signature="full_name" />
            <import symbol="RSS09" />
          </scope>
        </scope>
        <scope classrefs="Object" ilk="class" line="280" lineend="282" name="RDF">
          <scope classrefs="Object" ilk="class" line="281" lineend="281" name="Item">
            <import symbol="TrackBackModel10" />
          </scope>
        </scope>
        <scope classrefs="Object" ilk="class" line="284" lineend="288" name="Rss">
          <scope classrefs="Object" ilk="class" line="285" lineend="287" name="Channel">
            <scope classrefs="Object" ilk="class" line="286" lineend="286" name="Item">
              <import symbol="TrackBackModel20" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/taxonomy">
      <import line="3" module="rss/1.0" symbol="*" />
      <scope doc="Experimental" ilk="namespace" line="5" lineend="32" name="RSS">
        <scope ilk="namespace" line="20" lineend="25" name="TaxonomyModel" />
        <scope classrefs="Object" ilk="class" line="27" lineend="27" name="Channel" />
        <scope classrefs="Object" ilk="class" line="28" lineend="28" name="Item" />
        <scope classrefs="Object" ilk="class" line="29" lineend="29" name="Image" />
        <scope classrefs="Object" ilk="class" line="30" lineend="30" name="TextInput" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/syndication">
      <import line="1" module="rss/1.0" symbol="*" />
      <scope ilk="namespace" line="3" lineend="86" name="RSS">
        <scope ilk="namespace" line="10" lineend="73" name="SyndicationModel">
          <scope attributes="__classmethod__" ilk="function" line="16" lineend="41" name="append_features" signature="self.append_features(klass)" />
          <scope ilk="function" line="43" lineend="55" name="sy_validate" signature="sy_validate(tags)" />
          <scope ilk="function" line="59" lineend="63" name="validate_sy_updatePeriod" signature="validate_sy_updatePeriod(value)" />
          <scope ilk="function" line="66" lineend="71" name="validate_sy_updateFrequency" signature="validate_sy_updateFrequency(value)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="75" lineend="77" name="RDF">
          <scope classrefs="Object" ilk="class" line="76" lineend="76" name="Channel">
            <import symbol="SyndicationModel" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/rss">
      <import line="1" module="time" symbol="*" />
      <import line="55" module="English" symbol="*" />
      <import line="56" module="rss/utils" symbol="*" />
      <import line="57" module="rss/converter" symbol="*" />
      <import line="58" module="rss/xml-stylesheet" symbol="*" />
      <scope classrefs="Object" ilk="class" line="3" lineend="31" name="Time">
        <scope classrefs="Object" ilk="class" line="4" lineend="26" name="self">
          <scope ilk="function" line="6" lineend="24" name="w3cdtf" signature="w3cdtf(date)" />
        </scope>
      </scope>
      <scope ilk="namespace" line="33" lineend="45" name="Enumerable">
        <scope ilk="function" line="35" lineend="43" name="sort_by" signature="sort_by" />
      </scope>
      <scope classrefs="Object" ilk="class" line="47" lineend="53" name="Hash">
        <scope ilk="function" line="49" lineend="51" name="merge" signature="merge(other)" />
      </scope>
      <scope ilk="namespace" line="60" lineend="903" name="RSS">
        <scope classrefs="StandardError" ilk="class" line="68" lineend="68" name="Error" />
        <scope classrefs="Error" ilk="class" line="70" lineend="75" name="OverlappedPrefixError">
          <scope ilk="function" line="71" lineend="71" name="prefix" />
          <scope attributes="__ctor__" ilk="function" line="72" lineend="74" name="initialize" signature="initialize(prefix)" />
        </scope>
        <scope classrefs="Error" ilk="class" line="77" lineend="77" name="InvalidRSSError" />
        <scope classrefs="InvalidRSSError" ilk="class" line="79" lineend="85" name="MissingTagError">
          <scope ilk="function" line="80" lineend="80" name="tag" />
          <scope ilk="function" line="80" lineend="80" name="parent" />
          <scope attributes="__ctor__" ilk="function" line="81" lineend="84" name="initialize" signature="initialize(tag, parent)" />
        </scope>
        <scope classrefs="InvalidRSSError" ilk="class" line="87" lineend="93" name="TooMuchTagError">
          <scope ilk="function" line="88" lineend="88" name="tag" />
          <scope ilk="function" line="88" lineend="88" name="parent" />
          <scope attributes="__ctor__" ilk="function" line="89" lineend="92" name="initialize" signature="initialize(tag, parent)" />
        </scope>
        <scope classrefs="InvalidRSSError" ilk="class" line="95" lineend="101" name="MissingAttributeError">
          <scope ilk="function" line="96" lineend="96" name="tag" />
          <scope ilk="function" line="96" lineend="96" name="attribute" />
          <scope attributes="__ctor__" ilk="function" line="97" lineend="100" name="initialize" signature="initialize(tag, attribute)" />
        </scope>
        <scope classrefs="InvalidRSSError" ilk="class" line="103" lineend="109" name="UnknownTagError">
          <scope ilk="function" line="104" lineend="104" name="tag" />
          <scope ilk="function" line="104" lineend="104" name="uri" />
          <scope attributes="__ctor__" ilk="function" line="105" lineend="108" name="initialize" signature="initialize(tag, uri)" />
        </scope>
        <scope classrefs="InvalidRSSError" ilk="class" line="111" lineend="117" name="NotExceptedTagError">
          <scope ilk="function" line="112" lineend="112" name="tag" />
          <scope ilk="function" line="112" lineend="112" name="parent" />
          <scope attributes="__ctor__" ilk="function" line="113" lineend="116" name="initialize" signature="initialize(tag, parent)" />
        </scope>
        <scope classrefs="InvalidRSSError" ilk="class" line="119" lineend="125" name="NotAvailableValueError">
          <scope ilk="function" line="120" lineend="120" name="tag" />
          <scope ilk="function" line="120" lineend="120" name="value" />
          <scope attributes="__ctor__" ilk="function" line="121" lineend="124" name="initialize" signature="initialize(tag, value)" />
        </scope>
        <scope classrefs="Error" ilk="class" line="127" lineend="134" name="UnknownConversionMethodError">
          <scope ilk="function" line="128" lineend="128" name="to" />
          <scope ilk="function" line="128" lineend="128" name="from" />
          <scope attributes="__ctor__" ilk="function" line="129" lineend="133" name="initialize" signature="initialize(to, from)" />
        </scope>
        <scope classrefs="Error" doc="for backward compatibility" ilk="class" line="138" lineend="146" name="ConversionError">
          <scope ilk="function" line="139" lineend="139" name="string" />
          <scope ilk="function" line="139" lineend="139" name="to" />
          <scope ilk="function" line="139" lineend="139" name="from" />
          <scope attributes="__ctor__" ilk="function" line="140" lineend="145" name="initialize" signature="initialize(string, to, from)" />
        </scope>
        <scope classrefs="Error" ilk="class" line="148" lineend="155" name="NotSetError">
          <scope ilk="function" line="149" lineend="149" name="name" />
          <scope ilk="function" line="149" lineend="149" name="variables" />
          <scope attributes="__ctor__" ilk="function" line="150" lineend="154" name="initialize" signature="initialize(name, variables)" />
        </scope>
        <scope ilk="namespace" line="157" lineend="354" name="BaseModel">
          <scope ilk="function" line="161" lineend="174" name="install_have_child_element" signature="install_have_child_element(name)" />
          <scope ilk="function" line="177" lineend="193" name="install_have_children_element" signature="install_have_children_element(name, plural_name=nil)" />
          <scope ilk="function" line="195" lineend="218" name="install_text_element" signature="install_text_element(name)" />
          <scope ilk="function" line="220" lineend="246" name="install_date_element" signature="install_date_element(name, type, disp_name=name)" />
          <scope ilk="function" line="249" lineend="257" name="install_element" signature="install_element(name, postfix=&quot;&quot;)" />
          <scope ilk="function" line="259" lineend="272" name="convert_attr_reader" signature="convert_attr_reader(*attrs)" />
          <scope ilk="function" line="274" lineend="307" name="date_writer" signature="date_writer(name, type, disp_name=name)" />
          <scope ilk="function" line="309" lineend="336" name="def_children_accessor" signature="def_children_accessor(accessor_name, plural_name)" />
          <scope ilk="function" line="338" lineend="352" name="def_content_only_to_s" signature="def_content_only_to_s" />
        </scope>
        <scope classrefs="Object" ilk="class" line="356" lineend="835" name="Element">
          <scope classrefs="Object" ilk="class" line="370" lineend="495" name="self">
            <scope ilk="function" line="372" lineend="374" name="must_call_validators" signature="must_call_validators" />
            <scope ilk="function" line="375" lineend="377" name="model" signature="model" />
            <scope ilk="function" line="378" lineend="380" name="get_attributes" signature="get_attributes" />
            <scope ilk="function" line="381" lineend="383" name="have_children_elements" signature="have_children_elements" />
            <scope ilk="function" line="384" lineend="386" name="need_initialize_variables" signature="need_initialize_variables" />
            <scope ilk="function" line="387" lineend="389" name="plural_forms" signature="plural_forms" />
            <scope ilk="function" line="392" lineend="470" name="inherited" signature="inherited(klass)" />
            <scope ilk="function" line="472" lineend="474" name="required_prefix" signature="required_prefix" />
            <scope ilk="function" line="476" lineend="478" name="required_uri" signature="required_uri" />
            <scope ilk="function" line="480" lineend="485" name="install_ns" signature="install_ns(prefix, uri)" />
            <scope ilk="function" line="487" lineend="489" name="tag_name" signature="tag_name" />
            <scope ilk="function" line="491" lineend="493" name="indent_size" signature="indent_size" />
          </scope>
          <scope ilk="function" line="497" lineend="497" name="do_validate" />
          <scope ilk="function" line="497" lineend="497" name="do_validate=" />
          <scope attributes="__ctor__" ilk="function" line="499" lineend="503" name="initialize" signature="initialize(do_validate=true)" />
          <scope ilk="function" line="505" lineend="507" name="tag_name" signature="tag_name" />
          <scope ilk="function" line="509" lineend="511" name="full_name" signature="full_name" />
          <scope ilk="function" line="513" lineend="515" name="indent_size" signature="indent_size" />
          <scope ilk="function" line="517" lineend="526" name="converter=" signature="converter=(converter)" />
          <scope ilk="function" line="528" lineend="534" name="convert" signature="convert(value)" />
          <scope ilk="function" line="536" lineend="539" name="validate" signature="validate" />
          <scope ilk="function" line="541" lineend="544" name="validate_for_stream" signature="validate_for_stream(tags)" />
          <scope ilk="function" line="546" lineend="553" name="setup_maker" signature="setup_maker(maker)" />
          <scope ilk="function" line="556" lineend="562" name="initialize_variables" signature="initialize_variables" />
          <scope ilk="function" line="564" lineend="568" name="initialize_have_children_elements" signature="initialize_have_children_elements" />
          <scope ilk="function" line="570" lineend="600" name="tag" signature="tag(indent, additional_attrs=[], &amp;block)" />
          <scope ilk="function" line="602" lineend="610" name="make_start_tag" signature="make_start_tag(indent, next_indent, attrs)" />
          <scope ilk="function" line="612" lineend="620" name="collect_attrs" signature="collect_attrs" />
          <scope ilk="function" line="622" lineend="624" name="tag_name_with_prefix" signature="tag_name_with_prefix(prefix)" />
          <scope ilk="function" line="626" lineend="628" name="calc_indent" signature="calc_indent" />
          <scope ilk="function" line="630" lineend="632" name="maker_target" signature="maker_target(maker)" />
          <scope ilk="function" line="634" lineend="635" name="setup_maker_attributes" signature="setup_maker_attributes(target)" />
          <scope ilk="function" line="637" lineend="650" name="setup_maker_element" signature="setup_maker_element(target)" />
          <scope ilk="function" line="652" lineend="654" name="not_need_to_call_setup_maker_variables" signature="not_need_to_call_setup_maker_variables" />
          <scope ilk="function" line="656" lineend="666" name="setup_maker_elements" signature="setup_maker_elements(parent)" />
          <scope ilk="function" line="668" lineend="679" name="set_next_element" signature="set_next_element(prefix, tag_name, next_element)" />
          <scope doc="not String class children." ilk="function" line="682" lineend="684" name="children" signature="children" />
          <scope doc="default #validate() argument." ilk="function" line="687" lineend="689" name="_tags" signature="_tags" />
          <scope ilk="function" line="691" lineend="693" name="_attrs" signature="_attrs" />
          <scope ilk="function" line="695" lineend="713" name="__validate" signature="__validate(tags=_tags, recursive=true)" />
          <scope ilk="function" line="715" lineend="721" name="validate_attribute" signature="validate_attribute" />
          <scope ilk="function" line="723" lineend="733" name="other_element" signature="other_element(need_convert, indent=&apos;&apos;)" />
          <scope ilk="function" line="735" lineend="824" name="_validate" signature="_validate(tags, model=self.class.model)" />
          <scope ilk="function" line="826" lineend="833" name="tag_filter" signature="tag_filter(tags)" />
          <import symbol="Utils" />
        </scope>
        <scope ilk="namespace" line="837" lineend="901" name="RootElementMixin">
          <scope attributes="__ctor__" ilk="function" line="843" lineend="850" name="initialize" signature="initialize(rss_version, version=nil, encoding=nil, standalone=nil)" />
          <scope ilk="function" line="852" lineend="855" name="output_encoding=" signature="output_encoding=(enc)" />
          <scope ilk="function" line="857" lineend="867" name="setup_maker" signature="setup_maker(maker)" />
          <scope ilk="function" line="870" lineend="874" name="tag" signature="tag(indent, attrs, &amp;block)" />
          <scope ilk="function" line="876" lineend="884" name="xmldecl" signature="xmldecl" />
          <scope ilk="function" line="886" lineend="891" name="ns_declarations" signature="ns_declarations" />
          <scope ilk="function" line="893" lineend="900" name="setup_maker_elements" signature="setup_maker_elements(maker)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/rexmlparser">
      <import line="1" module="rexml/document" symbol="*" />
      <import line="2" module="rexml/streamlistener" symbol="*" />
      <scope ilk="namespace" line="9" lineend="47" name="RSS">
        <scope classrefs="BaseParser" ilk="class" line="11" lineend="31" name="REXMLParser">
          <scope ilk="function" line="15" lineend="17" name="listener" signature="listener" />
          <scope ilk="function" line="19" lineend="29" name="_parse" signature="_parse" />
        </scope>
        <scope classrefs="BaseListener" ilk="class" line="33" lineend="45" name="REXMLListener">
          <scope ilk="function" line="38" lineend="42" name="xmldecl" signature="xmldecl(version, encoding, standalone)" />
          <import symbol="REXML::StreamListener" />
          <import symbol="ListenerMixin" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/parser">
      <import line="1" module="forwardable" symbol="*" />
      <import line="2" module="open-uri" symbol="*" />
      <import line="4" module="rss/rss" symbol="*" />
      <scope ilk="namespace" line="6" lineend="445" name="RSS">
        <scope classrefs="Error" ilk="class" line="8" lineend="20" name="NotWellFormedError">
          <scope ilk="function" line="9" lineend="9" name="line" />
          <scope ilk="function" line="9" lineend="9" name="element" />
          <scope attributes="__ctor__" ilk="function" line="10" lineend="19" name="initialize" signature="initialize(line=nil, element=nil)" />
        </scope>
        <scope classrefs="Error" ilk="class" line="22" lineend="27" name="XMLParserNotFound">
          <scope attributes="__ctor__" ilk="function" line="23" lineend="26" name="initialize" signature="initialize" />
        </scope>
        <scope classrefs="Error" ilk="class" line="29" lineend="35" name="NotValidXMLParser">
          <scope attributes="__ctor__" ilk="function" line="30" lineend="34" name="initialize" signature="initialize(parser)" />
        </scope>
        <scope classrefs="InvalidRSSError" ilk="class" line="37" lineend="44" name="NSError">
          <scope ilk="function" line="38" lineend="38" name="tag" />
          <scope ilk="function" line="38" lineend="38" name="prefix" />
          <scope ilk="function" line="38" lineend="38" name="uri" />
          <scope attributes="__ctor__" ilk="function" line="39" lineend="43" name="initialize" signature="initialize(tag, prefix, require_uri)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="46" lineend="112" name="Parser">
          <scope classrefs="Object" ilk="class" line="50" lineend="73" name="self">
            <scope ilk="function" line="54" lineend="56" name="default_parser" signature="default_parser" />
            <scope ilk="function" line="58" lineend="64" name="default_parser=" signature="default_parser=(new_value)" />
            <scope ilk="function" line="66" lineend="71" name="parse" signature="parse(rss, do_validate=true, ignore_unknown_element=true, parser_class=default_parser)" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="80" lineend="82" name="initialize" signature="initialize(rss, parser_class=self.class.default_parser)" />
          <scope ilk="function" line="85" lineend="97" name="normalize_rss" signature="normalize_rss(rss)" />
          <scope ilk="function" line="99" lineend="101" name="maybe_xml?" signature="maybe_xml?(source)" />
          <scope ilk="function" line="103" lineend="111" name="to_uri" signature="to_uri(rss)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="114" lineend="148" name="BaseParser">
          <scope attributes="__ctor__" ilk="function" line="116" lineend="119" name="initialize" signature="initialize(rss)" />
          <scope ilk="function" line="121" lineend="123" name="rss" signature="rss" />
          <scope ilk="function" line="125" lineend="127" name="ignore_unknown_element" signature="ignore_unknown_element" />
          <scope ilk="function" line="129" lineend="131" name="ignore_unknown_element=" signature="ignore_unknown_element=(new_value)" />
          <scope ilk="function" line="133" lineend="135" name="do_validate" signature="do_validate" />
          <scope ilk="function" line="137" lineend="139" name="do_validate=" signature="do_validate=(new_value)" />
          <scope ilk="function" line="141" lineend="146" name="parse" signature="parse" />
        </scope>
        <scope classrefs="Object" ilk="class" line="150" lineend="235" name="BaseListener">
          <scope classrefs="Object" ilk="class" line="154" lineend="233" name="self">
            <scope ilk="function" line="160" lineend="163" name="install_setter" signature="install_setter(uri, tag_name, setter)" />
            <scope ilk="function" line="165" lineend="171" name="setter" signature="setter(uri, tag_name)" />
            <scope ilk="function" line="173" lineend="179" name="available_tags" signature="available_tags(uri)" />
            <scope ilk="function" line="181" lineend="184" name="register_uri" signature="register_uri(uri, name)" />
            <scope ilk="function" line="186" lineend="188" name="uri_registered?" signature="uri_registered?(uri, name)" />
            <scope ilk="function" line="190" lineend="193" name="install_class_name" signature="install_class_name(uri, tag_name, class_name)" />
            <scope ilk="function" line="195" lineend="201" name="class_name" signature="class_name(uri, tag_name)" />
            <scope ilk="function" line="203" lineend="206" name="install_get_text_element" signature="install_get_text_element(uri, name, setter)" />
            <scope ilk="function" line="210" lineend="231" name="def_get_text_element" signature="def_get_text_element(uri, name, file, line)" />
          </scope>
        </scope>
        <scope ilk="namespace" line="237" lineend="422" name="ListenerMixin">
          <scope attributes="__ctor__" ilk="function" line="244" lineend="255" name="initialize" signature="initialize" />
          <scope ilk="function" line="257" lineend="259" name="xmldecl" signature="xmldecl(version, encoding, standalone)" />
          <scope ilk="function" line="261" lineend="268" name="instruction" signature="instruction(name, content)" />
          <scope ilk="function" line="270" lineend="292" name="tag_start" signature="tag_start(name, attributes)" />
          <scope ilk="function" line="294" lineend="304" name="tag_end" signature="tag_end(name)" />
          <scope ilk="function" line="306" lineend="308" name="text" signature="text(data)" />
          <scope ilk="function" line="313" lineend="319" name="parse_pi_content" signature="parse_pi_content(content)" />
          <scope ilk="function" line="321" lineend="338" name="start_else_element" signature="start_else_element(local, prefix, attrs, ns)" />
          <scope ilk="function" line="341" lineend="344" name="split_name" signature="split_name(name)" />
          <scope ilk="function" line="346" lineend="354" name="check_ns" signature="check_ns(tag_name, prefix, ns, require_uri)" />
          <scope ilk="function" line="356" lineend="368" name="start_get_text_element" signature="start_get_text_element(tag_name, prefix, ns, required_uri)" />
          <scope ilk="function" line="370" lineend="420" name="start_have_something_element" signature="start_have_something_element(tag_name, prefix, attrs, ns, klass)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker">
      <import line="1" module="rss/rss" symbol="*" />
      <import line="30" module="rss/maker/1.0" symbol="*" />
      <import line="31" module="rss/maker/2.0" symbol="*" />
      <import line="32" module="rss/maker/content" symbol="*" />
      <import line="33" module="rss/maker/dublincore" symbol="*" />
      <import line="34" module="rss/maker/syndication" symbol="*" />
      <import line="35" module="rss/maker/trackback" symbol="*" />
      <import line="36" module="rss/maker/image" symbol="*" />
      <scope ilk="namespace" line="3" lineend="28" name="RSS">
        <scope ilk="namespace" line="5" lineend="26" name="Maker">
          <scope classrefs="Object" ilk="class" line="9" lineend="25" name="self">
            <scope ilk="function" line="10" lineend="12" name="make" signature="make(version, &amp;block)" />
            <scope ilk="function" line="14" lineend="16" name="maker" signature="maker(version)" />
            <scope ilk="function" line="18" lineend="20" name="add_maker" signature="add_maker(version, maker)" />
            <scope ilk="function" line="22" lineend="24" name="filename_to_version" signature="filename_to_version(filename)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/trackback">
      <import line="1" module="rss/trackback" symbol="*" />
      <import line="2" module="rss/maker/1.0" symbol="*" />
      <import line="3" module="rss/maker/2.0" symbol="*" />
      <scope ilk="namespace" line="5" lineend="126" name="RSS">
        <scope ilk="namespace" line="6" lineend="125" name="Maker">
          <scope ilk="namespace" line="7" lineend="72" name="TrackBackModel">
            <scope attributes="__classmethod__" ilk="function" line="8" lineend="36" name="append_features" signature="self.append_features(klass)" />
            <scope classrefs="Object" ilk="class" line="38" lineend="71" name="TrackBackAboutsBase">
              <scope ilk="function" line="43" lineend="47" name="new_about" signature="new_about" />
              <scope ilk="function" line="49" lineend="53" name="to_rss" signature="to_rss(rss, current)" />
              <scope classrefs="Object" ilk="class" line="55" lineend="70" name="AboutBase">
                <scope ilk="function" line="58" lineend="58" name="value" />
                <scope ilk="function" line="58" lineend="58" name="value=" />
                <scope ilk="function" line="66" lineend="68" name="have_required_values?" signature="have_required_values?" />
                <import symbol="Base" />
              </scope>
              <import symbol="Base" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="74" lineend="76" name="ItemsBase">
            <scope classrefs="Object" ilk="class" line="75" lineend="75" name="ItemBase">
              <import symbol="TrackBackModel" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="78" lineend="93" name="RSS10">
            <scope classrefs="Object" ilk="class" line="79" lineend="92" name="Items">
              <scope classrefs="Object" ilk="class" line="80" lineend="91" name="Item">
                <scope classrefs="TrackBackAboutsBase" ilk="class" line="81" lineend="90" name="TrackBackAbouts">
                  <scope classrefs="AboutBase" ilk="class" line="82" lineend="89" name="About">
                    <scope ilk="function" line="83" lineend="88" name="to_rss" signature="to_rss(rss, current)" />
                  </scope>
                </scope>
              </scope>
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="95" lineend="106" name="RSS09">
            <scope classrefs="Object" ilk="class" line="96" lineend="105" name="Items">
              <scope classrefs="Object" ilk="class" line="97" lineend="104" name="Item">
                <scope classrefs="TrackBackAboutsBase" ilk="class" line="98" lineend="103" name="TrackBackAbouts">
                  <scope ilk="function" line="99" lineend="100" name="to_rss" signature="to_rss(*args)" />
                  <scope classrefs="AboutBase" ilk="class" line="101" lineend="102" name="About" />
                </scope>
              </scope>
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="108" lineend="123" name="RSS20">
            <scope classrefs="Object" ilk="class" line="109" lineend="122" name="Items">
              <scope classrefs="Object" ilk="class" line="110" lineend="121" name="Item">
                <scope classrefs="TrackBackAboutsBase" ilk="class" line="111" lineend="120" name="TrackBackAbouts">
                  <scope classrefs="AboutBase" ilk="class" line="112" lineend="119" name="About">
                    <scope ilk="function" line="113" lineend="118" name="to_rss" signature="to_rss(rss, current)" />
                  </scope>
                </scope>
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/syndication">
      <import line="1" module="rss/syndication" symbol="*" />
      <import line="2" module="rss/maker/1.0" symbol="*" />
      <scope ilk="namespace" line="4" lineend="27" name="RSS">
        <scope ilk="namespace" line="5" lineend="26" name="Maker">
          <scope ilk="namespace" line="6" lineend="23" name="SyndicationModel">
            <scope attributes="__classmethod__" ilk="function" line="7" lineend="22" name="append_features" signature="self.append_features(klass)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="25" lineend="25" name="ChannelBase">
            <import symbol="SyndicationModel" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/image">
      <import line="1" module="rss/image" symbol="*" />
      <import line="2" module="rss/maker/1.0" symbol="*" />
      <import line="3" module="rss/maker/dublincore" symbol="*" />
      <scope ilk="namespace" line="5" lineend="145" name="RSS">
        <scope ilk="namespace" line="6" lineend="144" name="Maker">
          <scope ilk="namespace" line="7" lineend="46" name="ImageItemModel">
            <scope attributes="__classmethod__" ilk="function" line="8" lineend="26" name="append_features" signature="self.append_features(klass)" />
            <scope classrefs="Object" ilk="class" line="28" lineend="45" name="ImageItemBase">
              <scope ilk="function" line="32" lineend="32" name="about" />
              <scope ilk="function" line="32" lineend="32" name="about=" />
              <scope ilk="function" line="32" lineend="32" name="resource" />
              <scope ilk="function" line="32" lineend="32" name="resource=" />
              <scope ilk="function" line="32" lineend="32" name="image_width" />
              <scope ilk="function" line="32" lineend="32" name="image_width=" />
              <scope ilk="function" line="32" lineend="32" name="image_height" />
              <scope ilk="function" line="32" lineend="32" name="image_height=" />
              <scope ilk="function" line="42" lineend="44" name="have_required_values?" signature="have_required_values?" />
              <import symbol="Base" />
              <import symbol="Maker::DublinCoreModel" />
            </scope>
          </scope>
          <scope ilk="namespace" line="48" lineend="83" name="ImageFaviconModel">
            <scope attributes="__classmethod__" ilk="function" line="49" lineend="67" name="append_features" signature="self.append_features(klass)" />
            <scope classrefs="Object" ilk="class" line="69" lineend="82" name="ImageFaviconBase">
              <scope ilk="function" line="73" lineend="73" name="about" />
              <scope ilk="function" line="73" lineend="73" name="about=" />
              <scope ilk="function" line="73" lineend="73" name="image_size" />
              <scope ilk="function" line="73" lineend="73" name="image_size=" />
              <scope ilk="function" line="79" lineend="81" name="have_required_values?" signature="have_required_values?" />
              <import symbol="Base" />
              <import symbol="Maker::DublinCoreModel" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="85" lineend="85" name="ChannelBase">
            <import symbol="Maker::ImageFaviconModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="87" lineend="89" name="ItemsBase">
            <scope classrefs="Object" ilk="class" line="88" lineend="88" name="ItemBase">
              <import symbol="Maker::ImageItemModel" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="91" lineend="122" name="RSS10">
            <scope classrefs="Object" ilk="class" line="92" lineend="106" name="Items">
              <scope classrefs="Object" ilk="class" line="93" lineend="105" name="Item">
                <scope classrefs="ImageItemBase" ilk="class" line="94" lineend="104" name="ImageItem">
                  <scope ilk="function" line="96" lineend="103" name="to_rss" signature="to_rss(rss, current)" />
                </scope>
              </scope>
            </scope>
            <scope classrefs="Object" ilk="class" line="108" lineend="121" name="Channel">
              <scope classrefs="ImageFaviconBase" ilk="class" line="109" lineend="120" name="ImageFavicon">
                <scope ilk="function" line="111" lineend="119" name="to_rss" signature="to_rss(rss, current)" />
              </scope>
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="124" lineend="142" name="RSS09">
            <scope classrefs="Object" ilk="class" line="125" lineend="133" name="Items">
              <scope classrefs="Object" ilk="class" line="126" lineend="132" name="Item">
                <scope classrefs="ImageItemBase" ilk="class" line="127" lineend="131" name="ImageItem">
                  <scope ilk="function" line="129" lineend="130" name="to_rss" signature="to_rss(*args)" />
                </scope>
              </scope>
            </scope>
            <scope classrefs="Object" ilk="class" line="135" lineend="141" name="Channel">
              <scope classrefs="ImageFaviconBase" ilk="class" line="136" lineend="140" name="ImageFavicon">
                <scope ilk="function" line="138" lineend="139" name="to_rss" signature="to_rss(*args)" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/dublincore">
      <import line="1" module="rss/dublincore" symbol="*" />
      <import line="2" module="rss/maker/1.0" symbol="*" />
      <scope ilk="namespace" line="4" lineend="165" name="RSS">
        <scope ilk="namespace" line="5" lineend="164" name="Maker">
          <scope ilk="namespace" line="6" lineend="101" name="DublinCoreModel">
            <scope attributes="__classmethod__" ilk="function" line="7" lineend="41" name="append_features" signature="self.append_features(klass)" />
            <scope attributes="__classmethod__" ilk="function" line="81" lineend="100" name="install_dublin_core" signature="self.install_dublin_core(klass)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="103" lineend="110" name="ChannelBase">
            <import symbol="DublinCoreModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="112" lineend="112" name="ImageBase">
            <import symbol="DublinCoreModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="113" lineend="122" name="ItemsBase">
            <scope classrefs="Object" ilk="class" line="114" lineend="121" name="ItemBase">
              <import symbol="DublinCoreModel" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="123" lineend="123" name="TextinputBase">
            <import symbol="DublinCoreModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="125" lineend="143" name="RSS10">
            <scope classrefs="Object" ilk="class" line="126" lineend="128" name="Channel" />
            <scope classrefs="Object" ilk="class" line="130" lineend="132" name="Image" />
            <scope classrefs="Object" ilk="class" line="134" lineend="138" name="Items">
              <scope classrefs="Object" ilk="class" line="135" lineend="137" name="Item" />
            </scope>
            <scope classrefs="Object" ilk="class" line="140" lineend="142" name="Textinput" />
          </scope>
          <scope classrefs="Object" ilk="class" line="145" lineend="163" name="RSS09">
            <scope classrefs="Object" ilk="class" line="146" lineend="148" name="Channel" />
            <scope classrefs="Object" ilk="class" line="150" lineend="152" name="Image" />
            <scope classrefs="Object" ilk="class" line="154" lineend="158" name="Items">
              <scope classrefs="Object" ilk="class" line="155" lineend="157" name="Item" />
            </scope>
            <scope classrefs="Object" ilk="class" line="160" lineend="162" name="Textinput" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/content">
      <import line="1" module="rss/content" symbol="*" />
      <import line="2" module="rss/maker/1.0" symbol="*" />
      <scope ilk="namespace" line="4" lineend="29" name="RSS">
        <scope ilk="namespace" line="5" lineend="28" name="Maker">
          <scope ilk="namespace" line="6" lineend="23" name="ContentModel">
            <scope attributes="__classmethod__" ilk="function" line="7" lineend="22" name="append_features" signature="self.append_features(klass)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="25" lineend="27" name="ItemsBase">
            <scope classrefs="Object" ilk="class" line="26" lineend="26" name="ItemBase">
              <import symbol="ContentModel" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/base">
      <import line="1" module="forwardable" symbol="*" />
      <import line="3" module="rss/rss" symbol="*" />
      <scope ilk="namespace" line="5" lineend="526" name="RSS">
        <scope ilk="namespace" line="6" lineend="525" name="Maker">
          <scope ilk="namespace" line="8" lineend="130" name="Base">
            <scope attributes="__classmethod__" ilk="function" line="10" lineend="60" name="append_features" signature="self.append_features(klass)" />
            <scope attributes="__ctor__" ilk="function" line="62" lineend="65" name="initialize" signature="initialize(maker)" />
            <scope ilk="function" line="67" lineend="69" name="have_required_values?" signature="have_required_values?" />
            <scope ilk="function" line="72" lineend="76" name="initialize_variables" signature="initialize_variables" />
            <scope ilk="function" line="78" lineend="82" name="setup_other_elements" signature="setup_other_elements(rss)" />
            <scope ilk="function" line="84" lineend="86" name="current_element" signature="current_element(rss)" />
            <scope ilk="function" line="88" lineend="103" name="setup_values" signature="setup_values(target)" />
            <scope ilk="function" line="105" lineend="111" name="variables" signature="variables" />
            <scope ilk="function" line="113" lineend="115" name="variable_is_set?" signature="variable_is_set?" />
            <scope ilk="function" line="117" lineend="121" name="not_set_required_variables" signature="not_set_required_variables" />
            <scope ilk="function" line="123" lineend="128" name="required_variables_are_set?" signature="required_variables_are_set?" />
          </scope>
          <scope classrefs="Object" ilk="class" line="132" lineend="194" name="RSSBase">
            <scope classrefs="Object" ilk="class" line="135" lineend="139" name="self">
              <scope ilk="function" line="136" lineend="138" name="make" signature="make(&amp;block)" />
            </scope>
            <scope ilk="function" line="156" lineend="156" name="rss_version" />
            <scope ilk="function" line="157" lineend="157" name="version" />
            <scope ilk="function" line="157" lineend="157" name="version=" />
            <scope ilk="function" line="157" lineend="157" name="encoding" />
            <scope ilk="function" line="157" lineend="157" name="encoding=" />
            <scope ilk="function" line="157" lineend="157" name="standalone" />
            <scope ilk="function" line="157" lineend="157" name="standalone=" />
            <scope attributes="__ctor__" ilk="function" line="159" lineend="165" name="initialize" signature="initialize(rss_version)" />
            <scope ilk="function" line="167" lineend="174" name="make" signature="make" />
            <scope ilk="function" line="176" lineend="186" name="to_rss" signature="to_rss" />
            <scope ilk="function" line="190" lineend="192" name="make_xml_stylesheets" signature="make_xml_stylesheets" />
            <import symbol="Base" />
          </scope>
          <scope classrefs="Object" ilk="class" line="196" lineend="242" name="XMLStyleSheets">
            <scope ilk="function" line="201" lineend="205" name="to_rss" signature="to_rss(rss)" />
            <scope ilk="function" line="207" lineend="211" name="new_xml_stylesheet" signature="new_xml_stylesheet" />
            <scope classrefs="Object" ilk="class" line="213" lineend="241" name="XMLStyleSheet">
              <scope ilk="function" line="221" lineend="228" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="230" lineend="232" name="have_required_values?" signature="have_required_values?" />
              <scope ilk="function" line="235" lineend="240" name="guess_type_if_need" signature="guess_type_if_need(xss)" />
              <import symbol="Base::RSS::" />
            </scope>
            <import symbol="Base" />
          </scope>
          <scope classrefs="Object" ilk="class" line="244" lineend="371" name="ChannelBase">
            <scope ilk="function" line="273" lineend="275" name="current_element" signature="current_element(rss)" />
            <scope classrefs="Object" ilk="class" line="277" lineend="305" name="SkipDaysBase">
              <scope ilk="function" line="282" lineend="286" name="new_day" signature="new_day" />
              <scope ilk="function" line="288" lineend="290" name="current_element" signature="current_element(rss)" />
              <scope classrefs="Object" ilk="class" line="292" lineend="304" name="DayBase">
                <scope ilk="function" line="300" lineend="302" name="current_element" signature="current_element(rss)" />
                <import symbol="Base" />
              </scope>
              <import symbol="Base" />
            </scope>
            <scope classrefs="Object" ilk="class" line="307" lineend="335" name="SkipHoursBase">
              <scope ilk="function" line="312" lineend="316" name="new_hour" signature="new_hour" />
              <scope ilk="function" line="318" lineend="320" name="current_element" signature="current_element(rss)" />
              <scope classrefs="Object" ilk="class" line="322" lineend="334" name="HourBase">
                <scope ilk="function" line="330" lineend="332" name="current_element" signature="current_element(rss)" />
                <import symbol="Base" />
              </scope>
              <import symbol="Base" />
            </scope>
            <scope classrefs="Object" ilk="class" line="337" lineend="349" name="CloudBase">
              <scope ilk="function" line="345" lineend="347" name="current_element" signature="current_element(rss)" />
              <import symbol="Base" />
            </scope>
            <scope classrefs="Object" ilk="class" line="351" lineend="370" name="CategoriesBase">
              <scope ilk="function" line="356" lineend="360" name="new_category" signature="new_category" />
              <scope classrefs="Object" ilk="class" line="362" lineend="369" name="CategoryBase">
                <import symbol="Base" />
              </scope>
              <import symbol="Base" />
            </scope>
            <import symbol="Base" />
          </scope>
          <scope classrefs="Object" ilk="class" line="373" lineend="388" name="ImageBase">
            <scope ilk="function" line="381" lineend="383" name="link" signature="link" />
            <scope ilk="function" line="385" lineend="387" name="current_element" signature="current_element(rss)" />
            <import symbol="Base" />
          </scope>
          <scope classrefs="Object" ilk="class" line="390" lineend="509" name="ItemsBase">
            <scope ilk="function" line="395" lineend="395" name="do_sort" />
            <scope ilk="function" line="395" lineend="395" name="do_sort=" />
            <scope ilk="function" line="395" lineend="395" name="max_size" />
            <scope ilk="function" line="395" lineend="395" name="max_size=" />
            <scope attributes="__ctor__" ilk="function" line="397" lineend="401" name="initialize" signature="initialize(maker)" />
            <scope ilk="function" line="403" lineend="409" name="normalize" signature="normalize" />
            <scope ilk="function" line="411" lineend="413" name="current_element" signature="current_element(rss)" />
            <scope ilk="function" line="415" lineend="419" name="new_item" signature="new_item" />
            <scope ilk="function" line="422" lineend="434" name="sort_if_need" signature="sort_if_need" />
            <scope classrefs="Object" ilk="class" line="436" lineend="508" name="ItemBase">
              <scope ilk="function" line="463" lineend="473" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
              <scope ilk="function" line="475" lineend="477" name="current_element" signature="current_element(rss)" />
              <scope classrefs="Object" ilk="class" line="479" lineend="486" name="GuidBase">
                <import symbol="Base" />
              </scope>
              <scope classrefs="Object" ilk="class" line="488" lineend="495" name="EnclosureBase">
                <import symbol="Base" />
              </scope>
              <scope classrefs="Object" ilk="class" line="497" lineend="504" name="SourceBase">
                <import symbol="Base" />
              </scope>
              <import symbol="Base" />
            </scope>
            <import symbol="Base" />
          </scope>
          <scope classrefs="Object" ilk="class" line="511" lineend="523" name="TextinputBase">
            <scope ilk="function" line="519" lineend="521" name="current_element" signature="current_element(rss)" />
            <import symbol="Base" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/2.0">
      <import line="1" module="rss/2.0" symbol="*" />
      <import line="3" module="rss/maker/0.9" symbol="*" />
      <scope ilk="namespace" line="5" lineend="168" name="RSS">
        <scope ilk="namespace" line="6" lineend="167" name="Maker">
          <scope classrefs="RSS09" ilk="class" line="8" lineend="164" name="RSS20">
            <scope attributes="__ctor__" ilk="function" line="10" lineend="12" name="initialize" signature="initialize(rss_version=&quot;2.0&quot;)" />
            <scope classrefs="RSS09::Channel" ilk="class" line="14" lineend="73" name="Channel">
              <scope ilk="function" line="16" lineend="18" name="have_required_values?" signature="have_required_values?" />
              <scope ilk="function" line="20" lineend="22" name="required_variable_names" signature="required_variable_names" />
              <scope classrefs="RSS09::Channel::" ilk="class" line="24" lineend="27" name="SkipDays">
                <scope classrefs="RSS09::Channel::" ilk="class" line="25" lineend="26" name="Day" />
              </scope>
              <scope classrefs="RSS09::Channel::" ilk="class" line="29" lineend="32" name="SkipHours">
                <scope classrefs="RSS09::Channel::" ilk="class" line="30" lineend="31" name="Hour" />
              </scope>
              <scope classrefs="RSS09::Channel::" ilk="class" line="34" lineend="48" name="Cloud">
                <scope ilk="function" line="35" lineend="42" name="to_rss" signature="to_rss(rss, channel)" />
                <scope ilk="function" line="44" lineend="47" name="have_required_values?" signature="have_required_values?" />
              </scope>
              <scope classrefs="RSS09::Channel::" ilk="class" line="50" lineend="71" name="Categories">
                <scope ilk="function" line="51" lineend="55" name="to_rss" signature="to_rss(rss, channel)" />
                <scope classrefs="RSS09::Channel::" ilk="class" line="57" lineend="70" name="Category">
                  <scope ilk="function" line="58" lineend="65" name="to_rss" signature="to_rss(rss, channel)" />
                  <scope ilk="function" line="67" lineend="69" name="have_required_values?" signature="have_required_values?" />
                </scope>
              </scope>
            </scope>
            <scope classrefs="RSS09::Image" ilk="class" line="75" lineend="76" name="Image" />
            <scope classrefs="RSS09::Items" ilk="class" line="78" lineend="160" name="Items">
              <scope classrefs="RSS09::Items::" ilk="class" line="80" lineend="158" name="Item">
                <scope ilk="function" line="82" lineend="84" name="have_required_values?" signature="have_required_values?" />
                <scope ilk="function" line="87" lineend="89" name="variables" signature="variables" />
                <scope classrefs="RSS09::Items::" ilk="class" line="91" lineend="104" name="Guid">
                  <scope ilk="function" line="92" lineend="99" name="to_rss" signature="to_rss(rss, item)" />
                  <scope ilk="function" line="101" lineend="103" name="have_required_values?" signature="have_required_values?" />
                </scope>
                <scope classrefs="RSS09::Items::" ilk="class" line="106" lineend="119" name="Enclosure">
                  <scope ilk="function" line="107" lineend="114" name="to_rss" signature="to_rss(rss, item)" />
                  <scope ilk="function" line="116" lineend="118" name="have_required_values?" signature="have_required_values?" />
                </scope>
                <scope classrefs="RSS09::Items::" ilk="class" line="121" lineend="134" name="Source">
                  <scope ilk="function" line="122" lineend="129" name="to_rss" signature="to_rss(rss, item)" />
                  <scope ilk="function" line="131" lineend="133" name="have_required_values?" signature="have_required_values?" />
                </scope>
                <scope classrefs="RSS09::Items::" ilk="class" line="136" lineend="157" name="Categories">
                  <scope ilk="function" line="137" lineend="141" name="to_rss" signature="to_rss(rss, item)" />
                  <scope classrefs="RSS09::Items::" ilk="class" line="143" lineend="156" name="Category">
                    <scope ilk="function" line="144" lineend="151" name="to_rss" signature="to_rss(rss, item)" />
                    <scope ilk="function" line="153" lineend="155" name="have_required_values?" signature="have_required_values?" />
                  </scope>
                </scope>
              </scope>
            </scope>
            <scope classrefs="RSS09::Textinput" ilk="class" line="162" lineend="163" name="Textinput" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/1.0">
      <import line="1" module="rss/1.0" symbol="*" />
      <import line="3" module="rss/maker/base" symbol="*" />
      <scope ilk="namespace" line="5" lineend="204" name="RSS">
        <scope ilk="namespace" line="6" lineend="203" name="Maker">
          <scope classrefs="RSSBase" ilk="class" line="8" lineend="200" name="RSS10">
            <scope attributes="__ctor__" ilk="function" line="10" lineend="12" name="initialize" signature="initialize" />
            <scope ilk="function" line="15" lineend="17" name="make_rss" signature="make_rss" />
            <scope ilk="function" line="19" lineend="24" name="setup_elements" signature="setup_elements(rss)" />
            <scope classrefs="ChannelBase" ilk="class" line="26" lineend="107" name="Channel">
              <scope ilk="function" line="28" lineend="46" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="48" lineend="50" name="have_required_values?" signature="have_required_values?" />
              <scope ilk="function" line="53" lineend="60" name="setup_items" signature="setup_items(rss)" />
              <scope ilk="function" line="62" lineend="66" name="setup_image" signature="setup_image(rss)" />
              <scope ilk="function" line="68" lineend="73" name="setup_textinput" signature="setup_textinput(rss)" />
              <scope ilk="function" line="75" lineend="77" name="required_variable_names" signature="required_variable_names" />
              <scope classrefs="SkipDaysBase" ilk="class" line="79" lineend="85" name="SkipDays">
                <scope ilk="function" line="80" lineend="81" name="to_rss" signature="to_rss(*args)" />
                <scope classrefs="DayBase" ilk="class" line="83" lineend="84" name="Day" />
              </scope>
              <scope classrefs="SkipHoursBase" ilk="class" line="87" lineend="93" name="SkipHours">
                <scope ilk="function" line="88" lineend="89" name="to_rss" signature="to_rss(*args)" />
                <scope classrefs="HourBase" ilk="class" line="91" lineend="92" name="Hour" />
              </scope>
              <scope classrefs="CloudBase" ilk="class" line="95" lineend="98" name="Cloud">
                <scope ilk="function" line="96" lineend="97" name="to_rss" signature="to_rss(*args)" />
              </scope>
              <scope classrefs="CategoriesBase" ilk="class" line="100" lineend="106" name="Categories">
                <scope ilk="function" line="101" lineend="102" name="to_rss" signature="to_rss(*args)" />
                <scope classrefs="CategoryBase" ilk="class" line="104" lineend="105" name="Category" />
              </scope>
            </scope>
            <scope classrefs="ImageBase" ilk="class" line="109" lineend="129" name="Image">
              <scope ilk="function" line="110" lineend="119" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="121" lineend="123" name="have_required_values?" signature="have_required_values?" />
              <scope ilk="function" line="126" lineend="128" name="variables" signature="variables" />
            </scope>
            <scope classrefs="ItemsBase" ilk="class" line="131" lineend="181" name="Items">
              <scope ilk="function" line="132" lineend="139" name="to_rss" signature="to_rss(rss)" />
              <scope classrefs="ItemBase" ilk="class" line="141" lineend="180" name="Item">
                <scope ilk="function" line="142" lineend="152" name="to_rss" signature="to_rss(rss)" />
                <scope ilk="function" line="154" lineend="156" name="have_required_values?" signature="have_required_values?" />
                <scope classrefs="GuidBase" ilk="class" line="158" lineend="161" name="Guid">
                  <scope ilk="function" line="159" lineend="160" name="to_rss" signature="to_rss(*args)" />
                </scope>
                <scope classrefs="EnclosureBase" ilk="class" line="163" lineend="166" name="Enclosure">
                  <scope ilk="function" line="164" lineend="165" name="to_rss" signature="to_rss(*args)" />
                </scope>
                <scope classrefs="SourceBase" ilk="class" line="168" lineend="171" name="Source">
                  <scope ilk="function" line="169" lineend="170" name="to_rss" signature="to_rss(*args)" />
                </scope>
                <scope classrefs="CategoriesBase" ilk="class" line="173" lineend="179" name="Categories">
                  <scope ilk="function" line="174" lineend="175" name="to_rss" signature="to_rss(*args)" />
                  <scope classrefs="CategoryBase" ilk="class" line="177" lineend="178" name="Category" />
                </scope>
              </scope>
            </scope>
            <scope classrefs="TextinputBase" ilk="class" line="183" lineend="199" name="Textinput">
              <scope ilk="function" line="184" lineend="193" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="195" lineend="198" name="have_required_values?" signature="have_required_values?" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/maker/0.9">
      <import line="1" module="rss/0.9" symbol="*" />
      <import line="3" module="rss/maker/base" symbol="*" />
      <scope ilk="namespace" line="5" lineend="224" name="RSS">
        <scope ilk="namespace" line="6" lineend="223" name="Maker">
          <scope classrefs="RSSBase" ilk="class" line="8" lineend="219" name="RSS09">
            <scope attributes="__ctor__" ilk="function" line="10" lineend="12" name="initialize" signature="initialize(rss_version=&quot;0.91&quot;)" />
            <scope ilk="function" line="15" lineend="17" name="make_rss" signature="make_rss" />
            <scope ilk="function" line="19" lineend="21" name="setup_elements" signature="setup_elements(rss)" />
            <scope classrefs="ChannelBase" ilk="class" line="23" lineend="135" name="Channel">
              <scope ilk="function" line="25" lineend="42" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="44" lineend="46" name="have_required_values?" signature="have_required_values?" />
              <scope ilk="function" line="49" lineend="51" name="setup_items" signature="setup_items(rss)" />
              <scope ilk="function" line="53" lineend="55" name="setup_image" signature="setup_image(rss)" />
              <scope ilk="function" line="57" lineend="59" name="setup_textinput" signature="setup_textinput(rss)" />
              <scope ilk="function" line="61" lineend="63" name="variables" signature="variables" />
              <scope ilk="function" line="65" lineend="67" name="required_variable_names" signature="required_variable_names" />
              <scope classrefs="SkipDaysBase" ilk="class" line="69" lineend="94" name="SkipDays">
                <scope ilk="function" line="70" lineend="78" name="to_rss" signature="to_rss(rss, channel)" />
                <scope classrefs="DayBase" ilk="class" line="80" lineend="93" name="Day">
                  <scope ilk="function" line="81" lineend="88" name="to_rss" signature="to_rss(rss, days)" />
                  <scope ilk="function" line="90" lineend="92" name="have_required_values?" signature="have_required_values?" />
                </scope>
              </scope>
              <scope classrefs="SkipHoursBase" ilk="class" line="96" lineend="121" name="SkipHours">
                <scope ilk="function" line="97" lineend="105" name="to_rss" signature="to_rss(rss, channel)" />
                <scope classrefs="HourBase" ilk="class" line="107" lineend="120" name="Hour">
                  <scope ilk="function" line="108" lineend="115" name="to_rss" signature="to_rss(rss, hours)" />
                  <scope ilk="function" line="117" lineend="119" name="have_required_values?" signature="have_required_values?" />
                </scope>
              </scope>
              <scope classrefs="CloudBase" ilk="class" line="123" lineend="126" name="Cloud">
                <scope ilk="function" line="124" lineend="125" name="to_rss" signature="to_rss(*args)" />
              </scope>
              <scope classrefs="CategoriesBase" ilk="class" line="128" lineend="134" name="Categories">
                <scope ilk="function" line="129" lineend="130" name="to_rss" signature="to_rss(*args)" />
                <scope classrefs="CategoryBase" ilk="class" line="132" lineend="133" name="Category" />
              </scope>
            </scope>
            <scope classrefs="ImageBase" ilk="class" line="137" lineend="151" name="Image">
              <scope ilk="function" line="138" lineend="146" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="148" lineend="150" name="have_required_values?" signature="have_required_values?" />
            </scope>
            <scope classrefs="ItemsBase" ilk="class" line="153" lineend="202" name="Items">
              <scope ilk="function" line="154" lineend="161" name="to_rss" signature="to_rss(rss)" />
              <scope classrefs="ItemBase" ilk="class" line="163" lineend="201" name="Item">
                <scope ilk="function" line="164" lineend="171" name="to_rss" signature="to_rss(rss)" />
                <scope ilk="function" line="174" lineend="176" name="have_required_values?" signature="have_required_values?" />
                <scope classrefs="GuidBase" ilk="class" line="178" lineend="181" name="Guid">
                  <scope ilk="function" line="179" lineend="180" name="to_rss" signature="to_rss(*args)" />
                </scope>
                <scope classrefs="EnclosureBase" ilk="class" line="183" lineend="186" name="Enclosure">
                  <scope ilk="function" line="184" lineend="185" name="to_rss" signature="to_rss(*args)" />
                </scope>
                <scope classrefs="SourceBase" ilk="class" line="188" lineend="191" name="Source">
                  <scope ilk="function" line="189" lineend="190" name="to_rss" signature="to_rss(*args)" />
                </scope>
                <scope classrefs="CategoriesBase" ilk="class" line="193" lineend="199" name="Categories">
                  <scope ilk="function" line="194" lineend="195" name="to_rss" signature="to_rss(*args)" />
                  <scope classrefs="CategoryBase" ilk="class" line="197" lineend="198" name="Category" />
                </scope>
              </scope>
            </scope>
            <scope classrefs="TextinputBase" ilk="class" line="204" lineend="218" name="Textinput">
              <scope ilk="function" line="205" lineend="212" name="to_rss" signature="to_rss(rss)" />
              <scope ilk="function" line="215" lineend="217" name="have_required_values?" signature="have_required_values?" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/image">
      <import line="1" module="rss/1.0" symbol="*" />
      <import line="2" module="rss/dublincore" symbol="*" />
      <scope ilk="namespace" line="4" lineend="216" name="RSS">
        <scope ilk="namespace" line="11" lineend="17" name="ImageModelUtils">
          <scope ilk="function" line="12" lineend="16" name="validate_one_tag_name" signature="validate_one_tag_name(name, tags)" />
        </scope>
        <scope ilk="namespace" line="19" lineend="129" name="ImageItemModel">
          <scope attributes="__classmethod__" ilk="function" line="23" lineend="27" name="append_features" signature="self.append_features(klass)" />
          <scope ilk="function" line="29" lineend="31" name="image_validate" signature="image_validate(tags)" />
          <scope classrefs="Element" ilk="class" line="33" lineend="128" name="Item">
            <scope classrefs="Object" ilk="class" line="37" lineend="45" name="self">
              <scope ilk="function" line="38" lineend="40" name="required_prefix" signature="required_prefix" />
              <scope ilk="function" line="42" lineend="44" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="60" lineend="64" name="initialize" signature="initialize(about=nil, resource=nil)" />
            <scope ilk="function" line="66" lineend="68" name="full_name" signature="full_name" />
            <scope ilk="function" line="70" lineend="78" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="81" lineend="87" name="image_width=" signature="image_width=(new_value)" />
            <scope ilk="function" line="90" lineend="96" name="image_height=" signature="image_height=(new_value)" />
            <scope ilk="function" line="104" lineend="111" name="_tags" signature="_tags" />
            <scope ilk="function" line="113" lineend="118" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="120" lineend="122" name="maker_target" signature="maker_target(target)" />
            <scope ilk="function" line="124" lineend="127" name="setup_maker_attributes" signature="setup_maker_attributes(item)" />
            <import symbol="RSS10" />
            <import symbol="DublinCoreModel" />
          </scope>
        </scope>
        <scope ilk="namespace" line="131" lineend="209" name="ImageFaviconModel">
          <scope attributes="__classmethod__" ilk="function" line="135" lineend="141" name="append_features" signature="self.append_features(klass)" />
          <scope ilk="function" line="143" lineend="145" name="image_validate" signature="image_validate(tags)" />
          <scope classrefs="Element" ilk="class" line="147" lineend="207" name="Favicon">
            <scope classrefs="Object" ilk="class" line="151" lineend="159" name="self">
              <scope ilk="function" line="152" lineend="154" name="required_prefix" signature="required_prefix" />
              <scope ilk="function" line="156" lineend="158" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="171" lineend="175" name="initialize" signature="initialize(about=nil, size=nil)" />
            <scope ilk="function" line="177" lineend="179" name="full_name" signature="full_name" />
            <scope ilk="function" line="181" lineend="189" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="192" lineend="197" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="199" lineend="201" name="maker_target" signature="maker_target(target)" />
            <scope ilk="function" line="203" lineend="206" name="setup_maker_attributes" signature="setup_maker_attributes(favicon)" />
            <import symbol="RSS10" />
            <import symbol="DublinCoreModel" />
          </scope>
        </scope>
        <scope classrefs="Object" ilk="class" line="211" lineend="214" name="RDF">
          <scope classrefs="Object" ilk="class" line="212" lineend="212" name="Channel">
            <import symbol="ImageFaviconModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="213" lineend="213" name="Item">
            <import symbol="ImageItemModel" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/dublincore">
      <import line="1" module="rss/1.0" symbol="*" />
      <scope ilk="namespace" line="3" lineend="160" name="RSS">
        <scope ilk="namespace" line="10" lineend="43" name="BaseDublinCoreModel">
          <scope ilk="function" line="11" lineend="42" name="append_features" signature="append_features(klass)" />
        </scope>
        <scope ilk="namespace" line="45" lineend="142" name="DublinCoreModel">
          <scope doc="FIXME" ilk="function" line="133" lineend="140" name="dc_validate" signature="dc_validate(tags)" />
        </scope>
        <scope classrefs="Object" doc="For backward compatibility" ilk="class" line="147" lineend="152" name="RDF">
          <scope classrefs="Object" ilk="class" line="148" lineend="148" name="Channel">
            <import symbol="DublinCoreModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="149" lineend="149" name="Image">
            <import symbol="DublinCoreModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="150" lineend="150" name="Item">
            <import symbol="DublinCoreModel" />
          </scope>
          <scope classrefs="Object" ilk="class" line="151" lineend="151" name="Textinput">
            <import symbol="DublinCoreModel" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/converter">
      <import line="1" module="rss/utils" symbol="*" />
      <scope ilk="namespace" line="3" lineend="155" name="RSS">
        <scope classrefs="Object" ilk="class" line="5" lineend="153" name="Converter">
          <scope attributes="__ctor__" ilk="function" line="9" lineend="23" name="initialize" signature="initialize(to_enc, from_enc=nil)" />
          <scope ilk="function" line="25" lineend="27" name="convert" signature="convert(value)" />
          <scope ilk="function" line="29" lineend="39" name="def_convert" signature="def_convert(depth=0)" />
          <scope ilk="function" line="41" lineend="57" name="def_iconv_convert" signature="def_iconv_convert(to_enc, from_enc, depth=0)">
            <import line="43" module="iconv" symbol="*" />
          </scope>
          <scope ilk="function" line="59" lineend="61" name="def_else_enc" signature="def_else_enc(to_enc, from_enc)" />
          <scope ilk="function" line="63" lineend="67" name="def_same_enc" signature="def_same_enc()" />
          <scope ilk="function" line="69" lineend="84" name="def_uconv_convert_if_can" signature="def_uconv_convert_if_can(meth, to_enc, from_enc)">
            <import line="71" module="uconv" symbol="*" />
          </scope>
          <scope ilk="function" line="86" lineend="88" name="def_to_euc_jp_from_utf_8" signature="def_to_euc_jp_from_utf_8" />
          <scope ilk="function" line="90" lineend="92" name="def_to_utf_8_from_euc_jp" signature="def_to_utf_8_from_euc_jp" />
          <scope ilk="function" line="94" lineend="96" name="def_to_shift_jis_from_utf_8" signature="def_to_shift_jis_from_utf_8" />
          <scope ilk="function" line="98" lineend="100" name="def_to_utf_8_from_shift_jis" signature="def_to_utf_8_from_shift_jis" />
          <scope ilk="function" line="102" lineend="107" name="def_to_euc_jp_from_shift_jis" signature="def_to_euc_jp_from_shift_jis">
            <import line="103" module="nkf" symbol="*" />
          </scope>
          <scope ilk="function" line="109" lineend="114" name="def_to_shift_jis_from_euc_jp" signature="def_to_shift_jis_from_euc_jp">
            <import line="110" module="nkf" symbol="*" />
          </scope>
          <scope ilk="function" line="116" lineend="121" name="def_to_euc_jp_from_iso_2022_jp" signature="def_to_euc_jp_from_iso_2022_jp">
            <import line="117" module="nkf" symbol="*" />
          </scope>
          <scope ilk="function" line="123" lineend="128" name="def_to_iso_2022_jp_from_euc_jp" signature="def_to_iso_2022_jp_from_euc_jp">
            <import line="124" module="nkf" symbol="*" />
          </scope>
          <scope ilk="function" line="130" lineend="134" name="def_to_utf_8_from_iso_8859_1" signature="def_to_utf_8_from_iso_8859_1" />
          <scope ilk="function" line="136" lineend="151" name="def_to_iso_8859_1_from_utf_8" signature="def_to_iso_8859_1_from_utf_8" />
          <import symbol="Utils" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/content">
      <import line="1" module="rss/1.0" symbol="*" />
      <scope ilk="namespace" line="3" lineend="53" name="RSS">
        <scope ilk="namespace" line="10" lineend="40" name="ContentModel">
          <scope attributes="__classmethod__" ilk="function" line="16" lineend="24" name="append_features" signature="self.append_features(klass)" />
          <scope ilk="function" line="26" lineend="38" name="content_validate" signature="content_validate(tags)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="42" lineend="44" name="RDF">
          <scope classrefs="Object" ilk="class" line="43" lineend="43" name="Item">
            <import symbol="ContentModel" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/2.0">
      <import line="1" module="rss/0.9" symbol="*" />
      <scope ilk="namespace" line="3" lineend="169" name="RSS">
        <scope classrefs="Object" ilk="class" line="5" lineend="163" name="Rss">
          <scope classrefs="Object" ilk="class" line="7" lineend="161" name="Channel">
            <scope ilk="function" line="15" lineend="17" name="ttl=" signature="ttl=(value)" />
            <scope ilk="function" line="33" lineend="40" name="other_element" signature="other_element(need_convert, indent)" />
            <scope ilk="function" line="44" lineend="46" name="children" signature="children" />
            <scope ilk="function" line="49" lineend="61" name="_tags" signature="_tags" />
            <scope classrefs="Object" ilk="class" line="65" lineend="159" name="Item">
              <scope ilk="function" line="91" lineend="101" name="other_element" signature="other_element(need_convert, indent)" />
              <scope ilk="function" line="105" lineend="107" name="children" signature="children" />
              <scope ilk="function" line="110" lineend="116" name="_tags" signature="_tags" />
              <scope ilk="function" line="119" lineend="122" name="setup_maker_element" signature="setup_maker_element(item)" />
              <scope classrefs="Element" ilk="class" line="124" lineend="157" name="Guid">
                <scope attributes="__ctor__" ilk="function" line="136" lineend="140" name="initialize" signature="initialize(isPermaLink=nil, content=nil)" />
                <scope ilk="function" line="143" lineend="147" name="_attrs" signature="_attrs" />
                <scope ilk="function" line="149" lineend="151" name="maker_target" signature="maker_target(item)" />
                <scope ilk="function" line="153" lineend="156" name="setup_maker_attributes" signature="setup_maker_attributes(guid)" />
                <import symbol="RSS09" />
              </scope>
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/1.0">
      <import line="1" module="rss/parser" symbol="*" />
      <scope ilk="namespace" line="3" lineend="650" name="RSS">
        <scope ilk="namespace" line="5" lineend="15" name="RSS10">
          <scope attributes="__classmethod__" ilk="function" line="9" lineend="13" name="append_features" signature="self.append_features(klass)" />
        </scope>
        <scope classrefs="Element" ilk="class" line="17" lineend="629" name="RDF">
          <scope classrefs="Object" ilk="class" line="22" lineend="28" name="self">
            <scope ilk="function" line="24" lineend="26" name="required_uri" signature="required_uri" />
          </scope>
          <scope ilk="function" line="53" lineend="53" name="rss_version" />
          <scope ilk="function" line="53" lineend="53" name="rss_version=" />
          <scope ilk="function" line="53" lineend="53" name="version" />
          <scope ilk="function" line="53" lineend="53" name="version=" />
          <scope ilk="function" line="53" lineend="53" name="encoding" />
          <scope ilk="function" line="53" lineend="53" name="encoding=" />
          <scope ilk="function" line="53" lineend="53" name="standalone" />
          <scope ilk="function" line="53" lineend="53" name="standalone=" />
          <scope attributes="__ctor__" ilk="function" line="55" lineend="57" name="initialize" signature="initialize(version=nil, encoding=nil, standalone=nil)" />
          <scope ilk="function" line="59" lineend="61" name="full_name" signature="full_name" />
          <scope ilk="function" line="63" lineend="75" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
          <scope ilk="function" line="78" lineend="80" name="rdf_validate" signature="rdf_validate(tags)" />
          <scope ilk="function" line="82" lineend="84" name="children" signature="children" />
          <scope ilk="function" line="86" lineend="96" name="_tags" signature="_tags" />
          <scope classrefs="Element" ilk="class" line="98" lineend="151" name="Seq">
            <scope classrefs="Object" ilk="class" line="102" lineend="108" name="self">
              <scope ilk="function" line="104" lineend="106" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="116" lineend="119" name="initialize" signature="initialize(li=[])" />
            <scope ilk="function" line="121" lineend="128" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="130" lineend="132" name="full_name" signature="full_name" />
            <scope ilk="function" line="135" lineend="137" name="children" signature="children" />
            <scope ilk="function" line="139" lineend="141" name="rdf_validate" signature="rdf_validate(tags)" />
            <scope ilk="function" line="143" lineend="149" name="_tags" signature="_tags" />
            <import symbol="RSS10" />
          </scope>
          <scope classrefs="Element" ilk="class" line="153" lineend="193" name="Li">
            <scope classrefs="Object" ilk="class" line="157" lineend="163" name="self">
              <scope ilk="function" line="159" lineend="161" name="required_uri" signature="required_uri" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="171" lineend="174" name="initialize" signature="initialize(resource=nil)" />
            <scope ilk="function" line="176" lineend="178" name="full_name" signature="full_name" />
            <scope ilk="function" line="180" lineend="184" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="187" lineend="191" name="_attrs" signature="_attrs" />
            <import symbol="RSS10" />
          </scope>
          <scope classrefs="Element" ilk="class" line="195" lineend="414" name="Channel">
            <scope classrefs="Object" ilk="class" line="199" lineend="205" name="self">
              <scope ilk="function" line="201" lineend="203" name="required_uri::RSS::" signature="required_uri ::RSS::" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="232" lineend="235" name="initialize" signature="initialize(about=nil)" />
            <scope ilk="function" line="237" lineend="251" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="254" lineend="256" name="children" signature="children" />
            <scope ilk="function" line="258" lineend="269" name="_tags" signature="_tags" />
            <scope ilk="function" line="271" lineend="275" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="277" lineend="279" name="maker_target" signature="maker_target(maker)" />
            <scope ilk="function" line="281" lineend="283" name="setup_maker_attributes" signature="setup_maker_attributes(channel)" />
            <scope classrefs="Element" ilk="class" line="285" lineend="320" name="Image">
              <scope classrefs="Object" ilk="class" line="289" lineend="295" name="self">
                <scope ilk="function" line="291" lineend="293" name="required_uri::RSS::" signature="required_uri ::RSS::" />
              </scope>
              <scope attributes="__ctor__" ilk="function" line="303" lineend="306" name="initialize" signature="initialize(resource=nil)" />
              <scope ilk="function" line="308" lineend="312" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="315" lineend="319" name="_attrs" signature="_attrs" />
              <import symbol="RSS10" />
            </scope>
            <scope classrefs="Element" ilk="class" line="322" lineend="357" name="Textinput">
              <scope classrefs="Object" ilk="class" line="326" lineend="332" name="self">
                <scope ilk="function" line="328" lineend="330" name="required_uri::RSS::" signature="required_uri ::RSS::" />
              </scope>
              <scope attributes="__ctor__" ilk="function" line="340" lineend="343" name="initialize" signature="initialize(resource=nil)" />
              <scope ilk="function" line="345" lineend="349" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="352" lineend="356" name="_attrs" signature="_attrs" />
              <import symbol="RSS10" />
            </scope>
            <scope classrefs="Element" ilk="class" line="359" lineend="412" name="Items">
              <scope classrefs="Object" ilk="class" line="364" lineend="368" name="Seq" />
              <scope classrefs="Object" ilk="class" line="370" lineend="376" name="self">
                <scope ilk="function" line="372" lineend="374" name="required_uri::RSS::" signature="required_uri ::RSS::" />
              </scope>
              <scope attributes="__ctor__" ilk="function" line="382" lineend="385" name="initialize" signature="initialize(seq=Seq.new)" />
              <scope ilk="function" line="387" lineend="394" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="397" lineend="399" name="children" signature="children" />
              <scope ilk="function" line="402" lineend="406" name="_tags" signature="_tags" />
              <scope ilk="function" line="408" lineend="410" name="rdf_validate" signature="rdf_validate(tags)" />
              <import symbol="RSS10" />
            </scope>
            <import symbol="RSS10" />
          </scope>
          <scope classrefs="Element" ilk="class" line="416" lineend="484" name="Image">
            <scope classrefs="Object" ilk="class" line="420" lineend="426" name="self">
              <scope ilk="function" line="422" lineend="424" name="required_uri::RSS::" signature="required_uri ::RSS::" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="446" lineend="449" name="initialize" signature="initialize(about=nil)" />
            <scope ilk="function" line="451" lineend="462" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="465" lineend="473" name="_tags" signature="_tags" />
            <scope ilk="function" line="475" lineend="479" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="481" lineend="483" name="maker_target" signature="maker_target(maker)" />
            <import symbol="RSS10" />
          </scope>
          <scope classrefs="Element" ilk="class" line="486" lineend="554" name="Item">
            <scope classrefs="Object" ilk="class" line="490" lineend="496" name="self">
              <scope ilk="function" line="492" lineend="494" name="required_uri::RSS::" signature="required_uri ::RSS::" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="516" lineend="519" name="initialize" signature="initialize(about=nil)" />
            <scope ilk="function" line="521" lineend="532" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="535" lineend="543" name="_tags" signature="_tags" />
            <scope ilk="function" line="545" lineend="549" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="551" lineend="553" name="maker_target" signature="maker_target(maker)" />
            <import symbol="RSS10" />
          </scope>
          <scope classrefs="Element" ilk="class" line="556" lineend="627" name="Textinput">
            <scope classrefs="Object" ilk="class" line="560" lineend="566" name="self">
              <scope ilk="function" line="562" lineend="564" name="required_uri::RSS::" signature="required_uri ::RSS::" />
            </scope>
            <scope attributes="__ctor__" ilk="function" line="587" lineend="590" name="initialize" signature="initialize(about=nil)" />
            <scope ilk="function" line="592" lineend="604" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="607" lineend="616" name="_tags" signature="_tags" />
            <scope ilk="function" line="618" lineend="622" name="_attrs" signature="_attrs" />
            <scope ilk="function" line="624" lineend="626" name="maker_target" signature="maker_target(maker)" />
            <import symbol="RSS10" />
          </scope>
          <import symbol="RSS10" />
          <import symbol="RootElementMixin" />
        </scope>
        <scope ilk="namespace" line="635" lineend="648" name="ListenerMixin">
          <scope ilk="function" line="637" lineend="647" name="start_RDF" signature="start_RDF(tag_name, prefix, attrs, ns)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rss/0.9">
      <import line="1" module="rss/parser" symbol="*" />
      <scope ilk="namespace" line="3" lineend="669" name="RSS">
        <scope ilk="namespace" line="5" lineend="14" name="RSS09">
          <scope attributes="__classmethod__" ilk="function" line="9" lineend="13" name="append_features" signature="self.append_features(klass)" />
        </scope>
        <scope classrefs="Element" ilk="class" line="16" lineend="647" name="Rss">
          <scope ilk="function" line="32" lineend="32" name="rss_version" />
          <scope ilk="function" line="32" lineend="32" name="rss_version=" />
          <scope ilk="function" line="32" lineend="32" name="version" />
          <scope ilk="function" line="32" lineend="32" name="version=" />
          <scope ilk="function" line="32" lineend="32" name="encoding" />
          <scope ilk="function" line="32" lineend="32" name="encoding=" />
          <scope ilk="function" line="32" lineend="32" name="standalone" />
          <scope ilk="function" line="32" lineend="32" name="standalone=" />
          <scope attributes="__ctor__" ilk="function" line="34" lineend="36" name="initialize" signature="initialize(rss_version, version=nil, encoding=nil, standalone=nil)" />
          <scope ilk="function" line="38" lineend="44" name="items" signature="items" />
          <scope ilk="function" line="46" lineend="52" name="image" signature="image" />
          <scope ilk="function" line="54" lineend="60" name="textinput" signature="textinput" />
          <scope ilk="function" line="62" lineend="71" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
          <scope ilk="function" line="74" lineend="76" name="children" signature="children" />
          <scope ilk="function" line="78" lineend="84" name="_tags" signature="_tags" />
          <scope ilk="function" line="86" lineend="90" name="_attrs" signature="_attrs" />
          <scope classrefs="Element" ilk="class" line="92" lineend="645" name="Channel">
            <scope attributes="__ctor__" ilk="function" line="145" lineend="147" name="initialize" signature="initialize()" />
            <scope ilk="function" line="149" lineend="174" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
            <scope ilk="function" line="177" lineend="179" name="children" signature="children" />
            <scope ilk="function" line="181" lineend="208" name="_tags" signature="_tags" />
            <scope ilk="function" line="210" lineend="212" name="maker_target" signature="maker_target(maker)" />
            <scope ilk="function" line="214" lineend="228" name="setup_maker_elements" signature="setup_maker_elements(channel)" />
            <scope ilk="function" line="230" lineend="232" name="not_need_to_call_setup_maker_variables" signature="not_need_to_call_setup_maker_variables" />
            <scope classrefs="Element" ilk="class" line="234" lineend="277" name="SkipDays">
              <scope ilk="function" line="244" lineend="252" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="255" lineend="257" name="children" signature="children" />
              <scope ilk="function" line="259" lineend="263" name="_tags" signature="_tags" />
              <scope classrefs="Element" ilk="class" line="265" lineend="275" name="Day">
                <scope attributes="__ctor__" ilk="function" line="270" lineend="273" name="initialize" signature="initialize(content=nil)" />
                <import symbol="RSS09" />
              </scope>
              <import symbol="RSS09" />
            </scope>
            <scope classrefs="Element" ilk="class" line="279" lineend="327" name="SkipHours">
              <scope ilk="function" line="289" lineend="297" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="300" lineend="302" name="children" signature="children" />
              <scope ilk="function" line="304" lineend="308" name="_tags" signature="_tags" />
              <scope classrefs="Element" ilk="class" line="310" lineend="325" name="Hour">
                <scope attributes="__ctor__" ilk="function" line="315" lineend="318" name="initialize" signature="initialize(content=nil)" />
                <scope ilk="function" line="321" lineend="323" name="content=" signature="content=(value)" />
                <import symbol="RSS09" />
              </scope>
              <import symbol="RSS09" />
            </scope>
            <scope classrefs="Element" ilk="class" line="329" lineend="370" name="Image">
              <scope ilk="function" line="342" lineend="356" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="359" lineend="365" name="_tags" signature="_tags" />
              <scope ilk="function" line="367" lineend="369" name="maker_target" signature="maker_target(maker)" />
              <import symbol="RSS09" />
            </scope>
            <scope classrefs="Element" ilk="class" line="372" lineend="408" name="Cloud">
              <scope attributes="__ctor__" ilk="function" line="386" lineend="393" name="initialize" signature="initialize(domain=nil, port=nil, path=nil, rp=nil, protocol=nil)" />
              <scope ilk="function" line="395" lineend="399" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="402" lineend="406" name="_attrs" signature="_attrs" />
              <import symbol="RSS09" />
            </scope>
            <scope classrefs="Element" ilk="class" line="410" lineend="606" name="Item">
              <scope ilk="function" line="439" lineend="453" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="456" lineend="458" name="children" signature="children" />
              <scope ilk="function" line="460" lineend="473" name="_tags" signature="_tags" />
              <scope ilk="function" line="475" lineend="477" name="maker_target" signature="maker_target(maker)" />
              <scope ilk="function" line="479" lineend="483" name="setup_maker_element" signature="setup_maker_element(item)" />
              <scope classrefs="Element" ilk="class" line="485" lineend="523" name="Source">
                <scope attributes="__ctor__" ilk="function" line="497" lineend="501" name="initialize" signature="initialize(url=nil, content=nil)" />
                <scope ilk="function" line="504" lineend="506" name="_tags" signature="_tags" />
                <scope ilk="function" line="508" lineend="512" name="_attrs" signature="_attrs" />
                <scope ilk="function" line="515" lineend="517" name="maker_target" signature="maker_target(item)" />
                <scope ilk="function" line="519" lineend="522" name="setup_maker_attributes" signature="setup_maker_attributes(source)" />
                <import symbol="RSS09" />
              </scope>
              <scope classrefs="Element" ilk="class" line="525" lineend="568" name="Enclosure">
                <scope attributes="__ctor__" ilk="function" line="537" lineend="542" name="initialize" signature="initialize(url=nil, length=nil, type=nil)" />
                <scope ilk="function" line="544" lineend="548" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
                <scope ilk="function" line="551" lineend="557" name="_attrs" signature="_attrs" />
                <scope ilk="function" line="559" lineend="561" name="maker_target" signature="maker_target(item)" />
                <scope ilk="function" line="563" lineend="567" name="setup_maker_attributes" signature="setup_maker_attributes(enclosure)" />
                <import symbol="RSS09" />
              </scope>
              <scope classrefs="Element" ilk="class" line="570" lineend="604" name="Category">
                <scope attributes="__ctor__" ilk="function" line="582" lineend="586" name="initialize" signature="initialize(domain=nil, content=nil)" />
                <scope ilk="function" line="589" lineend="593" name="_attrs" signature="_attrs" />
                <scope ilk="function" line="595" lineend="597" name="maker_target" signature="maker_target(item)" />
                <scope ilk="function" line="599" lineend="602" name="setup_maker_attributes" signature="setup_maker_attributes(category)" />
                <import symbol="RSS09" />
              </scope>
              <import symbol="RSS09" />
            </scope>
            <scope classrefs="Element" ilk="class" line="608" lineend="643" name="TextInput">
              <scope ilk="function" line="617" lineend="629" name="to_s" signature="to_s(need_convert=true, indent=calc_indent)" />
              <scope ilk="function" line="632" lineend="638" name="_tags" signature="_tags" />
              <scope ilk="function" line="640" lineend="642" name="maker_target" signature="maker_target(maker)" />
              <import symbol="RSS09" />
            </scope>
            <import symbol="RSS09" />
          </scope>
          <import symbol="RSS09" />
          <import symbol="RootElementMixin" />
          <import symbol="XMLStyleSheetMixin" />
        </scope>
        <scope ilk="namespace" line="653" lineend="667" name="ListenerMixin">
          <scope ilk="function" line="655" lineend="665" name="start_rss" signature="start_rss(tag_name, prefix, attrs, ns)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rinda/tuplespace">
      <import line="1" module="monitor" symbol="*" />
      <import line="2" module="thread" symbol="*" />
      <import line="3" module="drb/drb" symbol="*" />
      <import line="4" module="rinda/rinda" symbol="*" />
      <scope ilk="namespace" line="6" lineend="588" name="Rinda">
        <scope classrefs="Object" doc="A TupleEntry is a Tuple (i.e." ilk="class" line="12" lineend="156" name="TupleEntry">
          <scope ilk="function" line="16" lineend="16" name="expires" />
          <scope ilk="function" line="16" lineend="16" name="expires=" />
          <scope attributes="__ctor__" doc="Creates a TupleEntry based on +ary+ with an optional renewer&#xA;or expiry time +sec+." ilk="function" line="25" lineend="31" name="initialize" signature="initialize(ary, sec=nil)" />
          <scope doc="Marks this TupleEntry as canceled." ilk="function" line="36" lineend="38" name="cancel" signature="cancel" />
          <scope doc="A TupleEntry is dead when it is canceled or expired." ilk="function" line="43" lineend="45" name="alive?" signature="alive?" />
          <scope doc="Return the object which makes up the tuple itself: the Array&#xA;or Hash." ilk="function" line="51" name="value" signature="value" />
          <scope doc="Returns the canceled status." ilk="function" line="56" name="canceled?" signature="canceled?" />
          <scope doc="Has this tuple expired? (true/false)." ilk="function" line="64" lineend="71" name="expired?" signature="expired?" />
          <scope doc="Reset the expiry time according to +sec_or_renewer+." ilk="function" line="83" lineend="86" name="renew" signature="renew(sec_or_renewer)" />
          <scope doc="Returns an expiry Time based on +sec+ which can be one of:&#xA;Numeric:: +sec+ seconds into the future +true+::  the expiry&#xA;time is the start of 1970 (i.e." ilk="function" line="95" lineend="104" name="make_expires" signature="make_expires(sec=nil)" />
          <scope doc="Retrieves +key+ from the tuple." ilk="function" line="109" lineend="111" name="[]" signature="[](key" />
          <scope doc="Fetches +key+ from the tuple." ilk="function" line="116" lineend="118" name="fetch" signature="fetch(key)" />
          <scope doc="The size of the tuple." ilk="function" line="123" lineend="125" name="size" signature="size" />
          <scope doc="Creates a Rinda::Tuple for +ary+." ilk="function" line="130" lineend="132" name="make_tuple" signature="make_tuple(ary)" />
          <scope doc="Returns a valid argument to make_expires and the renewer or&#xA;nil." ilk="function" line="143" lineend="154" name="get_renewer" signature="get_renewer(it)" />
          <import symbol="DRbUndumped" />
        </scope>
        <scope classrefs="TupleEntry" doc="A TemplateEntry is a Template together with expiry and&#xA;cancellation data." ilk="class" line="161" lineend="176" name="TemplateEntry">
          <scope doc="Matches this TemplateEntry against +tuple+." ilk="function" line="166" lineend="168" name="match" signature="match(tuple)" />
          <scope ilk="function" line="172" lineend="174" name="make_tuple" signature="make_tuple(ary)" />
        </scope>
        <scope classrefs="TemplateEntry" doc="&lt;i&gt;Documentation?&lt;/i&gt;" ilk="class" line="181" lineend="212" name="WaitTemplateEntry">
          <scope ilk="function" line="183" lineend="183" name="found" />
          <scope attributes="__ctor__" ilk="function" line="185" lineend="190" name="initialize" signature="initialize(place, ary, expires=nil)" />
          <scope ilk="function" line="192" lineend="195" name="cancel" signature="cancel" />
          <scope ilk="function" line="197" lineend="199" name="wait" signature="wait" />
          <scope ilk="function" line="201" lineend="204" name="read" signature="read(tuple)" />
          <scope ilk="function" line="206" lineend="210" name="signal" signature="signal" />
        </scope>
        <scope classrefs="TemplateEntry" doc="A NotifyTemplateEntry is returned by TupleSpace#notify and&#xA;is notified of TupleSpace changes." ilk="class" line="238" lineend="282" name="NotifyTemplateEntry">
          <scope attributes="__ctor__" doc="Creates a new NotifyTemplateEntry that watches +place+ for&#xA;+event+s that match +tuple+." ilk="function" line="244" lineend="249" name="initialize" signature="initialize(place, event, tuple, expires=nil)" />
          <scope doc="Called by TupleSpace to notify this NotifyTemplateEntry of a&#xA;new event." ilk="function" line="254" lineend="256" name="notify" signature="notify(ev)" />
          <scope doc="Retrieves a notification." ilk="function" line="262" lineend="267" name="pop" signature="pop" />
          <scope doc="Yields event/tuple pairs until this NotifyTemplateEntry&#xA;expires." ilk="function" line="272" lineend="280" name="each" signature="each" />
        </scope>
        <scope classrefs="Object" doc="TupleBag is an unordered collection of tuples." ilk="class" line="288" lineend="371" name="TupleBag">
          <scope attributes="__ctor__" ilk="function" line="290" lineend="292" name="initialize" signature="initialize" />
          <scope doc="+true+ if the TupleBag to see if it has any expired entries." ilk="function" line="297" lineend="304" name="has_expires?" signature="has_expires?" />
          <scope doc="Add +ary+ to the TupleBag." ilk="function" line="309" lineend="313" name="push" signature="push(ary)" />
          <scope doc="Removes +ary+ from the TupleBag." ilk="function" line="318" lineend="321" name="delete" signature="delete(ary)" />
          <scope doc="Finds all live tuples that match +template+." ilk="function" line="326" lineend="330" name="find_all" signature="find_all(template)" />
          <scope doc="Finds a live tuple that matches +template+." ilk="function" line="335" lineend="339" name="find" signature="find(template)" />
          <scope doc="Finds all tuples in the TupleBag which when treated as&#xA;templates, match +tuple+ and are alive." ilk="function" line="345" lineend="349" name="find_all_template" signature="find_all_template(tuple)" />
          <scope doc="Delete tuples which dead tuples from the TupleBag, returning&#xA;the deleted tuples." ilk="function" line="355" lineend="369" name="delete_unless_alive" signature="delete_unless_alive" />
        </scope>
        <scope classrefs="Object" doc="The Tuplespace manages access to the tuples it contains,&#xA;ensuring mutual exclusion requirements are met." ilk="class" line="380" lineend="586" name="TupleSpace">
          <scope attributes="__ctor__" doc="Creates a new TupleSpace." ilk="function" line="392" lineend="400" name="initialize" signature="initialize(period=60)" />
          <scope doc="Adds +tuple+" ilk="function" line="405" lineend="427" name="write" signature="write(tuple, sec=nil)" />
          <scope doc="Removes +tuple+" ilk="function" line="432" lineend="434" name="take" signature="take(tuple, sec=nil, &amp;block)" />
          <scope doc="Moves +tuple+ to +port+." ilk="function" line="439" lineend="471" name="move" signature="move(port, tuple, sec=nil)" />
          <scope doc="Reads +tuple+, but does not remove it." ilk="function" line="476" lineend="495" name="read" signature="read(tuple, sec=nil)" />
          <scope doc="Returns all tuples matching +tuple+. Does not remove the&#xA;found tuples." ilk="function" line="500" lineend="508" name="read_all" signature="read_all(tuple)" />
          <scope doc="Registers for notifications of +event+. Returns a&#xA;NotifyTemplateEntry." ilk="function" line="522" lineend="528" name="notify" signature="notify(event, tuple, sec=nil)" />
          <scope doc="Removes dead tuples." ilk="function" line="535" lineend="550" name="keep_clean" signature="keep_clean" />
          <scope doc="Notifies all registered listeners for +event+ of a status&#xA;change of +tuple+." ilk="function" line="556" lineend="561" name="notify_event" signature="notify_event(event, tuple)" />
          <scope doc="Creates a thread that scans the tuplespace for expired&#xA;tuples." ilk="function" line="566" lineend="574" name="start_keeper" signature="start_keeper" />
          <scope doc="Checks the tuplespace to see if it needs cleaning." ilk="function" line="579" lineend="584" name="need_keeper?" signature="need_keeper?" />
          <import symbol="DRbUndumped" />
          <import symbol="MonitorMixin" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rinda/ring">
      <import line="4" module="drb/drb" symbol="*" />
      <import line="5" module="rinda/rinda" symbol="*" />
      <import line="6" module="thread" symbol="*" />
      <import line="253" module="rinda/tuplespace" symbol="*" />
      <scope doc="Note: Rinda::Ring API is unstable." ilk="namespace" line="8" lineend="247" name="Rinda">
        <scope classrefs="Object" doc="A RingServer allows a Rinda::TupleSpace to be located via&#xA;UDP broadcasts." ilk="class" line="25" lineend="88" name="RingServer">
          <scope attributes="__ctor__" doc="Advertises +ts+ on the UDP broadcast address at +port+." ilk="function" line="32" lineend="38" name="initialize" signature="initialize(ts, port=Ring_PORT)" />
          <scope doc="Creates a thread that picks up UDP packets and passes them&#xA;to do_write for decoding." ilk="function" line="44" lineend="51" name="write_service" signature="write_service" />
          <scope doc="Extracts the response URI from +msg+ and adds it to&#xA;TupleSpace where it will be picked up by +reply_service+ for&#xA;notification." ilk="function" line="57" lineend="65" name="do_write" signature="do_write(msg)" />
          <scope doc="Creates a thread that notifies waiting clients from the&#xA;TupleSpace." ilk="function" line="70" lineend="76" name="reply_service" signature="reply_service" />
          <scope doc="Pulls lookup tuples out of the TupleSpace and sends their&#xA;DRb object the address of the local TupleSpace." ilk="function" line="82" lineend="86" name="do_reply" signature="do_reply" />
          <import symbol="DRbUndumped" />
        </scope>
        <scope classrefs="Object" doc="RingFinger is used by RingServer clients to discover the&#xA;RingServer&apos;s TupleSpace." ilk="class" line="96" lineend="216" name="RingFinger">
          <scope attributes="__classmethod__" doc="Creates a singleton RingFinger and looks for a RingServer." ilk="function" line="106" lineend="112" name="finger" signature="self.finger" />
          <scope attributes="__classmethod__" doc="Returns the first advertised TupleSpace." ilk="function" line="117" lineend="119" name="primary" signature="self.primary" />
          <scope attributes="__classmethod__" doc="Contains all discoverd TupleSpaces except for the primary." ilk="function" line="124" lineend="126" name="to_a" signature="self.to_a" />
          <scope ilk="function" line="131" lineend="131" name="broadcast_list" />
          <scope ilk="function" line="131" lineend="131" name="broadcast_list=" />
          <scope ilk="function" line="136" lineend="136" name="port" />
          <scope ilk="function" line="136" lineend="136" name="port=" />
          <scope ilk="function" line="141" lineend="141" name="primary" />
          <scope ilk="function" line="141" lineend="141" name="primary=" />
          <scope attributes="__ctor__" doc="Creates a new RingFinger that will look for RingServers at&#xA;+port+ on the addresses in +broadcast_list+." ilk="function" line="147" lineend="152" name="initialize" signature="initialize(broadcast_list=@@broadcast_list, port=Ring_PORT)" />
          <scope doc="Contains all discovered TupleSpaces except for the primary." ilk="function" line="157" lineend="159" name="to_a" signature="to_a" />
          <scope doc="Iterates over all discovered TupleSpaces starting with the&#xA;primary." ilk="function" line="164" lineend="169" name="each" signature="each" />
          <scope doc="Looks up RingServers waiting +timeout+ seconds." ilk="function" line="176" lineend="192" name="lookup_ring" signature="lookup_ring(timeout=5, &amp;block)" />
          <scope doc="Returns the first found remote TupleSpace." ilk="function" line="198" lineend="214" name="lookup_ring_any" signature="lookup_ring_any(timeout=5)" />
        </scope>
        <scope classrefs="Object" doc="RingProvider uses a RingServer advertised TupleSpace as a&#xA;name service." ilk="class" line="226" lineend="245" name="RingProvider">
          <scope attributes="__ctor__" doc="Creates a RingProvider that will provide a +klass+ service&#xA;running on +front+, with a +description+." ilk="function" line="232" lineend="235" name="initialize" signature="initialize(klass, front, desc, renewer = nil)" />
          <scope doc="Advertises this service on the primary remote TupleSpace." ilk="function" line="240" lineend="243" name="provide" signature="provide" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rinda/rinda">
      <import line="1" module="drb/drb" symbol="*" />
      <import line="2" module="thread" symbol="*" />
      <scope doc="A module to implement the Linda distributed computing&#xA;paradigm in Ruby." ilk="namespace" line="19" lineend="282" name="Rinda">
        <scope classrefs="RuntimeError" doc="Rinda error base class" ilk="class" line="24" lineend="24" name="RindaError" />
        <scope classrefs="RindaError" doc="Raised when a hash-based tuple has an invalid key." ilk="class" line="29" lineend="29" name="InvalidHashTupleKey" />
        <scope classrefs="ThreadError" doc="Raised when trying to use a canceled tuple." ilk="class" line="34" lineend="34" name="RequestCanceledError" />
        <scope classrefs="ThreadError" doc="Raised when trying to use an expired tuple." ilk="class" line="39" lineend="39" name="RequestExpiredError" />
        <scope classrefs="Object" doc="A tuple is the elementary object in Rinda programming." ilk="class" line="46" lineend="125" name="Tuple">
          <scope attributes="__ctor__" doc="Creates a new Tuple from +ary_or_hash+ which must be an&#xA;Array or Hash." ilk="function" line="51" lineend="57" name="initialize" signature="initialize(ary_or_hash)" />
          <scope doc="The number of elements in the tuple." ilk="function" line="62" lineend="64" name="size" signature="size" />
          <scope doc="Accessor method for elements of the tuple." ilk="function" line="69" lineend="71" name="[]" signature="[](k" />
          <scope doc="Fetches item +k+ from the tuple." ilk="function" line="76" lineend="78" name="fetch" signature="fetch(k)" />
          <scope doc="Iterate through the tuple, yielding the index or key, and&#xA;the value, thus ensuring arrays are iterated similarly to&#xA;hashes." ilk="function" line="84" lineend="90" name="each" signature="each" />
          <scope doc="Return the tuple itself" ilk="function" line="94" lineend="96" name="value" signature="value" />
          <scope ilk="function" line="100" lineend="102" name="hash?" signature="hash?(ary_or_hash)" />
          <scope doc="Munges +ary+ into a valid Tuple." ilk="function" line="107" lineend="112" name="init_with_ary" signature="init_with_ary(ary)" />
          <scope doc="Ensures +hash+ is a valid Tuple." ilk="function" line="117" lineend="123" name="init_with_hash" signature="init_with_hash(hash)" />
        </scope>
        <scope classrefs="Tuple" doc="Templates are used to match tuples in Rinda." ilk="class" line="130" lineend="173" name="Template">
          <scope doc="Matches this template against +tuple+." ilk="function" line="148" lineend="164" name="match" signature="match(tuple)" />
          <scope doc="Alias for #match." ilk="function" line="169" lineend="171" name="===" signature="===(tuple" />
        </scope>
        <scope classrefs="Object" doc="&lt;i&gt;Documentation?&lt;/i&gt;" ilk="class" line="178" lineend="203" name="DRbObjectTemplate">
          <scope attributes="__ctor__" doc="Creates a new DRbObjectTemplate that will match against&#xA;+uri+ and +ref+." ilk="function" line="183" lineend="186" name="initialize" signature="initialize(uri=nil, ref=nil)" />
          <scope doc="This DRbObjectTemplate matches +ro+ if the remote object&apos;s&#xA;drburi and drbref are the same." ilk="function" line="192" lineend="201" name="===" signature="===(ro" />
        </scope>
        <scope classrefs="Object" doc="TupleSpaceProxy allows a remote Tuplespace to appear as&#xA;local." ilk="class" line="208" lineend="256" name="TupleSpaceProxy">
          <scope attributes="__ctor__" doc="Creates a new TupleSpaceProxy to wrap +ts+." ilk="function" line="213" lineend="215" name="initialize" signature="initialize(ts)" />
          <scope doc="Adds +tuple+ to the proxied TupleSpace. See&#xA;TupleSpace#write." ilk="function" line="220" lineend="222" name="write" signature="write(tuple, sec=nil)" />
          <scope doc="Takes +tuple+ from the proxied TupleSpace. See&#xA;TupleSpace#take." ilk="function" line="227" lineend="231" name="take" signature="take(tuple, sec=nil, &amp;block)" />
          <scope doc="Reads +tuple+ from the proxied TupleSpace. See&#xA;TupleSpace#read." ilk="function" line="236" lineend="238" name="read" signature="read(tuple, sec=nil, &amp;block)" />
          <scope doc="Reads all tuples matching +tuple+ from the proxied&#xA;TupleSpace." ilk="function" line="244" lineend="246" name="read_all" signature="read_all(tuple)" />
          <scope doc="Registers for notifications of event +ev+ on the proxied&#xA;TupleSpace." ilk="function" line="252" lineend="254" name="notify" signature="notify(ev, tuple, sec=nil)" />
        </scope>
        <scope classrefs="Object" doc="An SimpleRenewer allows a TupleSpace to check if a&#xA;TupleEntry is still alive." ilk="class" line="262" lineend="280" name="SimpleRenewer">
          <scope attributes="__ctor__" doc="Creates a new SimpleRenewer that keeps an object alive for&#xA;another +sec+ seconds." ilk="function" line="270" lineend="272" name="initialize" signature="initialize(sec=180)" />
          <scope doc="Called by the TupleSpace to check if the object is still&#xA;alive." ilk="function" line="277" lineend="279" name="renew" signature="renew" />
          <import symbol="DRbUndumped" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/xpath_parser">
      <import line="1" module="rexml/namespace" symbol="*" />
      <import line="2" module="rexml/xmltokens" symbol="*" />
      <import line="3" module="rexml/attribute" symbol="*" />
      <import line="4" module="rexml/syncenumerator" symbol="*" />
      <import line="5" module="rexml/parsers/xpathparser" symbol="*" />
      <scope classrefs="Object" ilk="class" line="7" lineend="11" name="Object">
        <scope ilk="function" line="8" lineend="10" name="dclone" signature="dclone" />
      </scope>
      <scope classrefs="Object" ilk="class" line="12" lineend="16" name="Symbol">
        <scope ilk="function" line="13" lineend="15" name="dclone" signature="dclone" />
      </scope>
      <scope classrefs="Object" ilk="class" line="17" lineend="24" name="Array">
        <scope ilk="function" line="18" lineend="23" name="dclone" signature="dclone" />
      </scope>
      <scope ilk="namespace" line="26" lineend="741" name="REXML">
        <scope classrefs="Object" doc="You don&apos;t want to use this class. Really." ilk="class" line="31" lineend="740" name="XPathParser">
          <scope attributes="__ctor__" ilk="function" line="35" lineend="39" name="initialize" signature="initialize( )" />
          <scope ilk="function" line="41" lineend="44" name="namespaces=" signature="namespaces=( namespaces={} )" />
          <scope ilk="function" line="46" lineend="49" name="variables=" signature="variables=( vars={} )" />
          <scope ilk="function" line="51" lineend="57" name="parse" signature="parse" />
          <scope ilk="function" line="59" lineend="65" name="get_first" signature="get_first" />
          <scope ilk="function" line="67" lineend="70" name="predicate" signature="predicate" />
          <scope ilk="function" line="72" lineend="74" name="[]=" signature="[]=( variable_name" />
          <scope doc="Performs a depth-first (document order) XPath search, and&#xA;returns the first match." ilk="function" line="81" lineend="119" name="first" signature="first( path_stack, node )" />
          <scope ilk="function" line="122" lineend="128" name="match" signature="match( path_stack, nodeset )" />
          <scope doc="Expr takes a stack of path elements and a set of nodes&#xA;(either a Parent or an Array and returns an Array of&#xA;matching nodes" ilk="function" line="137" lineend="460" name="expr" signature="expr( path_stack, nodeset, context=nil )" />
          <scope doc="FIXME The next two methods are BAD MOJO! This is my achilles&#xA;heel." ilk="function" line="471" lineend="480" name="descendant_or_self" signature="descendant_or_self( path_stack, nodeset )" />
          <scope ilk="function" line="482" lineend="493" name="d_o_s" signature="d_o_s( p, ns, r )" />
          <scope doc="Reorders an array of nodes so that they are in document&#xA;order It tries to do this efficiently." ilk="function" line="504" lineend="517" name="document_order" signature="document_order( array_of_nodes )" />
          <scope ilk="function" line="520" lineend="525" name="recurse" signature="recurse( nodeset, &amp;block )" />
          <scope doc="Builds a nodeset of all of the preceding nodes of the&#xA;supplied node, in reverse document order preceding::&#xA;includes every element in the document that precedes this&#xA;node, except for ancestors" ilk="function" line="533" lineend="555" name="preceding" signature="preceding( node )" />
          <scope ilk="function" line="557" lineend="573" name="preceding_node_of" signature="preceding_node_of( node )" />
          <scope ilk="function" line="575" lineend="586" name="following" signature="following( node )" />
          <scope ilk="function" line="588" lineend="596" name="following_node_of" signature="following_node_of( node )" />
          <scope ilk="function" line="598" lineend="609" name="next_sibling_node" signature="next_sibling_node(node)" />
          <scope ilk="function" line="611" lineend="622" name="norm" signature="norm" />
          <scope ilk="function" line="624" lineend="715" name="equality_relational_compare" signature="equality_relational_compare( set1, op, set2 )" />
          <scope ilk="function" line="717" lineend="739" name="compare" signature="compare" />
          <import symbol="XMLTokens" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/xpath">
      <import line="1" module="rexml/functions" symbol="*" />
      <import line="2" module="rexml/xpath_parser" symbol="*" />
      <scope ilk="namespace" line="4" lineend="66" name="REXML">
        <scope classrefs="Object" doc="Wrapper class. Use this class to access the XPath functions." ilk="class" line="6" name="XPath">
          <import symbol="Functions" />
        </scope>
        <scope ilk="function" line="22" lineend="66" name="XPath::first" signature="XPath::first">
          <scope doc="Itterates over nodes that match the given path, calling the&#xA;supplied block with the match." ilk="function" line="45" lineend="54" name="XPath::each" signature="XPath::each" />
          <scope doc="Returns an array of nodes matching a given XPath." ilk="function" line="57" lineend="64" name="XPath::match" signature="XPath::match" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/xmltokens">
      <scope ilk="namespace" line="1" lineend="18" name="REXML">
        <scope doc="Defines a number of tokens used for parsing XML." ilk="namespace" line="4" lineend="17" name="XMLTokens" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/xmldecl">
      <import line="1" module="rexml/encoding" symbol="*" />
      <import line="2" module="rexml/source" symbol="*" />
      <scope ilk="namespace" line="4" lineend="114" name="REXML">
        <scope classrefs="Child" doc="NEEDS DOCUMENTATION" ilk="class" line="6" lineend="48" name="XMLDecl">
          <scope ilk="function" line="15" lineend="15" name="version" />
          <scope ilk="function" line="15" lineend="15" name="version=" />
          <scope ilk="function" line="15" lineend="15" name="standalone" />
          <scope ilk="function" line="15" lineend="15" name="standalone=" />
          <scope ilk="function" line="16" lineend="16" name="writeencoding" />
          <scope attributes="__ctor__" ilk="function" line="18" lineend="34" name="initialize" signature="initialize(version=DEFAULT_VERSION, encoding=nil, standalone=nil)" />
          <scope ilk="function" line="36" lineend="38" name="clone" signature="clone" />
          <scope ilk="function" line="40" lineend="48" name="write" signature="write" />
          <import symbol="Encoding" />
        </scope>
        <scope ilk="function" line="52" lineend="57" name="==" signature="==( other" />
        <scope ilk="function" line="59" lineend="63" name="xmldecl" signature="xmldecl" />
        <scope ilk="function" line="65" lineend="67" name="node_type" signature="node_type" />
        <scope ilk="function" line="72" lineend="81" name="encoding=" signature="encoding=( enc )" />
        <scope doc="Only use this if you do not want the XML declaration to be&#xA;written; this object is ignored by the XML writer." ilk="function" line="88" lineend="92" name="XMLDecl.default" signature="XMLDecl.default" />
        <scope ilk="function" line="94" lineend="96" name="nowrite" signature="nowrite" />
        <scope ilk="function" line="98" lineend="100" name="dowrite" signature="dowrite" />
        <scope ilk="function" line="102" lineend="104" name="inspect" signature="inspect" />
        <scope ilk="function" line="107" lineend="112" name="content" signature="content(enc)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/validation/validationexception">
      <scope ilk="namespace" line="1" lineend="9" name="REXML">
        <scope ilk="namespace" line="2" lineend="8" name="Validation">
          <scope classrefs="RuntimeError" ilk="class" line="3" lineend="7" name="ValidationException">
            <scope attributes="__ctor__" ilk="function" line="4" lineend="6" name="initialize" signature="initialize" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/validation/validation">
      <import line="1" module="rexml/validation/validationexception" symbol="*" />
      <scope ilk="namespace" line="3" lineend="155" name="REXML">
        <scope ilk="namespace" line="4" lineend="154" name="Validation">
          <scope ilk="namespace" line="5" lineend="77" name="Validator">
            <scope ilk="function" line="7" lineend="13" name="reset" signature="reset" />
            <scope ilk="function" line="14" lineend="16" name="dump" signature="dump" />
            <scope ilk="function" line="17" lineend="76" name="validate" signature="validate( event )" />
          </scope>
          <scope classrefs="Object" ilk="class" line="79" lineend="153" name="Event">
            <scope attributes="__ctor__" ilk="function" line="80" lineend="83" name="initialize" signature="initialize(event_type, event_arg=nil )" />
            <scope ilk="function" line="85" lineend="85" name="event_type" />
            <scope ilk="function" line="86" lineend="86" name="event_arg" />
            <scope ilk="function" line="86" lineend="86" name="event_arg=" />
            <scope ilk="function" line="88" lineend="90" name="done?" signature="done?" />
            <scope ilk="function" line="92" lineend="94" name="single?" signature="single?" />
            <scope ilk="function" line="96" lineend="139" name="matches?" signature="matches?( event )" />
            <scope ilk="function" line="141" lineend="144" name="==" signature="==( other" />
            <scope ilk="function" line="146" lineend="148" name="to_s" signature="to_s" />
            <scope ilk="function" line="150" lineend="152" name="inspect" signature="inspect" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/validation/relaxng">
      <import line="1" module="rexml/validation/validation" symbol="*" />
      <import line="2" module="rexml/parsers/baseparser" symbol="*" />
      <scope ilk="namespace" line="4" lineend="559" name="REXML">
        <scope ilk="namespace" line="5" lineend="558" name="Validation">
          <scope classrefs="Object" doc="Implemented: * empty * element * attribute * text" ilk="class" line="34" lineend="124" name="RelaxNG">
            <scope ilk="function" line="40" lineend="40" name="current" />
            <scope ilk="function" line="40" lineend="40" name="current=" />
            <scope ilk="function" line="41" lineend="41" name="count" />
            <scope ilk="function" line="41" lineend="41" name="count=" />
            <scope ilk="function" line="42" lineend="42" name="references" />
            <scope attributes="__ctor__" doc="FIXME: Namespaces" ilk="function" line="45" lineend="119" name="initialize" signature="initialize" />
            <scope ilk="function" line="121" lineend="123" name="receive" signature="receive" />
            <import symbol="Validator" />
          </scope>
          <scope classrefs="Object" ilk="class" line="126" lineend="253" name="State">
            <scope attributes="__ctor__" ilk="function" line="127" lineend="134" name="initialize" signature="initialize( context )" />
            <scope ilk="function" line="136" lineend="140" name="reset" signature="reset" />
            <scope ilk="function" line="142" lineend="144" name="previous=" signature="previous=( previous )" />
            <scope ilk="function" line="146" lineend="175" name="next" signature="next( event )" />
            <scope ilk="function" line="177" lineend="183" name="to_s" signature="to_s" />
            <scope ilk="function" line="185" lineend="190" name="inspect" signature="inspect" />
            <scope ilk="function" line="192" lineend="194" name="expected" signature="expected" />
            <scope ilk="function" line="196" lineend="198" name="&lt;&lt;" signature="&lt;&lt;( event" />
            <scope ilk="function" line="202" lineend="208" name="expand_ref_in" signature="expand_ref_in( arry, ind )" />
            <scope ilk="function" line="210" lineend="218" name="add_event_to_arry" signature="add_event_to_arry( arry, evt )" />
            <scope ilk="function" line="220" lineend="252" name="generate_event" signature="generate_event( event )" />
          </scope>
          <scope classrefs="State" ilk="class" line="256" lineend="260" name="Sequence">
            <scope ilk="function" line="257" lineend="259" name="matches?" signature="matches?(event)" />
          </scope>
          <scope classrefs="State" ilk="class" line="263" lineend="283" name="Optional">
            <scope ilk="function" line="264" lineend="272" name="next" signature="next( event )" />
            <scope ilk="function" line="274" lineend="277" name="matches?" signature="matches?(event)" />
            <scope ilk="function" line="279" lineend="282" name="expected" signature="expected" />
          </scope>
          <scope classrefs="Optional" ilk="class" line="286" lineend="312" name="ZeroOrMore">
            <scope ilk="function" line="287" lineend="306" name="next" signature="next( event )" />
            <scope ilk="function" line="308" lineend="311" name="expected" signature="expected" />
          </scope>
          <scope classrefs="State" ilk="class" line="315" lineend="359" name="OneOrMore">
            <scope attributes="__ctor__" ilk="function" line="316" lineend="319" name="initialize" signature="initialize" />
            <scope ilk="function" line="321" lineend="324" name="reset" signature="reset" />
            <scope ilk="function" line="326" lineend="345" name="next" signature="next( event )" />
            <scope ilk="function" line="347" lineend="350" name="matches?" signature="matches?( event )" />
            <scope ilk="function" line="352" lineend="358" name="expected" signature="expected" />
          </scope>
          <scope classrefs="State" ilk="class" line="362" lineend="445" name="Choice">
            <scope attributes="__ctor__" ilk="function" line="363" lineend="366" name="initialize" signature="initialize" />
            <scope ilk="function" line="368" lineend="372" name="reset" signature="reset" />
            <scope ilk="function" line="374" lineend="376" name="&lt;&lt;" signature="&lt;&lt;( event" />
            <scope ilk="function" line="378" lineend="404" name="next" signature="next( event )" />
            <scope ilk="function" line="406" lineend="409" name="matches?" signature="matches?( event )" />
            <scope ilk="function" line="411" lineend="422" name="expected" signature="expected" />
            <scope ilk="function" line="424" lineend="426" name="inspect" signature="inspect" />
            <scope ilk="function" line="429" lineend="444" name="add_event_to_arry" signature="add_event_to_arry( arry, evt )" />
          </scope>
          <scope classrefs="Choice" ilk="class" line="448" lineend="545" name="Interleave">
            <scope attributes="__ctor__" ilk="function" line="449" lineend="452" name="initialize" signature="initialize" />
            <scope ilk="function" line="454" lineend="456" name="reset" signature="reset" />
            <scope ilk="function" line="458" lineend="485" name="next_current" signature="next_current( event )" />
            <scope ilk="function" line="488" lineend="522" name="next" signature="next( event )" />
            <scope ilk="function" line="524" lineend="527" name="matches?" signature="matches?( event )" />
            <scope ilk="function" line="529" lineend="540" name="expected" signature="expected" />
            <scope ilk="function" line="542" lineend="544" name="inspect" signature="inspect" />
          </scope>
          <scope classrefs="Object" ilk="class" line="547" lineend="557" name="Ref">
            <scope attributes="__ctor__" ilk="function" line="548" lineend="550" name="initialize" signature="initialize" />
            <scope ilk="function" line="551" lineend="553" name="to_s" signature="to_s" />
            <scope ilk="function" line="554" lineend="556" name="inspect" signature="inspect" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/text">
      <import line="1" module="rexml/entity" symbol="*" />
      <import line="2" module="rexml/doctype" symbol="*" />
      <import line="3" module="rexml/child" symbol="*" />
      <import line="4" module="rexml/doctype" symbol="*" />
      <import line="5" module="rexml/parseexception" symbol="*" />
      <scope ilk="namespace" line="7" lineend="342" name="REXML">
        <scope classrefs="Child" doc="Represents text nodes in an XML document" ilk="class" line="9" lineend="341" name="Text">
          <scope ilk="function" line="19" lineend="19" name="raw" />
          <scope ilk="function" line="19" lineend="19" name="raw=" />
          <scope attributes="__ctor__" doc="Constructor +arg+ if a String, the content is set to the&#xA;String." ilk="function" line="59" lineend="93" name="initialize" signature="initialize(arg, respect_whitespace=false, parent=nil, raw=nil, entity_filter=nil, illegal=ILLEGAL )" />
          <scope ilk="function" line="95" lineend="97" name="node_type" signature="node_type" />
          <scope ilk="function" line="99" lineend="101" name="empty?" signature="empty?" />
          <scope ilk="function" line="104" lineend="106" name="clone" signature="clone" />
          <scope doc="Appends text to this text node." ilk="function" line="111" lineend="113" name="&lt;&lt;" signature="&lt;&lt;( to_append" />
          <scope doc="+other+ a String or a Text +returns+ the result of (to_s &lt;=&gt;&#xA;arg.to_s)" ilk="function" line="118" lineend="120" name="&lt;=&gt;" signature="&lt;=&gt;( other" />
          <scope doc="Returns the string value of this text node." ilk="function" line="136" lineend="147" name="to_s" signature="to_s" />
          <scope ilk="function" line="149" lineend="151" name="inspect" signature="inspect" />
          <scope doc="Returns the string value of this text." ilk="function" line="166" lineend="174" name="value" signature="value" />
          <scope ilk="function" line="176" lineend="185" name="wrap" signature="wrap(string, width, addnewline=false)" />
          <scope doc="Sets the contents of this text node." ilk="function" line="194" lineend="199" name="value=" signature="value=( val )" />
          <scope ilk="function" line="201" lineend="211" name="indent_text" signature="indent_text(string, level=1, style=&quot;\t&quot;, indentfirstline=true)" />
          <scope ilk="function" line="213" lineend="223" name="write" signature="write( writer, indent=-1, transitive=false, ie_hack=false )" />
          <scope doc="FIXME This probably won&apos;t work properly" ilk="function" line="227" lineend="231" name="xpath" signature="xpath" />
          <scope doc="Writes out text, substituting special characters beforehand." ilk="function" line="247" lineend="257" name="write_with_substitution" signature="write_with_substitution" />
          <scope attributes="__classmethod__" doc="Reads text, substituting entities" ilk="function" line="260" lineend="282" name="read_with_substitution" signature="Text::read_with_substitution( input, illegal=nil )" />
          <scope attributes="__classmethod__" doc="Escapes all possible entities" ilk="function" line="286" lineend="305" name="normalize" signature="Text::normalize( input, doctype=nil, entity_filter=nil )" />
          <scope attributes="__classmethod__" doc="Unescapes all possible entities" ilk="function" line="308" lineend="340" name="unnormalize" signature="Text::unnormalize( string, doctype=nil, filter=nil, illegal=nil )" />
          <import symbol="Comparable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/syncenumerator">
      <scope ilk="namespace" line="1" lineend="33" name="REXML">
        <scope classrefs="Object" ilk="class" line="2" lineend="32" name="SyncEnumerator">
          <scope attributes="__ctor__" doc="Creates a new SyncEnumerator which enumerates rows of given&#xA;Enumerable objects." ilk="function" line="7" lineend="11" name="initialize" signature="initialize(*enums)" />
          <scope doc="Returns the number of enumerated Enumerable objects, i.e." ilk="function" line="15" lineend="17" name="size" signature="size" />
          <scope doc="Returns the number of enumerated Enumerable objects, i.e." ilk="function" line="21" lineend="23" name="length" signature="length" />
          <scope doc="Enumerates rows of the Enumerable objects." ilk="function" line="26" lineend="31" name="each" signature="each" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/streamlistener">
      <scope ilk="namespace" line="1" lineend="92" name="REXML">
        <scope doc="A template for stream parser listeners." ilk="namespace" line="6" lineend="91" name="StreamListener">
          <scope doc="Called when a tag is encountered." ilk="function" line="13" lineend="14" name="tag_start" signature="tag_start" />
          <scope doc="Called when the end tag is reached." ilk="function" line="18" lineend="19" name="tag_end" signature="tag_end" />
          <scope doc="Called when text is encountered in the document @p text the&#xA;text content." ilk="function" line="22" lineend="23" name="text" signature="text" />
          <scope doc="Called when an instruction is encountered." ilk="function" line="28" lineend="29" name="instruction" signature="instruction" />
          <scope doc="Called when a comment is encountered." ilk="function" line="32" lineend="33" name="comment" signature="comment" />
          <scope doc="Handles a doctype declaration." ilk="function" line="40" lineend="41" name="doctype" signature="doctype" />
          <scope doc="Called when the doctype is done" ilk="function" line="43" lineend="44" name="doctype_end" signature="doctype_end" />
          <scope doc="If a doctype includes an ATTLIST declaration, it will cause&#xA;this method to be called." ilk="function" line="50" lineend="51" name="attlistdecl" signature="attlistdecl" />
          <scope doc="&lt;!ELEMENT ...&gt;" ilk="function" line="53" lineend="54" name="elementdecl" signature="elementdecl" />
          <scope doc="&lt;!ENTITY ...&gt; The argument passed to this method is an array&#xA;of the entity declaration." ilk="function" line="71" lineend="72" name="entitydecl" signature="entitydecl" />
          <scope doc="&lt;!NOTATION ...&gt;" ilk="function" line="74" lineend="75" name="notationdecl" signature="notationdecl" />
          <scope doc="Called when %foo; is encountered in a doctype declaration." ilk="function" line="78" lineend="79" name="entity" signature="entity" />
          <scope doc="Called when &lt;![CDATA[ ... ]]&gt; is encountered in a document." ilk="function" line="82" lineend="83" name="cdata" signature="cdata" />
          <scope doc="Called when an XML PI is encountered in the document." ilk="function" line="89" lineend="90" name="xmldecl" signature="xmldecl" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/source">
      <import line="1" module="rexml/encoding" symbol="*" />
      <scope ilk="namespace" line="3" lineend="233" name="REXML">
        <scope classrefs="Object" doc="Generates Source-s. USE THIS CLASS." ilk="class" line="5" lineend="22" name="SourceFactory">
          <scope attributes="__classmethod__" doc="Generates a Source object @param arg Either a String, or an&#xA;IO @return a Source, or nil if a bad argument was given" ilk="function" line="9" lineend="22" name="create_from" signature="SourceFactory::create_from" />
        </scope>
        <scope classrefs="Object" doc="A Source can be searched for patterns, and wraps buffers and&#xA;other objects and provides consumption of text" ilk="class" line="28" name="Source">
          <scope ilk="function" line="31" lineend="31" name="buffer" />
          <scope ilk="function" line="33" lineend="33" name="line" />
          <scope ilk="function" line="34" lineend="34" name="encoding" />
          <scope attributes="__ctor__" doc="Constructor @param arg must be a String, and should be a&#xA;valid XML document" ilk="function" line="38" lineend="42" name="initialize" signature="initialize(arg)" />
          <scope doc="Inherited from Encoding Overridden to support optimized&#xA;en/decoding" ilk="function" line="46" lineend="55" name="encoding=" signature="encoding=(enc)" />
          <scope doc="Scans the source for a given pattern." ilk="function" line="73" lineend="78" name="scan" signature="scan(pattern, cons=false)" />
          <scope ilk="function" line="80" lineend="81" name="read" signature="read" />
          <scope ilk="function" line="83" lineend="85" name="consume" signature="consume( pattern )" />
          <scope ilk="function" line="87" lineend="89" name="match_to" signature="match_to( char, pattern )" />
          <scope ilk="function" line="91" lineend="95" name="match_to_consume" signature="match_to_consume( char, pattern )" />
          <scope ilk="function" line="97" lineend="101" name="match" signature="match(pattern, cons=false)" />
          <scope doc="@return true if the Source is exhausted" ilk="function" line="104" lineend="106" name="empty?" signature="empty?" />
          <import symbol="Encoding" />
        </scope>
        <scope ilk="function" line="108" lineend="110" name="position" signature="position" />
        <scope doc="@return the current line in the source" ilk="function" line="113" lineend="118" name="current_line" signature="current_line" />
        <scope classrefs="Source" doc="A Source that wraps an IO." ilk="class" line="123" lineend="143" name="IOSource">
          <scope attributes="__ctor__" doc="attr_reader :block_size block_size has been deprecated" ilk="function" line="127" lineend="143" name="initialize" signature="initialize(arg, block_size=500)" />
        </scope>
        <scope ilk="function" line="147" lineend="170" name="scan" signature="scan(pattern, cons=false)" />
        <scope ilk="function" line="172" lineend="180" name="read" signature="read" />
        <scope ilk="function" line="182" lineend="184" name="consume" signature="consume( pattern )" />
        <scope ilk="function" line="186" lineend="202" name="match" signature="match( pattern, cons=false )" />
        <scope ilk="function" line="204" lineend="206" name="empty?" signature="empty?" />
        <scope ilk="function" line="208" lineend="210" name="position" signature="position" />
        <scope doc="@return the current line in the source" ilk="function" line="213" lineend="223" name="current_line" signature="current_line" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/sax2listener">
      <scope ilk="namespace" line="1" lineend="97" name="REXML">
        <scope doc="A template for stream parser listeners." ilk="namespace" line="22" name="SAX2Listener">
          <scope ilk="function" line="23" lineend="24" name="start_document" signature="start_document" />
          <scope ilk="function" line="25" lineend="26" name="end_document" signature="end_document" />
          <scope ilk="function" line="27" lineend="28" name="start_prefix_mapping" signature="start_prefix_mapping" />
          <scope ilk="function" line="29" lineend="30" name="end_prefix_mapping" signature="end_prefix_mapping" />
          <scope ilk="function" line="31" lineend="32" name="start_element" signature="start_element" />
          <scope ilk="function" line="33" lineend="34" name="end_element" signature="end_element" />
          <scope ilk="function" line="35" lineend="36" name="characters" signature="characters" />
          <scope ilk="function" line="37" lineend="38" name="processing_instruction" signature="processing_instruction" />
          <scope doc="Handles a doctype declaration." ilk="function" line="45" lineend="46" name="doctype" signature="doctype" />
          <scope doc="If a doctype includes an ATTLIST declaration, it will cause&#xA;this method to be called." ilk="function" line="52" lineend="53" name="attlistdecl" signature="attlistdecl(element, pairs, contents)" />
          <scope doc="&lt;!ELEMENT ...&gt;" ilk="function" line="55" lineend="56" name="elementdecl" signature="elementdecl" />
          <scope doc="&lt;!ENTITY ...&gt; The argument passed to this method is an array&#xA;of the entity declaration." ilk="function" line="73" lineend="74" name="entitydecl" signature="entitydecl" />
          <scope doc="&lt;!NOTATION ...&gt;" ilk="function" line="76" lineend="77" name="notationdecl" signature="notationdecl" />
          <scope doc="Called when &lt;![CDATA[ ... ]]&gt; is encountered in a document." ilk="function" line="80" lineend="81" name="cdata" signature="cdata" />
          <scope doc="Called when an XML PI is encountered in the document." ilk="function" line="88" lineend="89" name="xmldecl" signature="xmldecl" />
          <scope doc="Called when a comment is encountered." ilk="function" line="92" lineend="93" name="comment" signature="comment" />
        </scope>
        <scope ilk="function" line="94" lineend="95" name="progress" signature="progress" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/rexml">
      <scope doc="REXML is an XML toolkit for Ruby[http://www.ruby-lang.org],&#xA;in Ruby." ilk="namespace" line="22" lineend="29" name="REXML" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/quickpath">
      <import line="1" module="rexml/functions" symbol="*" />
      <import line="2" module="rexml/xmltokens" symbol="*" />
      <scope ilk="namespace" line="4" lineend="266" name="REXML">
        <scope classrefs="Object" ilk="class" line="5" lineend="265" name="QuickPath">
          <scope attributes="__classmethod__" ilk="function" line="11" lineend="13" name="first" signature="QuickPath::first" />
          <scope attributes="__classmethod__" ilk="function" line="15" lineend="18" name="each" signature="QuickPath::each" />
          <scope attributes="__classmethod__" ilk="function" line="20" lineend="43" name="match" signature="QuickPath::match" />
          <scope attributes="__classmethod__" doc="Given an array of nodes it filters the array based on the&#xA;path." ilk="function" line="48" lineend="104" name="filter" signature="QuickPath::filter" />
          <scope attributes="__classmethod__" ilk="function" line="106" lineend="142" name="axe" signature="QuickPath::axe( elements, axe_name, rest )" />
          <scope attributes="__classmethod__" doc="A predicate filters a node-set with respect to an axis to&#xA;produce a new node-set." ilk="function" line="160" lineend="204" name="predicate" signature="QuickPath::predicate( elements, path )" />
          <scope attributes="__classmethod__" ilk="function" line="206" lineend="208" name="attribute" signature="QuickPath::attribute( name )" />
          <scope attributes="__classmethod__" ilk="function" line="210" lineend="212" name="name" signature="QuickPath::name()" />
          <scope attributes="__classmethod__" ilk="function" line="214" lineend="220" name="method_missing" signature="QuickPath::method_missing( id, *args )" />
          <scope attributes="__classmethod__" ilk="function" line="222" lineend="238" name="function" signature="QuickPath::function( elements, fname, rest )" />
          <scope attributes="__classmethod__" ilk="function" line="240" lineend="264" name="parse_args" signature="QuickPath::parse_args( element, string )" />
          <import symbol="Functions" />
          <import symbol="XMLTokens" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/xpathparser">
      <import line="1" module="rexml/namespace" symbol="*" />
      <import line="2" module="rexml/xmltokens" symbol="*" />
      <scope ilk="namespace" line="4" lineend="692" name="REXML">
        <scope ilk="namespace" line="5" lineend="691" name="Parsers">
          <scope classrefs="Object" doc="You don&apos;t want to use this class. Really." ilk="class" line="10" lineend="690" name="XPathParser">
            <scope ilk="function" line="14" lineend="17" name="namespaces=" signature="namespaces=( namespaces )" />
            <scope ilk="function" line="19" lineend="25" name="parse" signature="parse" />
            <scope ilk="function" line="27" lineend="31" name="predicate" signature="predicate" />
            <scope ilk="function" line="33" lineend="89" name="abbreviate" signature="abbreviate( path )" />
            <scope ilk="function" line="91" lineend="128" name="expand" signature="expand( path )" />
            <scope ilk="function" line="130" lineend="178" name="predicate_to_string" signature="predicate_to_string( path, &amp;block )" />
            <scope doc="LocationPath | RelativeLocationPath | &apos;/&apos;&#xA;RelativeLocationPath? | &apos;//&apos; RelativeLocationPath" ilk="function" line="185" lineend="200" name="LocationPath" signature="LocationPath" />
            <scope doc="RelativeLocationPath | Step | (AXIS_NAME &apos;::&apos; | &apos;@&apos; | &apos;&apos;)&#xA;AxisSpecifier NodeTest Predicate" ilk="function" line="211" lineend="268" name="RelativeLocationPath" signature="RelativeLocationPath" />
            <scope doc="Returns a 1-1 map of the nodeset The contents of the&#xA;resulting array are either: true/false, if a positive match&#xA;String, if a name match NodeTest" ilk="function" line="283" lineend="323" name="NodeTest" signature="NodeTest" />
            <scope doc="Filters the supplied nodeset on the predicate(s)" ilk="function" line="326" lineend="344" name="Predicate" signature="Predicate" />
            <scope doc="The following return arrays of true/false, a 1-1 mapping of&#xA;the supplied nodeset, except for axe(), which returns a&#xA;filtered nodeset | OrExpr S &apos;or&apos; S AndExpr | AndExpr" ilk="function" line="352" lineend="369" name="OrExpr" signature="OrExpr" />
            <scope doc="| AndExpr S &apos;and&apos; S EqualityExpr | EqualityExpr" ilk="function" line="373" lineend="392" name="AndExpr" signature="AndExpr" />
            <scope doc="| EqualityExpr (&apos;=&apos; | &apos;!=&apos;)  RelationalExpr | RelationalExpr" ilk="function" line="396" lineend="417" name="EqualityExpr" signature="EqualityExpr" />
            <scope doc="| RelationalExpr (&apos;&lt;&apos; | &apos;&gt;&apos; | &apos;&lt;=&apos; | &apos;&gt;=&apos;) AdditiveExpr |&#xA;AdditiveExpr" ilk="function" line="421" lineend="444" name="RelationalExpr" signature="RelationalExpr" />
            <scope doc="| AdditiveExpr (&apos;+&apos; | S &apos;-&apos;) MultiplicativeExpr |&#xA;MultiplicativeExpr" ilk="function" line="448" lineend="469" name="AdditiveExpr" signature="AdditiveExpr" />
            <scope doc="| MultiplicativeExpr (&apos;*&apos; | S (&apos;div&apos; | &apos;mod&apos;) S) UnaryExpr |&#xA;UnaryExpr" ilk="function" line="473" lineend="496" name="MultiplicativeExpr" signature="MultiplicativeExpr" />
            <scope doc="| &apos;-&apos; UnaryExpr | UnionExpr" ilk="function" line="500" lineend="516" name="UnaryExpr" signature="UnaryExpr" />
            <scope doc="| UnionExpr &apos;|&apos; PathExpr | PathExpr" ilk="function" line="520" lineend="537" name="UnionExpr" signature="UnionExpr" />
            <scope doc="| LocationPath | FilterExpr (&apos;/&apos; | &apos;//&apos;)&#xA;RelativeLocationPath" ilk="function" line="541" lineend="557" name="PathExpr" signature="PathExpr" />
            <scope doc="| FilterExpr Predicate | PrimaryExpr" ilk="function" line="561" lineend="570" name="FilterExpr" signature="FilterExpr" />
            <scope doc="| VARIABLE_REFERENCE | &apos;(&apos; expr &apos;)&apos; | LITERAL | NUMBER |&#xA;FunctionCall" ilk="function" line="580" lineend="613" name="PrimaryExpr" signature="PrimaryExpr" />
            <scope doc="| FUNCTION_NAME &apos;(&apos; ( expr ( &apos;,&apos; expr )* )? &apos;)&apos;" ilk="function" line="616" lineend="626" name="FunctionCall" signature="FunctionCall" />
            <scope doc="get_group( &apos;[foo]bar&apos; ) -&gt; [&apos;bar&apos;, &apos;[foo]&apos;]" ilk="function" line="629" lineend="645" name="get_group" signature="get_group" />
            <scope ilk="function" line="647" lineend="689" name="parse_args" signature="parse_args( string )" />
            <import symbol="XMLTokens" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/ultralightparser">
      <import line="1" module="rexml/parsers/streamparser" symbol="*" />
      <import line="2" module="rexml/parsers/baseparser" symbol="*" />
      <scope ilk="namespace" line="4" lineend="56" name="REXML">
        <scope ilk="namespace" line="5" name="Parsers">
          <scope classrefs="Object" ilk="class" line="6" name="UltraLightParser">
            <scope attributes="__ctor__" ilk="function" line="7" lineend="10" name="initialize" signature="initialize" />
          </scope>
        </scope>
        <scope ilk="function" line="12" lineend="14" name="add_listener" signature="add_listener( listener )" />
        <scope ilk="function" line="16" lineend="19" name="rewind" signature="rewind" />
        <scope ilk="function" line="21" lineend="41" name="parse" signature="parse" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/treeparser">
      <import line="1" module="rexml/validation/validationexception" symbol="*" />
      <scope ilk="namespace" line="3" lineend="94" name="REXML">
        <scope ilk="namespace" line="4" lineend="93" name="Parsers">
          <scope classrefs="Object" ilk="class" line="5" lineend="92" name="TreeParser">
            <scope attributes="__ctor__" ilk="function" line="6" lineend="9" name="initialize" signature="initialize( source, build_context = Document.new )" />
            <scope ilk="function" line="11" lineend="13" name="add_listener" signature="add_listener( listener )" />
            <scope ilk="function" line="15" lineend="91" name="parse" signature="parse" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/streamparser">
      <scope ilk="namespace" line="1" lineend="46" name="REXML">
        <scope ilk="namespace" line="2" lineend="45" name="Parsers">
          <scope classrefs="Object" ilk="class" line="3" lineend="44" name="StreamParser">
            <scope attributes="__ctor__" ilk="function" line="4" lineend="7" name="initialize" signature="initialize" />
            <scope ilk="function" line="9" lineend="11" name="add_listener" signature="add_listener( listener )" />
            <scope ilk="function" line="13" lineend="43" name="parse" signature="parse" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/sax2parser">
      <import line="1" module="rexml/parsers/baseparser" symbol="*" />
      <import line="2" module="rexml/parseexception" symbol="*" />
      <import line="3" module="rexml/namespace" symbol="*" />
      <import line="4" module="rexml/text" symbol="*" />
      <scope ilk="namespace" line="6" lineend="232" name="REXML">
        <scope ilk="namespace" line="7" name="Parsers">
          <scope classrefs="Object" doc="SAX2Parser" ilk="class" line="9" name="SAX2Parser">
            <scope attributes="__ctor__" ilk="function" line="10" lineend="18" name="initialize" signature="initialize" />
          </scope>
        </scope>
        <scope ilk="function" line="20" lineend="22" name="add_listener" signature="add_listener( listener )" />
        <scope doc="Listen arguments:" ilk="function" line="54" lineend="70" name="listen" signature="listen( *args, &amp;blok )" />
        <scope ilk="function" line="72" lineend="79" name="deafen" signature="deafen( listener=nil, &amp;blok )" />
        <scope ilk="function" line="81" lineend="172" name="parse" signature="parse" />
        <scope ilk="function" line="175" lineend="184" name="handle" signature="handle( symbol, *arguments )" />
        <scope doc="The following methods are duplicates, but it is faster than&#xA;using a helper" ilk="function" line="188" lineend="201" name="get_procs" signature="get_procs( symbol, name )" />
        <scope ilk="function" line="202" lineend="214" name="get_listeners" signature="get_listeners( symbol, name )" />
        <scope ilk="function" line="216" lineend="223" name="add" signature="add( pair )" />
        <scope ilk="function" line="225" lineend="229" name="get_namespace" signature="get_namespace( prefix )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/pullparser">
      <import line="1" module="forwardable" symbol="*" />
      <import line="3" module="rexml/parseexception" symbol="*" />
      <import line="4" module="rexml/parsers/baseparser" symbol="*" />
      <import line="5" module="rexml/xmltokens" symbol="*" />
      <scope ilk="namespace" line="7" lineend="196" name="REXML">
        <scope ilk="namespace" line="8" lineend="195" name="Parsers">
          <scope classrefs="Object" doc="= Using the Pull Parser &lt;em&gt;This API is experimental, and&#xA;subject to change.&lt;/em&gt; parser = PullParser.new( &quot;&lt;a&gt;text&lt;b&#xA;att=&apos;val&apos;/&gt;txet&lt;/a&gt;&quot; ) while parser.has_next? res =&#xA;parser.next" ilk="class" line="28" lineend="83" name="PullParser">
            <scope attributes="__ctor__" ilk="function" line="37" lineend="42" name="initialize" signature="initialize" />
            <scope ilk="function" line="44" lineend="47" name="add_listener" signature="add_listener( listener )" />
            <scope ilk="function" line="49" lineend="53" name="each" signature="each" />
            <scope ilk="function" line="55" lineend="63" name="peek" signature="peek" />
            <scope ilk="function" line="65" lineend="78" name="pull" signature="pull" />
            <scope ilk="function" line="80" lineend="82" name="unshift" signature="unshift" />
            <import symbol="XMLTokens" />
          </scope>
          <scope classrefs="Object" doc="A parsing event." ilk="class" line="90" lineend="194" name="PullEvent">
            <scope attributes="__ctor__" doc="The type of this event." ilk="function" line="94" lineend="96" name="initialize" signature="initialize(arg)" />
            <scope ilk="function" line="98" lineend="110" name="[]" signature="[]( start" />
            <scope ilk="function" line="112" lineend="114" name="event_type" signature="event_type" />
            <scope doc="Content: [ String tag_name, Hash attributes ]" ilk="function" line="117" lineend="119" name="start_element?" signature="start_element?" />
            <scope doc="Content: [ String tag_name ]" ilk="function" line="122" lineend="124" name="end_element?" signature="end_element?" />
            <scope doc="Content: [ String raw_text, String unnormalized_text ]" ilk="function" line="127" lineend="129" name="text?" signature="text?" />
            <scope doc="Content: [ String text ]" ilk="function" line="132" lineend="134" name="instruction?" signature="instruction?" />
            <scope doc="Content: [ String text ]" ilk="function" line="137" lineend="139" name="comment?" signature="comment?" />
            <scope doc="Content: [ String name, String pub_sys, String long_name,&#xA;String uri ]" ilk="function" line="142" lineend="144" name="doctype?" signature="doctype?" />
            <scope doc="Content: [ String text ]" ilk="function" line="147" lineend="149" name="attlistdecl?" signature="attlistdecl?" />
            <scope doc="Content: [ String text ]" ilk="function" line="152" lineend="154" name="elementdecl?" signature="elementdecl?" />
            <scope doc="Due to the wonders of DTDs, an entity declaration can be&#xA;just about anything." ilk="function" line="163" lineend="165" name="entitydecl?" signature="entitydecl?" />
            <scope doc="Content: [ String text ]" ilk="function" line="168" lineend="170" name="notationdecl?" signature="notationdecl?" />
            <scope doc="Content: [ String text ]" ilk="function" line="173" lineend="175" name="entity?" signature="entity?" />
            <scope doc="Content: [ String text ]" ilk="function" line="178" lineend="180" name="cdata?" signature="cdata?" />
            <scope doc="Content: [ String version, String encoding, String&#xA;standalone ]" ilk="function" line="183" lineend="185" name="xmldecl?" signature="xmldecl?" />
            <scope ilk="function" line="187" lineend="189" name="error?" signature="error?" />
            <scope ilk="function" line="191" lineend="193" name="inspect" signature="inspect" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/lightparser">
      <import line="1" module="rexml/parsers/streamparser" symbol="*" />
      <import line="2" module="rexml/parsers/baseparser" symbol="*" />
      <import line="3" module="rexml/light/node" symbol="*" />
      <scope ilk="namespace" line="5" lineend="60" name="REXML">
        <scope ilk="namespace" line="6" name="Parsers">
          <scope classrefs="Object" ilk="class" line="7" name="LightParser">
            <scope attributes="__ctor__" ilk="function" line="8" lineend="11" name="initialize" signature="initialize" />
          </scope>
        </scope>
        <scope ilk="function" line="13" lineend="15" name="add_listener" signature="add_listener( listener )" />
        <scope ilk="function" line="17" lineend="20" name="rewind" signature="rewind" />
        <scope ilk="function" line="22" lineend="45" name="parse" signature="parse" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parsers/baseparser">
      <import line="1" module="rexml/parseexception" symbol="*" />
      <import line="2" module="rexml/source" symbol="*" />
      <scope ilk="namespace" line="4" lineend="436" name="REXML">
        <scope ilk="namespace" line="5" lineend="435" name="Parsers">
          <scope classrefs="Object" doc="= Using the Pull Parser &lt;em&gt;This API is experimental, and&#xA;subject to change.&lt;/em&gt; parser = PullParser.new( &quot;&lt;a&gt;text&lt;b&#xA;att=&apos;val&apos;/&gt;txet&lt;/a&gt;&quot; ) while parser.has_next? res =&#xA;parser.next" ilk="class" line="25" lineend="434" name="BaseParser">
            <scope attributes="__ctor__" doc="Entity constants" ilk="function" line="99" lineend="101" name="initialize" signature="initialize( source )" />
            <scope ilk="function" line="103" lineend="118" name="add_listener" signature="add_listener( listener )" />
            <scope ilk="function" line="120" lineend="120" name="source" />
            <scope ilk="function" line="122" lineend="129" name="stream=" signature="stream=( source )" />
            <scope ilk="function" line="131" lineend="138" name="position" signature="position" />
            <scope doc="Returns true if there are no more events" ilk="function" line="141" lineend="145" name="empty?" signature="empty?" />
            <scope doc="Returns true if there are more events." ilk="function" line="148" lineend="150" name="has_next?" signature="has_next?" />
            <scope doc="Push an event back on the head of the stream." ilk="function" line="154" lineend="156" name="unshift" signature="unshift" />
            <scope doc="Peek at the +depth+ event in the stack." ilk="function" line="164" lineend="176" name="peek" signature="peek" />
            <scope doc="Returns the next event. This is a +PullEvent+ object." ilk="function" line="179" lineend="374" name="pull" signature="pull" />
            <scope ilk="function" line="376" lineend="384" name="entity" signature="entity( reference, entities )" />
            <scope doc="Escapes all possible entities" ilk="function" line="387" lineend="400" name="normalize" signature="normalize( input, entities=nil, entity_filter=nil )" />
            <scope doc="Unescapes all possible entities" ilk="function" line="403" lineend="433" name="unnormalize" signature="unnormalize( string, entities=nil, filter=nil )" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parseexception">
      <scope ilk="namespace" line="1" lineend="51" name="REXML">
        <scope classrefs="RuntimeError" ilk="class" line="2" lineend="50" name="ParseException">
          <scope ilk="function" line="3" lineend="3" name="source" />
          <scope ilk="function" line="3" lineend="3" name="source=" />
          <scope ilk="function" line="3" lineend="3" name="parser" />
          <scope ilk="function" line="3" lineend="3" name="parser=" />
          <scope ilk="function" line="3" lineend="3" name="continued_exception" />
          <scope ilk="function" line="3" lineend="3" name="continued_exception=" />
          <scope attributes="__ctor__" ilk="function" line="5" lineend="10" name="initialize" signature="initialize( message, source=nil, parser=nil, exception=nil )" />
          <scope ilk="function" line="12" lineend="35" name="to_s" signature="to_s" />
          <scope ilk="function" line="37" lineend="40" name="position" signature="position" />
          <scope ilk="function" line="42" lineend="45" name="line" signature="line" />
          <scope ilk="function" line="47" lineend="49" name="context" signature="context" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/parent">
      <import line="1" module="rexml/child" symbol="*" />
      <scope ilk="namespace" line="3" lineend="166" name="REXML">
        <scope classrefs="Child" doc="A parent has children, and has methods for accessing them." ilk="class" line="7" lineend="165" name="Parent">
          <scope attributes="__ctor__" doc="Constructor @param parent if supplied, will be set as the&#xA;parent of this object" ilk="function" line="12" lineend="15" name="initialize" signature="initialize" />
          <scope ilk="function" line="17" lineend="23" name="add" signature="add( object )" />
          <scope ilk="function" line="28" lineend="31" name="unshift" signature="unshift( object )" />
          <scope ilk="function" line="33" lineend="37" name="delete" signature="delete( object )" />
          <scope ilk="function" line="39" lineend="41" name="each" signature="each(&amp;block)" />
          <scope ilk="function" line="43" lineend="45" name="delete_if" signature="delete_if( &amp;block )" />
          <scope ilk="function" line="47" lineend="49" name="delete_at" signature="delete_at( index )" />
          <scope ilk="function" line="51" lineend="53" name="each_index" signature="each_index( &amp;block )" />
          <scope doc="Fetches a child at a given index @param index the Integer&#xA;index of the child to fetch" ilk="function" line="57" lineend="59" name="[]" signature="[]( index" />
          <scope doc="Set an index entry." ilk="function" line="70" lineend="73" name="[]=" signature="[]=( *args" />
          <scope doc="Inserts an child before another child @param child1 this is&#xA;either an xpath or an Element." ilk="function" line="82" lineend="93" name="insert_before" signature="insert_before( child1, child2 )" />
          <scope doc="Inserts an child after another child @param child1 this is&#xA;either an xpath or an Element." ilk="function" line="102" lineend="113" name="insert_after" signature="insert_after( child1, child2 )" />
          <scope ilk="function" line="115" lineend="117" name="to_a" signature="to_a" />
          <scope doc="Fetches the index of a given child @param child the child to&#xA;get the index of @return the index of the child, or nil if&#xA;the object is not a child of this parent." ilk="function" line="123" lineend="127" name="index" signature="index( child )" />
          <scope doc="@return the number of children of this parent" ilk="function" line="130" lineend="132" name="size" signature="size" />
          <scope doc="Replaces one child with another, making sure the nodelist is&#xA;correct @param to_replace the child to replace (must be a&#xA;Child) @param replacement the child to insert into the&#xA;nodelist (must be a Child)" ilk="function" line="140" lineend="144" name="replace_child" signature="replace_child( to_replace, replacement )" />
          <scope doc="Deeply clones this object." ilk="function" line="148" lineend="158" name="deep_clone" signature="deep_clone" />
          <scope ilk="function" line="162" lineend="164" name="parent?" signature="parent?" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/output">
      <import line="1" module="rexml/encoding" symbol="*" />
      <scope ilk="namespace" line="3" lineend="24" name="REXML">
        <scope classrefs="Object" ilk="class" line="4" name="Output">
          <scope ilk="function" line="7" lineend="7" name="encoding" />
          <scope attributes="__ctor__" ilk="function" line="9" lineend="14" name="initialize" signature="initialize" />
          <scope ilk="function" line="16" lineend="18" name="&lt;&lt;" signature="&lt;&lt;( content" />
          <import symbol="Encoding" />
        </scope>
        <scope ilk="function" line="20" lineend="22" name="to_s" signature="to_s" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/node">
      <import line="1" module="rexml/parseexception" symbol="*" />
      <scope ilk="namespace" line="3" lineend="66" name="REXML">
        <scope doc="Represents a node in the tree." ilk="namespace" line="6" lineend="56" name="Node">
          <scope doc="@return the next sibling (nil if unset)" ilk="function" line="8" lineend="11" name="next_sibling_node" signature="next_sibling_node" />
          <scope doc="@return the previous sibling (nil if unset)" ilk="function" line="14" lineend="19" name="previous_sibling_node" signature="previous_sibling_node" />
          <scope ilk="function" line="21" lineend="25" name="to_s" signature="to_s" />
          <scope ilk="function" line="27" lineend="34" name="indent" signature="indent" />
          <scope ilk="function" line="36" lineend="38" name="parent?" signature="parent?" />
          <scope doc="Visit all subnodes of +self+ recursively" ilk="function" line="42" lineend="47" name="each_recursive" signature="each_recursive(&amp;block)" />
          <scope doc="Find (and return) first subnode (recursively) for which the&#xA;block evaluates to true." ilk="function" line="51" lineend="56" name="find_first_recursive" signature="find_first_recursive(&amp;block)" />
        </scope>
        <scope doc="Returns the index that +self+ has in its parent&apos;s elements&#xA;array, so that the following equation holds true:" ilk="function" line="62" lineend="64" name="index_in_parent" signature="index_in_parent" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/namespace">
      <import line="1" module="rexml/xmltokens" symbol="*" />
      <scope ilk="namespace" line="3" lineend="47" name="REXML">
        <scope doc="Adds named attributes to an object." ilk="namespace" line="5" lineend="46" name="Namespace">
          <scope doc="Sets the name and the expanded name" ilk="function" line="14" lineend="24" name="name=" signature="name=( name )" />
          <scope doc="Compares names optionally WITH namespaces" ilk="function" line="27" lineend="35" name="has_name?" signature="has_name?( other, ns=nil )" />
          <scope doc="Fully expand the name, even if the prefix wasn&apos;t specified&#xA;in the source file." ilk="function" line="41" lineend="45" name="fully_expanded_name" signature="fully_expanded_name" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/light/node">
      <import line="1" module="rexml/xmltokens" symbol="*" />
      <import line="2" module="rexml/light/node" symbol="*" />
      <scope doc="[ :element, parent, name, attributes, children* ] a =&#xA;Node.new a &lt;&lt; &quot;B&quot;              # =&gt; &lt;a&gt;B&lt;/a&gt; a.b # =&gt;&#xA;&lt;a&gt;B&lt;b/&gt;&lt;/a&gt; a.b[1]                        # =&gt;&#xA;&lt;a&gt;B&lt;b/&gt;&lt;b/&gt;&lt;a&gt;" ilk="namespace" line="12" lineend="196" name="REXML">
        <scope ilk="namespace" line="13" lineend="195" name="Light">
          <scope classrefs="Object" doc="Represents a tagged XML element." ilk="class" line="17" lineend="194" name="Node">
            <scope attributes="__ctor__" doc="Create a new element." ilk="function" line="21" lineend="34" name="initialize" signature="initialize" />
            <scope ilk="function" line="36" lineend="42" name="size" signature="size" />
            <scope ilk="function" line="44" lineend="46" name="each" signature="each( &amp;block )" />
            <scope ilk="function" line="48" lineend="50" name="name" signature="name" />
            <scope ilk="function" line="52" lineend="56" name="name=" signature="name=( name_str, ns=nil )" />
            <scope ilk="function" line="58" lineend="60" name="parent=" signature="parent=( node )" />
            <scope ilk="function" line="62" lineend="65" name="local_name" signature="local_name" />
            <scope ilk="function" line="67" lineend="69" name="local_name=" signature="local_name=( name_str )" />
            <scope ilk="function" line="71" lineend="73" name="prefix" signature="prefix( namespace=nil )" />
            <scope ilk="function" line="75" lineend="77" name="namespace" signature="namespace( prefix=prefix() )" />
            <scope ilk="function" line="79" lineend="84" name="namespace=" signature="namespace=( namespace )" />
            <scope ilk="function" line="86" lineend="96" name="[]" signature="[]( reference" />
            <scope ilk="function" line="98" lineend="100" name="=~" signature="=~( path" />
            <scope doc="Doesn&apos;t handle namespaces yet" ilk="function" line="103" lineend="116" name="[]=" signature="[]=( reference" />
            <scope doc="Append a child to this element, optionally under a provided&#xA;namespace." ilk="function" line="122" lineend="131" name="&lt;&lt;" signature="&lt;&lt;" />
            <scope ilk="function" line="133" lineend="135" name="node_type" signature="node_type" />
            <scope ilk="function" line="137" lineend="140" name="text=" signature="text=( foo )" />
            <scope ilk="function" line="142" lineend="145" name="root" signature="root" />
            <scope ilk="function" line="147" lineend="149" name="has_name?" signature="has_name?( name, namespace = &apos;&apos; )" />
            <scope ilk="function" line="151" lineend="153" name="children" signature="children" />
            <scope ilk="function" line="155" lineend="157" name="parent" signature="parent" />
            <scope ilk="function" line="159" lineend="161" name="to_s" signature="to_s" />
            <scope ilk="function" line="165" lineend="170" name="namesplit" signature="namesplit" />
            <scope ilk="function" line="172" lineend="182" name="namespace_of" signature="namespace_of( node, prefix=nil )" />
            <scope ilk="function" line="184" lineend="193" name="prefix_of" signature="prefix_of( node, namespace=nil )" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/instruction">
      <import line="1" module="rexml/child" symbol="*" />
      <import line="2" module="rexml/source" symbol="*" />
      <scope ilk="namespace" line="4" lineend="66" name="REXML">
        <scope classrefs="Child" doc="Represents an XML Instruction; IE, &lt;? ..." ilk="class" line="7" name="Instruction">
          <scope ilk="function" line="13" lineend="13" name="target" />
          <scope ilk="function" line="13" lineend="13" name="target=" />
          <scope ilk="function" line="13" lineend="13" name="content" />
          <scope ilk="function" line="13" lineend="13" name="content=" />
          <scope attributes="__ctor__" doc="Constructs a new Instruction @param target can be one of a&#xA;number of things." ilk="function" line="24" lineend="35" name="initialize" signature="initialize(target, content=nil)" />
          <scope ilk="function" line="37" lineend="39" name="clone" signature="clone" />
          <scope ilk="function" line="41" lineend="48" name="write" signature="write" />
          <scope doc="@return true if other is an Instruction, and the content and&#xA;target of the other matches the target and content of this&#xA;object." ilk="function" line="52" lineend="56" name="==" signature="==( other" />
        </scope>
        <scope ilk="function" line="58" lineend="60" name="node_type" signature="node_type" />
        <scope ilk="function" line="62" lineend="64" name="inspect" signature="inspect" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/functions">
      <scope ilk="namespace" line="1" lineend="367" name="REXML">
        <scope doc="If you add a method, keep in mind two things: (1) the first&#xA;argument will always be a list of nodes from which to&#xA;filter." ilk="namespace" line="9" lineend="366" name="Functions">
          <scope attributes="__classmethod__" ilk="function" line="14" name="namespace_context=" signature="Functions::namespace_context=(x)" />
          <scope attributes="__classmethod__" ilk="function" line="15" name="variables=" signature="Functions::variables=(x)" />
          <scope attributes="__classmethod__" ilk="function" line="16" name="namespace_context" signature="Functions::namespace_context" />
          <scope attributes="__classmethod__" ilk="function" line="17" name="variables" signature="Functions::variables" />
          <scope attributes="__classmethod__" ilk="function" line="19" name="context=" signature="Functions::context=(value)" />
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="29" name="text" signature="Functions::text( )" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="33" name="last" signature="Functions::last( )" />
          <scope attributes="__classmethod__" ilk="function" line="35" lineend="37" name="position" signature="Functions::position( )" />
          <scope attributes="__classmethod__" ilk="function" line="39" lineend="41" name="count" signature="Functions::count( node_set )" />
          <scope attributes="__classmethod__" doc="Since REXML is non-validating, this method is not&#xA;implemented as it requires a DTD" ilk="function" line="45" lineend="46" name="id" signature="Functions::id( object )" />
          <scope attributes="__classmethod__" doc="UNTESTED" ilk="function" line="49" lineend="53" name="local_name" signature="Functions::local_name( node_set=nil )" />
          <scope attributes="__classmethod__" ilk="function" line="55" lineend="57" name="namespace_uri" signature="Functions::namespace_uri( node_set=nil )" />
          <scope attributes="__classmethod__" ilk="function" line="59" lineend="63" name="name" signature="Functions::name( node_set=nil )" />
          <scope attributes="__classmethod__" doc="Helper method." ilk="function" line="66" lineend="76" name="get_namespace" signature="Functions::get_namespace( node_set = nil )" />
          <scope attributes="__classmethod__" doc="A node-set is converted to a string by returning the string-&#xA;value of the node in the node-set that is first in document&#xA;order." ilk="function" line="113" lineend="128" name="string" signature="Functions::string( object=nil )" />
          <scope attributes="__classmethod__" doc="UNTESTED" ilk="function" line="131" lineend="133" name="concat" signature="Functions::concat( *objects )" />
          <scope attributes="__classmethod__" doc="Fixed by Mike Stok" ilk="function" line="136" lineend="138" name="starts_with" signature="Functions::starts_with( string, test )" />
          <scope attributes="__classmethod__" doc="Fixed by Mike Stok" ilk="function" line="141" lineend="143" name="contains" signature="Functions::contains( string, test )" />
          <scope attributes="__classmethod__" doc="Kouhei fixed this" ilk="function" line="146" lineend="154" name="substring_before" signature="Functions::substring_before( string, test )" />
          <scope attributes="__classmethod__" doc="Kouhei fixed this too" ilk="function" line="157" lineend="162" name="substring_after" signature="Functions::substring_after( string, test )" />
          <scope attributes="__classmethod__" doc="Take equal portions of Mike Stok and Sean Russell; mix&#xA;vigorously, and pour into a tall, chilled glass." ilk="function" line="166" lineend="196" name="substring" signature="Functions::substring( string, start, length=nil )" />
          <scope attributes="__classmethod__" doc="UNTESTED" ilk="function" line="199" lineend="201" name="string_length" signature="Functions::string_length( string )" />
          <scope attributes="__classmethod__" doc="UNTESTED" ilk="function" line="204" lineend="211" name="normalize_space" signature="Functions::normalize_space( string=nil )" />
          <scope attributes="__classmethod__" doc="This is entirely Mike Stok&apos;s beast" ilk="function" line="214" lineend="248" name="translate" signature="Functions::translate( string, tr1, tr2 )" />
          <scope attributes="__classmethod__" doc="UNTESTED" ilk="function" line="251" lineend="262" name="boolean" signature="Functions::boolean( object=nil )" />
          <scope doc="UNTESTED" ilk="function" line="265" lineend="267" name="Functions" signature="Functions::" />
          <scope doc="UNTESTED" ilk="function" line="270" lineend="272" name="Functions" signature="Functions::" />
          <scope doc="UNTESTED" ilk="function" line="275" lineend="277" name="Functions" signature="Functions::" />
          <scope attributes="__classmethod__" doc="UNTESTED" ilk="function" line="280" lineend="296" name="lang" signature="Functions::lang( language )" />
          <scope attributes="__classmethod__" ilk="function" line="298" lineend="300" name="compare_language" signature="Functions::compare_language" />
          <scope attributes="__classmethod__" doc="a string that consists of optional whitespace followed by an&#xA;optional minus sign followed by a Number followed by&#xA;whitespace is converted to the IEEE 754 number that is&#xA;nearest (according to the IEEE 754 round-to-nearest rule) to&#xA;the mathematical value represented by the string; any other&#xA;string is converted to NaN" ilk="function" line="315" lineend="335" name="number" signature="Functions::number( object=nil )" />
          <scope attributes="__classmethod__" ilk="function" line="337" lineend="340" name="sum" signature="Functions::sum( nodes )" />
          <scope attributes="__classmethod__" ilk="function" line="342" lineend="344" name="floor" signature="Functions::floor( number )" />
          <scope attributes="__classmethod__" ilk="function" line="346" lineend="348" name="ceiling" signature="Functions::ceiling( number )" />
          <scope attributes="__classmethod__" ilk="function" line="350" lineend="356" name="round" signature="Functions::round( number )" />
          <scope attributes="__classmethod__" ilk="function" line="358" lineend="360" name="processing_instruction" signature="Functions::processing_instruction( node )" />
          <scope attributes="__classmethod__" ilk="function" line="362" lineend="365" name="method_missing" signature="Functions::method_missing( id )" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/entity">
      <import line="1" module="rexml/child" symbol="*" />
      <import line="2" module="rexml/source" symbol="*" />
      <import line="3" module="rexml/xmltokens" symbol="*" />
      <scope ilk="namespace" line="5" lineend="159" name="REXML">
        <scope classrefs="Child" doc="God, I hate DTDs. I really do." ilk="class" line="8" lineend="143" name="Entity">
          <scope ilk="function" line="23" lineend="23" name="name" />
          <scope ilk="function" line="23" lineend="23" name="external" />
          <scope ilk="function" line="23" lineend="23" name="ref" />
          <scope ilk="function" line="23" lineend="23" name="ndata" />
          <scope ilk="function" line="23" lineend="23" name="pubid" />
          <scope attributes="__ctor__" doc="Create a new entity." ilk="function" line="35" lineend="64" name="initialize" signature="initialize" />
          <scope attributes="__classmethod__" doc="Evaluates whether the given string matchs an entity&#xA;definition, returning true if so, and false otherwise." ilk="function" line="68" lineend="70" name="matches?" signature="Entity::matches?" />
          <scope doc="Evaluates to the unnormalized value of this entity; that is,&#xA;replacing all entities -- both %ent; and &amp;ent; entities." ilk="function" line="75" lineend="80" name="unnormalized" signature="unnormalized" />
          <scope doc="once :unnormalized Returns the value of this entity&#xA;unprocessed -- raw." ilk="function" line="86" lineend="88" name="normalized" signature="normalized" />
          <scope doc="Write out a fully formed, correct entity definition&#xA;(assuming the Entity object itself is valid.)" ilk="function" line="92" name="write" signature="write" />
          <scope ilk="function" line="129" lineend="142" name="value" signature="value" />
          <import symbol="XMLTokens" />
        </scope>
        <scope doc="This is a set of entity constants -- the ones defined in the&#xA;XML specification." ilk="namespace" line="147" lineend="158" name="EntityConst" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/UTF-8">
      <scope ilk="namespace" line="1" lineend="18" name="REXML">
        <scope ilk="namespace" line="2" lineend="17" name="Encoding">
          <scope ilk="function" line="3" lineend="5" name="encode_utf8" signature="encode_utf8" />
          <scope ilk="function" line="7" lineend="9" name="decode_utf8" signature="decode_utf8(str)" />
          <scope classrefs="Object" ilk="class" line="12" lineend="15" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/UTF-16">
      <scope ilk="namespace" line="1" lineend="34" name="REXML">
        <scope ilk="namespace" line="2" lineend="33" name="Encoding">
          <scope ilk="function" line="3" lineend="16" name="encode_utf16" signature="encode_utf16" />
          <scope ilk="function" line="18" lineend="25" name="decode_utf16" signature="decode_utf16(str)" />
          <scope classrefs="Object" ilk="class" line="28" lineend="31" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/US-ASCII">
      <scope ilk="namespace" line="1" lineend="30" name="REXML">
        <scope ilk="namespace" line="2" lineend="29" name="Encoding">
          <scope doc="Convert from UTF-8" ilk="function" line="4" lineend="16" name="encode_ascii" signature="encode_ascii" />
          <scope doc="Convert to UTF-8" ilk="function" line="19" lineend="21" name="decode_ascii" signature="decode_ascii(str)" />
          <scope classrefs="Object" ilk="class" line="24" lineend="27" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/UNILE">
      <scope ilk="namespace" line="1" lineend="34" name="REXML">
        <scope ilk="namespace" line="2" lineend="33" name="Encoding">
          <scope ilk="function" line="3" lineend="16" name="encode_unile" signature="encode_unile" />
          <scope ilk="function" line="18" lineend="25" name="decode_unile" signature="decode_unile(str)" />
          <scope classrefs="Object" ilk="class" line="28" lineend="31" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/SHIFT_JIS">
      <import line="1" module="rexml/encodings/SHIFT-JIS" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/SHIFT-JIS">
      <scope ilk="namespace" line="1" lineend="37" name="REXML">
        <scope ilk="namespace" line="2" lineend="36" name="Encoding">
          <import line="4" module="uconv" symbol="*" />
          <import line="14" module="nkf" symbol="*" />
          <scope ilk="function" line="6" lineend="8" name="decode_sjis" signature="decode_sjis" />
          <scope ilk="function" line="10" lineend="12" name="encode_sjis" signature="encode_sjis(str)" />
          <scope ilk="function" line="19" lineend="21" name="decode_sjis" signature="decode_sjis(str)" />
          <scope ilk="function" line="23" lineend="25" name="encode_sjis" signature="encode_sjis" />
          <scope classrefs="Object" ilk="class" line="29" lineend="32" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/ISO-8859-15">
      <scope doc="This class was contributed by Mikko Tiihonen mikko DOT&#xA;tiihonen AT hut DOT fi" ilk="namespace" line="4" lineend="69" name="REXML">
        <scope ilk="namespace" line="5" lineend="68" name="Encoding" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/ISO-8859-1">
      <import line="1" module="rexml/encodings/US-ASCII" symbol="*" />
      <scope ilk="namespace" line="3" lineend="7" name="REXML">
        <scope ilk="namespace" line="4" lineend="6" name="Encoding" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/ICONV">
      <import line="1" module="iconv" symbol="*" />
      <scope ilk="namespace" line="4" lineend="22" name="REXML">
        <scope ilk="namespace" line="5" lineend="21" name="Encoding">
          <scope ilk="function" line="6" lineend="8" name="decode_iconv" signature="decode_iconv(str)" />
          <scope ilk="function" line="10" lineend="12" name="encode_iconv" signature="encode_iconv(content)" />
          <scope classrefs="Object" ilk="class" line="16" lineend="19" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/EUC-JP">
      <scope ilk="namespace" line="1" lineend="35" name="REXML">
        <scope ilk="namespace" line="2" lineend="34" name="Encoding">
          <import line="4" module="uconv" symbol="*" />
          <import line="14" module="nkf" symbol="*" />
          <scope ilk="function" line="6" lineend="8" name="decode_eucjp" signature="decode_eucjp(str)" />
          <scope ilk="function" line="10" lineend="12" name="encode_eucjp" signature="encode_eucjp" />
          <scope ilk="function" line="19" lineend="21" name="decode_eucjp" signature="decode_eucjp(str)" />
          <scope ilk="function" line="23" lineend="25" name="encode_eucjp" signature="encode_eucjp" />
          <scope classrefs="Object" ilk="class" line="29" lineend="32" name="obj" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encodings/CP-1252">
      <scope doc="This class was contributed by Mikko Tiihonen mikko DOT&#xA;tiihonen AT hut DOT fi" ilk="namespace" line="4" lineend="98" name="REXML">
        <scope ilk="namespace" line="5" lineend="97" name="Encoding" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/encoding">
      <scope doc="-*- mode: ruby; ruby-indent-level: 2; indent-tabs-mode: t;&#xA;tab-width: 2 -*- vim: sw=2 ts=2" ilk="namespace" line="2" lineend="64" name="REXML">
        <scope ilk="namespace" line="3" lineend="63" name="Encoding">
          <scope attributes="__classmethod__" ilk="function" line="5" lineend="7" name="register" signature="self.register(enc, &amp;block)" />
          <scope attributes="__classmethod__" ilk="function" line="8" lineend="10" name="apply" signature="self.apply(obj, enc)" />
          <scope attributes="__classmethod__" ilk="function" line="11" lineend="13" name="encoding_method" signature="self.encoding_method(enc)" />
          <scope doc="ID ---&gt; Encoding name" ilk="function" line="23" lineend="53" name="encoding=" signature="encoding=( enc )">
            <import line="31" module="rexml/encodings/ICONV.rb" symbol="*" />
            <import line="47" module="rexml/encodings/UTF-8.rb" symbol="*" />
          </scope>
          <scope ilk="function" line="55" lineend="62" name="check_encoding" signature="check_encoding" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/element">
      <import line="1" module="rexml/parent" symbol="*" />
      <import line="2" module="rexml/namespace" symbol="*" />
      <import line="3" module="rexml/attribute" symbol="*" />
      <import line="4" module="rexml/cdata" symbol="*" />
      <import line="5" module="rexml/xpath" symbol="*" />
      <import line="6" module="rexml/parseexception" symbol="*" />
      <scope ilk="namespace" line="8" lineend="1243" name="REXML">
        <scope classrefs="Parent" doc="Represents a tagged XML element." ilk="class" line="20" name="Element">
          <scope ilk="function" line="27" lineend="27" name="attributes" />
          <scope ilk="function" line="27" lineend="27" name="elements" />
          <scope ilk="function" line="30" lineend="30" name="context" />
          <scope ilk="function" line="30" lineend="30" name="context=" />
          <scope attributes="__ctor__" doc="Constructor arg:: if not supplied, will be set to the&#xA;default value." ilk="function" line="58" lineend="74" name="initialize" signature="initialize( arg = UNDEFINED, parent=nil, context=nil )" />
          <import symbol="Namespace" />
        </scope>
        <scope ilk="function" line="76" lineend="89" name="inspect" signature="inspect" />
        <scope doc="Creates a shallow copy of self." ilk="function" line="96" lineend="98" name="clone" signature="clone" />
        <scope doc="Evaluates to the root node of the document that this element&#xA;belongs to." ilk="function" line="119" lineend="121" name="root_node" signature="root_node" />
        <scope ilk="function" line="123" lineend="127" name="root" signature="root" />
        <scope doc="Evaluates to the document to which this element belongs, or&#xA;nil if this element doesn&apos;t belong to a document." ilk="function" line="131" lineend="134" name="document" signature="document" />
        <scope doc="Evaluates to +true+ if whitespace is respected for this&#xA;element." ilk="function" line="145" lineend="159" name="whitespace" signature="whitespace" />
        <scope ilk="function" line="161" lineend="170" name="ignore_whitespace_nodes" signature="ignore_whitespace_nodes" />
        <scope doc="Evaluates to +true+ if raw mode is set for this element." ilk="function" line="178" lineend="183" name="raw" signature="raw" />
        <scope doc="once :whitespace, :raw, :ignore_whitespace_nodes" ilk="function" line="195" lineend="200" name="prefixes" signature="prefixes" />
        <scope ilk="function" line="202" lineend="207" name="namespaces" signature="namespaces" />
        <scope doc="Evalutas to the URI for a prefix, or the empty string if no&#xA;such namespace is declared for this element." ilk="function" line="222" lineend="235" name="namespace" signature="namespace(prefix=nil)" />
        <scope doc="Adds a namespace to this element." ilk="function" line="250" lineend="258" name="add_namespace" signature="add_namespace( prefix, uri=nil )" />
        <scope doc="Removes a namespace from this node." ilk="function" line="270" lineend="275" name="delete_namespace" signature="delete_namespace" />
        <scope doc="Elements                                      #" ilk="function" line="295" lineend="307" name="add_element" signature="add_element" />
        <scope doc="Deletes a child element." ilk="function" line="320" lineend="322" name="delete_element" signature="delete_element" />
        <scope doc="Evaluates to +true+ if this element has at least one child&#xA;Element doc = Document.new &quot;&lt;a&gt;&lt;b/&gt;&lt;c&gt;Text&lt;/c&gt;&lt;/a&gt;&quot;&#xA;doc.root.has_elements               # -&gt; true&#xA;doc.elements[&quot;/a/b&quot;].has_elements   # -&gt; false&#xA;doc.elements[&quot;/a/c&quot;].has_elements   # -&gt; false" ilk="function" line="329" lineend="331" name="has_elements?" signature="has_elements?" />
        <scope doc="Iterates through the child elements, yielding for each&#xA;Element that has a particular attribute set." ilk="function" line="355" lineend="363" name="each_element_with_attribute" signature="each_element_with_attribute( key, value=nil, max=0, name=nil, &amp;block )" />
        <scope doc="Iterates through the children, yielding for each Element&#xA;that has a particular text set." ilk="function" line="386" lineend="394" name="each_element_with_text" signature="each_element_with_text( text=nil, max=0, name=nil, &amp;block )" />
        <scope doc="Synonym for Element.elements.each" ilk="function" line="397" lineend="399" name="each_element" signature="each_element( xpath=nil, &amp;block )" />
        <scope doc="Synonym for Element.to_a This is a little slower than&#xA;calling elements.each directly." ilk="function" line="405" lineend="407" name="get_elements" signature="get_elements( xpath )" />
        <scope doc="Returns the next sibling that is an element, or nil if there&#xA;is no Element sibling after this one doc = Document.new&#xA;&apos;&lt;a&gt;&lt;b/&gt;text&lt;c/&gt;&lt;/a&gt;&apos; doc.root.elements[&apos;b&apos;].next_element&#xA;#-&gt; &lt;c/&gt; doc.root.elements[&apos;c&apos;].next_element          #-&gt;&#xA;nil" ilk="function" line="414" lineend="418" name="next_element" signature="next_element" />
        <scope doc="Returns the previous sibling that is an element, or nil if&#xA;there is no Element sibling prior to this one doc =&#xA;Document.new &apos;&lt;a&gt;&lt;b/&gt;text&lt;c/&gt;&lt;/a&gt;&apos;&#xA;doc.root.elements[&apos;c&apos;].previous_element          #-&gt; &lt;b/&gt;&#xA;doc.root.elements[&apos;b&apos;].previous_element          #-&gt; nil" ilk="function" line="425" lineend="429" name="previous_element" signature="previous_element" />
        <scope doc="Text                                          #" ilk="function" line="437" lineend="439" name="has_text?" signature="has_text?" />
        <scope doc="A convenience method which returns the String value of the&#xA;_first_ child text element, if one exists, and +nil+&#xA;otherwise." ilk="function" line="455" lineend="459" name="text" signature="text( path = nil )" />
        <scope doc="Returns the first child Text node, if any, or +nil+&#xA;otherwise." ilk="function" line="466" lineend="475" name="get_text" signature="get_text" />
        <scope doc="Sets the first Text child of this object." ilk="function" line="497" lineend="502" name="text=" signature="text=( text )" />
        <scope doc="A helper method to add a Text child." ilk="function" line="528" lineend="538" name="add_text" signature="add_text( text )" />
        <scope ilk="function" line="540" lineend="542" name="node_type" signature="node_type" />
        <scope ilk="function" line="544" lineend="553" name="xpath" signature="xpath" />
        <scope doc="Attributes                                    #" ilk="function" line="559" lineend="567" name="attribute" signature="attribute( name, namespace=nil )" />
        <scope doc="Evaluates to +true+ if this element has any attributes set,&#xA;false otherwise." ilk="function" line="571" lineend="573" name="has_attributes?" signature="has_attributes?" />
        <scope doc="Adds an attribute to this element, overwriting any existing&#xA;attribute by the same name." ilk="function" line="591" lineend="597" name="add_attribute" signature="add_attribute( key, value=nil )" />
        <scope doc="Add multiple attributes to this element." ilk="function" line="603" lineend="609" name="add_attributes" signature="add_attributes" />
        <scope doc="Removes an attribute key:: either an Attribute or a String." ilk="function" line="624" lineend="627" name="delete_attribute" signature="delete_attribute(key)" />
        <scope doc="Other Utilities                               #" ilk="function" line="635" lineend="637" name="cdatas" signature="cdatas" />
        <scope doc="Get an array of all Comment children." ilk="function" line="641" lineend="643" name="comments" signature="comments" />
        <scope doc="Get an array of all Instruction children." ilk="function" line="647" lineend="649" name="instructions" signature="instructions" />
        <scope doc="Get an array of all Text children." ilk="function" line="653" lineend="655" name="texts" signature="texts" />
        <scope doc="Writes out this element, and recursively, all children." ilk="function" line="679" lineend="694" name="write" signature="write(writer=$stdout, indent=-1, transitive=false, ie_hack=false)" />
        <scope ilk="function" line="715" lineend="727" name="__to_xpath_helper" signature="__to_xpath_helper" />
        <scope doc="A private helper method" ilk="function" line="730" lineend="737" name="each_with_something" signature="each_with_something( test, max=0, name=nil )" />
        <scope doc="A private helper method" ilk="function" line="740" lineend="760" name="write_children" signature="write_children( writer, indent, transitive, ie_hack )" />
        <scope classrefs="Object" doc="ELEMENTS #" ilk="class" line="771" lineend="971" name="Elements">
          <scope attributes="__ctor__" doc="Constructor parent:: the parent Element" ilk="function" line="775" lineend="777" name="initialize" signature="initialize" />
          <scope doc="Fetches a child element." ilk="function" line="800" lineend="818" name="[]" signature="[]( index" />
          <scope doc="Sets an element, replacing any previous matching element." ilk="function" line="833" lineend="841" name="[]=" signature="[]=( index" />
          <scope doc="Returns +true+ if there are no +Element+ children, +false+&#xA;otherwise" ilk="function" line="844" lineend="846" name="empty?" signature="empty?" />
          <scope doc="Returns the index of the supplied child (starting at 1), or&#xA;-1 if the element is not a child element:: an +Element+&#xA;child" ilk="function" line="851" lineend="860" name="index" signature="index" />
          <scope doc="Deletes a child Element element:: Either an Element, which&#xA;is removed directly; an xpath, where the first matching&#xA;child is removed; or an Integer, where the n&apos;th Element is&#xA;removed." ilk="function" line="873" lineend="880" name="delete" signature="delete" />
          <scope doc="Removes multiple elements." ilk="function" line="888" lineend="898" name="delete_all" signature="delete_all( xpath )" />
          <scope doc="Adds an element element:: if supplied, is either an Element,&#xA;String, or Source (see Element.initialize)." ilk="function" line="909" lineend="920" name="add" signature="add" />
          <scope doc="Iterates through all of the child Elements, optionally&#xA;filtering them by a given XPath xpath:: optional." ilk="function" line="938" lineend="940" name="each" signature="each( xpath=nil, &amp;block)" />
          <scope doc="Returns the number of +Element+ children of the parent&#xA;object." ilk="function" line="946" lineend="950" name="size" signature="size" />
          <scope doc="Returns an Array of Element children." ilk="function" line="959" lineend="963" name="to_a" signature="to_a( xpath=nil )" />
          <scope doc="Private helper class." ilk="function" line="967" lineend="970" name="literalize" signature="literalize" />
          <import symbol="Enumerable" />
        </scope>
        <scope classrefs="Hash" doc="ATTRIBUTES #" ilk="class" line="979" name="Attributes">
          <scope attributes="__ctor__" doc="Constructor element:: the Element of which this is an&#xA;Attribute" ilk="function" line="982" lineend="984" name="initialize" signature="initialize" />
          <scope doc="Fetches an attribute value." ilk="function" line="996" lineend="1000" name="[]" signature="[](name" />
          <scope ilk="function" line="1002" lineend="1004" name="to_a" signature="to_a" />
          <scope doc="Returns the number of attributes the owning Element&#xA;contains." ilk="function" line="1009" lineend="1013" name="length" signature="length" />
          <scope doc="Itterates over the attributes of an Element." ilk="function" line="1023" lineend="1031" name="each_attribute" signature="each_attribute" />
          <scope doc="Itterates over each attribute of an Element, yielding the&#xA;expanded name and value as a pair of Strings." ilk="function" line="1038" lineend="1042" name="each" signature="each" />
          <scope doc="Fetches an attribute name:: the name by which to search for&#xA;the attribute." ilk="function" line="1053" lineend="1084" name="get_attribute" signature="get_attribute( name )" />
          <scope doc="Sets an attribute, overwriting any existing attribute value&#xA;by the same name." ilk="function" line="1098" lineend="1127" name="[]=" signature="[]=( name" />
          <scope doc="Returns an array of Strings containing all of the prefixes&#xA;declared by this set of # attributes." ilk="function" line="1135" lineend="1149" name="prefixes" signature="prefixes" />
          <scope ilk="function" line="1151" lineend="1165" name="namespaces" signature="namespaces" />
          <scope doc="Removes an attribute attribute:: either a String, which is&#xA;the name of the attribute to remove -- namespaces are&#xA;significant here -- or the attribute to remove." ilk="function" line="1177" lineend="1204" name="delete" signature="delete( attribute )" />
          <scope doc="Adds an attribute, overriding any existing attribute by the&#xA;same name." ilk="function" line="1209" lineend="1211" name="add" signature="add( attribute )" />
          <scope doc="Deletes all attributes matching a name. Namespaces are&#xA;significant." ilk="function" line="1219" lineend="1226" name="delete_all" signature="delete_all( name )" />
        </scope>
        <scope ilk="function" line="1233" lineend="1241" name="get_attribute_ns" signature="get_attribute_ns(namespace, name)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/dtd/notationdecl">
      <import line="1" module="rexml/child" symbol="*" />
      <scope ilk="namespace" line="2" lineend="39" name="REXML">
        <scope ilk="namespace" line="3" lineend="38" name="DTD">
          <scope classrefs="Child" ilk="class" line="4" lineend="37" name="NotationDecl">
            <scope attributes="__ctor__" ilk="function" line="9" lineend="21" name="initialize" signature="initialize" />
            <scope ilk="function" line="23" lineend="25" name="to_s" signature="to_s" />
            <scope ilk="function" line="27" lineend="30" name="write" signature="write( output, indent )" />
            <scope attributes="__classmethod__" ilk="function" line="32" lineend="36" name="parse_source" signature="NotationDecl.parse_source" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/dtd/entitydecl">
      <import line="1" module="rexml/child" symbol="*" />
      <scope ilk="namespace" line="2" lineend="56" name="REXML">
        <scope ilk="namespace" line="3" lineend="55" name="DTD">
          <scope classrefs="Child" ilk="class" line="4" lineend="54" name="EntityDecl">
            <scope attributes="__ctor__" doc="&lt;!ENTITY name SYSTEM &quot;...&quot;&gt; &lt;!ENTITY name &quot;...&quot;&gt;" ilk="function" line="13" lineend="35" name="initialize" signature="initialize" />
            <scope ilk="function" line="37" lineend="42" name="to_s" signature="to_s" />
            <scope ilk="function" line="44" lineend="47" name="write" signature="write( output, indent )" />
            <scope attributes="__classmethod__" ilk="function" line="49" lineend="53" name="parse_source" signature="EntityDecl.parse_source" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/dtd/elementdecl">
      <import line="1" module="rexml/child" symbol="*" />
      <scope ilk="namespace" line="2" lineend="17" name="REXML">
        <scope ilk="namespace" line="3" lineend="16" name="DTD">
          <scope classrefs="Child" ilk="class" line="4" lineend="15" name="ElementDecl">
            <scope attributes="__ctor__" doc="\s*(((([&quot;&apos;]).*?\5)|[^\/&apos;&quot;&gt;]*)*?)(\/)?&gt;/um, true)" ilk="function" line="11" lineend="14" name="initialize" signature="initialize" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/dtd/dtd">
      <import line="1" module="rexml/dtd/elementdecl" symbol="*" />
      <import line="2" module="rexml/dtd/entitydecl" symbol="*" />
      <import line="3" module="rexml/comment" symbol="*" />
      <import line="4" module="rexml/dtd/notationdecl" symbol="*" />
      <import line="5" module="rexml/dtd/attlistdecl" symbol="*" />
      <import line="6" module="rexml/parent" symbol="*" />
      <scope ilk="namespace" line="8" lineend="51" name="REXML">
        <scope ilk="namespace" line="9" lineend="50" name="DTD">
          <scope classrefs="Object" ilk="class" line="10" lineend="49" name="Parser">
            <scope attributes="__classmethod__" ilk="function" line="11" lineend="18" name="parse" signature="Parser.parse( input )" />
            <scope attributes="__classmethod__" doc="Takes a String and parses it out" ilk="function" line="21" lineend="48" name="parse_helper" signature="Parser.parse_helper( input )" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/dtd/attlistdecl">
      <import line="1" module="rexml/child" symbol="*" />
      <scope ilk="namespace" line="2" lineend="10" name="REXML">
        <scope ilk="namespace" line="3" lineend="9" name="DTD">
          <scope classrefs="Child" ilk="class" line="4" lineend="8" name="AttlistDecl" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/document">
      <import line="1" module="rexml/element" symbol="*" />
      <import line="2" module="rexml/xmldecl" symbol="*" />
      <import line="3" module="rexml/source" symbol="*" />
      <import line="4" module="rexml/comment" symbol="*" />
      <import line="5" module="rexml/doctype" symbol="*" />
      <import line="6" module="rexml/instruction" symbol="*" />
      <import line="7" module="rexml/rexml" symbol="*" />
      <import line="8" module="rexml/parseexception" symbol="*" />
      <import line="9" module="rexml/output" symbol="*" />
      <import line="10" module="rexml/parsers/baseparser" symbol="*" />
      <import line="11" module="rexml/parsers/streamparser" symbol="*" />
      <import line="12" module="rexml/parsers/treeparser" symbol="*" />
      <scope ilk="namespace" line="14" lineend="193" name="REXML">
        <scope classrefs="Element" doc="Represents a full XML document, including PIs, a doctype,&#xA;etc." ilk="class" line="20" name="Document">
          <scope attributes="__ctor__" doc="Constructor @param source if supplied, must be a Document,&#xA;String, or IO." ilk="function" line="37" lineend="47" name="initialize" signature="initialize( source = nil, context = {} )" />
        </scope>
        <scope ilk="function" line="49" lineend="51" name="node_type" signature="node_type" />
        <scope doc="Should be obvious" ilk="function" line="54" lineend="56" name="clone" signature="clone" />
        <scope doc="According to the XML spec, a root node has no expanded name" ilk="function" line="59" lineend="63" name="expanded_name" signature="expanded_name" />
        <scope doc="We override this, because XMLDecls and DocTypes must go at&#xA;the start of the document" ilk="function" line="69" lineend="86" name="add" signature="add( child )" />
        <scope doc="Insert at end of list" ilk="function" line="99" lineend="103" name="add_element" signature="add_element(arg=nil, arg2=nil)" />
        <scope doc="@return the root Element of the document, or nil if this&#xA;document has no children." ilk="function" line="107" lineend="111" name="root" signature="root" />
        <scope doc="@return the DocType child of the document, if one exists,&#xA;and nil otherwise." ilk="function" line="115" lineend="117" name="doctype" signature="doctype" />
        <scope doc="@return the XMLDecl of this document; if no XMLDecl has been&#xA;set, the default declaration is returned." ilk="function" line="121" lineend="125" name="xml_decl" signature="xml_decl" />
        <scope doc="@return the XMLDecl version of this document as a String." ilk="function" line="129" lineend="131" name="version" signature="version" />
        <scope doc="@return the XMLDecl encoding of this document as a String." ilk="function" line="135" lineend="137" name="encoding" signature="encoding" />
        <scope doc="@return the XMLDecl standalone value of this document as a&#xA;String." ilk="function" line="141" lineend="143" name="stand_alone?" signature="stand_alone?" />
        <scope doc="Write the XML tree out, optionally with indent." ilk="function" line="173" lineend="179" name="write" signature="write( output=$stdout, indent=-1, transitive=false, ie_hack=false )" />
        <scope ilk="function" line="184" lineend="186" name="Document::parse_stream" signature="Document::parse_stream( source, listener )" />
        <scope ilk="function" line="189" lineend="191" name="build" signature="build( source )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/doctype">
      <import line="1" module="rexml/parent" symbol="*" />
      <import line="2" module="rexml/parseexception" symbol="*" />
      <import line="3" module="rexml/namespace" symbol="*" />
      <import line="4" module="rexml/entity" symbol="*" />
      <import line="5" module="rexml/attlistdecl" symbol="*" />
      <import line="6" module="rexml/xmltokens" symbol="*" />
      <scope ilk="namespace" line="8" lineend="278" name="REXML">
        <scope classrefs="Parent" doc="Represents an XML DOCTYPE declaration; that is, the contents&#xA;of &lt;!DOCTYPE ..." ilk="class" line="12" lineend="204" name="DocType">
          <scope ilk="function" line="27" lineend="27" name="name" />
          <scope ilk="function" line="27" lineend="27" name="external_id" />
          <scope ilk="function" line="27" lineend="27" name="entities" />
          <scope ilk="function" line="27" lineend="27" name="namespaces" />
          <scope attributes="__ctor__" doc="Constructor" ilk="function" line="41" lineend="68" name="initialize" signature="initialize( first, parent=nil )" />
          <scope ilk="function" line="70" lineend="72" name="node_type" signature="node_type" />
          <scope ilk="function" line="74" lineend="82" name="attributes_of" signature="attributes_of" />
          <scope ilk="function" line="84" lineend="92" name="attribute_of" signature="attribute_of" />
          <scope ilk="function" line="94" lineend="96" name="clone" signature="clone" />
          <scope doc="output:: Where to write the string indent:: An integer." ilk="function" line="116" lineend="136" name="write" signature="write( output, indent=0, transitive=false, ie_hack=false )" />
          <scope ilk="function" line="138" lineend="140" name="context" signature="context" />
          <scope ilk="function" line="142" lineend="144" name="entity" signature="entity( name )" />
          <scope ilk="function" line="146" lineend="150" name="add" signature="add" />
          <scope doc="This method retrieves the public identifier identifying the&#xA;document&apos;s DTD." ilk="function" line="156" lineend="163" name="public" signature="public" />
          <scope doc="This method retrieves the system identifier identifying the&#xA;document&apos;s DTD" ilk="function" line="168" lineend="175" name="system" signature="system" />
          <scope doc="This method returns a list of notations that have been&#xA;declared in the _internal_ DTD subset." ilk="function" line="182" lineend="184" name="notations" signature="notations" />
          <scope doc="Retrieves a named notation." ilk="function" line="190" lineend="194" name="notation" signature="notation(name)" />
          <scope doc="Method contributed by Henrik Martensson" ilk="function" line="199" lineend="203" name="strip_quotes" signature="strip_quotes(quoted_string)" />
          <import symbol="XMLTokens" />
        </scope>
        <scope classrefs="Child" doc="We don&apos;t really handle any of these since we&apos;re not a&#xA;validating parser, so we can be pretty dumb about them." ilk="class" line="212" lineend="226" name="Declaration">
          <scope attributes="__ctor__" ilk="function" line="213" lineend="216" name="initialize" signature="initialize" />
          <scope ilk="function" line="218" lineend="220" name="to_s" signature="to_s" />
          <scope ilk="function" line="222" lineend="225" name="write" signature="write( output, indent )" />
        </scope>
        <scope classrefs="Declaration" ilk="class" line="229" lineend="233" name="ElementDecl">
          <scope attributes="__ctor__" ilk="function" line="230" lineend="232" name="initialize" signature="initialize( src )" />
        </scope>
        <scope classrefs="Child" ilk="class" line="235" lineend="246" name="ExternalEntity">
          <scope attributes="__ctor__" ilk="function" line="236" lineend="239" name="initialize" signature="initialize( src )" />
          <scope ilk="function" line="240" lineend="242" name="to_s" signature="to_s" />
          <scope ilk="function" line="243" lineend="245" name="write" signature="write( output, indent )" />
        </scope>
        <scope classrefs="Child" ilk="class" line="248" lineend="277" name="NotationDecl">
          <scope ilk="function" line="249" lineend="249" name="public" />
          <scope ilk="function" line="249" lineend="249" name="public=" />
          <scope ilk="function" line="249" lineend="249" name="system" />
          <scope ilk="function" line="249" lineend="249" name="system=" />
          <scope attributes="__ctor__" ilk="function" line="250" lineend="256" name="initialize" signature="initialize" />
          <scope ilk="function" line="258" lineend="264" name="to_s" signature="to_s" />
          <scope ilk="function" line="266" lineend="269" name="write" signature="write( output, indent=-1 )" />
          <scope doc="This method retrieves the name of the notation." ilk="function" line="274" lineend="276" name="name" signature="name" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/comment">
      <import line="1" module="rexml/child" symbol="*" />
      <scope ilk="namespace" line="3" lineend="85" name="REXML">
        <scope classrefs="Child" doc="Represents an XML comment; that is, text between &lt;!-- ..." ilk="class" line="6" lineend="60" name="Comment">
          <scope ilk="function" line="11" lineend="11" name="string" />
          <scope ilk="function" line="11" lineend="11" name="string=" />
          <scope attributes="__ctor__" doc="The content text" ilk="function" line="21" lineend="29" name="initialize" signature="initialize( first, second = nil )" />
          <scope ilk="function" line="31" lineend="33" name="clone" signature="clone" />
          <scope doc="output:: Where to write the string indent:: An integer." ilk="function" line="53" lineend="60" name="write" signature="write( output, indent=-1, transitive=false, ie_hack=false )" />
          <import symbol="Comparable" />
        </scope>
        <scope doc="Compares this Comment to another; the contents of the&#xA;comment are used in the comparison." ilk="function" line="69" lineend="71" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
        <scope doc="Compares this Comment to another; the contents of the&#xA;comment are used in the comparison." ilk="function" line="76" lineend="79" name="==" signature="==( other" />
        <scope ilk="function" line="81" lineend="83" name="node_type" signature="node_type" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/child">
      <import line="1" module="rexml/node" symbol="*" />
      <scope ilk="namespace" line="3" lineend="96" name="REXML">
        <scope classrefs="Object" doc="A Child object is something contained by a parent, and this&#xA;class contains methods to support that." ilk="class" line="8" lineend="95" name="Child">
          <scope ilk="function" line="10" lineend="10" name="parent" />
          <scope attributes="__ctor__" doc="The Parent of this object Constructor." ilk="function" line="17" lineend="22" name="initialize" signature="initialize( parent = nil )" />
          <scope doc="Replaces this object with another object." ilk="function" line="28" lineend="31" name="replace_with" signature="replace_with( child )" />
          <scope doc="Removes this child from the parent." ilk="function" line="36" lineend="41" name="remove" signature="remove" />
          <scope doc="Sets the parent of this child to the supplied argument." ilk="function" line="51" lineend="55" name="parent=" signature="parent=( other )" />
          <scope doc="Sets the next sibling of this child." ilk="function" line="67" lineend="69" name="next_sibling=" signature="next_sibling=( other )" />
          <scope doc="Sets the previous sibling of this child." ilk="function" line="78" lineend="80" name="previous_sibling=" signature="previous_sibling=(other)" />
          <scope doc="Returns:: the document this child belongs to, or nil if this&#xA;child belongs to no document" ilk="function" line="84" lineend="87" name="document" signature="document" />
          <scope doc="This doesn&apos;t yet handle encodings" ilk="function" line="90" lineend="94" name="bytes" signature="bytes" />
          <import symbol="Node" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/cdata">
      <import line="1" module="rexml/text" symbol="*" />
      <scope ilk="namespace" line="3" lineend="72" name="REXML">
        <scope classrefs="Text" ilk="class" line="4" name="CData">
          <scope attributes="__ctor__" doc="Constructor. CData is data between &lt;![CDATA[ ..." ilk="function" line="15" lineend="17" name="initialize" signature="initialize( first, whitespace=true, parent=nil )" />
          <scope doc="Make a copy of this object" ilk="function" line="25" lineend="27" name="clone" signature="clone" />
          <scope doc="Returns the content of this CData object" ilk="function" line="34" lineend="36" name="to_s" signature="to_s" />
        </scope>
        <scope ilk="function" line="38" lineend="40" name="value" signature="value" />
        <scope doc="Generates XML output of this object" ilk="function" line="65" lineend="70" name="write" signature="write( output=$stdout, indent=-1, transitive=false, ie_hack=false )" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/attribute">
      <import line="1" module="rexml/namespace" symbol="*" />
      <import line="2" module="rexml/text" symbol="*" />
      <scope ilk="namespace" line="4" lineend="162" name="REXML">
        <scope classrefs="Object" doc="Defines an Element Attribute; IE, a attribute=value pair, as&#xA;in: &lt;element attribute=&quot;value&quot;/&gt;." ilk="class" line="9" name="Attribute">
          <scope ilk="function" line="14" lineend="14" name="element" />
          <scope ilk="function" line="17" lineend="17" name="normalized=" />
          <scope attributes="__ctor__" doc="Constructor." ilk="function" line="26" lineend="43" name="initialize" signature="initialize( first, second=nil, parent=nil )" />
          <scope doc="Returns the namespace of the attribute." ilk="function" line="54" lineend="60" name="prefix" signature="prefix" />
          <scope doc="Returns the namespace URL, if defined, or nil otherwise" ilk="function" line="67" lineend="70" name="namespace" signature="namespace" />
          <scope doc="Returns true if other is an Attribute and has the same name&#xA;and value, false otherwise." ilk="function" line="74" lineend="76" name="==" signature="==( other" />
          <scope doc="Creates (and returns) a hash from both the name and value" ilk="function" line="79" lineend="81" name="hash" signature="hash" />
          <scope doc="Returns this attribute out as XML source, expanding the name" ilk="function" line="89" lineend="91" name="to_string" signature="to_string" />
          <scope doc="Returns the attribute value, with entities replaced" ilk="function" line="94" lineend="105" name="to_s" signature="to_s" />
          <scope doc="Returns the UNNORMALIZED value of this attribute." ilk="function" line="109" lineend="118" name="value" signature="value" />
          <scope doc="Returns a copy of this attribute" ilk="function" line="121" lineend="123" name="clone" signature="clone" />
          <scope doc="Sets the element of which this object is an attribute." ilk="function" line="129" lineend="132" name="element=" signature="element=( element )" />
          <scope doc="Removes this Attribute from the tree, and returns true if&#xA;successfull" ilk="function" line="137" lineend="139" name="remove" signature="remove" />
          <scope doc="Writes this attribute (EG, puts &apos;key=&quot;value&quot;&apos; to the output)" ilk="function" line="142" lineend="144" name="write" signature="write( output, indent=-1 )" />
          <import symbol="Node" />
          <import symbol="Namespace" />
        </scope>
        <scope ilk="function" line="146" lineend="148" name="node_type" signature="node_type" />
        <scope ilk="function" line="150" lineend="154" name="inspect" signature="inspect" />
        <scope ilk="function" line="156" lineend="160" name="xpath" signature="xpath" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rexml/attlistdecl">
      <import line="2" module="rexml/child" symbol="*" />
      <import line="3" module="rexml/source" symbol="*" />
      <scope doc="vim:ts=2 sw=2 noexpandtab:" ilk="namespace" line="5" lineend="62" name="REXML">
        <scope classrefs="Child" doc="This class needs: * Documentation * Work!  Not all types of&#xA;attlists are intelligently parsed, so we just spew back out&#xA;what we get in." ilk="class" line="17" lineend="61" name="AttlistDecl">
          <scope ilk="function" line="21" lineend="21" name="element_name" />
          <scope attributes="__ctor__" doc="Create an AttlistDecl, pulling the information from a&#xA;Source." ilk="function" line="28" lineend="33" name="initialize" signature="initialize(source)" />
          <scope doc="Access the attlist attribute/value pairs." ilk="function" line="37" lineend="39" name="[]" signature="[](key" />
          <scope doc="Whether an attlist declaration includes the given attribute&#xA;definition if attlist_decl.include? &quot;xmlns:foobar&quot;" ilk="function" line="43" lineend="45" name="include?" signature="include?(key)" />
          <scope doc="Itterate over the key/value pairs: attlist_decl.each {&#xA;|attribute_name, attribute_value| ..." ilk="function" line="49" lineend="51" name="each" signature="each(&amp;block)" />
          <scope doc="Write out exactly what we got in." ilk="function" line="54" lineend="56" name="write" signature="write" />
          <scope ilk="function" line="58" lineend="60" name="node_type" signature="node_type" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="resolv">
      <import line="192" module="socket" symbol="*" />
      <import line="193" module="fcntl" symbol="*" />
      <import line="194" module="timeout" symbol="*" />
      <import line="195" module="thread" symbol="*" />
      <scope classrefs="Object" ilk="class" line="197" lineend="1884" name="Resolv">
        <scope attributes="__classmethod__" ilk="function" line="198" lineend="200" name="getaddress" signature="self.getaddress(name)" />
        <scope attributes="__classmethod__" ilk="function" line="202" lineend="204" name="getaddresses" signature="self.getaddresses(name)" />
        <scope attributes="__classmethod__" ilk="function" line="206" lineend="208" name="each_address" signature="self.each_address(name, &amp;block)" />
        <scope attributes="__classmethod__" ilk="function" line="210" lineend="212" name="getname" signature="self.getname(address)" />
        <scope attributes="__classmethod__" ilk="function" line="214" lineend="216" name="getnames" signature="self.getnames(address)" />
        <scope attributes="__classmethod__" ilk="function" line="218" lineend="220" name="each_name" signature="self.each_name(address, &amp;proc)" />
        <scope attributes="__ctor__" ilk="function" line="222" lineend="224" name="initialize" signature="initialize(resolvers=[Hosts.new, DNS.new])" />
        <scope ilk="function" line="226" lineend="229" name="getaddress" signature="getaddress(name)" />
        <scope ilk="function" line="231" lineend="235" name="getaddresses" signature="getaddresses(name)" />
        <scope ilk="function" line="237" lineend="250" name="each_address" signature="each_address(name)" />
        <scope ilk="function" line="252" lineend="255" name="getname" signature="getname(address)" />
        <scope ilk="function" line="257" lineend="261" name="getnames" signature="getnames(address)" />
        <scope ilk="function" line="263" lineend="272" name="each_name" signature="each_name(address)" />
        <scope classrefs="StandardError" ilk="class" line="274" lineend="275" name="ResolvError" />
        <scope classrefs="TimeoutError" ilk="class" line="277" lineend="278" name="ResolvTimeout" />
        <scope classrefs="Object" ilk="class" line="280" lineend="360" name="Hosts">
          <import line="282" module="win32/resolv" symbol="*" />
          <scope attributes="__ctor__" ilk="function" line="288" lineend="292" name="initialize" signature="initialize(filename = DefaultFileName)" />
          <scope ilk="function" line="294" lineend="323" name="lazy_initialize" signature="lazy_initialize" />
          <scope ilk="function" line="325" lineend="328" name="getaddress" signature="getaddress(name)" />
          <scope ilk="function" line="330" lineend="334" name="getaddresses" signature="getaddresses(name)" />
          <scope ilk="function" line="336" lineend="341" name="each_address" signature="each_address(name, &amp;proc)" />
          <scope ilk="function" line="343" lineend="346" name="getname" signature="getname(address)" />
          <scope ilk="function" line="348" lineend="352" name="getnames" signature="getnames(address)" />
          <scope ilk="function" line="354" lineend="359" name="each_name" signature="each_name(address, &amp;proc)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="362" lineend="1712" name="DNS">
          <scope attributes="__classmethod__" doc="STD0013 (RFC 1035, etc.) ftp://ftp.isi.edu/in-&#xA;notes/iana/assignments/dns-parameters" ilk="function" line="371" lineend="379" name="open" signature="self.open(*args)" />
          <scope attributes="__ctor__" ilk="function" line="381" lineend="385" name="initialize" signature="initialize(config_info=nil)" />
          <scope ilk="function" line="387" lineend="402" name="lazy_initialize" signature="lazy_initialize" />
          <scope ilk="function" line="404" lineend="412" name="close" signature="close" />
          <scope ilk="function" line="414" lineend="417" name="getaddress" signature="getaddress(name)" />
          <scope ilk="function" line="419" lineend="423" name="getaddresses" signature="getaddresses(name)" />
          <scope ilk="function" line="425" lineend="427" name="each_address" signature="each_address(name)" />
          <scope ilk="function" line="429" lineend="432" name="getname" signature="getname(address)" />
          <scope ilk="function" line="434" lineend="438" name="getnames" signature="getnames(address)" />
          <scope ilk="function" line="440" lineend="452" name="each_name" signature="each_name(address)" />
          <scope ilk="function" line="454" lineend="457" name="getresource" signature="getresource(name, typeclass)" />
          <scope ilk="function" line="459" lineend="463" name="getresources" signature="getresources(name, typeclass)" />
          <scope ilk="function" line="465" lineend="494" name="each_resource" signature="each_resource(name, typeclass, &amp;proc)" />
          <scope ilk="function" line="496" lineend="525" name="extract_resources" signature="extract_resources(msg, name, typeclass)" />
          <scope classrefs="Object" ilk="class" line="527" lineend="714" name="Requester">
            <scope attributes="__ctor__" ilk="function" line="528" lineend="530" name="initialize" signature="initialize" />
            <scope ilk="function" line="532" lineend="542" name="close" signature="close" />
            <scope ilk="function" line="544" lineend="553" name="delete" signature="delete(arg)" />
            <scope classrefs="Object" ilk="class" line="555" lineend="567" name="Sender">
              <scope attributes="__ctor__" ilk="function" line="556" lineend="561" name="initialize" signature="initialize(msg, data, sock, queue)" />
              <scope ilk="function" line="562" lineend="562" name="queue" />
              <scope ilk="function" line="564" lineend="566" name="recv" signature="recv(msg)" />
            </scope>
            <scope classrefs="Requester" ilk="class" line="569" lineend="617" name="UnconnectedUDP">
              <scope attributes="__ctor__" ilk="function" line="570" lineend="593" name="initialize" signature="initialize" />
              <scope ilk="function" line="595" lineend="604" name="sender" signature="sender(msg, data, queue, host, port=Port)" />
              <scope classrefs="Requester::Sender" ilk="class" line="606" lineend="616" name="Sender">
                <scope attributes="__ctor__" ilk="function" line="607" lineend="611" name="initialize" signature="initialize(msg, data, sock, host, port, queue)" />
                <scope ilk="function" line="613" lineend="615" name="send" signature="send" />
              </scope>
            </scope>
            <scope classrefs="Requester" ilk="class" line="619" lineend="662" name="ConnectedUDP">
              <scope attributes="__ctor__" ilk="function" line="620" lineend="645" name="initialize" signature="initialize(host, port=Port)" />
              <scope ilk="function" line="647" lineend="655" name="sender" signature="sender(msg, data, queue, host=@host, port=@port)" />
              <scope classrefs="Requester::Sender" ilk="class" line="657" lineend="661" name="Sender">
                <scope ilk="function" line="658" lineend="660" name="send" signature="send" />
              </scope>
            </scope>
            <scope classrefs="Requester" ilk="class" line="664" lineend="710" name="TCP">
              <scope attributes="__ctor__" ilk="function" line="665" lineend="692" name="initialize" signature="initialize(host, port=Port)" />
              <scope ilk="function" line="694" lineend="702" name="sender" signature="sender(msg, data, queue, host=@host, port=@port)" />
              <scope classrefs="Requester::Sender" ilk="class" line="704" lineend="709" name="Sender">
                <scope ilk="function" line="705" lineend="708" name="send" signature="send" />
              </scope>
            </scope>
            <scope classrefs="StandardError" ilk="class" line="712" lineend="713" name="RequestError" />
          </scope>
          <scope classrefs="Object" ilk="class" line="716" lineend="891" name="Config">
            <scope attributes="__ctor__" ilk="function" line="717" lineend="721" name="initialize" signature="initialize(config_info=nil)" />
            <scope attributes="__classmethod__" ilk="function" line="723" lineend="755" name="parse_resolv_conf" signature="Config.parse_resolv_conf(filename)" />
            <scope attributes="__classmethod__" ilk="function" line="757" lineend="769" name="default_config_hash" signature="Config.default_config_hash(filename=&quot;/etc/resolv.conf&quot;)" />
            <scope ilk="function" line="771" lineend="827" name="lazy_initialize" signature="lazy_initialize" />
            <scope ilk="function" line="829" lineend="836" name="single?" signature="single?" />
            <scope ilk="function" line="838" lineend="852" name="generate_candidates" signature="generate_candidates(name)" />
            <scope ilk="function" line="856" lineend="862" name="generate_timeouts" signature="generate_timeouts" />
            <scope ilk="function" line="864" lineend="884" name="resolv" signature="resolv(name)" />
            <scope classrefs="ResolvError" ilk="class" line="886" lineend="887" name="NXDomain" />
            <scope classrefs="ResolvError" ilk="class" line="889" lineend="890" name="OtherResolvError" />
          </scope>
          <scope ilk="namespace" line="893" lineend="899" name="OpCode" />
          <scope ilk="namespace" line="901" lineend="920" name="RCode" />
          <scope classrefs="StandardError" ilk="class" line="922" lineend="923" name="DecodeError" />
          <scope classrefs="StandardError" ilk="class" line="925" lineend="926" name="EncodeError" />
          <scope ilk="namespace" line="928" lineend="962" name="Label">
            <scope attributes="__classmethod__" ilk="function" line="929" lineend="933" name="split" signature="self.split(arg)" />
            <scope classrefs="Object" ilk="class" line="935" lineend="961" name="Str">
              <scope attributes="__ctor__" ilk="function" line="936" lineend="939" name="initialize" signature="initialize(string)" />
              <scope ilk="function" line="940" lineend="940" name="string" />
              <scope ilk="function" line="940" lineend="940" name="downcase" />
              <scope ilk="function" line="942" lineend="944" name="to_s" signature="to_s" />
              <scope ilk="function" line="946" lineend="948" name="inspect" signature="inspect" />
              <scope ilk="function" line="950" lineend="952" name="==" signature="==(other" />
              <scope ilk="function" line="954" lineend="956" name="eql?" signature="eql?(other)" />
              <scope ilk="function" line="958" lineend="960" name="hash" signature="hash" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="964" lineend="1040" name="Name">
            <scope attributes="__classmethod__" ilk="function" line="965" lineend="974" name="create" signature="self.create(arg)" />
            <scope attributes="__ctor__" ilk="function" line="976" lineend="979" name="initialize" signature="initialize(labels, absolute=true)" />
            <scope ilk="function" line="981" lineend="983" name="inspect" signature="inspect" />
            <scope ilk="function" line="985" lineend="987" name="absolute?" signature="absolute?" />
            <scope ilk="function" line="989" lineend="992" name="==" signature="==(other" />
            <scope doc="tests subdomain-of relation." ilk="function" line="1005" lineend="1011" name="subdomain_of?" signature="subdomain_of?(other)" />
            <scope ilk="function" line="1013" lineend="1015" name="hash" signature="hash" />
            <scope ilk="function" line="1017" lineend="1019" name="to_a" signature="to_a" />
            <scope ilk="function" line="1021" lineend="1023" name="length" signature="length" />
            <scope ilk="function" line="1025" lineend="1027" name="[]" signature="[](i" />
            <scope doc="returns the domain name as a string." ilk="function" line="1037" lineend="1039" name="to_s" signature="to_s" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1042" lineend="1360" name="Message">
            <scope attributes="__ctor__" ilk="function" line="1045" lineend="1058" name="initialize" signature="initialize(id = (@@identifier += 1) &amp; 0xffff)" />
            <scope ilk="function" line="1060" lineend="1060" name="id" />
            <scope ilk="function" line="1060" lineend="1060" name="id=" />
            <scope ilk="function" line="1060" lineend="1060" name="qr" />
            <scope ilk="function" line="1060" lineend="1060" name="qr=" />
            <scope ilk="function" line="1060" lineend="1060" name="opcode" />
            <scope ilk="function" line="1060" lineend="1060" name="opcode=" />
            <scope ilk="function" line="1060" lineend="1060" name="aa" />
            <scope ilk="function" line="1060" lineend="1060" name="aa=" />
            <scope ilk="function" line="1060" lineend="1060" name="tc" />
            <scope ilk="function" line="1060" lineend="1060" name="tc=" />
            <scope ilk="function" line="1060" lineend="1060" name="rd" />
            <scope ilk="function" line="1060" lineend="1060" name="rd=" />
            <scope ilk="function" line="1060" lineend="1060" name="ra" />
            <scope ilk="function" line="1060" lineend="1060" name="ra=" />
            <scope ilk="function" line="1060" lineend="1060" name="rcode" />
            <scope ilk="function" line="1060" lineend="1060" name="rcode=" />
            <scope ilk="function" line="1061" lineend="1061" name="question" />
            <scope ilk="function" line="1061" lineend="1061" name="answer" />
            <scope ilk="function" line="1061" lineend="1061" name="authority" />
            <scope ilk="function" line="1061" lineend="1061" name="additional" />
            <scope ilk="function" line="1063" lineend="1076" name="==" signature="==(other" />
            <scope ilk="function" line="1078" lineend="1080" name="add_question" signature="add_question(name, typeclass)" />
            <scope ilk="function" line="1082" lineend="1086" name="each_question" signature="each_question" />
            <scope ilk="function" line="1088" lineend="1090" name="add_answer" signature="add_answer(name, ttl, data)" />
            <scope ilk="function" line="1092" lineend="1096" name="each_answer" signature="each_answer" />
            <scope ilk="function" line="1098" lineend="1100" name="add_authority" signature="add_authority(name, ttl, data)" />
            <scope ilk="function" line="1102" lineend="1106" name="each_authority" signature="each_authority" />
            <scope ilk="function" line="1108" lineend="1110" name="add_additional" signature="add_additional(name, ttl, data)" />
            <scope ilk="function" line="1112" lineend="1116" name="each_additional" signature="each_additional" />
            <scope ilk="function" line="1118" lineend="1122" name="each_resource" signature="each_resource" />
            <scope ilk="function" line="1124" lineend="1153" name="encode" signature="encode" />
            <scope classrefs="Object" ilk="class" line="1155" lineend="1215" name="MessageEncoder">
              <scope attributes="__ctor__" ilk="function" line="1156" lineend="1160" name="initialize" signature="initialize" />
              <scope ilk="function" line="1162" lineend="1164" name="to_s" signature="to_s" />
              <scope ilk="function" line="1166" lineend="1168" name="put_bytes" signature="put_bytes(d)" />
              <scope ilk="function" line="1170" lineend="1172" name="put_pack" signature="put_pack(template, *d)" />
              <scope ilk="function" line="1174" lineend="1181" name="put_length16" signature="put_length16" />
              <scope ilk="function" line="1183" lineend="1186" name="put_string" signature="put_string(d)" />
              <scope ilk="function" line="1188" lineend="1192" name="put_string_list" signature="put_string_list(ds)" />
              <scope ilk="function" line="1194" lineend="1196" name="put_name" signature="put_name(d)" />
              <scope ilk="function" line="1198" lineend="1210" name="put_labels" signature="put_labels(d)" />
              <scope ilk="function" line="1212" lineend="1214" name="put_label" signature="put_label(d)" />
            </scope>
            <scope attributes="__classmethod__" ilk="function" line="1217" lineend="1248" name="decode" signature="Message.decode(m)" />
            <scope classrefs="Object" ilk="class" line="1250" lineend="1359" name="MessageDecoder">
              <scope attributes="__ctor__" ilk="function" line="1251" lineend="1256" name="initialize" signature="initialize(data)" />
              <scope ilk="function" line="1258" lineend="1270" name="get_length16" signature="get_length16" />
              <scope ilk="function" line="1272" lineend="1276" name="get_bytes" signature="get_bytes(len = @limit - @index)" />
              <scope ilk="function" line="1278" lineend="1296" name="get_unpack" signature="get_unpack(template)" />
              <scope ilk="function" line="1298" lineend="1304" name="get_string" signature="get_string" />
              <scope ilk="function" line="1306" lineend="1312" name="get_string_list" signature="get_string_list" />
              <scope ilk="function" line="1314" lineend="1316" name="get_name" signature="get_name" />
              <scope ilk="function" line="1318" lineend="1341" name="get_labels" signature="get_labels(limit=nil)" />
              <scope ilk="function" line="1343" lineend="1345" name="get_label" signature="get_label" />
              <scope ilk="function" line="1347" lineend="1351" name="get_question" signature="get_question" />
              <scope ilk="function" line="1353" lineend="1358" name="get_rr" signature="get_rr" />
            </scope>
          </scope>
          <scope classrefs="Object" ilk="class" line="1362" lineend="1370" name="Query">
            <scope ilk="function" line="1363" lineend="1365" name="encode_rdata" signature="encode_rdata(msg)" />
            <scope attributes="__classmethod__" ilk="function" line="1367" lineend="1369" name="decode_rdata" signature="self.decode_rdata(msg)" />
          </scope>
          <scope classrefs="Query" ilk="class" line="1372" lineend="1711" name="Resource">
            <scope ilk="function" line="1375" lineend="1377" name="encode_rdata" signature="encode_rdata(msg)" />
            <scope attributes="__classmethod__" ilk="function" line="1379" lineend="1381" name="decode_rdata" signature="self.decode_rdata(msg)" />
            <scope ilk="function" line="1383" lineend="1388" name="==" signature="==(other" />
            <scope ilk="function" line="1390" lineend="1392" name="eql?" signature="eql?(other)" />
            <scope ilk="function" line="1394" lineend="1400" name="hash" signature="hash" />
            <scope attributes="__classmethod__" ilk="function" line="1402" lineend="1405" name="get_class" signature="self.get_class(type_value, class_value)" />
            <scope classrefs="Resource" ilk="class" line="1407" lineend="1429" name="Generic">
              <scope attributes="__ctor__" ilk="function" line="1408" lineend="1410" name="initialize" signature="initialize(data)" />
              <scope ilk="function" line="1411" lineend="1411" name="data" />
              <scope ilk="function" line="1413" lineend="1415" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1417" lineend="1419" name="decode_rdata" signature="self.decode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1421" lineend="1428" name="create" signature="self.create(type_value, class_value)" />
            </scope>
            <scope classrefs="Resource" ilk="class" line="1431" lineend="1444" name="DomainName">
              <scope attributes="__ctor__" ilk="function" line="1432" lineend="1434" name="initialize" signature="initialize(name)" />
              <scope ilk="function" line="1435" lineend="1435" name="name" />
              <scope ilk="function" line="1437" lineend="1439" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1441" lineend="1443" name="decode_rdata" signature="self.decode_rdata(msg)" />
            </scope>
            <scope classrefs="DomainName" doc="Standard (class generic) RRs" ilk="class" line="1449" lineend="1451" name="NS" />
            <scope classrefs="DomainName" ilk="class" line="1453" lineend="1455" name="CNAME" />
            <scope classrefs="Resource" ilk="class" line="1457" lineend="1484" name="SOA">
              <scope attributes="__ctor__" ilk="function" line="1460" lineend="1468" name="initialize" signature="initialize(mname, rname, serial, refresh, retry_, expire, minimum)" />
              <scope ilk="function" line="1469" lineend="1469" name="mname" />
              <scope ilk="function" line="1469" lineend="1469" name="rname" />
              <scope ilk="function" line="1469" lineend="1469" name="serial" />
              <scope ilk="function" line="1469" lineend="1469" name="refresh" />
              <scope ilk="function" line="1469" lineend="1469" name="retry" />
              <scope ilk="function" line="1469" lineend="1469" name="expire" />
              <scope ilk="function" line="1469" lineend="1469" name="minimum" />
              <scope ilk="function" line="1471" lineend="1475" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1477" lineend="1483" name="decode_rdata" signature="self.decode_rdata(msg)" />
            </scope>
            <scope classrefs="DomainName" ilk="class" line="1486" lineend="1488" name="PTR" />
            <scope classrefs="Resource" ilk="class" line="1490" lineend="1509" name="HINFO">
              <scope attributes="__ctor__" ilk="function" line="1493" lineend="1496" name="initialize" signature="initialize(cpu, os)" />
              <scope ilk="function" line="1497" lineend="1497" name="cpu" />
              <scope ilk="function" line="1497" lineend="1497" name="os" />
              <scope ilk="function" line="1499" lineend="1502" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1504" lineend="1508" name="decode_rdata" signature="self.decode_rdata(msg)" />
            </scope>
            <scope classrefs="Resource" ilk="class" line="1511" lineend="1530" name="MINFO">
              <scope attributes="__ctor__" ilk="function" line="1514" lineend="1517" name="initialize" signature="initialize(rmailbx, emailbx)" />
              <scope ilk="function" line="1518" lineend="1518" name="rmailbx" />
              <scope ilk="function" line="1518" lineend="1518" name="emailbx" />
              <scope ilk="function" line="1520" lineend="1523" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1525" lineend="1529" name="decode_rdata" signature="self.decode_rdata(msg)" />
            </scope>
            <scope classrefs="Resource" ilk="class" line="1532" lineend="1551" name="MX">
              <scope attributes="__ctor__" ilk="function" line="1535" lineend="1538" name="initialize" signature="initialize(preference, exchange)" />
              <scope ilk="function" line="1539" lineend="1539" name="preference" />
              <scope ilk="function" line="1539" lineend="1539" name="exchange" />
              <scope ilk="function" line="1541" lineend="1544" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1546" lineend="1550" name="decode_rdata" signature="self.decode_rdata(msg)" />
            </scope>
            <scope classrefs="Resource" ilk="class" line="1553" lineend="1573" name="TXT">
              <scope attributes="__ctor__" ilk="function" line="1556" lineend="1558" name="initialize" signature="initialize(first_string, *rest_strings)" />
              <scope ilk="function" line="1559" lineend="1559" name="strings" />
              <scope ilk="function" line="1561" lineend="1563" name="data" signature="data" />
              <scope ilk="function" line="1565" lineend="1567" name="encode_rdata" signature="encode_rdata(msg)" />
              <scope attributes="__classmethod__" ilk="function" line="1569" lineend="1572" name="decode_rdata" signature="self.decode_rdata(msg)" />
            </scope>
            <scope classrefs="Query" ilk="class" line="1575" lineend="1577" name="ANY" />
            <scope doc="ARPA Internet specific RRs" ilk="namespace" line="1584" lineend="1710" name="IN">
              <scope classrefs="Resource" ilk="class" line="1595" lineend="1610" name="A">
                <scope attributes="__ctor__" ilk="function" line="1598" lineend="1600" name="initialize" signature="initialize(address)" />
                <scope ilk="function" line="1601" lineend="1601" name="address" />
                <scope ilk="function" line="1603" lineend="1605" name="encode_rdata" signature="encode_rdata(msg)" />
                <scope attributes="__classmethod__" ilk="function" line="1607" lineend="1609" name="decode_rdata" signature="self.decode_rdata(msg)" />
              </scope>
              <scope classrefs="Resource" ilk="class" line="1612" lineend="1634" name="WKS">
                <scope attributes="__ctor__" ilk="function" line="1615" lineend="1619" name="initialize" signature="initialize(address, protocol, bitmap)" />
                <scope ilk="function" line="1620" lineend="1620" name="address" />
                <scope ilk="function" line="1620" lineend="1620" name="protocol" />
                <scope ilk="function" line="1620" lineend="1620" name="bitmap" />
                <scope ilk="function" line="1622" lineend="1626" name="encode_rdata" signature="encode_rdata(msg)" />
                <scope attributes="__classmethod__" ilk="function" line="1628" lineend="1633" name="decode_rdata" signature="self.decode_rdata(msg)" />
              </scope>
              <scope classrefs="Resource" ilk="class" line="1636" lineend="1651" name="AAAA">
                <scope attributes="__ctor__" ilk="function" line="1639" lineend="1641" name="initialize" signature="initialize(address)" />
                <scope ilk="function" line="1642" lineend="1642" name="address" />
                <scope ilk="function" line="1644" lineend="1646" name="encode_rdata" signature="encode_rdata(msg)" />
                <scope attributes="__classmethod__" ilk="function" line="1648" lineend="1650" name="decode_rdata" signature="self.decode_rdata(msg)" />
              </scope>
              <scope classrefs="Resource" doc="SRV resource record defined in RFC 2782" ilk="class" line="1681" lineend="1708" name="SRV">
                <scope attributes="__ctor__" doc="Create a SRV resource record." ilk="function" line="1685" lineend="1690" name="initialize" signature="initialize(priority, weight, port, target)" />
                <scope ilk="function" line="1692" lineend="1692" name="priority" />
                <scope ilk="function" line="1692" lineend="1692" name="weight" />
                <scope ilk="function" line="1692" lineend="1692" name="port" />
                <scope ilk="function" line="1692" lineend="1692" name="target" />
                <scope ilk="function" line="1694" lineend="1699" name="encode_rdata" signature="encode_rdata(msg)" />
                <scope attributes="__classmethod__" ilk="function" line="1701" lineend="1707" name="decode_rdata" signature="self.decode_rdata(msg)" />
              </scope>
            </scope>
          </scope>
        </scope>
        <scope classrefs="Object" ilk="class" line="1714" lineend="1767" name="IPv4">
          <scope attributes="__classmethod__" ilk="function" line="1717" lineend="1733" name="create" signature="self.create(arg)" />
          <scope attributes="__ctor__" ilk="function" line="1735" lineend="1740" name="initialize" signature="initialize(address)" />
          <scope ilk="function" line="1741" lineend="1741" name="address" />
          <scope ilk="function" line="1743" lineend="1745" name="to_s" signature="to_s" />
          <scope ilk="function" line="1747" lineend="1749" name="inspect" signature="inspect" />
          <scope ilk="function" line="1751" lineend="1754" name="to_name" signature="to_name" />
          <scope ilk="function" line="1756" lineend="1758" name="==" signature="==(other" />
          <scope ilk="function" line="1760" lineend="1762" name="eql?" signature="eql?(other)" />
          <scope ilk="function" line="1764" lineend="1766" name="hash" signature="hash" />
        </scope>
        <scope classrefs="Object" ilk="class" line="1769" lineend="1880" name="IPv6">
          <scope attributes="__classmethod__" ilk="function" line="1797" lineend="1841" name="create" signature="self.create(arg)" />
          <scope attributes="__ctor__" ilk="function" line="1843" lineend="1848" name="initialize" signature="initialize(address)" />
          <scope ilk="function" line="1849" lineend="1849" name="address" />
          <scope ilk="function" line="1851" lineend="1857" name="to_s" signature="to_s" />
          <scope ilk="function" line="1859" lineend="1861" name="inspect" signature="inspect" />
          <scope ilk="function" line="1863" lineend="1867" name="to_name" signature="to_name" />
          <scope ilk="function" line="1869" lineend="1871" name="==" signature="==(other" />
          <scope ilk="function" line="1873" lineend="1875" name="eql?" signature="eql?(other)" />
          <scope ilk="function" line="1877" lineend="1879" name="hash" signature="hash" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="resolv-replace">
      <import line="1" module="socket" symbol="*" />
      <import line="2" module="resolv" symbol="*" />
      <scope classrefs="Object" ilk="class" line="4" lineend="13" name="IPSocket">
        <scope ilk="function" line="6" lineend="12" name="getaddress" signature="getaddress(host)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="15" lineend="21" name="TCPSocket">
        <scope attributes="__ctor__" ilk="function" line="17" lineend="20" name="initialize" signature="initialize(host, serv, *rest)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="23" lineend="55" name="UDPSocket">
        <scope ilk="function" line="25" lineend="27" name="bind" signature="bind(host, port)" />
        <scope ilk="function" line="30" lineend="32" name="connect" signature="connect(host, port)" />
        <scope ilk="function" line="35" lineend="54" name="send" signature="send(mesg, flags, *rest)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="57" lineend="62" name="SOCKSSocket">
        <scope attributes="__ctor__" ilk="function" line="59" lineend="61" name="initialize" signature="initialize(host, serv)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="remote-tk">
      <import line="38" module="multi-tk" symbol="*" />
      <scope classrefs="Object" doc="remote-tk.rb - supports to control remote Tk interpreters by&#xA;Hidetoshi NAGAI &lt;nagai@ai.kyutech.ac.jp&gt;" ilk="class" line="9" lineend="9" name="MultiTkIp" />
      <scope classrefs="MultiTkIp" ilk="class" line="10" lineend="10" name="RemoteTkIp" />
      <scope classrefs="Object" ilk="class" line="12" lineend="28" name="MultiTkIp">
        <scope attributes="__classmethod__" ilk="function" line="15" name="_IP_TABLE" signature="self._IP_TABLE" />
        <scope attributes="__classmethod__" ilk="function" line="16" name="_TK_TABLE_LIST" signature="self._TK_TABLE_LIST" />
        <scope attributes="__classmethod__" ilk="function" line="19" lineend="27" name="_DEFAULT_MASTER" signature="self._DEFAULT_MASTER" />
      </scope>
      <scope classrefs="Object" ilk="class" line="29" lineend="32" name="RemoteTkIp" />
      <scope classrefs="Object" ilk="class" line="33" lineend="36" name="MultiTkIp" />
      <scope classrefs="Object" ilk="class" line="40" lineend="46" name="RemoteTkIp" />
      <scope classrefs="Object" ilk="class" line="51" lineend="60" name="RemoteTkIp">
        <scope ilk="function" line="55" lineend="59" name="new" signature="new(*args, &amp;b)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="62" lineend="490" name="RemoteTkIp">
        <scope attributes="__ctor__" ilk="function" line="63" lineend="133" name="initialize" signature="initialize(remote_ip, displayof=nil, timeout=5)">
          <scope classrefs="Object" ilk="class" line="128" lineend="130" name="self" />
        </scope>
        <scope ilk="function" line="135" lineend="138" name="manipulable?" signature="manipulable?" />
        <scope attributes="__classmethod__" ilk="function" line="139" lineend="141" name="manipulable?" signature="self.manipulable?" />
        <scope ilk="function" line="143" lineend="145" name="_is_master_of?" signature="_is_master_of?(tcltkip_obj)" />
        <scope ilk="function" line="148" lineend="150" name="_ip_id_" signature="_ip_id_" />
        <scope ilk="function" line="152" lineend="169" name="_available_check" signature="_available_check(timeout = 5)" />
        <scope ilk="function" line="172" lineend="191" name="_create_connection" signature="_create_connection" />
        <scope ilk="function" line="194" lineend="220" name="_appsend" signature="_appsend(enc_mode, async, *cmds)" />
        <scope ilk="function" line="223" lineend="228" name="ready?" signature="ready?(timeout=5)" />
        <scope ilk="function" line="230" lineend="234" name="is_rubytk?" signature="is_rubytk?" />
        <scope ilk="function" line="236" lineend="248" name="appsend" signature="appsend(async, *args)" />
        <scope ilk="function" line="250" lineend="262" name="rb_appsend" signature="rb_appsend(async, *args)" />
        <scope ilk="function" line="264" lineend="271" name="create_slave" signature="create_slave(name, safe=false)" />
        <scope ilk="function" line="273" lineend="275" name="make_safe" signature="make_safe" />
        <scope ilk="function" line="277" lineend="279" name="safe?" signature="safe?" />
        <scope ilk="function" line="281" lineend="283" name="safe_base?" signature="safe_base?" />
        <scope ilk="function" line="285" lineend="287" name="allow_ruby_exit?" signature="allow_ruby_exit?" />
        <scope ilk="function" line="289" lineend="291" name="allow_ruby_exit=" signature="allow_ruby_exit= (mode)" />
        <scope ilk="function" line="293" lineend="295" name="delete" signature="delete" />
        <scope ilk="function" line="297" lineend="312" name="deleted?" signature="deleted?" />
        <scope ilk="function" line="314" lineend="327" name="has_mainwindow?" signature="has_mainwindow?" />
        <scope ilk="function" line="329" lineend="331" name="invalid_namespace?" signature="invalid_namespace?" />
        <scope ilk="function" line="333" lineend="335" name="restart" signature="restart" />
        <scope ilk="function" line="337" lineend="339" name="__eval" signature="__eval(str)" />
        <scope ilk="function" line="340" lineend="342" name="_eval" signature="_eval(str)" />
        <scope ilk="function" line="343" lineend="345" name="_eval_without_enc" signature="_eval_without_enc(str)" />
        <scope ilk="function" line="346" lineend="348" name="_eval_with_enc" signature="_eval_with_enc(str)" />
        <scope ilk="function" line="350" lineend="352" name="_invoke" signature="_invoke(*args)" />
        <scope ilk="function" line="354" lineend="356" name="__invoke" signature="__invoke(*args)" />
        <scope ilk="function" line="357" lineend="359" name="_invoke" signature="_invoke(*args)" />
        <scope ilk="function" line="360" lineend="362" name="_invoke_without_enc" signature="_invoke_without_enc(*args)" />
        <scope ilk="function" line="363" lineend="365" name="_invoke_with_enc" signature="_invoke_with_enc(*args)" />
        <scope ilk="function" line="367" lineend="370" name="_toUTF8" signature="_toUTF8(str, encoding=nil)" />
        <scope ilk="function" line="372" lineend="375" name="_fromUTF8" signature="_fromUTF8(str, encoding=nil)" />
        <scope ilk="function" line="377" lineend="379" name="_thread_vwait" signature="_thread_vwait(var_name)" />
        <scope ilk="function" line="381" lineend="383" name="_thread_tkwait" signature="_thread_tkwait(mode, target)" />
        <scope ilk="function" line="385" lineend="388" name="_return_value" signature="_return_value" />
        <scope ilk="function" line="390" lineend="393" name="_get_variable" signature="_get_variable(var_name, flag)" />
        <scope ilk="function" line="394" lineend="397" name="_get_variable2" signature="_get_variable2(var_name, index_name, flag)" />
        <scope ilk="function" line="399" lineend="402" name="_set_variable" signature="_set_variable(var_name, value, flag)" />
        <scope ilk="function" line="403" lineend="406" name="_set_variable2" signature="_set_variable2(var_name, index_name, value, flag)" />
        <scope ilk="function" line="408" lineend="411" name="_unset_variable" signature="_unset_variable(var_name, flag)" />
        <scope ilk="function" line="412" lineend="415" name="_unset_variable2" signature="_unset_variable2(var_name, index_name, flag)" />
        <scope ilk="function" line="417" lineend="419" name="_get_global_var" signature="_get_global_var(var_name)" />
        <scope ilk="function" line="420" lineend="422" name="_get_global_var2" signature="_get_global_var2(var_name, index_name)" />
        <scope ilk="function" line="424" lineend="426" name="_set_global_var" signature="_set_global_var(var_name, value)" />
        <scope ilk="function" line="427" lineend="429" name="_set_global_var2" signature="_set_global_var2(var_name, index_name, value)" />
        <scope ilk="function" line="431" lineend="433" name="_unset_global_var" signature="_unset_global_var(var_name)" />
        <scope ilk="function" line="434" lineend="436" name="_unset_global_var2" signature="_unset_global_var2(var_name, index_name)" />
        <scope ilk="function" line="438" lineend="441" name="_split_tklist" signature="_split_tklist(str)" />
        <scope ilk="function" line="443" lineend="446" name="_merge_tklist" signature="_merge_tklist(*args)" />
        <scope ilk="function" line="448" lineend="451" name="_conv_listelement" signature="_conv_listelement(str)" />
        <scope ilk="function" line="453" lineend="455" name="_create_console" signature="_create_console" />
        <scope ilk="function" line="457" lineend="459" name="mainloop" signature="mainloop" />
        <scope ilk="function" line="460" lineend="462" name="mainloop_watchdog" signature="mainloop_watchdog" />
        <scope ilk="function" line="463" lineend="465" name="do_one_evant" signature="do_one_evant(flag = nil)" />
        <scope ilk="function" line="466" lineend="468" name="mainloop_abort_on_exception" signature="mainloop_abort_on_exception" />
        <scope ilk="function" line="469" lineend="471" name="mainloop_abort_on_exception=" signature="mainloop_abort_on_exception=(mode)" />
        <scope ilk="function" line="472" lineend="474" name="set_eventloop_tick" signature="set_eventloop_tick(*args)" />
        <scope ilk="function" line="475" lineend="477" name="get_eventloop_tick" signature="get_eventloop_tick" />
        <scope ilk="function" line="478" lineend="480" name="set_no_event_wait" signature="set_no_event_wait(*args)" />
        <scope ilk="function" line="481" lineend="483" name="get_no_event_wait" signature="get_no_event_wait" />
        <scope ilk="function" line="484" lineend="486" name="set_eventloop_weight" signature="set_eventloop_weight(*args)" />
        <scope ilk="function" line="487" lineend="489" name="get_eventloop_weight" signature="get_eventloop_weight" />
      </scope>
      <scope classrefs="Object" ilk="class" line="492" lineend="526" name="RemoteTkIp">
        <scope ilk="function" line="493" lineend="495" name="mainloop" signature="mainloop(*args)" />
        <scope ilk="function" line="496" lineend="498" name="mainloop_watchdog" signature="mainloop_watchdog(*args)" />
        <scope ilk="function" line="499" lineend="501" name="do_one_evant" signature="do_one_evant(flag = nil)" />
        <scope ilk="function" line="502" lineend="504" name="mainloop_abort_on_exception" signature="mainloop_abort_on_exception" />
        <scope ilk="function" line="505" lineend="507" name="mainloop_abort_on_exception=" signature="mainloop_abort_on_exception=(mode)" />
        <scope ilk="function" line="508" lineend="510" name="set_eventloop_tick" signature="set_eventloop_tick(*args)" />
        <scope ilk="function" line="511" lineend="513" name="get_eventloop_tick" signature="get_eventloop_tick" />
        <scope ilk="function" line="514" lineend="516" name="set_no_event_wait" signature="set_no_event_wait(*args)" />
        <scope ilk="function" line="517" lineend="519" name="get_no_event_wait" signature="get_no_event_wait" />
        <scope ilk="function" line="520" lineend="522" name="set_eventloop_weight" signature="set_eventloop_weight(*args)" />
        <scope ilk="function" line="523" lineend="525" name="get_eventloop_weight" signature="get_eventloop_weight" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="readbytes">
      <scope classrefs="IOError" doc="readbytes.rb" ilk="class" line="6" lineend="12" name="TruncatedDataError">
        <scope attributes="__ctor__" ilk="function" line="7" lineend="10" name="initialize" signature="initialize(mesg, data)" />
        <scope ilk="function" line="11" lineend="11" name="data" />
      </scope>
      <scope classrefs="Object" ilk="class" line="14" lineend="25" name="IO">
        <scope ilk="function" line="15" lineend="24" name="readbytes" signature="readbytes(n)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/usage">
      <import line="69" module="rdoc/markup/simple_markup" symbol="*" />
      <import line="70" module="rdoc/markup/simple_markup/to_flow" symbol="*" />
      <import line="71" module="rdoc/ri/ri_formatter" symbol="*" />
      <import line="72" module="rdoc/ri/ri_options" symbol="*" />
      <scope doc="= Synopsis" ilk="namespace" line="74" lineend="203" name="RDoc">
        <scope attributes="__classmethod__" doc="Display usage information from the comment at the top of the&#xA;file." ilk="function" line="81" lineend="95" name="usage" signature="RDoc.usage(*args)" />
        <scope attributes="__classmethod__" doc="Display usage" ilk="function" line="98" lineend="123" name="usage_no_exit" signature="RDoc.usage_no_exit(*args)" />
        <scope attributes="__classmethod__" doc="Find the first comment in the file (that isn&apos;t a shebang&#xA;line) If the file doesn&apos;t start with a comment, report the&#xA;fact and return empty string" ilk="function" line="133" lineend="139" name="gets" signature="RDoc.gets(file)" />
        <scope attributes="__classmethod__" ilk="function" line="141" lineend="156" name="find_comment" signature="RDoc.find_comment(file)" />
        <scope attributes="__classmethod__" doc="Given an array of flow items and an array of section names,&#xA;extract those sections from the flow which have headings&#xA;corresponding to a section name in the list." ilk="function" line="165" lineend="195" name="extract_sections" signature="RDoc.extract_sections(flow, sections)" />
        <scope attributes="__classmethod__" doc="Report the fact that no doc comment count be found" ilk="function" line="199" lineend="202" name="no_comment" signature="RDoc.no_comment" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/tokenstream">
      <scope doc="A TokenStream is a list of tokens, gathered during the parse&#xA;of some entity (say a method)." ilk="namespace" line="8" lineend="25" name="TokenStream">
        <scope ilk="function" line="9" lineend="11" name="token_stream" signature="token_stream" />
        <scope ilk="function" line="13" lineend="15" name="start_collecting_tokens" signature="start_collecting_tokens" />
        <scope ilk="function" line="16" lineend="18" name="add_token" signature="add_token(tk)" />
        <scope ilk="function" line="19" lineend="21" name="add_tokens" signature="add_tokens(tks)" />
        <scope ilk="function" line="22" lineend="24" name="pop_token" signature="pop_token" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/template">
      <scope classrefs="Object" doc="Cheap-n-cheerful HTML page template system." ilk="class" line="38" lineend="233" name="TemplatePage">
        <scope classrefs="Object" doc="A context holds a stack of key/value pairs (like a symbol&#xA;table)." ilk="class" line="46" lineend="80" name="Context">
          <scope attributes="__ctor__" ilk="function" line="47" lineend="49" name="initialize" signature="initialize" />
          <scope ilk="function" line="51" lineend="53" name="push" signature="push(hash)" />
          <scope ilk="function" line="55" lineend="57" name="pop" signature="pop" />
          <scope doc="Find a scalar value, throwing an exception if not found." ilk="function" line="62" lineend="69" name="find_scalar" signature="find_scalar(key)" />
          <scope doc="Lookup any key in the stack of hashes" ilk="function" line="73" lineend="79" name="lookup" signature="lookup(key)" />
        </scope>
        <scope classrefs="Object" doc="Simple class to read lines out of a string" ilk="class" line="85" lineend="115" name="LineReader">
          <scope attributes="__ctor__" doc="we&apos;re initialized with an array of lines" ilk="function" line="87" lineend="89" name="initialize" signature="initialize(lines)" />
          <scope doc="read the next line" ilk="function" line="92" lineend="94" name="read" signature="read" />
          <scope doc="Return a list of lines up to the line that matches a&#xA;pattern." ilk="function" line="98" lineend="108" name="read_up_to" signature="read_up_to(pattern)" />
          <scope doc="Return a copy of ourselves that can be modified without&#xA;affecting us" ilk="function" line="112" lineend="114" name="dup" signature="dup" />
        </scope>
        <scope attributes="__ctor__" doc="+templates+ is an array of strings containing the templates." ilk="function" line="132" lineend="138" name="initialize" signature="initialize(*templates)" />
        <scope doc="Render the templates into HTML, storing the result on +op+&#xA;using the method &lt;tt&gt;&lt;&lt;&lt;/tt&gt;." ilk="function" line="144" lineend="147" name="write_html_on" signature="write_html_on(op, value_hash)" />
        <scope doc="Substitute a set of key/value pairs into the given template." ilk="function" line="161" lineend="196" name="substitute_into" signature="substitute_into(lines, values)" />
        <scope doc="Given an individual line, we look for %xxx% constructs and&#xA;HREF:ref:name: constructs, substituting for each." ilk="function" line="201" lineend="231" name="expand_line" signature="expand_line(line)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_writer">
      <import line="1" module="fileutils" symbol="*" />
      <scope ilk="namespace" line="3" lineend="62" name="RI">
        <scope classrefs="Object" ilk="class" line="4" lineend="61" name="RiWriter">
          <scope attributes="__classmethod__" ilk="function" line="6" lineend="8" name="class_desc_path" signature="RiWriter.class_desc_path(dir, class_desc)" />
          <scope attributes="__classmethod__" doc="Convert a name from internal form (containing punctuation)&#xA;to an external form (where punctuation is replaced by %xx)" ilk="function" line="15" lineend="17" name="internal_to_external" signature="RiWriter.internal_to_external(name)" />
          <scope attributes="__classmethod__" doc="And the reverse operation" ilk="function" line="20" lineend="22" name="external_to_internal" signature="RiWriter.external_to_internal(name)" />
          <scope attributes="__ctor__" ilk="function" line="24" lineend="26" name="initialize" signature="initialize(base_dir)" />
          <scope ilk="function" line="28" lineend="30" name="remove_class" signature="remove_class(class_desc)" />
          <scope ilk="function" line="32" lineend="39" name="add_class" signature="add_class(class_desc)" />
          <scope ilk="function" line="41" lineend="54" name="add_method" signature="add_method(class_desc, method_desc)" />
          <scope ilk="function" line="58" lineend="60" name="path_to_dir" signature="path_to_dir(class_name)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_util">
      <scope classrefs="Exception" ilk="class" line="3" lineend="3" name="RiError" />
      <scope classrefs="Object" doc="Break argument into its constituent class or module names,&#xA;an optional method type, and a method name" ilk="class" line="8" lineend="75" name="NameDescriptor">
        <scope ilk="function" line="10" lineend="10" name="class_names" />
        <scope ilk="function" line="11" lineend="11" name="method_name" />
        <scope ilk="function" line="14" lineend="14" name="is_class_method" />
        <scope attributes="__ctor__" doc="arg may be 1." ilk="function" line="28" lineend="67" name="initialize" signature="initialize(arg)" />
        <scope doc="Return the full class name (with &apos;::&apos; between the&#xA;components) or &quot;&quot; if there&apos;s no class name" ilk="function" line="72" lineend="74" name="full_class_name" signature="full_class_name" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_reader">
      <import line="1" module="rdoc/ri/ri_descriptions" symbol="*" />
      <import line="2" module="rdoc/ri/ri_writer" symbol="*" />
      <import line="3" module="rdoc/markup/simple_markup/to_flow" symbol="*" />
      <scope ilk="namespace" line="5" lineend="100" name="RI">
        <scope classrefs="Object" ilk="class" line="6" lineend="99" name="RiReader">
          <scope attributes="__ctor__" ilk="function" line="8" lineend="10" name="initialize" signature="initialize(ri_cache)" />
          <scope ilk="function" line="12" lineend="14" name="top_level_namespace" signature="top_level_namespace" />
          <scope ilk="function" line="16" lineend="22" name="lookup_namespace_in" signature="lookup_namespace_in(target, namespaces)" />
          <scope ilk="function" line="24" lineend="32" name="find_class_by_name" signature="find_class_by_name(full_name)" />
          <scope ilk="function" line="34" lineend="40" name="find_methods" signature="find_methods(name, is_class_method, namespaces)" />
          <scope doc="return the MethodDescription for a given MethodEntry by&#xA;deserializing the YAML" ilk="function" line="44" lineend="47" name="get_method" signature="get_method(method_entry)" />
          <scope doc="Return a class description" ilk="function" line="50" lineend="62" name="get_class" signature="get_class(class_entry)" />
          <scope doc="return the names of all classes and modules" ilk="function" line="65" lineend="68" name="full_class_names" signature="full_class_names" />
          <scope doc="return a list of all classes, modules, and methods" ilk="function" line="71" lineend="74" name="all_names" signature="all_names" />
          <scope doc="----" ilk="function" line="80" lineend="87" name="find_classes_in" signature="find_classes_in(res, klass)" />
          <scope ilk="function" line="89" lineend="97" name="find_names_in" signature="find_names_in(res, klass)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_paths">
      <scope ilk="namespace" line="1" lineend="57" name="RI">
        <scope doc="Encapsulate all the strangeness to do with finding out where&#xA;to find RDoc files" ilk="namespace" line="22" lineend="56" name="Paths">
          <import line="25" module="rbconfig" symbol="*" />
          <import line="52" module="rubygems" symbol="*" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_options">
      <scope doc="We handle the parsing of options, and subsequently as a&#xA;singleton object to be queried for option values" ilk="namespace" line="4" lineend="254" name="RI">
        <import line="6" module="rdoc/ri/ri_display" symbol="*" />
        <scope classrefs="Object" ilk="class" line="10" lineend="252" name="Options">
          <import line="12" module="singleton" symbol="*" />
          <import line="13" module="getoptlong" symbol="*" />
          <scope ilk="function" line="19" lineend="19" name="use_stdout" />
          <scope ilk="function" line="19" lineend="19" name="use_stdout=" />
          <scope ilk="function" line="22" lineend="22" name="list_classes" />
          <scope ilk="function" line="25" lineend="25" name="list_names" />
          <scope ilk="function" line="28" lineend="28" name="width" />
          <scope ilk="function" line="31" lineend="31" name="formatter" />
          <scope ilk="function" line="34" lineend="34" name="doc_dir" />
          <scope doc="the directory we search for original documentation" ilk="namespace" line="36" lineend="168" name="OptionList">
            <scope attributes="__classmethod__" ilk="function" line="75" lineend="82" name="options" signature="OptionList.options" />
            <scope attributes="__classmethod__" ilk="function" line="85" lineend="90" name="strip_output" signature="OptionList.strip_output(text)" />
            <scope attributes="__classmethod__" doc="Show an error and exit" ilk="function" line="95" lineend="100" name="error" signature="OptionList.error(msg)" />
            <scope attributes="__classmethod__" doc="Show usage and exit" ilk="function" line="104" lineend="167" name="usage" signature="OptionList.usage(short_form=false)" />
          </scope>
          <scope doc="Show the version and exit" ilk="function" line="171" lineend="174" name="show_version" signature="show_version" />
          <scope attributes="__ctor__" ilk="function" line="177" lineend="183" name="initialize" signature="initialize" />
          <scope doc="Parse command line options." ilk="function" line="188" lineend="238" name="parse" signature="parse(args)" />
          <scope doc="Return the doc_dir as an array, or nil if no overriding doc&#xA;dir was given" ilk="function" line="241" lineend="243" name="paths" signature="paths" />
          <scope doc="Return an instance of the displayer (the thing that actually&#xA;writes the information)." ilk="function" line="249" lineend="251" name="displayer::RiDisplay." signature="displayer ::RiDisplay." />
          <import symbol="Singleton" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_formatter">
      <scope ilk="namespace" line="1" lineend="672" name="RI">
        <scope classrefs="Object" ilk="class" line="2" lineend="232" name="TextFormatter">
          <scope ilk="function" line="4" lineend="4" name="indent" />
          <scope attributes="__ctor__" ilk="function" line="6" lineend="10" name="initialize" signature="initialize(options, indent)" />
          <scope ilk="function" line="15" lineend="24" name="draw_line" signature="draw_line(label=nil)" />
          <scope ilk="function" line="28" lineend="47" name="wrap" signature="wrap(txt, prefix=@indent, linelen=@width)" />
          <scope ilk="function" line="51" lineend="53" name="blankline" signature="blankline" />
          <scope doc="called when we want to ensure a nbew &apos;wrap&apos; starts on a&#xA;newline Only needed for HtmlFormatter, because the rest do&#xA;their own line breaking" ilk="function" line="61" lineend="62" name="break_to_newline" signature="break_to_newline" />
          <scope ilk="function" line="66" lineend="68" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="72" lineend="74" name="raw_print_line" signature="raw_print_line(txt)" />
          <scope doc="convert HTML entities back to ASCII" ilk="function" line="79" lineend="86" name="conv_html" signature="conv_html(txt)" />
          <scope doc="convert markup into display form" ilk="function" line="89" lineend="95" name="conv_markup" signature="conv_markup(txt)" />
          <scope ilk="function" line="99" lineend="150" name="display_list" signature="display_list(list)" />
          <scope ilk="function" line="154" lineend="175" name="display_flow_item" signature="display_flow_item(item, prefix=@indent)" />
          <scope ilk="function" line="179" lineend="184" name="display_verbatim_flow_item" signature="display_verbatim_flow_item(item, prefix=@indent)" />
          <scope ilk="function" line="188" lineend="207" name="display_heading" signature="display_heading(text, level, indent)" />
          <scope ilk="function" line="210" lineend="214" name="display_flow" signature="display_flow(flow)" />
          <scope ilk="function" line="216" lineend="229" name="strip_attributes" signature="strip_attributes(txt)" />
        </scope>
        <scope classrefs="TextFormatter" doc="Handle text with attributes." ilk="class" line="241" lineend="362" name="AttributeFormatter">
          <scope classrefs="Object" doc="TODO: struct?" ilk="class" line="256" lineend="264" name="AttrChar">
            <scope ilk="function" line="257" lineend="257" name="char" />
            <scope ilk="function" line="258" lineend="258" name="attr" />
            <scope attributes="__ctor__" ilk="function" line="260" lineend="263" name="initialize" signature="initialize(char, attr)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="267" lineend="298" name="AttributeString">
            <scope ilk="function" line="268" lineend="268" name="txt" />
            <scope attributes="__ctor__" ilk="function" line="270" lineend="273" name="initialize" signature="initialize" />
            <scope ilk="function" line="275" lineend="277" name="&lt;&lt;" signature="&lt;&lt;(char" />
            <scope ilk="function" line="279" lineend="281" name="empty?" signature="empty?" />
            <scope doc="accept non space, then all following spaces" ilk="function" line="284" lineend="297" name="next_word" signature="next_word" />
          </scope>
          <scope doc="overrides base class." ilk="function" line="305" lineend="325" name="wrap" signature="wrap(txt, prefix=@indent, linelen=@width)" />
          <scope doc="overridden in specific formatters" ilk="function" line="331" lineend="337" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope doc="again, overridden" ilk="function" line="341" lineend="343" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="347" lineend="360" name="add_attributes_to" signature="add_attributes_to(txt)" />
        </scope>
        <scope classrefs="AttributeFormatter" doc="This formatter generates overstrike-style formatting, which&#xA;works with pagers such as man and less." ilk="class" line="370" lineend="395" name="OverstrikeFormatter">
          <scope ilk="function" line="374" lineend="387" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope doc="draw a string in bold" ilk="function" line="390" lineend="394" name="bold_print" signature="bold_print(text)" />
        </scope>
        <scope classrefs="AttributeFormatter" doc="This formatter uses ANSI escape sequences to colorize stuff&#xA;works with pages such as man and less." ilk="class" line="403" lineend="462" name="AnsiFormatter">
          <scope attributes="__ctor__" ilk="function" line="405" lineend="408" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="410" lineend="423" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope ilk="function" line="426" lineend="428" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="436" lineend="443" name="display_heading" signature="display_heading(text, level, indent)" />
          <scope ilk="function" line="453" lineend="461" name="update_attributes" signature="update_attributes(attr)" />
        </scope>
        <scope classrefs="AttributeFormatter" doc="This formatter uses HTML." ilk="class" line="468" lineend="604" name="HtmlFormatter">
          <scope attributes="__ctor__" ilk="function" line="470" lineend="472" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="474" lineend="485" name="write_attribute_text" signature="write_attribute_text(prefix, line)" />
          <scope ilk="function" line="487" lineend="492" name="draw_line" signature="draw_line(label=nil)" />
          <scope ilk="function" line="494" lineend="496" name="bold_print" signature="bold_print(txt)" />
          <scope ilk="function" line="498" lineend="500" name="blankline" signature="blankline()" />
          <scope ilk="function" line="502" lineend="504" name="break_to_newline" signature="break_to_newline" />
          <scope ilk="function" line="506" lineend="510" name="display_heading" signature="display_heading(text, level, indent)" />
          <scope ilk="function" line="514" lineend="553" name="display_list" signature="display_list(list)" />
          <scope ilk="function" line="555" lineend="561" name="display_verbatim_flow_item" signature="display_verbatim_flow_item(item, prefix=@indent)" />
          <scope ilk="function" line="571" lineend="588" name="update_attributes" signature="update_attributes(current, wanted)" />
          <scope ilk="function" line="590" lineend="594" name="tag" signature="tag(code)" />
          <scope ilk="function" line="596" lineend="602" name="escape" signature="escape(str)" />
        </scope>
        <scope classrefs="TextFormatter" doc="This formatter reduces extra lines for a simpler output." ilk="class" line="611" lineend="647" name="SimpleFormatter">
          <scope doc="No extra blank lines" ilk="function" line="617" lineend="618" name="blankline" signature="blankline" />
          <scope doc="Display labels only, no lines" ilk="function" line="624" lineend="629" name="draw_line" signature="draw_line(label=nil)" />
          <scope doc="Place heading level indicators inline with heading." ilk="function" line="635" lineend="645" name="display_heading" signature="display_heading(text, level, indent)" />
        </scope>
        <scope classrefs="Object" doc="Finally, fill in the list of known formatters" ilk="class" line="652" lineend="670" name="TextFormatter">
          <scope attributes="__classmethod__" ilk="function" line="662" lineend="664" name="list" signature="TextFormatter.list" />
          <scope attributes="__classmethod__" ilk="function" line="666" lineend="668" name="for" signature="TextFormatter.for(name)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_driver">
      <import line="1" module="rdoc/usage" symbol="*" />
      <import line="2" module="rdoc/ri/ri_paths" symbol="*" />
      <import line="3" module="rdoc/ri/ri_cache" symbol="*" />
      <import line="4" module="rdoc/ri/ri_util" symbol="*" />
      <import line="5" module="rdoc/ri/ri_reader" symbol="*" />
      <import line="6" module="rdoc/ri/ri_formatter" symbol="*" />
      <import line="7" module="rdoc/ri/ri_options" symbol="*" />
      <scope classrefs="Object" ilk="class" line="12" lineend="145" name="RiDriver">
        <scope attributes="__ctor__" ilk="function" line="14" lineend="30" name="initialize" signature="initialize" />
        <scope doc="Couldn&apos;t find documentation in paths, so tell the user what&#xA;to do" ilk="function" line="35" lineend="42" name="report_missing_documentation" signature="report_missing_documentation(paths)" />
        <scope doc="If the list of matching methods contains exactly one entry,&#xA;or if it contains an entry that exactly matches the&#xA;requested method, then display that entry, otherwise display&#xA;the list of matching method names" ilk="function" line="51" lineend="64" name="report_method_stuff" signature="report_method_stuff(requested_method_name, methods)" />
        <scope ilk="function" line="68" lineend="81" name="report_class_stuff" signature="report_class_stuff(namespaces)" />
        <scope ilk="function" line="86" lineend="118" name="get_info_for" signature="get_info_for(arg)" />
        <scope ilk="function" line="122" lineend="143" name="process_args" signature="process_args" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_display">
      <import line="1" module="rdoc/ri/ri_util" symbol="*" />
      <import line="2" module="rdoc/ri/ri_formatter" symbol="*" />
      <import line="3" module="rdoc/ri/ri_options" symbol="*" />
      <scope doc="This is a kind of &apos;flag&apos; module." ilk="namespace" line="19" lineend="29" name="RiDisplay">
        <scope attributes="__classmethod__" ilk="function" line="22" lineend="24" name="append_features" signature="RiDisplay.append_features(display_class)" />
        <scope attributes="__classmethod__" ilk="function" line="26" lineend="28" name="new" signature="RiDisplay.new(*args)" />
      </scope>
      <scope classrefs="Object" doc="A paging display module." ilk="class" line="37" lineend="273" name="DefaultDisplay">
        <scope attributes="__ctor__" ilk="function" line="41" lineend="44" name="initialize" signature="initialize(options)" />
        <scope ilk="function" line="49" lineend="53" name="display_usage" signature="display_usage" />
        <scope ilk="function" line="58" lineend="72" name="display_method_info" signature="display_method_info(method)" />
        <scope ilk="function" line="76" lineend="140" name="display_class_info" signature="display_class_info(klass, ri_reader)" />
        <scope doc="Display a list of method names" ilk="function" line="146" lineend="152" name="display_method_list" signature="display_method_list(methods)" />
        <scope ilk="function" line="156" lineend="162" name="display_class_list" signature="display_class_list(namespaces)" />
        <scope ilk="function" line="166" lineend="176" name="list_known_classes" signature="list_known_classes(classes)" />
        <scope ilk="function" line="180" lineend="188" name="list_known_names" signature="list_known_names(names)" />
        <scope ilk="function" line="196" lineend="204" name="page" signature="page" />
        <scope ilk="function" line="208" lineend="215" name="setup_pager" signature="setup_pager">
          <import line="210" module="tempfile" symbol="*" />
        </scope>
        <scope ilk="function" line="219" lineend="236" name="page_output" signature="page_output" />
        <scope ilk="function" line="240" lineend="255" name="display_params" signature="display_params(method)" />
        <scope ilk="function" line="258" lineend="261" name="warn_no_database" signature="warn_no_database" />
        <scope ilk="function" line="264" lineend="270" name="display_flow" signature="display_flow(flow)" />
        <import symbol="RiDisplay" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_descriptions">
      <import line="1" module="yaml" symbol="*" />
      <import line="2" module="rdoc/markup/simple_markup/fragments" symbol="*" />
      <scope doc="Descriptions are created by RDoc (in ri_generator) and&#xA;written out in serialized form into the documentation tree." ilk="namespace" line="8" lineend="152" name="RI">
        <scope classrefs="Object" ilk="class" line="9" lineend="25" name="NamedThing">
          <scope ilk="function" line="10" lineend="10" name="name" />
          <scope attributes="__ctor__" ilk="function" line="11" lineend="13" name="initialize" signature="initialize(name)" />
          <scope ilk="function" line="14" lineend="16" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
          <scope ilk="function" line="18" lineend="20" name="hash" signature="hash" />
          <scope ilk="function" line="22" lineend="24" name="eql?" signature="eql?(other)" />
        </scope>
        <scope classrefs="NamedThing" doc="Alias          = Struct.new(:old_name, :new_name)" ilk="class" line="29" lineend="30" name="AliasName" />
        <scope classrefs="NamedThing" ilk="class" line="32" lineend="39" name="Attribute">
          <scope ilk="function" line="33" lineend="33" name="rw" />
          <scope ilk="function" line="33" lineend="33" name="comment" />
          <scope attributes="__ctor__" ilk="function" line="34" lineend="38" name="initialize" signature="initialize(name, rw, comment)" />
        </scope>
        <scope classrefs="NamedThing" ilk="class" line="41" lineend="48" name="Constant">
          <scope ilk="function" line="42" lineend="42" name="value" />
          <scope ilk="function" line="42" lineend="42" name="comment" />
          <scope attributes="__ctor__" ilk="function" line="43" lineend="47" name="initialize" signature="initialize(name, value, comment)" />
        </scope>
        <scope classrefs="NamedThing" ilk="class" line="50" lineend="51" name="IncludedModule" />
        <scope classrefs="NamedThing" ilk="class" line="54" lineend="58" name="MethodSummary">
          <scope attributes="__ctor__" ilk="function" line="55" lineend="57" name="initialize" signature="initialize(name=&quot;&quot;)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="62" lineend="78" name="Description">
          <scope ilk="function" line="63" lineend="63" name="name" />
          <scope ilk="function" line="63" lineend="63" name="name=" />
          <scope ilk="function" line="64" lineend="64" name="full_name" />
          <scope ilk="function" line="64" lineend="64" name="full_name=" />
          <scope ilk="function" line="65" lineend="65" name="comment" />
          <scope ilk="function" line="65" lineend="65" name="comment=" />
          <scope ilk="function" line="67" lineend="69" name="serialize" signature="serialize" />
          <scope attributes="__classmethod__" ilk="function" line="71" lineend="73" name="deserialize" signature="Description.deserialize(from)" />
          <scope ilk="function" line="75" lineend="77" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
        </scope>
        <scope classrefs="Description" ilk="class" line="80" lineend="121" name="ModuleDescription">
          <scope ilk="function" line="82" lineend="82" name="class_methods" />
          <scope ilk="function" line="82" lineend="82" name="class_methods=" />
          <scope ilk="function" line="83" lineend="83" name="instance_methods" />
          <scope ilk="function" line="83" lineend="83" name="instance_methods=" />
          <scope ilk="function" line="84" lineend="84" name="attributes" />
          <scope ilk="function" line="84" lineend="84" name="attributes=" />
          <scope ilk="function" line="85" lineend="85" name="constants" />
          <scope ilk="function" line="85" lineend="85" name="constants=" />
          <scope ilk="function" line="86" lineend="86" name="includes" />
          <scope ilk="function" line="86" lineend="86" name="includes=" />
          <scope doc="merge in another class desscription into this one" ilk="function" line="89" lineend="101" name="merge_in" signature="merge_in(old)" />
          <scope ilk="function" line="103" lineend="105" name="display_name" signature="display_name" />
          <scope doc="the &apos;ClassDescription&apos; subclass overrides this to format up&#xA;the name of a parent" ilk="function" line="109" lineend="111" name="superclass_string" signature="superclass_string" />
          <scope ilk="function" line="115" lineend="120" name="merge" signature="merge(into, from)" />
        </scope>
        <scope classrefs="ModuleDescription" ilk="class" line="123" lineend="137" name="ClassDescription">
          <scope ilk="function" line="124" lineend="124" name="superclass" />
          <scope ilk="function" line="124" lineend="124" name="superclass=" />
          <scope ilk="function" line="126" lineend="128" name="display_name" signature="display_name" />
          <scope ilk="function" line="130" lineend="136" name="superclass_string" signature="superclass_string" />
        </scope>
        <scope classrefs="Description" ilk="class" line="140" lineend="150" name="MethodDescription">
          <scope ilk="function" line="142" lineend="142" name="is_class_method" />
          <scope ilk="function" line="142" lineend="142" name="is_class_method=" />
          <scope ilk="function" line="143" lineend="143" name="visibility" />
          <scope ilk="function" line="143" lineend="143" name="visibility=" />
          <scope ilk="function" line="144" lineend="144" name="block_params" />
          <scope ilk="function" line="144" lineend="144" name="block_params=" />
          <scope ilk="function" line="145" lineend="145" name="is_singleton" />
          <scope ilk="function" line="145" lineend="145" name="is_singleton=" />
          <scope ilk="function" line="146" lineend="146" name="aliases" />
          <scope ilk="function" line="146" lineend="146" name="aliases=" />
          <scope ilk="function" line="147" lineend="147" name="is_alias_for" />
          <scope ilk="function" line="147" lineend="147" name="is_alias_for=" />
          <scope ilk="function" line="148" lineend="148" name="params" />
          <scope ilk="function" line="148" lineend="148" name="params=" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/ri/ri_cache">
      <scope ilk="namespace" line="1" lineend="187" name="RI">
        <scope classrefs="Object" ilk="class" line="3" lineend="125" name="ClassEntry">
          <scope ilk="function" line="5" lineend="5" name="name" />
          <scope ilk="function" line="6" lineend="6" name="path_names" />
          <scope attributes="__ctor__" ilk="function" line="8" lineend="15" name="initialize" signature="initialize(path_name, name, in_class)" />
          <scope doc="We found this class in more tha one place, so add in the&#xA;name from there." ilk="function" line="19" lineend="21" name="add_path" signature="add_path(path)" />
          <scope doc="read in our methods and any classes and modules in our&#xA;namespace." ilk="function" line="30" lineend="58" name="load_from" signature="load_from(dir)" />
          <scope doc="Return a list of any classes or modules that we contain that&#xA;match a given string" ilk="function" line="63" lineend="65" name="contained_modules_matching" signature="contained_modules_matching(name)" />
          <scope ilk="function" line="67" lineend="69" name="classes_and_modules" signature="classes_and_modules" />
          <scope doc="Return an exact match to a particular name" ilk="function" line="72" lineend="74" name="contained_class_named" signature="contained_class_named(name)" />
          <scope doc="return the list of local methods matching name We&apos;re split&#xA;into two because we need distinct behavior when called from&#xA;the _toplevel_" ilk="function" line="79" lineend="81" name="methods_matching" signature="methods_matching(name, is_class_method)" />
          <scope doc="Find methods matching &apos;name&apos; in ourselves and in any classes&#xA;we contain" ilk="function" line="85" lineend="91" name="recursively_find_methods_matching" signature="recursively_find_methods_matching(name, is_class_method)" />
          <scope doc="Return our full name" ilk="function" line="95" lineend="99" name="full_name" signature="full_name" />
          <scope doc="Return a list of all out method names" ilk="function" line="102" lineend="106" name="all_method_names" signature="all_method_names" />
          <scope doc="Return a list of all our methods matching a given string." ilk="function" line="114" lineend="124" name="local_methods_matching" signature="local_methods_matching(name, is_class_method)" />
        </scope>
        <scope classrefs="ClassEntry" doc="A TopLevelEntry is like a class entry, but when asked to&#xA;search for methods searches all classes, not just itself" ilk="class" line="130" lineend="143" name="TopLevelEntry">
          <scope ilk="function" line="131" lineend="133" name="methods_matching" signature="methods_matching(name, is_class_method)" />
          <scope ilk="function" line="135" lineend="137" name="full_name" signature="full_name" />
          <scope ilk="function" line="139" lineend="141" name="module_named" signature="module_named(name)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="145" lineend="167" name="MethodEntry">
          <scope ilk="function" line="146" lineend="146" name="name" />
          <scope ilk="function" line="147" lineend="147" name="path_name" />
          <scope attributes="__ctor__" ilk="function" line="149" lineend="154" name="initialize" signature="initialize(path_name, name, is_class_method, in_class)" />
          <scope ilk="function" line="156" lineend="166" name="full_name" signature="full_name" />
        </scope>
        <scope classrefs="Object" doc="We represent everything know about all &apos;ri&apos; files accessible&#xA;to this program" ilk="class" line="172" lineend="186" name="RiCache">
          <scope ilk="function" line="174" lineend="174" name="toplevel" />
          <scope attributes="__ctor__" ilk="function" line="176" lineend="184" name="initialize" signature="initialize(dirs)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/rdoc">
      <import line="8" module="rdoc/parsers/parse_rb.rb" symbol="*" />
      <import line="9" module="rdoc/parsers/parse_c.rb" symbol="*" />
      <import line="10" module="rdoc/parsers/parse_f95.rb" symbol="*" />
      <import line="12" module="rdoc/parsers/parse_simple.rb" symbol="*" />
      <import line="13" module="rdoc/options" symbol="*" />
      <import line="15" module="rdoc/diagram" symbol="*" />
      <import line="17" module="find" symbol="*" />
      <import line="18" module="ftools" symbol="*" />
      <scope doc="We put rdoc stuff in the RDoc module to avoid namespace&#xA;clutter." ilk="namespace" line="25" lineend="275" name="RDoc">
        <scope classrefs="Object" doc="Simple stats collector" ilk="class" line="32" lineend="45" name="Stats">
          <scope ilk="function" line="33" lineend="33" name="num_files" />
          <scope ilk="function" line="33" lineend="33" name="num_files=" />
          <scope ilk="function" line="33" lineend="33" name="num_classes" />
          <scope ilk="function" line="33" lineend="33" name="num_classes=" />
          <scope ilk="function" line="33" lineend="33" name="num_modules" />
          <scope ilk="function" line="33" lineend="33" name="num_modules=" />
          <scope ilk="function" line="33" lineend="33" name="num_methods" />
          <scope ilk="function" line="33" lineend="33" name="num_methods=" />
          <scope attributes="__ctor__" ilk="function" line="34" lineend="37" name="initialize" signature="initialize" />
          <scope ilk="function" line="38" lineend="44" name="print" signature="print" />
        </scope>
        <scope classrefs="Exception" doc="Exception thrown by any rdoc error." ilk="class" line="51" lineend="52" name="RDocError" />
        <scope classrefs="Object" doc="Encapsulate the production of rdoc documentation." ilk="class" line="65" lineend="274" name="RDoc">
          <scope doc="Report an error message and exit" ilk="function" line="97" lineend="99" name="error" signature="error(msg)" />
          <scope doc="Create an output dir if it doesn&apos;t exist." ilk="function" line="107" lineend="124" name="setup_output_dir" signature="setup_output_dir(op_dir)" />
          <scope doc="The .document file contains a list of file and directory&#xA;name patterns, representing candidates for documentation." ilk="function" line="130" lineend="141" name="parse_dot_doc_file" signature="parse_dot_doc_file(in_dir, filename, options)" />
          <scope doc="Given a list of files and directories, create a list of all&#xA;the Ruby files they contain." ilk="function" line="156" lineend="177" name="normalized_file_list" signature="normalized_file_list(options, relative_files, force_doc = false, exclude_pattern=nil)" />
          <scope doc="Return a list of the files to be processed in a directory." ilk="function" line="184" lineend="186" name="list_files_in_directory" signature="list_files_in_directory(dir, options)" />
          <scope doc="Parse each file on the command line, recursively entering&#xA;directories" ilk="function" line="192" lineend="213" name="parse_files" signature="parse_files(options)" />
          <scope doc="Format up one or more files according to the given&#xA;arguments." ilk="function" line="231" lineend="273" name="document" signature="document(argv)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/parsers/parse_simple">
      <import line="6" module="rdoc/code_objects" symbol="*" />
      <import line="7" module="rdoc/markup/simple_markup/preprocess" symbol="*" />
      <scope doc="Parse a non-source file." ilk="namespace" line="9" lineend="41" name="RDoc">
        <scope classrefs="Object" doc="See rdoc/parsers/parse_c.rb" ilk="class" line="12" lineend="40" name="SimpleParser">
          <scope attributes="__ctor__" doc="prepare to parse a plain file" ilk="function" line="15" lineend="26" name="initialize" signature="initialize(top_level, file_name, body, options, stats)" />
          <scope doc="Extract the file contents and attach them to the toplevel as&#xA;a comment" ilk="function" line="31" lineend="35" name="scan" signature="scan" />
          <scope ilk="function" line="37" lineend="39" name="remove_private_comments" signature="remove_private_comments(comment)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/parsers/parse_rb">
      <import line="16" module="e2mmap" symbol="*" />
      <import line="17" module="irb/slex" symbol="*" />
      <import line="19" module="rdoc/code_objects" symbol="*" />
      <import line="20" module="rdoc/tokenstream" symbol="*" />
      <import line="22" module="rdoc/markup/simple_markup/preprocess" symbol="*" />
      <import line="24" module="rdoc/parsers/parserfactory" symbol="*" />
      <scope doc="Definitions of all tokens involved in the lexical analysis" ilk="namespace" line="30" lineend="306" name="RubyToken">
        <scope classrefs="Object" ilk="class" line="39" lineend="57" name="Token">
          <scope ilk="function" line="41" lineend="41" name="text" />
          <scope attributes="__ctor__" ilk="function" line="43" lineend="47" name="initialize" signature="initialize(line_no, char_no)" />
          <scope doc="Because we&apos;re used in contexts that expect to return a&#xA;token, we set the text string and then return ourselves" ilk="function" line="51" lineend="54" name="set_text" signature="set_text(text)" />
          <scope ilk="function" line="56" lineend="56" name="line_no" />
          <scope ilk="function" line="56" lineend="56" name="char_no" />
          <scope ilk="function" line="56" lineend="56" name="text" />
        </scope>
        <scope classrefs="Token" ilk="class" line="59" lineend="61" name="TkNode">
          <scope ilk="function" line="60" lineend="60" name="node" />
        </scope>
        <scope classrefs="Token" ilk="class" line="63" lineend="69" name="TkId">
          <scope attributes="__ctor__" ilk="function" line="64" lineend="67" name="initialize" signature="initialize(line_no, char_no, name)" />
          <scope ilk="function" line="68" lineend="68" name="name" />
        </scope>
        <scope classrefs="TkId" ilk="class" line="71" lineend="72" name="TkKW" />
        <scope classrefs="Token" ilk="class" line="74" lineend="79" name="TkVal">
          <scope attributes="__ctor__" ilk="function" line="75" lineend="78" name="initialize" signature="initialize(line_no, char_no, value = nil)" />
        </scope>
        <scope classrefs="Token" ilk="class" line="81" lineend="85" name="TkOp">
          <scope ilk="function" line="82" lineend="84" name="name" signature="name" />
        </scope>
        <scope classrefs="TkOp" ilk="class" line="87" lineend="94" name="TkOPASGN">
          <scope attributes="__ctor__" ilk="function" line="88" lineend="92" name="initialize" signature="initialize(line_no, char_no, op)" />
          <scope ilk="function" line="93" lineend="93" name="op" />
        </scope>
        <scope classrefs="Token" ilk="class" line="96" lineend="102" name="TkUnknownChar">
          <scope attributes="__ctor__" ilk="function" line="97" lineend="100" name="initialize" signature="initialize(line_no, char_no, id)" />
          <scope ilk="function" line="101" lineend="101" name="name" />
        </scope>
        <scope classrefs="Token" ilk="class" line="104" lineend="105" name="TkError" />
        <scope ilk="function" line="107" lineend="110" name="set_token_position" signature="set_token_position(line, char)" />
        <scope ilk="function" line="112" lineend="129" name="Token" signature="Token(token, value = nil)" />
        <scope attributes="__classmethod__" doc="{reading =&gt; token_class} {reading =&gt; [token_class, *opt]}" ilk="function" line="270" lineend="297" name="def_token" signature="RubyToken.def_token(token_n, super_token = Token, reading = nil, *opts)" />
      </scope>
      <scope classrefs="Object" doc="Lexical analyzer for Ruby source" ilk="class" line="312" lineend="1355" name="RubyLex">
        <scope classrefs="Object" doc="Read an input stream character by character." ilk="class" line="344" lineend="425" name="BufferedReader">
          <scope ilk="function" line="346" lineend="346" name="line_num" />
          <scope attributes="__ctor__" ilk="function" line="348" lineend="365" name="initialize" signature="initialize(content)" />
          <scope ilk="function" line="367" lineend="369" name="column" signature="column" />
          <scope ilk="function" line="371" lineend="388" name="getc" signature="getc" />
          <scope ilk="function" line="390" lineend="392" name="getc_already_read" signature="getc_already_read" />
          <scope ilk="function" line="394" lineend="400" name="ungetc" signature="ungetc(ch)" />
          <scope ilk="function" line="402" lineend="406" name="get_read" signature="get_read" />
          <scope ilk="function" line="408" lineend="415" name="peek" signature="peek(at)" />
          <scope ilk="function" line="417" lineend="419" name="peek_equal" signature="peek_equal(str)" />
          <scope ilk="function" line="421" lineend="424" name="divert_read_from" signature="divert_read_from(reserve)" />
        </scope>
        <scope ilk="function" line="440" lineend="440" name="continue" />
        <scope ilk="function" line="441" lineend="441" name="lex_state" />
        <scope attributes="__classmethod__" doc="end of nested class BufferedReader" ilk="function" line="443" lineend="445" name="debug?" signature="RubyLex.debug?" />
        <scope attributes="__ctor__" ilk="function" line="447" lineend="467" name="initialize" signature="initialize(content)" />
        <scope ilk="function" line="469" lineend="469" name="skip_space" />
        <scope ilk="function" line="470" lineend="470" name="read_auto_clean_up" />
        <scope ilk="function" line="471" lineend="471" name="exception_on_syntax_error" />
        <scope ilk="function" line="473" lineend="473" name="indent" />
        <scope doc="io functions" ilk="function" line="476" lineend="478" name="line_no" signature="line_no" />
        <scope ilk="function" line="480" lineend="482" name="char_no" signature="char_no" />
        <scope ilk="function" line="484" lineend="486" name="get_read" signature="get_read" />
        <scope ilk="function" line="488" lineend="490" name="getc" signature="getc" />
        <scope ilk="function" line="492" lineend="494" name="getc_of_rests" signature="getc_of_rests" />
        <scope ilk="function" line="496" lineend="504" name="gets" signature="gets" />
        <scope ilk="function" line="507" lineend="509" name="ungetc" signature="ungetc(c = nil)" />
        <scope ilk="function" line="511" lineend="513" name="peek_equal?" signature="peek_equal?(str)" />
        <scope ilk="function" line="515" lineend="517" name="peek" signature="peek(i = 0)" />
        <scope ilk="function" line="519" lineend="531" name="lex" signature="lex" />
        <scope ilk="function" line="533" lineend="550" name="token" signature="token" />
        <scope doc=", &quot;when&quot;" ilk="function" line="589" lineend="773" name="lex_init" signature="lex_init()" />
        <scope ilk="function" line="775" lineend="962" name="lex_int2" signature="lex_int2" />
        <scope ilk="function" line="964" lineend="997" name="identify_gvar" signature="identify_gvar" />
        <scope ilk="function" line="999" lineend="1072" name="identify_identifier" signature="identify_identifier" />
        <scope ilk="function" line="1074" lineend="1121" name="identify_here_document" signature="identify_here_document" />
        <scope ilk="function" line="1123" lineend="1140" name="identify_quotation" signature="identify_quotation(initial_char)" />
        <scope ilk="function" line="1142" lineend="1202" name="identify_number" signature="identify_number(start)" />
        <scope ilk="function" line="1204" lineend="1252" name="identify_string" signature="identify_string(ltype, quoted = ltype, opener=nil, initial_char = nil)" />
        <scope ilk="function" line="1254" lineend="1267" name="skip_inner_expression" signature="skip_inner_expression" />
        <scope ilk="function" line="1269" lineend="1290" name="identify_comment" signature="identify_comment" />
        <scope ilk="function" line="1292" lineend="1354" name="read_escape" signature="read_escape" />
        <import symbol="RubyToken" />
        <import symbol="IRB" />
      </scope>
      <scope doc="Extract code elements from a source file, returning a&#xA;TopLevel object containing the constituent file elements." ilk="namespace" line="1364" lineend="2598" name="RDoc">
        <scope classrefs="Object" ilk="class" line="1378" name="RubyParser">
          <scope attributes="__ctor__" ilk="function" line="1387" lineend="1397" name="initialize" signature="initialize(top_level, file_name, content, options, stats)" />
          <scope ilk="function" line="1399" lineend="1425" name="scan" signature="scan" />
          <scope ilk="function" line="1429" lineend="1435" name="warn" signature="warn(msg)" />
          <scope ilk="function" line="1437" lineend="1440" name="error" signature="error(msg)" />
          <scope ilk="function" line="1442" lineend="1447" name="progress" signature="progress(char)" />
          <scope ilk="function" line="1449" lineend="1452" name="add_token_listener" signature="add_token_listener(obj)" />
          <scope ilk="function" line="1454" lineend="1456" name="remove_token_listener" signature="remove_token_listener(obj)" />
          <scope ilk="function" line="1458" lineend="1492" name="get_tk" signature="get_tk" />
          <scope ilk="function" line="1494" lineend="1497" name="peek_tk" signature="peek_tk" />
          <scope ilk="function" line="1499" lineend="1507" name="unget_tk" signature="unget_tk(tk)" />
          <scope ilk="function" line="1509" lineend="1517" name="skip_tkspace" signature="skip_tkspace(skip_nl = true)" />
          <scope ilk="function" line="1519" lineend="1523" name="get_tkread" signature="get_tkread" />
          <scope ilk="function" line="1525" lineend="1527" name="peek_read" signature="peek_read" />
          <scope doc="Look for the first comment in a file that isn&apos;t a shebang&#xA;line." ilk="function" line="1535" lineend="1557" name="collect_first_comment" signature="collect_first_comment" />
          <scope ilk="function" line="1559" lineend="1564" name="parse_toplevel_statements" signature="parse_toplevel_statements(container)" />
          <scope ilk="function" line="1566" lineend="1720" name="parse_statements" signature="parse_statements(container, single=NORMAL, current_method=nil, comment=&apos;&apos;)" />
          <scope ilk="function" line="1722" lineend="1772" name="parse_class" signature="parse_class(container, single, tk, comment, &amp;block)" />
          <scope ilk="function" line="1774" lineend="1785" name="parse_module" signature="parse_module(container, single, tk, comment)" />
          <scope doc="Look for the name of a class of module (optionally with a&#xA;leading :: or with :: separated named) and return the&#xA;ultimate name and container" ilk="function" line="1790" lineend="1814" name="get_class_or_module" signature="get_class_or_module(container)" />
          <scope ilk="function" line="1816" lineend="1869" name="parse_constant" signature="parse_constant(container, single, tk, comment)" />
          <scope ilk="function" line="1871" lineend="1990" name="parse_method" signature="parse_method(container, single, tk, comment)" />
          <scope ilk="function" line="1992" lineend="1996" name="skip_method" signature="skip_method(container)" />
          <scope doc="Capture the method&apos;s parameters." ilk="function" line="2005" lineend="2013" name="parse_method_parameters" signature="parse_method_parameters(method)" />
          <scope ilk="function" line="2015" lineend="2065" name="parse_method_or_yield_parameters" signature="parse_method_or_yield_parameters(method=nil, modifiers=METHOD_MODIFIERS)" />
          <scope doc="skip the var [in] part of a &apos;for&apos; statement" ilk="function" line="2068" lineend="2074" name="skip_for_variable" signature="skip_for_variable" />
          <scope doc="while, until, and for have an optional" ilk="function" line="2077" lineend="2114" name="skip_optional_do_after_expression" signature="skip_optional_do_after_expression" />
          <scope doc="Return a superclass, which can be either a constant of an&#xA;expression" ilk="function" line="2119" lineend="2147" name="get_class_specification" signature="get_class_specification" />
          <scope ilk="function" line="2149" lineend="2185" name="parse_call_parameters" signature="parse_call_parameters(tk)" />
          <scope doc="Parse a constant, which might be qualified by one or more&#xA;class or module names" ilk="function" line="2191" lineend="2209" name="get_constant" signature="get_constant" />
          <scope doc="Get a constant that may be surrounded by parens" ilk="function" line="2213" lineend="2230" name="get_constant_with_optional_parens" signature="get_constant_with_optional_parens" />
          <scope doc="Directives are modifier comments that can appear after&#xA;class, module, or method names." ilk="function" line="2243" lineend="2258" name="read_directive" signature="read_directive(allowed)" />
          <scope ilk="function" line="2261" lineend="2288" name="read_documentation_modifiers" signature="read_documentation_modifiers(context, allow)" />
          <scope doc="Look for directives in a normal comment block:" ilk="function" line="2298" lineend="2339" name="look_for_directives_in" signature="look_for_directives_in(context, comment)" />
          <scope ilk="function" line="2341" lineend="2344" name="remove_private_comments" signature="remove_private_comments(comment)" />
          <scope ilk="function" line="2348" lineend="2360" name="get_symbol_or_name" signature="get_symbol_or_name" />
          <scope ilk="function" line="2362" lineend="2382" name="parse_alias" signature="parse_alias(context, single, tk, comment)" />
          <scope ilk="function" line="2384" lineend="2386" name="parse_yield_parameters" signature="parse_yield_parameters" />
          <import symbol="RubyToken" />
          <import symbol="TokenStream" />
        </scope>
        <scope ilk="function" line="2388" lineend="2394" name="parse_yield" signature="parse_yield(context, single, tk, method)" />
        <scope ilk="function" line="2396" lineend="2420" name="parse_require" signature="parse_require(context, comment)" />
        <scope ilk="function" line="2422" lineend="2432" name="parse_include" signature="parse_include(context, comment)" />
        <scope ilk="function" line="2434" lineend="2446" name="get_bool" signature="get_bool" />
        <scope ilk="function" line="2448" lineend="2469" name="parse_attr" signature="parse_attr(context, single, tk, comment)" />
        <scope ilk="function" line="2471" lineend="2500" name="parse_visibility" signature="parse_visibility(container, single, tk)" />
        <scope ilk="function" line="2502" lineend="2525" name="parse_attr_accessor" signature="parse_attr_accessor(context, single, tk, comment)" />
        <scope ilk="function" line="2527" lineend="2533" name="skip_tkspace_comment" signature="skip_tkspace_comment(skip_nl = true)" />
        <scope ilk="function" line="2535" lineend="2583" name="parse_symbol_arg" signature="parse_symbol_arg(no = nil)" />
        <scope ilk="function" line="2585" lineend="2595" name="parse_symbol_in_arg" signature="parse_symbol_in_arg" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/parsers/parse_f95">
      <import line="3" module="rdoc/code_objects" symbol="*" />
      <scope doc="Parse a Fortran 95 file." ilk="namespace" line="5" lineend="119" name="RDoc">
        <scope classrefs="Object" doc="See rdoc/parsers/parse_f95.rb" ilk="class" line="9" lineend="27" name="Token">
          <scope attributes="__ctor__" ilk="function" line="13" lineend="17" name="initialize" signature="initialize(line_no, char_no)" />
          <scope doc="Because we&apos;re used in contexts that expect to return a&#xA;token, we set the text string and then return ourselves" ilk="function" line="20" lineend="23" name="set_text" signature="set_text(text)" />
          <scope ilk="function" line="25" lineend="25" name="line_no" />
          <scope ilk="function" line="25" lineend="25" name="char_no" />
          <scope ilk="function" line="25" lineend="25" name="text" />
        </scope>
        <scope classrefs="Object" ilk="class" line="29" lineend="117" name="Fortran95parser">
          <scope attributes="__ctor__" doc="prepare to parse a Fortran 95 file" ilk="function" line="35" lineend="41" name="initialize" signature="initialize(top_level, file_name, body, options, stats)" />
          <scope doc="devine code constructs" ilk="function" line="44" lineend="95" name="scan" signature="scan" />
          <scope ilk="function" line="97" lineend="108" name="find_comments" signature="find_comments" />
          <scope ilk="function" line="110" lineend="115" name="progress" signature="progress(char)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/parsers/parse_c">
      <import line="96" module="rdoc/code_objects" symbol="*" />
      <import line="97" module="rdoc/parsers/parserfactory" symbol="*" />
      <scope doc="We attempt to parse C extension files." ilk="namespace" line="100" lineend="689" name="RDoc">
        <scope classrefs="Object" doc="See rdoc/c_parse.rb" ilk="class" line="166" lineend="687" name="C_Parser">
          <scope attributes="__ctor__" doc="prepare to parse a C file" ilk="function" line="175" lineend="184" name="initialize" signature="initialize(top_level, file_name, body, options, stats)" />
          <scope doc="Extract the classes/modules and methods from a C file and&#xA;return the corresponding top-level object" ilk="function" line="188" lineend="196" name="scan" signature="scan" />
          <scope ilk="function" line="202" lineend="207" name="progress" signature="progress(char)" />
          <scope ilk="function" line="209" lineend="213" name="warn" signature="warn(msg)" />
          <scope doc="remove lines that are commented out that might otherwise get&#xA;picked up when scanning for classes and methods" ilk="function" line="218" lineend="220" name="remove_commented_out_lines" signature="remove_commented_out_lines" />
          <scope ilk="function" line="222" lineend="257" name="handle_class_module" signature="handle_class_module(var_name, class_mod, class_name, parent, in_module)" />
          <scope ilk="function" line="262" lineend="271" name="find_class_comment" signature="find_class_comment(class_name, class_meth)" />
          <scope ilk="function" line="275" lineend="319" name="do_classes" signature="do_classes" />
          <scope ilk="function" line="323" lineend="341" name="do_constants" signature="do_constants" />
          <scope ilk="function" line="345" lineend="408" name="do_methods" signature="do_methods" />
          <scope ilk="function" line="412" lineend="421" name="do_aliases" signature="do_aliases" />
          <scope ilk="function" line="425" lineend="442" name="handle_constants" signature="handle_constants(type, var_name, const_name, definition)" />
          <scope ilk="function" line="446" lineend="455" name="find_const_comment" signature="find_const_comment(type, const_name)" />
          <scope ilk="function" line="459" lineend="485" name="handle_attr" signature="handle_attr(var_name, attr_name, reader, writer)" />
          <scope ilk="function" line="489" lineend="498" name="find_attr_comment" signature="find_attr_comment(attr_name)" />
          <scope ilk="function" line="502" lineend="543" name="handle_method" signature="handle_method(type, var_name, meth_name, meth_body, param_count, source_file = nil)" />
          <scope doc="Find the C code corresponding to a Ruby method" ilk="function" line="548" lineend="602" name="find_body" signature="find_body(meth_name, meth_obj, body, quiet = false)" />
          <scope doc="If the comment block contains a section that looks like&#xA;call-seq: Array.new Array.new(10) use it for the parameters" ilk="function" line="612" lineend="623" name="find_modifiers" signature="find_modifiers(comment, meth_obj)" />
          <scope ilk="function" line="627" lineend="632" name="find_override_comment" signature="find_override_comment(meth_name)" />
          <scope doc="Look for includes of the form rb_include_module(rb_cArray,&#xA;rb_mEnumerable);" ilk="function" line="638" lineend="645" name="do_includes" signature="do_includes" />
          <scope doc="Remove the /*&apos;s and leading asterisks from C comments" ilk="function" line="651" lineend="656" name="mangle_comment" signature="mangle_comment(comment)" />
          <scope ilk="function" line="658" lineend="667" name="find_class" signature="find_class(raw_name, name)" />
          <scope ilk="function" line="669" lineend="679" name="handle_tab_width" signature="handle_tab_width(body)" />
          <scope doc="Remove #ifdefs that would otherwise confuse us" ilk="function" line="683" lineend="685" name="handle_ifdefs_in" signature="handle_ifdefs_in(body)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/parsers/parserfactory">
      <import line="1" module="rdoc/parsers/parse_simple" symbol="*" />
      <scope ilk="namespace" line="3" lineend="99" name="RDoc">
        <scope doc="A parser is simple a class that implements" ilk="namespace" line="47" lineend="98" name="ParserFactory">
          <scope doc="Record the fact that a particular class parses files that&#xA;match a given extension" ilk="function" line="56" lineend="58" name="parse_files_matching" signature="parse_files_matching(regexp)" />
          <scope attributes="__classmethod__" doc="Return a parser that can handle a particular extension" ilk="function" line="62" lineend="64" name="can_parse" signature="ParserFactory.can_parse(file_name)" />
          <scope attributes="__classmethod__" doc="Alias an extension to another extension." ilk="function" line="70" lineend="75" name="alias_extension" signature="ParserFactory.alias_extension(old_ext, new_ext)" />
          <scope attributes="__classmethod__" doc="Find the correct parser for a particular file name." ilk="function" line="80" lineend="97" name="parser_for" signature="ParserFactory.parser_for(top_level, file_name, body, options, stats)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/options">
      <import line="4" module="rdoc/ri/ri_paths" symbol="*" />
      <scope classrefs="Object" doc="We handle the parsing of options, and subsequently as a&#xA;singleton object to be queried for option values" ilk="class" line="6" lineend="575" name="Options">
        <import line="8" module="singleton" symbol="*" />
        <import line="9" module="getoptlong" symbol="*" />
        <scope ilk="function" line="14" lineend="14" name="exclude" />
        <scope ilk="function" line="14" lineend="14" name="exclude=" />
        <scope ilk="function" line="17" lineend="17" name="op_dir" />
        <scope ilk="function" line="17" lineend="17" name="op_dir=" />
        <scope ilk="function" line="20" lineend="20" name="op_name" />
        <scope ilk="function" line="24" lineend="24" name="show_all" />
        <scope ilk="function" line="24" lineend="24" name="show_all=" />
        <scope ilk="function" line="29" lineend="29" name="main_page" />
        <scope ilk="function" line="29" lineend="29" name="main_page=" />
        <scope ilk="function" line="32" lineend="32" name="merge" />
        <scope ilk="function" line="35" lineend="35" name="quiet" />
        <scope ilk="function" line="39" lineend="39" name="generator" />
        <scope ilk="function" line="39" lineend="39" name="generator=" />
        <scope ilk="function" line="42" lineend="42" name="files" />
        <scope ilk="function" line="45" lineend="45" name="rdoc_include" />
        <scope ilk="function" line="51" lineend="51" name="template" />
        <scope ilk="function" line="54" lineend="54" name="diagram" />
        <scope ilk="function" line="57" lineend="57" name="fileboxes" />
        <scope ilk="function" line="60" lineend="60" name="show_hash" />
        <scope ilk="function" line="63" lineend="63" name="image_format" />
        <scope ilk="function" line="66" lineend="66" name="charset" />
        <scope ilk="function" line="69" lineend="69" name="inline_source" />
        <scope ilk="function" line="72" lineend="72" name="all_one_file" />
        <scope ilk="function" line="75" lineend="75" name="tab_width" />
        <scope ilk="function" line="78" lineend="78" name="include_line_numbers" />
        <scope ilk="function" line="81" lineend="81" name="extra_accessors" />
        <scope ilk="function" line="82" lineend="82" name="extra_accessor_flags" />
        <scope ilk="function" line="85" lineend="85" name="css" />
        <scope ilk="function" line="88" lineend="88" name="webcvs" />
        <scope ilk="function" line="92" lineend="92" name="promiscuous" />
        <scope doc="Are we promiscuous about showing module contents across&#xA;multiple files" ilk="namespace" line="94" lineend="335" name="OptionList">
          <scope attributes="__classmethod__" ilk="function" line="236" lineend="243" name="options" signature="OptionList.options" />
          <scope attributes="__classmethod__" ilk="function" line="246" lineend="251" name="strip_output" signature="OptionList.strip_output(text)" />
          <scope attributes="__classmethod__" doc="Show an error and exit" ilk="function" line="256" lineend="261" name="error" signature="OptionList.error(msg)" />
          <scope attributes="__classmethod__" doc="Show usage and exit" ilk="function" line="265" lineend="311" name="usage" signature="OptionList.usage(generator_names)" />
          <scope attributes="__classmethod__" ilk="function" line="313" lineend="334" name="help_output" signature="OptionList.help_output" />
        </scope>
        <scope doc="Parse command line options." ilk="function" line="340" lineend="501" name="parse" signature="parse(argv, generators)" />
        <scope ilk="function" line="504" lineend="506" name="title" signature="title" />
        <scope doc="Set the title, but only if not already set." ilk="function" line="511" lineend="513" name="title=" signature="title=(string)" />
        <scope doc="Set up an output generator for the format in @generator_name" ilk="function" line="519" lineend="529" name="setup_generator" signature="setup_generator(generators)" />
        <scope doc="Check that the right version of &apos;dot&apos; is available." ilk="function" line="535" lineend="559" name="check_diagram" signature="check_diagram" />
        <scope doc="Check that the files on the command line exist" ilk="function" line="563" lineend="568" name="check_files" signature="check_files" />
        <scope ilk="function" line="570" lineend="573" name="error" signature="error(str)" />
        <import symbol="Singleton" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/test/TestParse">
      <import line="1" module="test/unit" symbol="*" />
      <import line="5" module="rdoc/markup/simple_markup" symbol="*" />
      <scope classrefs="Test::Unit::" ilk="class" line="9" lineend="503" name="TestParse">
        <scope classrefs="Object" ilk="class" line="11" lineend="52" name="MockOutput">
          <scope ilk="function" line="12" name="start_accepting" signature="start_accepting" />
          <scope ilk="function" line="16" lineend="18" name="end_accepting" signature="end_accepting" />
          <scope ilk="function" line="20" lineend="22" name="accept_paragraph" signature="accept_paragraph(am, fragment)" />
          <scope ilk="function" line="24" lineend="26" name="accept_verbatim" signature="accept_verbatim(am, fragment)" />
          <scope ilk="function" line="28" lineend="30" name="accept_list_start" signature="accept_list_start(am, fragment)" />
          <scope ilk="function" line="32" lineend="34" name="accept_list_end" signature="accept_list_end(am, fragment)" />
          <scope ilk="function" line="36" lineend="38" name="accept_list_item" signature="accept_list_item(am, fragment)" />
          <scope ilk="function" line="40" lineend="42" name="accept_blank_line" signature="accept_blank_line(am, fragment)" />
          <scope ilk="function" line="44" lineend="46" name="accept_heading" signature="accept_heading(am, fragment)" />
          <scope ilk="function" line="48" lineend="50" name="accept_rule" signature="accept_rule(am, fragment)" />
        </scope>
        <scope ilk="function" line="54" lineend="59" name="basic_conv" signature="basic_conv(str)" />
        <scope ilk="function" line="61" lineend="66" name="line_types" signature="line_types(str, expected)" />
        <scope ilk="function" line="68" lineend="83" name="line_groups" signature="line_groups(str, expected)" />
        <scope ilk="function" line="85" lineend="108" name="test_tabs" signature="test_tabs" />
        <scope ilk="function" line="110" lineend="122" name="test_whitespace" signature="test_whitespace" />
        <scope ilk="function" line="124" lineend="199" name="test_types" signature="test_types" />
        <scope ilk="function" line="201" lineend="352" name="test_groups" signature="test_groups" />
        <scope ilk="function" line="354" lineend="442" name="test_verbatim_merge" signature="test_verbatim_merge" />
        <scope ilk="function" line="444" lineend="467" name="test_list_split" signature="test_list_split" />
        <scope ilk="function" line="470" lineend="500" name="test_headings" signature="test_headings" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/test/TestInline">
      <import line="1" module="test/unit" symbol="*" />
      <import line="5" module="rdoc/markup/simple_markup/inline" symbol="*" />
      <scope classrefs="Test::Unit::" ilk="class" line="7" lineend="154" name="TestInline">
        <scope ilk="function" line="10" lineend="32" name="setup" signature="setup" />
        <scope ilk="function" line="34" lineend="39" name="crossref" signature="crossref(text)" />
        <scope ilk="function" line="41" lineend="59" name="test_special" signature="test_special" />
        <scope ilk="function" line="61" lineend="98" name="test_basic" signature="test_basic" />
        <scope ilk="function" line="100" lineend="106" name="test_combined" signature="test_combined" />
        <scope ilk="function" line="108" lineend="133" name="test_html_like" signature="test_html_like" />
        <scope ilk="function" line="135" lineend="147" name="test_protect" signature="test_protect" />
        <scope ilk="function" line="149" lineend="153" name="test_adding" signature="test_adding" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/test/AllTests">
      <import line="1" module="TestParse.rb" symbol="*" />
      <import line="2" module="TestInline.rb" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup">
      <import line="119" module="rdoc/markup/simple_markup/fragments" symbol="*" />
      <import line="120" module="rdoc/markup/simple_markup/lines.rb" symbol="*" />
      <scope doc="= Introduction" ilk="namespace" line="122" lineend="476" name="SM">
        <scope classrefs="Object" doc=":nodoc: == Synopsis" ilk="class" line="172" lineend="474" name="SimpleMarkup">
          <scope attributes="__ctor__" doc="take a block of text and use various heuristics to determine&#xA;it&apos;s structure (paragraphs, lists, and so on)." ilk="function" line="207" lineend="210" name="initialize" signature="initialize" />
          <scope doc="Add to the sequences used to add formatting to an individual&#xA;word (such as *bold*)." ilk="function" line="217" lineend="219" name="add_word_pair" signature="add_word_pair(start, stop, name)" />
          <scope doc="Add to the sequences recognized as general markup" ilk="function" line="225" lineend="227" name="add_html" signature="add_html(tag, name)" />
          <scope doc="Add to other inline sequences." ilk="function" line="239" lineend="241" name="add_special" signature="add_special(pattern, name)" />
          <scope doc="We take a string, split it into lines, work out the type of&#xA;each line, and from there deduce groups of lines (for&#xA;example all lines in a paragraph)." ilk="function" line="249" lineend="259" name="convert" signature="convert(str, op)" />
          <scope doc="Look through the text at line indentation." ilk="function" line="272" lineend="363" name="assign_types_to_lines" signature="assign_types_to_lines(margin = 0, level = 0)" />
          <scope doc="Handle labeled list entries, We have a special case to deal&#xA;with." ilk="function" line="382" lineend="426" name="handled_labeled_list" signature="handled_labeled_list(line, level, margin, offset, prefix)" />
          <scope doc="Return a block consisting of fragments which are paragraphs,&#xA;list entries or verbatim text." ilk="function" line="435" lineend="461" name="group_lines" signature="group_lines" />
          <scope doc="for debugging, we allow access to our line contents as text" ilk="function" line="464" lineend="466" name="content" signature="content" />
          <scope doc="for debugging, return the list of line types" ilk="function" line="470" lineend="472" name="get_line_types" signature="get_line_types" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/to_latex">
      <import line="1" module="rdoc/markup/simple_markup/fragments" symbol="*" />
      <import line="2" module="rdoc/markup/simple_markup/inline" symbol="*" />
      <import line="4" module="cgi" symbol="*" />
      <scope ilk="namespace" line="6" lineend="333" name="SM">
        <scope classrefs="Object" doc="Convert SimpleMarkup to basic LaTeX report format" ilk="class" line="10" lineend="331" name="ToLaTeX">
          <scope attributes="__classmethod__" doc="Dollar" ilk="function" line="24" lineend="26" name="l" signature="self.l(str)" />
          <scope ilk="function" line="28" lineend="30" name="l" signature="l(arg)" />
          <scope attributes="__ctor__" ilk="function" line="45" lineend="49" name="initialize" signature="initialize" />
          <scope doc="Set up the standard mapping of attributes to LaTeX" ilk="function" line="54" lineend="60" name="init_tags" signature="init_tags" />
          <scope doc="Escape a LaTeX string" ilk="function" line="64" lineend="78" name="escape" signature="escape(str)" />
          <scope doc="Add a new set of LaTeX tags for an attribute." ilk="function" line="84" lineend="86" name="add_tag" signature="add_tag(name, start, stop)" />
          <scope doc="Here&apos;s the client side of the visitor pattern" ilk="function" line="92" lineend="95" name="start_accepting" signature="start_accepting" />
          <scope ilk="function" line="97" lineend="99" name="end_accepting" signature="end_accepting" />
          <scope ilk="function" line="101" lineend="104" name="accept_paragraph" signature="accept_paragraph(am, fragment)" />
          <scope ilk="function" line="106" lineend="110" name="accept_verbatim" signature="accept_verbatim(am, fragment)" />
          <scope ilk="function" line="112" lineend="116" name="accept_rule" signature="accept_rule(am, fragment)" />
          <scope ilk="function" line="118" lineend="121" name="accept_list_start" signature="accept_list_start(am, fragment)" />
          <scope ilk="function" line="123" lineend="128" name="accept_list_end" signature="accept_list_end(am, fragment)" />
          <scope ilk="function" line="130" lineend="137" name="accept_list_item" signature="accept_list_item(am, fragment)" />
          <scope ilk="function" line="139" lineend="141" name="accept_blank_line" signature="accept_blank_line(am, fragment)" />
          <scope ilk="function" line="143" lineend="145" name="accept_heading" signature="accept_heading(am, fragment)" />
          <scope doc="This is a higher speed (if messier) version of wrap" ilk="function" line="149" lineend="174" name="wrap" signature="wrap(txt, line_len = 76)" />
          <scope ilk="function" line="182" lineend="191" name="on_tags" signature="on_tags(res, item)" />
          <scope ilk="function" line="193" lineend="202" name="off_tags" signature="off_tags(res, item)" />
          <scope ilk="function" line="204" lineend="221" name="convert_flow" signature="convert_flow(flow)" />
          <scope doc="some of these patterns are taken from SmartyPants..." ilk="function" line="225" lineend="249" name="convert_string" signature="convert_string(item)" />
          <scope ilk="function" line="251" lineend="262" name="convert_special" signature="convert_special(special)" />
          <scope ilk="function" line="264" lineend="275" name="convert_heading" signature="convert_heading(level, flow)" />
          <scope ilk="function" line="277" lineend="303" name="list_name" signature="list_name(list_type, is_open_tag)" />
          <scope ilk="function" line="305" lineend="318" name="list_item_start" signature="list_item_start(am, fragment)" />
          <scope ilk="function" line="320" lineend="329" name="list_end_for" signature="list_end_for(fragment_type)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/to_html">
      <import line="1" module="rdoc/markup/simple_markup/fragments" symbol="*" />
      <import line="2" module="rdoc/markup/simple_markup/inline" symbol="*" />
      <import line="4" module="cgi" symbol="*" />
      <scope ilk="namespace" line="6" lineend="289" name="SM">
        <scope classrefs="Object" ilk="class" line="8" lineend="287" name="ToHtml">
          <scope attributes="__ctor__" ilk="function" line="21" lineend="23" name="initialize" signature="initialize" />
          <scope doc="Set up the standard mapping of attributes to HTML tags" ilk="function" line="28" lineend="34" name="init_tags" signature="init_tags" />
          <scope doc="Add a new set of HTML tags for an attribute." ilk="function" line="40" lineend="42" name="add_tag" signature="add_tag(name, start, stop)" />
          <scope doc="Given an HTML tag, decorate it with class information and&#xA;the like if required." ilk="function" line="50" lineend="52" name="annotate" signature="annotate(tag)" />
          <scope doc="Here&apos;s the client side of the visitor pattern" ilk="function" line="57" lineend="60" name="start_accepting" signature="start_accepting" />
          <scope ilk="function" line="62" lineend="64" name="end_accepting" signature="end_accepting" />
          <scope ilk="function" line="66" lineend="70" name="accept_paragraph" signature="accept_paragraph(am, fragment)" />
          <scope ilk="function" line="72" lineend="76" name="accept_verbatim" signature="accept_verbatim(am, fragment)" />
          <scope ilk="function" line="78" lineend="82" name="accept_rule" signature="accept_rule(am, fragment)" />
          <scope ilk="function" line="84" lineend="87" name="accept_list_start" signature="accept_list_start(am, fragment)" />
          <scope ilk="function" line="89" lineend="94" name="accept_list_end" signature="accept_list_end(am, fragment)" />
          <scope ilk="function" line="96" lineend="103" name="accept_list_item" signature="accept_list_item(am, fragment)" />
          <scope ilk="function" line="105" lineend="107" name="accept_blank_line" signature="accept_blank_line(am, fragment)" />
          <scope ilk="function" line="109" lineend="111" name="accept_heading" signature="accept_heading(am, fragment)" />
          <scope doc="This is a higher speed (if messier) version of wrap" ilk="function" line="115" lineend="140" name="wrap" signature="wrap(txt, line_len = 76)" />
          <scope ilk="function" line="148" lineend="157" name="on_tags" signature="on_tags(res, item)" />
          <scope ilk="function" line="159" lineend="168" name="off_tags" signature="off_tags(res, item)" />
          <scope ilk="function" line="170" lineend="186" name="convert_flow" signature="convert_flow(flow)" />
          <scope doc="some of these patterns are taken from SmartyPants..." ilk="function" line="190" lineend="219" name="convert_string" signature="convert_string(item)" />
          <scope ilk="function" line="221" lineend="232" name="convert_special" signature="convert_special(special)" />
          <scope ilk="function" line="234" lineend="239" name="convert_heading" signature="convert_heading(level, flow)" />
          <scope ilk="function" line="241" lineend="244" name="html_list_name" signature="html_list_name(list_type, is_open_tag)" />
          <scope ilk="function" line="246" lineend="272" name="list_item_start" signature="list_item_start(am, fragment)" />
          <scope ilk="function" line="274" lineend="285" name="list_end_for" signature="list_end_for(fragment_type)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/to_flow">
      <import line="1" module="rdoc/markup/simple_markup/fragments" symbol="*" />
      <import line="2" module="rdoc/markup/simple_markup/inline" symbol="*" />
      <import line="3" module="cgi" symbol="*" />
      <scope ilk="namespace" line="5" lineend="188" name="SM">
        <scope ilk="namespace" line="7" lineend="23" name="Flow">
          <scope classrefs="Object" ilk="class" line="11" lineend="20" name="LIST">
            <scope ilk="function" line="12" lineend="12" name="type" />
            <scope ilk="function" line="12" lineend="12" name="contents" />
            <scope attributes="__ctor__" ilk="function" line="13" lineend="16" name="initialize" signature="initialize(type)" />
            <scope ilk="function" line="17" lineend="19" name="&lt;&lt;" signature="&lt;&lt;(stuff" />
          </scope>
        </scope>
        <scope classrefs="Object" ilk="class" line="25" lineend="186" name="ToFlow">
          <scope attributes="__ctor__" ilk="function" line="37" lineend="39" name="initialize" signature="initialize" />
          <scope doc="Set up the standard mapping of attributes to HTML tags" ilk="function" line="44" lineend="50" name="init_tags" signature="init_tags" />
          <scope doc="Add a new set of HTML tags for an attribute." ilk="function" line="56" lineend="58" name="add_tag" signature="add_tag(name, start, stop)" />
          <scope doc="Given an HTML tag, decorate it with class information and&#xA;the like if required." ilk="function" line="66" lineend="68" name="annotate" signature="annotate(tag)" />
          <scope doc="Here&apos;s the client side of the visitor pattern" ilk="function" line="73" lineend="76" name="start_accepting" signature="start_accepting" />
          <scope ilk="function" line="78" lineend="80" name="end_accepting" signature="end_accepting" />
          <scope ilk="function" line="82" lineend="84" name="accept_paragraph" signature="accept_paragraph(am, fragment)" />
          <scope ilk="function" line="86" lineend="88" name="accept_verbatim" signature="accept_verbatim(am, fragment)" />
          <scope ilk="function" line="90" lineend="94" name="accept_rule" signature="accept_rule(am, fragment)" />
          <scope ilk="function" line="96" lineend="101" name="accept_list_start" signature="accept_list_start(am, fragment)" />
          <scope ilk="function" line="103" lineend="105" name="accept_list_end" signature="accept_list_end(am, fragment)" />
          <scope ilk="function" line="107" lineend="109" name="accept_list_item" signature="accept_list_item(am, fragment)" />
          <scope ilk="function" line="111" lineend="113" name="accept_blank_line" signature="accept_blank_line(am, fragment)" />
          <scope ilk="function" line="115" lineend="117" name="accept_heading" signature="accept_heading(am, fragment)" />
          <scope ilk="function" line="126" lineend="135" name="on_tags" signature="on_tags(res, item)" />
          <scope ilk="function" line="137" lineend="146" name="off_tags" signature="off_tags(res, item)" />
          <scope ilk="function" line="148" lineend="164" name="convert_flow" signature="convert_flow(flow)" />
          <scope doc="some of these patterns are taken from SmartyPants..." ilk="function" line="168" lineend="170" name="convert_string" signature="convert_string(item)" />
          <scope ilk="function" line="172" lineend="183" name="convert_special" signature="convert_special(special)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/preprocess">
      <scope ilk="namespace" line="1" lineend="68" name="SM">
        <scope classrefs="Object" doc="Handle common directives that can occur in a block of text:" ilk="class" line="9" lineend="67" name="PreProcess">
          <scope attributes="__ctor__" ilk="function" line="11" lineend="14" name="initialize" signature="initialize(input_file_name, include_path)" />
          <scope doc="Look for common options in a chunk of text." ilk="function" line="20" lineend="35" name="handle" signature="handle(text)" />
          <scope doc="Include a file, indenting it correctly" ilk="function" line="43" lineend="51" name="include_file" signature="include_file(name, indent)" />
          <scope doc="Look for the given file in the directory containing the&#xA;current file, and then in each of the directories specified&#xA;in the RDOC_INCLUDE path" ilk="function" line="57" lineend="65" name="find_include_file" signature="find_include_file(name)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/lines">
      <scope doc="We store the lines we&apos;re working on as objects of class&#xA;Line." ilk="namespace" line="7" lineend="151" name="SM">
        <scope classrefs="Object" ilk="class" line="9" lineend="86" name="Line">
          <scope ilk="function" line="20" lineend="20" name="type" />
          <scope ilk="function" line="20" lineend="20" name="type=" />
          <scope ilk="function" line="23" lineend="23" name="level" />
          <scope ilk="function" line="23" lineend="23" name="level=" />
          <scope ilk="function" line="26" lineend="26" name="text" />
          <scope ilk="function" line="26" lineend="26" name="text=" />
          <scope ilk="function" line="30" lineend="30" name="param" />
          <scope ilk="function" line="30" lineend="30" name="param=" />
          <scope ilk="function" line="33" lineend="33" name="flag" />
          <scope ilk="function" line="33" lineend="33" name="flag=" />
          <scope ilk="function" line="36" lineend="36" name="leading_spaces" />
          <scope ilk="function" line="36" lineend="36" name="leading_spaces=" />
          <scope ilk="function" line="39" lineend="39" name="deleted" />
          <scope ilk="function" line="39" lineend="39" name="deleted=" />
          <scope attributes="__ctor__" doc="true if this line has been deleted from the list of lines" ilk="function" line="42" lineend="59" name="initialize" signature="initialize(text)" />
          <scope doc="Return true if this line is blank" ilk="function" line="62" lineend="64" name="isBlank?" signature="isBlank?" />
          <scope doc="stamp a line with a type, a level, a prefix, and a flag" ilk="function" line="67" lineend="69" name="stamp" signature="stamp(type, level, param=&quot;&quot;, flag=nil)" />
          <scope doc="Strip off the leading margin" ilk="function" line="75" lineend="81" name="strip_leading" signature="strip_leading(size)" />
          <scope ilk="function" line="83" lineend="85" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="Object" doc="A container for all the lines" ilk="class" line="93" lineend="150" name="Lines">
          <scope ilk="function" line="96" lineend="96" name="lines" />
          <scope attributes="__ctor__" doc="for debugging" ilk="function" line="98" lineend="101" name="initialize" signature="initialize(lines)" />
          <scope ilk="function" line="103" lineend="105" name="empty?" signature="empty?" />
          <scope ilk="function" line="107" lineend="111" name="each" signature="each" />
          <scope doc="def [](index) @lines[index] end" ilk="function" line="117" lineend="119" name="rewind" signature="rewind" />
          <scope ilk="function" line="121" lineend="127" name="next" signature="next" />
          <scope ilk="function" line="129" lineend="131" name="unget" signature="unget" />
          <scope ilk="function" line="133" lineend="135" name="delete" signature="delete(a_line)" />
          <scope ilk="function" line="137" lineend="141" name="normalize" signature="normalize" />
          <scope ilk="function" line="143" lineend="145" name="as_text" signature="as_text" />
          <scope ilk="function" line="147" lineend="149" name="line_types" signature="line_types" />
          <import symbol="Enumerable" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/inline">
      <scope ilk="namespace" line="1" lineend="338" name="SM">
        <scope classrefs="Object" doc="We manage a set of attributes." ilk="class" line="6" lineend="37" name="Attribute">
          <scope attributes="__classmethod__" ilk="function" line="12" lineend="20" name="bitmap_for" signature="Attribute.bitmap_for(name)" />
          <scope attributes="__classmethod__" ilk="function" line="22" lineend="29" name="as_string" signature="Attribute.as_string(bitmap)" />
          <scope attributes="__classmethod__" ilk="function" line="31" lineend="36" name="each_name_of" signature="Attribute.each_name_of(bitmap)" />
        </scope>
        <scope classrefs="Object" doc="An AttrChanger records a change in attributes." ilk="class" line="45" lineend="49" name="AttrChanger">
          <scope ilk="function" line="46" lineend="48" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="Object" doc="An array of attributes which parallels the characters in a&#xA;string" ilk="class" line="52" lineend="66" name="AttrSpan">
          <scope attributes="__ctor__" ilk="function" line="53" lineend="55" name="initialize" signature="initialize(length)" />
          <scope ilk="function" line="57" lineend="61" name="set_attrs" signature="set_attrs(start, length, bits)" />
          <scope ilk="function" line="63" lineend="65" name="[]" signature="[](n" />
        </scope>
        <scope classrefs="Object" doc="Hold details of a special sequence" ilk="class" line="71" lineend="86" name="Special">
          <scope ilk="function" line="72" lineend="72" name="type" />
          <scope ilk="function" line="73" lineend="73" name="text" />
          <scope ilk="function" line="73" lineend="73" name="text=" />
          <scope attributes="__ctor__" ilk="function" line="75" lineend="77" name="initialize" signature="initialize(type, text)" />
          <scope ilk="function" line="79" lineend="81" name="==" signature="==(o" />
          <scope ilk="function" line="83" lineend="85" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="Object" ilk="class" line="88" lineend="336" name="AttributeManager">
          <scope doc="Return an attribute object with the given turn_on and&#xA;turn_off bits set" ilk="function" line="122" lineend="124" name="attribute" signature="attribute(turn_on, turn_off)" />
          <scope ilk="function" line="127" lineend="130" name="change_attribute" signature="change_attribute(current, new)" />
          <scope ilk="function" line="132" lineend="137" name="changed_attribute_by_name" signature="changed_attribute_by_name(current_set, new_set)" />
          <scope ilk="function" line="139" lineend="143" name="copy_string" signature="copy_string(start_pos, end_pos)" />
          <scope doc="Map attributes like &lt;b&gt;text&lt;/b&gt;to the sequence&#xA;\001\002&lt;char&gt;\001\003&lt;char&gt;, where &lt;char&gt; is a per-&#xA;attribute specific character" ilk="function" line="148" lineend="168" name="convert_attrs" signature="convert_attrs(str, attrs)" />
          <scope ilk="function" line="170" lineend="180" name="convert_html" signature="convert_html(str, attrs)" />
          <scope ilk="function" line="182" lineend="190" name="convert_specials" signature="convert_specials(str, attrs)" />
          <scope doc="&quot;" ilk="function" line="199" lineend="202" name="mask_protected_sequences" signature="mask_protected_sequences" />
          <scope ilk="function" line="204" lineend="206" name="unmask_protected_sequences" signature="unmask_protected_sequences" />
          <scope attributes="__ctor__" ilk="function" line="208" lineend="218" name="initialize" signature="initialize" />
          <scope ilk="function" line="220" lineend="234" name="add_word_pair" signature="add_word_pair(start, stop, name)" />
          <scope ilk="function" line="236" lineend="238" name="add_html" signature="add_html(tag, name)" />
          <scope ilk="function" line="240" lineend="242" name="add_special" signature="add_special(pattern, name)" />
          <scope ilk="function" line="244" lineend="259" name="flow" signature="flow(str)" />
          <scope ilk="function" line="261" lineend="281" name="display_attributes" signature="display_attributes" />
          <scope ilk="function" line="283" lineend="334" name="split_into_flow" signature="split_into_flow" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/simple_markup/fragments">
      <import line="1" module="rdoc/markup/simple_markup/lines.rb" symbol="*" />
      <scope doc="require &apos;rdoc/markup/simple_markup/to_flow.rb&apos;" ilk="namespace" line="4" lineend="328" name="SM">
        <scope classrefs="Object" doc="A Fragment is a chunk of text, subclassed as a paragraph, a&#xA;list entry, or verbatim text" ilk="class" line="10" lineend="46" name="Fragment">
          <scope ilk="function" line="11" lineend="11" name="level" />
          <scope ilk="function" line="11" lineend="11" name="param" />
          <scope ilk="function" line="11" lineend="11" name="txt" />
          <scope ilk="function" line="12" lineend="12" name="type" />
          <scope ilk="function" line="12" lineend="12" name="type=" />
          <scope attributes="__ctor__" ilk="function" line="14" lineend="20" name="initialize" signature="initialize(level, param, type, txt)" />
          <scope ilk="function" line="22" lineend="25" name="add_text" signature="add_text(txt)" />
          <scope ilk="function" line="27" lineend="29" name="to_s" signature="to_s" />
          <scope attributes="__classmethod__" doc="This is a simple factory system that lets us associate&#xA;fragement types (a string) with a subclass of fragment" ilk="function" line="37" lineend="39" name="type_name" signature="Fragment.type_name(name)" />
          <scope attributes="__classmethod__" ilk="function" line="41" lineend="45" name="for" signature="Fragment.for(line)" />
        </scope>
        <scope classrefs="Fragment" doc="A paragraph is a fragment which gets wrapped to fit." ilk="class" line="52" lineend="54" name="Paragraph" />
        <scope classrefs="Paragraph" ilk="class" line="56" lineend="58" name="BlankLine" />
        <scope classrefs="Paragraph" ilk="class" line="60" lineend="66" name="Heading">
          <scope ilk="function" line="63" lineend="65" name="head_level" signature="head_level" />
        </scope>
        <scope classrefs="Paragraph" doc="A List is a fragment with some kind of label" ilk="class" line="72" lineend="80" name="ListBase" />
        <scope classrefs="ListBase" ilk="class" line="82" lineend="89" name="ListItem" />
        <scope classrefs="ListBase" ilk="class" line="91" lineend="95" name="ListStart">
          <scope attributes="__ctor__" ilk="function" line="92" lineend="94" name="initialize" signature="initialize(level, param, type)" />
        </scope>
        <scope classrefs="ListBase" ilk="class" line="97" lineend="101" name="ListEnd">
          <scope attributes="__ctor__" ilk="function" line="98" lineend="100" name="initialize" signature="initialize(level, type)" />
        </scope>
        <scope classrefs="Fragment" doc="Verbatim code contains lines that don&apos;t get wrapped." ilk="class" line="106" lineend="113" name="Verbatim">
          <scope ilk="function" line="109" lineend="111" name="add_text" signature="add_text(txt)" />
        </scope>
        <scope classrefs="Fragment" doc="A horizontal rule" ilk="class" line="117" lineend="119" name="Rule" />
        <scope classrefs="Object" doc="Collect groups of lines together." ilk="class" line="125" lineend="326" name="LineCollection">
          <scope attributes="__ctor__" ilk="function" line="127" lineend="129" name="initialize" signature="initialize" />
          <scope ilk="function" line="131" lineend="133" name="add" signature="add(fragment)" />
          <scope ilk="function" line="135" lineend="137" name="each" signature="each(&amp;b)" />
          <scope doc="For testing" ilk="function" line="140" lineend="142" name="to_a" signature="to_a" />
          <scope doc="Factory for different fragment types" ilk="function" line="145" lineend="147" name="fragment_for" signature="fragment_for(*args)" />
          <scope doc="tidy up at the end" ilk="function" line="150" lineend="155" name="normalize" signature="normalize" />
          <scope ilk="function" line="157" lineend="159" name="to_s" signature="to_s" />
          <scope ilk="function" line="161" lineend="187" name="accept" signature="accept(am, visitor)" />
          <scope doc="If you have:" ilk="function" line="208" lineend="233" name="change_verbatim_blank_lines" signature="change_verbatim_blank_lines" />
          <scope doc="List nesting is implicit given the level of Make it&#xA;explicit, just to make life a tad easier for the output&#xA;processors" ilk="function" line="239" lineend="271" name="add_list_start_and_ends" signature="add_list_start_and_ends" />
          <scope doc="now insert start/ends between list entries at the same level&#xA;that have different element types" ilk="function" line="276" lineend="303" name="add_list_breaks" signature="add_list_breaks" />
          <scope doc="Finally tidy up the blank lines: * change Blank/ListEnd into&#xA;ListEnd/Blank * remove blank lines at the front" ilk="function" line="309" lineend="324" name="tidy_blank_lines" signature="tidy_blank_lines (@fragments" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/sample/sample">
      <import line="19" module="rdoc/markup/simple_markup" symbol="*" />
      <import line="20" module="rdoc/markup/simple_markup/to_html" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/markup/sample/rdoc2latex">
      <import line="5" module="rdoc/markup/simple_markup" symbol="*" />
      <import line="6" module="rdoc/markup/simple_markup/to_latex" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/xml_generator">
      <import line="2" module="ftools" symbol="*" />
      <import line="4" module="rdoc/options" symbol="*" />
      <import line="5" module="rdoc/markup/simple_markup" symbol="*" />
      <import line="6" module="rdoc/markup/simple_markup/to_html" symbol="*" />
      <import line="7" module="rdoc/generators/html_generator" symbol="*" />
      <scope ilk="namespace" line="9" lineend="130" name="Generators">
        <scope classrefs="HTMLGenerator" doc="Generate XML output as one big file" ilk="class" line="13" lineend="128" name="XMLGenerator">
          <scope attributes="__classmethod__" doc="Standard generator factory" ilk="function" line="16" lineend="18" name="for" signature="XMLGenerator.for(options)" />
          <scope attributes="__ctor__" ilk="function" line="21" lineend="23" name="initialize" signature="initialize(*args)" />
          <scope doc="Build the initial indices and output objects based on an&#xA;array of TopLevel objects containing the extracted&#xA;information." ilk="function" line="30" lineend="38" name="generate" signature="generate(info)" />
          <scope doc="Generate:" ilk="function" line="50" lineend="59" name="build_indices" signature="build_indices" />
          <scope ilk="function" line="61" lineend="66" name="build_class_list" signature="build_class_list(from, html_file, class_dir)" />
          <scope doc="Generate all the HTML." ilk="function" line="72" lineend="90" name="generate_xml" signature="generate_xml" />
          <scope ilk="function" line="92" lineend="98" name="gen_into" signature="gen_into(list)" />
          <scope ilk="function" line="100" lineend="102" name="gen_file_index" signature="gen_file_index" />
          <scope ilk="function" line="104" lineend="106" name="gen_class_index" signature="gen_class_index" />
          <scope ilk="function" line="108" lineend="110" name="gen_method_index" signature="gen_method_index" />
          <scope ilk="function" line="113" lineend="126" name="gen_an_index" signature="gen_an_index(collection, title)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/xml/xml">
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="2" lineend="111" name="Page" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/xml/rdf">
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="2" lineend="110" name="Page" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/html/one_page_html">
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="2" lineend="121" name="Page" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/html/old_html">
      <import line="728" module="rdoc/generators/template/html/one_page_html" symbol="*" />
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="184" lineend="725" name="Page" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/html/kilmer">
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="2" name="Page" />
      <scope ilk="function" line="429" lineend="432" name="write_extra_pages" signature="write_extra_pages" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/html/html">
      <import line="711" module="rdoc/generators/template/html/one_page_html" symbol="*" />
      <scope doc="= CSS2 RDoc HTML template" ilk="namespace" line="22" lineend="709" name="RDoc">
        <scope ilk="namespace" line="23" lineend="708" name="Page" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/html/hefss">
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="2" name="Page" />
      <scope ilk="function" line="412" lineend="415" name="write_extra_pages" signature="write_extra_pages" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/template/chm/chm">
      <scope ilk="namespace" line="1" name="RDoc" />
      <scope ilk="namespace" line="2" lineend="86" name="Page">
        <import line="4" module="rdoc/generators/template/html/html" symbol="*" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/ri_generator">
      <import line="37" module="ftools" symbol="*" />
      <import line="39" module="rdoc/options" symbol="*" />
      <import line="40" module="rdoc/template" symbol="*" />
      <import line="41" module="rdoc/markup/simple_markup" symbol="*" />
      <import line="42" module="rdoc/markup/simple_markup/to_flow" symbol="*" />
      <import line="43" module="cgi" symbol="*" />
      <import line="45" module="rdoc/ri/ri_cache" symbol="*" />
      <import line="46" module="rdoc/ri/ri_reader" symbol="*" />
      <import line="47" module="rdoc/ri/ri_writer" symbol="*" />
      <import line="48" module="rdoc/ri/ri_descriptions" symbol="*" />
      <scope doc="We&apos;re responsible for generating all the HTML files from the&#xA;object tree defined in code_objects.rb." ilk="namespace" line="50" lineend="268" name="Generators">
        <scope classrefs="Object" ilk="class" line="53" lineend="267" name="RIGenerator">
          <scope attributes="__classmethod__" doc="Generators may need to return specific subclasses depending&#xA;on the options they are passed." ilk="function" line="59" lineend="61" name="for" signature="RIGenerator.for(options)" />
          <scope classrefs="Object" ilk="class" line="63" lineend="65" name="self" />
          <scope attributes="__ctor__" doc="Set up a new HTML generator." ilk="function" line="70" lineend="75" name="initialize" signature="initialize(options)" />
          <scope doc="Build the initial indices and output objects based on an&#xA;array of TopLevel objects containing the extracted&#xA;information." ilk="function" line="83" lineend="87" name="generate" signature="generate(toplevels)" />
          <scope ilk="function" line="89" lineend="96" name="process_class" signature="process_class(from_class)" />
          <scope ilk="function" line="98" lineend="139" name="generate_class_info" signature="generate_class_info(cls)" />
          <scope ilk="function" line="142" lineend="164" name="generate_method_info" signature="generate_method_info(cls_desc, method)" />
          <scope doc="return a list of class and instance methods that we&apos;ll be&#xA;documenting" ilk="function" line="171" lineend="189" name="method_list" signature="method_list(cls)" />
          <scope ilk="function" line="191" lineend="211" name="params_of" signature="params_of(method)" />
          <scope ilk="function" line="213" lineend="225" name="markup" signature="markup(comment)" />
          <scope doc="By default we replace existing classes with the same name." ilk="function" line="234" lineend="266" name="update_or_replace" signature="update_or_replace(cls_desc)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/html_generator">
      <import line="37" module="ftools" symbol="*" />
      <import line="39" module="rdoc/options" symbol="*" />
      <import line="40" module="rdoc/template" symbol="*" />
      <import line="41" module="rdoc/markup/simple_markup" symbol="*" />
      <import line="42" module="rdoc/markup/simple_markup/to_html" symbol="*" />
      <import line="43" module="cgi" symbol="*" />
      <scope doc="We&apos;re responsible for generating all the HTML files from the&#xA;object tree defined in code_objects.rb." ilk="namespace" line="45" lineend="1502" name="Generators">
        <scope classrefs="Object" doc="Build a hash of all items that can be cross-referenced." ilk="class" line="62" lineend="80" name="AllReferences">
          <scope attributes="__classmethod__" ilk="function" line="65" lineend="67" name="reset" signature="AllReferences::reset" />
          <scope attributes="__classmethod__" ilk="function" line="69" lineend="71" name="add" signature="AllReferences.add(name, html_class)" />
          <scope ilk="function" line="73" lineend="75" name="AllReferences" signature="AllReferences." />
          <scope attributes="__classmethod__" ilk="function" line="77" lineend="79" name="keys" signature="AllReferences.keys" />
        </scope>
        <scope classrefs="SM::ToHtml" doc="Subclass of the SM::ToHtml class that supports looking up&#xA;words in the AllReferences list." ilk="class" line="89" lineend="189" name="HyperlinkHtml">
          <scope attributes="__ctor__" doc="We need to record the html path of our caller so we can&#xA;generate correct relative paths for any hyperlinks that we&#xA;find" ilk="function" line="92" lineend="99" name="initialize" signature="initialize(from_path, context)" />
          <scope doc="We&apos;re invoked when any text matches the CROSSREF pattern&#xA;(defined in MarkUp)." ilk="function" line="108" lineend="130" name="handle_special_CROSSREF" signature="handle_special_CROSSREF(special)" />
          <scope doc="Generate a hyperlink for url, labeled with text." ilk="function" line="135" lineend="160" name="gen_url" signature="gen_url(url, text)" />
          <scope doc="And we&apos;re invoked with a potential external hyperlink&#xA;mailto: just gets inserted." ilk="function" line="169" lineend="172" name="handle_special_HYPERLINK" signature="handle_special_HYPERLINK(special)" />
          <scope doc="HEre&apos;s a hypedlink where the label is different to the URL&#xA;&lt;label&gt;[url]" ilk="function" line="178" lineend="187" name="handle_special_TIDYLINK" signature="handle_special_TIDYLINK(special)" />
        </scope>
        <scope doc="Handle common markup tasks for the various Html classes" ilk="namespace" line="198" lineend="272" name="MarkUp">
          <scope doc="Convert a string in markup format into HTML." ilk="function" line="204" lineend="245" name="markup" signature="markup(str, remove_para=false)" />
          <scope doc="Qualify a stylesheet URL; if if +css_name+ does not begin&#xA;with &apos;/&apos; or &apos;http[s]://&apos;, prepend a prefix relative to&#xA;+path+." ilk="function" line="251" lineend="259" name="style_url" signature="style_url(path, css_name=nil)" />
          <scope doc="Build a webcvs URL with the given &apos;url&apos; argument." ilk="function" line="265" lineend="271" name="cvs_url" signature="cvs_url(url, full_path)" />
        </scope>
        <scope classrefs="Object" doc="A Context is built by the parser to represent a container:&#xA;contexts hold classes, modules, methods, require lists and&#xA;include lists." ilk="class" line="281" lineend="573" name="ContextUser">
          <scope ilk="function" line="285" lineend="285" name="context" />
          <scope attributes="__ctor__" ilk="function" line="287" lineend="290" name="initialize" signature="initialize(context, options)" />
          <scope doc="convenience method to build a hyperlink" ilk="function" line="293" lineend="295" name="href" signature="href(link, cls, name)" />
          <scope doc="return a reference to outselves to be used as an href= the&#xA;form depends on whether we&apos;re all in one file or in multiple&#xA;files" ilk="function" line="301" lineend="307" name="as_href" signature="as_href(from_path)" />
          <scope doc="Create a list of HtmlMethod objects for each method in the&#xA;corresponding context object." ilk="function" line="314" lineend="320" name="collect_methods" signature="collect_methods" />
          <scope doc="Build a summary list of all the methods in this context" ilk="function" line="323" lineend="334" name="build_method_summary_list" signature="build_method_summary_list(path_prefix=&quot;&quot;)" />
          <scope doc="Build a list of aliases for which we couldn&apos;t find a&#xA;corresponding method" ilk="function" line="339" lineend="353" name="build_alias_summary_list" signature="build_alias_summary_list(section)" />
          <scope doc="Build a list of constants" ilk="function" line="356" lineend="368" name="build_constants_summary_list" signature="build_constants_summary_list(section)" />
          <scope ilk="function" line="370" lineend="372" name="build_requires_list" signature="build_requires_list(context)" />
          <scope ilk="function" line="374" lineend="376" name="build_include_list" signature="build_include_list(context)" />
          <scope doc="Build a list from an array of &lt;i&gt;Htmlxxx&lt;/i&gt; items." ilk="function" line="387" lineend="418" name="potentially_referenced_list" signature="potentially_referenced_list(array)" />
          <scope doc="Build an array of arrays of method details." ilk="function" line="425" lineend="485" name="build_method_detail_list" signature="build_method_detail_list(section)" />
          <scope doc="Build the structured list of classes and modules contained&#xA;in this context." ilk="function" line="490" lineend="521" name="build_class_list" signature="build_class_list(level, from, section, infile=nil)" />
          <scope ilk="function" line="523" lineend="525" name="url" signature="url(target)" />
          <scope ilk="function" line="527" lineend="533" name="aref_to" signature="aref_to(target)" />
          <scope ilk="function" line="535" lineend="537" name="document_self" signature="document_self" />
          <scope ilk="function" line="539" lineend="544" name="diagram_reference" signature="diagram_reference(diagram)" />
          <scope doc="Find a symbol in ourselves or our parent" ilk="function" line="548" lineend="554" name="find_symbol" signature="find_symbol(symbol, method=nil)" />
          <scope doc="create table of contents if we contain sections" ilk="function" line="558" lineend="570" name="add_table_of_sections" signature="add_table_of_sections" />
          <import symbol="MarkUp" />
        </scope>
        <scope classrefs="ContextUser" doc="Wrap a ClassModule context" ilk="class" line="579" lineend="753" name="HtmlClass">
          <scope ilk="function" line="581" lineend="581" name="path" />
          <scope attributes="__ctor__" ilk="function" line="583" lineend="601" name="initialize" signature="initialize(context, html_file, prefix, options)" />
          <scope doc="return the relative file name to store this class in, which&#xA;is also its url" ilk="function" line="605" lineend="611" name="http_url" signature="http_url(full_name, prefix)" />
          <scope ilk="function" line="614" lineend="616" name="name" signature="name" />
          <scope ilk="function" line="618" lineend="620" name="parent_name" signature="parent_name" />
          <scope ilk="function" line="622" lineend="624" name="index_name" signature="index_name" />
          <scope ilk="function" line="626" lineend="632" name="write_on" signature="write_on(f)" />
          <scope ilk="function" line="634" lineend="677" name="value_hash" signature="value_hash" />
          <scope ilk="function" line="679" lineend="697" name="build_attribute_list" signature="build_attribute_list(section)" />
          <scope ilk="function" line="699" lineend="747" name="class_attribute_values" signature="class_attribute_values" />
          <scope ilk="function" line="749" lineend="751" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
        </scope>
        <scope classrefs="ContextUser" doc="Handles the mapping of a file&apos;s information to HTML." ilk="class" line="762" lineend="887" name="HtmlFile">
          <scope ilk="function" line="764" lineend="764" name="path" />
          <scope ilk="function" line="765" lineend="765" name="name" />
          <scope attributes="__ctor__" ilk="function" line="767" lineend="783" name="initialize" signature="initialize(context, options, file_dir)" />
          <scope ilk="function" line="785" lineend="788" name="http_url" signature="http_url(file_dir)" />
          <scope ilk="function" line="790" lineend="792" name="filename_to_label" signature="filename_to_label" />
          <scope ilk="function" line="794" lineend="796" name="index_name" signature="index_name" />
          <scope ilk="function" line="798" lineend="800" name="parent_name" signature="parent_name" />
          <scope ilk="function" line="802" lineend="855" name="value_hash" signature="value_hash" />
          <scope ilk="function" line="857" lineend="863" name="write_on" signature="write_on(f)" />
          <scope ilk="function" line="865" lineend="882" name="file_attribute_values" signature="file_attribute_values" />
          <scope ilk="function" line="884" lineend="886" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
        </scope>
        <scope classrefs="Object" ilk="class" line="891" lineend="1119" name="HtmlMethod">
          <scope ilk="function" line="894" lineend="894" name="context" />
          <scope ilk="function" line="895" lineend="895" name="src_url" />
          <scope ilk="function" line="896" lineend="896" name="img_url" />
          <scope ilk="function" line="897" lineend="897" name="source_code" />
          <scope attributes="__classmethod__" ilk="function" line="903" lineend="905" name="reset" signature="HtmlMethod::reset" />
          <scope attributes="__ctor__" ilk="function" line="907" lineend="926" name="initialize" signature="initialize(context, html_class, options)" />
          <scope doc="return a reference to outselves to be used as an href= the&#xA;form depends on whether we&apos;re all in one file or in multiple&#xA;files" ilk="function" line="932" lineend="938" name="as_href" signature="as_href(from_path)" />
          <scope ilk="function" line="940" lineend="942" name="name" signature="name" />
          <scope ilk="function" line="944" lineend="946" name="section" signature="section" />
          <scope ilk="function" line="948" lineend="950" name="index_name" signature="index_name" />
          <scope ilk="function" line="952" lineend="958" name="parent_name" signature="parent_name" />
          <scope ilk="function" line="960" lineend="962" name="aref" signature="aref" />
          <scope ilk="function" line="964" lineend="970" name="path" signature="path" />
          <scope ilk="function" line="972" lineend="974" name="description" signature="description" />
          <scope ilk="function" line="976" lineend="978" name="visibility" signature="visibility" />
          <scope ilk="function" line="980" lineend="982" name="singleton" signature="singleton" />
          <scope ilk="function" line="984" lineend="991" name="call_seq" signature="call_seq" />
          <scope ilk="function" line="993" lineend="1017" name="params" signature="params" />
          <scope ilk="function" line="1019" lineend="1035" name="create_source_code_file" signature="create_source_code_file(code_body)" />
          <scope attributes="__classmethod__" ilk="function" line="1037" lineend="1039" name="all_methods" signature="HtmlMethod.all_methods" />
          <scope ilk="function" line="1041" lineend="1043" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
          <scope doc="Given a sequence of source tokens, mark up the source code&#xA;to make it look purty." ilk="function" line="1050" lineend="1082" name="markup_code" signature="markup_code(tokens)" />
          <scope doc="we rely on the fact that the first line of a source code&#xA;listing has # File xxxxx, line dddd" ilk="function" line="1088" lineend="1102" name="add_line_numbers" signature="add_line_numbers(src)" />
          <scope ilk="function" line="1104" lineend="1106" name="document_self" signature="document_self" />
          <scope ilk="function" line="1108" lineend="1110" name="aliases" signature="aliases" />
          <scope ilk="function" line="1112" lineend="1118" name="find_symbol" signature="find_symbol(symbol, method=nil)" />
          <import symbol="MarkUp" />
        </scope>
        <scope classrefs="Object" ilk="class" line="1123" lineend="1385" name="HTMLGenerator">
          <scope attributes="__classmethod__" doc="convert a target url to one that is relative to a given path" ilk="function" line="1131" lineend="1147" name="gen_url" signature="HTMLGenerator.gen_url(path, target)" />
          <scope attributes="__classmethod__" doc="Generators may need to return specific subclasses depending&#xA;on the options they are passed." ilk="function" line="1153" lineend="1162" name="for" signature="HTMLGenerator.for(options)" />
          <scope classrefs="Object" ilk="class" line="1164" lineend="1166" name="self" />
          <scope attributes="__ctor__" doc="Set up a new HTML generator." ilk="function" line="1171" lineend="1174" name="initialize" signature="initialize(options)" />
          <scope doc="Build the initial indices and output objects based on an&#xA;array of TopLevel objects containing the extracted&#xA;information." ilk="function" line="1182" lineend="1191" name="generate" signature="generate(toplevels)" />
          <scope doc="Load up the HTML template specified in the options." ilk="function" line="1199" lineend="1210" name="load_html_template" signature="load_html_template" />
          <scope doc="Write out the style sheet used by the main frames" ilk="function" line="1216" lineend="1224" name="write_style_sheet" signature="write_style_sheet" />
          <scope doc="See the comments at the top for a description of the&#xA;directory structure" ilk="function" line="1230" lineend="1235" name="gen_sub_directories" signature="gen_sub_directories" />
          <scope doc="Generate:" ilk="function" line="1246" lineend="1255" name="build_indices" signature="build_indices" />
          <scope ilk="function" line="1257" lineend="1262" name="build_class_list" signature="build_class_list(from, html_file, class_dir)" />
          <scope doc="Generate all the HTML" ilk="function" line="1267" lineend="1279" name="generate_html" signature="generate_html" />
          <scope ilk="function" line="1281" lineend="1290" name="gen_into" signature="gen_into(list)" />
          <scope ilk="function" line="1292" lineend="1296" name="gen_file_index" signature="gen_file_index" />
          <scope ilk="function" line="1298" lineend="1302" name="gen_class_index" signature="gen_class_index" />
          <scope ilk="function" line="1304" lineend="1308" name="gen_method_index" signature="gen_method_index" />
          <scope ilk="function" line="1311" lineend="1331" name="gen_an_index" signature="gen_an_index(collection, title, template, filename)" />
          <scope doc="The main index page is mostly a template frameset, but&#xA;includes the initial page." ilk="function" line="1338" lineend="1351" name="gen_main_index" signature="gen_main_index" />
          <scope doc="return the url of the main page" ilk="function" line="1354" lineend="1382" name="main_url" signature="main_url" />
          <import symbol="MarkUp" />
        </scope>
        <scope classrefs="HTMLGenerator" ilk="class" line="1391" lineend="1501" name="HTMLGeneratorInOne">
          <scope attributes="__ctor__" ilk="function" line="1393" lineend="1395" name="initialize" signature="initialize(*args)" />
          <scope doc="Build the initial indices and output objects based on an&#xA;array of TopLevel objects containing the extracted&#xA;information." ilk="function" line="1402" lineend="1410" name="generate" signature="generate(info)" />
          <scope doc="Generate:" ilk="function" line="1422" lineend="1431" name="build_indices" signature="build_indices" />
          <scope ilk="function" line="1433" lineend="1438" name="build_class_list" signature="build_class_list(from, html_file, class_dir)" />
          <scope doc="Generate all the HTML." ilk="function" line="1444" lineend="1463" name="generate_xml" signature="generate_xml" />
          <scope ilk="function" line="1465" lineend="1471" name="gen_into" signature="gen_into(list)" />
          <scope ilk="function" line="1473" lineend="1475" name="gen_file_index" signature="gen_file_index" />
          <scope ilk="function" line="1477" lineend="1479" name="gen_class_index" signature="gen_class_index" />
          <scope ilk="function" line="1481" lineend="1483" name="gen_method_index" signature="gen_method_index" />
          <scope ilk="function" line="1486" lineend="1499" name="gen_an_index" signature="gen_an_index(collection, title)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/generators/chm_generator">
      <import line="1" module="rdoc/generators/html_generator" symbol="*" />
      <scope ilk="namespace" line="3" lineend="112" name="Generators">
        <scope classrefs="HTMLGenerator" ilk="class" line="5" lineend="109" name="CHMGenerator">
          <scope attributes="__classmethod__" doc="Standard generator factory" ilk="function" line="10" lineend="12" name="for" signature="CHMGenerator.for(options)" />
          <scope attributes="__ctor__" ilk="function" line="15" lineend="19" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="21" lineend="33" name="check_for_html_help_workshop" signature="check_for_html_help_workshop" />
          <scope doc="Generate the html as normal, then wrap it in a help project" ilk="function" line="37" lineend="41" name="generate" signature="generate(info)" />
          <scope doc="The project contains the project file, a table of contents&#xA;and an index" ilk="function" line="45" lineend="49" name="create_help_project" signature="create_help_project" />
          <scope doc="The project file links together all the various files that&#xA;go to make up the help." ilk="function" line="54" lineend="67" name="create_project_file" signature="create_project_file" />
          <scope doc="The contents is a list of all files and modules." ilk="function" line="74" lineend="102" name="create_contents_and_index" signature="create_contents_and_index" />
          <scope doc="Invoke the windows help compiler to compiler the project" ilk="function" line="105" lineend="107" name="compile_project" signature="compile_project" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/dot/dot">
      <scope ilk="namespace" line="1" lineend="252" name="DOT">
        <scope doc="if we don&apos;t like 4 spaces, we can change it any time" ilk="function" line="8" lineend="11" name="change_tab" signature="change_tab( t )" />
        <scope classrefs="Object" doc="a root class for any element in dot notation" ilk="class" line="80" lineend="90" name="DOTSimpleElement">
          <scope ilk="function" line="81" lineend="81" name="name" />
          <scope ilk="function" line="81" lineend="81" name="name=" />
          <scope attributes="__ctor__" ilk="function" line="83" lineend="85" name="initialize" signature="initialize( params = {} )" />
          <scope ilk="function" line="87" lineend="89" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="DOTSimpleElement" doc="an element that has options ( node, edge or graph )" ilk="class" line="93" lineend="120" name="DOTElement">
          <scope ilk="function" line="95" lineend="95" name="name" />
          <scope ilk="function" line="95" lineend="95" name="name=" />
          <scope ilk="function" line="95" lineend="95" name="options" />
          <scope ilk="function" line="95" lineend="95" name="options=" />
          <scope attributes="__ctor__" doc="attr_reader :parent" ilk="function" line="97" lineend="106" name="initialize" signature="initialize( params = {}, option_list = [] )" />
          <scope ilk="function" line="108" lineend="110" name="each_option" signature="each_option" />
          <scope ilk="function" line="112" lineend="114" name="each_option_pair" signature="each_option_pair" />
        </scope>
        <scope classrefs="DOTSimpleElement" doc="this is used when we build nodes that have shape=record&#xA;ports don&apos;t have options :)" ilk="class" line="125" lineend="135" name="DOTPort">
          <scope ilk="function" line="126" lineend="126" name="label" />
          <scope ilk="function" line="126" lineend="126" name="label=" />
          <scope attributes="__ctor__" ilk="function" line="128" lineend="131" name="initialize" signature="initialize( params = {} )" />
          <scope ilk="function" line="132" lineend="134" name="to_s" signature="to_s ( @name" />
        </scope>
        <scope classrefs="DOTElement" doc="node element" ilk="class" line="138" lineend="182" name="DOTNode">
          <scope attributes="__ctor__" ilk="function" line="140" lineend="143" name="initialize" signature="initialize( params = {}, option_list = NODE_OPTS )" />
          <scope ilk="function" line="145" lineend="147" name="each_port" signature="each_port" />
          <scope ilk="function" line="149" lineend="151" name="&lt;&lt;" signature="&lt;&lt; ( thing" />
          <scope ilk="function" line="153" lineend="155" name="push" signature="push ( thing )" />
          <scope ilk="function" line="157" lineend="159" name="pop" signature="pop" />
          <scope ilk="function" line="161" lineend="181" name="to_s" signature="to_s( t = &apos;&apos; )" />
        </scope>
        <scope classrefs="DOTElement" doc="subgraph element is the same to graph, but has another&#xA;header in dot notation" ilk="class" line="186" lineend="224" name="DOTSubgraph">
          <scope attributes="__ctor__" ilk="function" line="188" lineend="192" name="initialize" signature="initialize( params = {}, option_list = GRAPH_OPTS )" />
          <scope ilk="function" line="194" lineend="196" name="each_node" signature="each_node" />
          <scope ilk="function" line="198" lineend="200" name="&lt;&lt;" signature="&lt;&lt; ( thing" />
          <scope ilk="function" line="202" lineend="204" name="push" signature="push( thing )" />
          <scope ilk="function" line="206" lineend="208" name="pop" signature="pop" />
          <scope ilk="function" line="210" lineend="223" name="to_s" signature="to_s( t = &apos;&apos; )" />
        </scope>
        <scope classrefs="DOTSubgraph" doc="this is graph" ilk="class" line="227" lineend="232" name="DOTDigraph">
          <scope attributes="__ctor__" ilk="function" line="228" lineend="231" name="initialize" signature="initialize( params = {}, option_list = GRAPH_OPTS )" />
        </scope>
        <scope classrefs="DOTElement" doc="this is edge" ilk="class" line="235" lineend="251" name="DOTEdge">
          <scope ilk="function" line="236" lineend="236" name="from" />
          <scope ilk="function" line="236" lineend="236" name="from=" />
          <scope ilk="function" line="236" lineend="236" name="to" />
          <scope ilk="function" line="236" lineend="236" name="to=" />
          <scope attributes="__ctor__" ilk="function" line="237" lineend="241" name="initialize" signature="initialize( params = {}, option_list = EDGE_OPTS )" />
          <scope ilk="function" line="243" lineend="250" name="to_s" signature="to_s( t = &apos;&apos; )" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/diagram">
      <import line="7" module="rdoc/dot/dot" symbol="*" />
      <import line="8" module="rdoc/options" symbol="*" />
      <scope doc="A wonderful hack by to draw package diagrams using the dot&#xA;package." ilk="namespace" line="10" lineend="333" name="RDoc">
        <scope classrefs="Object" doc="Draw a set of diagrams representing the modules and classes&#xA;in the system." ilk="class" line="27" lineend="332" name="Diagram">
          <scope attributes="__ctor__" doc="Pass in the set of top level objects." ilk="function" line="36" lineend="41" name="initialize" signature="initialize(info, options)" />
          <scope doc="Draw the diagrams." ilk="function" line="47" lineend="103" name="draw" signature="draw" />
          <scope ilk="function" line="109" lineend="112" name="find_names" signature="find_names(mod)" />
          <scope ilk="function" line="114" lineend="125" name="find_full_name" signature="find_full_name(name, mod)" />
          <scope ilk="function" line="127" lineend="168" name="draw_module" signature="draw_module(mod, graph, toplevel = false, file = nil)" />
          <scope ilk="function" line="170" lineend="281" name="add_classes" signature="add_classes(container, graph, file = nil )" />
          <scope ilk="function" line="283" lineend="304" name="convert_to_png" signature="convert_to_png(file_base, graph, name)" />
          <scope doc="Extract the client-side image map from dot, and use it to&#xA;generate the imagemap proper." ilk="function" line="311" lineend="331" name="wrap_in_image_map" signature="wrap_in_image_map(src, dot, name)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rdoc/code_objects">
      <import line="4" module="rdoc/tokenstream" symbol="*" />
      <scope doc="We represent the various high-level code constructs that&#xA;appear in Ruby programs: classes, modules, methods, and so&#xA;on." ilk="namespace" line="6" lineend="765" name="RDoc">
        <scope classrefs="Object" doc="We contain the common stuff for contexts (which are&#xA;containers) and other elements (methods, attributes and so&#xA;on)" ilk="class" line="12" lineend="108" name="CodeObject">
          <scope ilk="function" line="14" lineend="14" name="parent" />
          <scope ilk="function" line="14" lineend="14" name="parent=" />
          <scope ilk="function" line="20" lineend="20" name="viewer" />
          <scope ilk="function" line="20" lineend="20" name="viewer=" />
          <scope ilk="function" line="24" lineend="24" name="done_documenting" />
          <scope ilk="function" line="24" lineend="24" name="done_documenting=" />
          <scope ilk="function" line="28" lineend="28" name="section" />
          <scope ilk="function" line="28" lineend="28" name="section=" />
          <scope ilk="function" line="32" lineend="32" name="document_self" />
          <scope doc="do we document ourselves?" ilk="function" line="34" lineend="39" name="document_self=" signature="document_self=(val)" />
          <scope doc="set and cleared by :startdoc: and :enddoc:, this is used to&#xA;toggle the capturing of documentation" ilk="function" line="43" lineend="46" name="start_doc" signature="start_doc" />
          <scope ilk="function" line="48" lineend="51" name="stop_doc" signature="stop_doc" />
          <scope ilk="function" line="55" lineend="55" name="document_children" />
          <scope doc="do we document ourselves and our children" ilk="function" line="57" lineend="62" name="document_children=" signature="document_children=(val)" />
          <scope ilk="function" line="65" lineend="65" name="force_documentation" />
          <scope ilk="function" line="65" lineend="65" name="force_documentation=" />
          <scope doc="Default callbacks to nothing, but this is overridden for&#xA;classes and modules" ilk="function" line="69" lineend="70" name="remove_classes_and_modules" signature="remove_classes_and_modules" />
          <scope ilk="function" line="72" lineend="73" name="remove_methods_etc" signature="remove_methods_etc" />
          <scope attributes="__ctor__" ilk="function" line="75" lineend="80" name="initialize" signature="initialize" />
          <scope ilk="function" line="83" lineend="83" name="comment" />
          <scope doc="Update the comment, but don&apos;t overwrite a real comment with&#xA;an empty one" ilk="function" line="87" lineend="89" name="comment=" signature="comment=(comment)" />
          <scope attributes="__classmethod__" doc="There&apos;s a wee trick we pull." ilk="function" line="97" lineend="106" name="attr_overridable" signature="CodeObject.attr_overridable(name, *aliases)" />
        </scope>
        <scope classrefs="CodeObject" doc="A Context is something that can hold modules, classes,&#xA;methods, attributes, aliases, requires, and includes." ilk="class" line="114" lineend="458" name="Context">
          <scope ilk="function" line="115" lineend="115" name="name" />
          <scope ilk="function" line="115" lineend="115" name="method_list" />
          <scope ilk="function" line="115" lineend="115" name="attributes" />
          <scope ilk="function" line="115" lineend="115" name="aliases" />
          <scope ilk="function" line="115" lineend="115" name="constants" />
          <scope ilk="function" line="116" lineend="116" name="requires" />
          <scope ilk="function" line="116" lineend="116" name="includes" />
          <scope ilk="function" line="116" lineend="116" name="in_files" />
          <scope ilk="function" line="116" lineend="116" name="visibility" />
          <scope ilk="function" line="118" lineend="118" name="sections" />
          <scope classrefs="Object" ilk="class" line="120" lineend="160" name="Section">
            <scope ilk="function" line="121" lineend="121" name="title" />
            <scope ilk="function" line="121" lineend="121" name="comment" />
            <scope ilk="function" line="121" lineend="121" name="sequence" />
            <scope attributes="__ctor__" ilk="function" line="125" lineend="130" name="initialize" signature="initialize(title, comment)" />
            <scope doc="Set the comment for this section from the original comment&#xA;block If the first line contains :section:, strip it and use&#xA;the rest." ilk="function" line="144" lineend="159" name="set_comment" signature="set_comment(comment)" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="163" lineend="178" name="initialize" signature="initialize" />
          <scope doc="map the class hash to an array externally" ilk="function" line="181" lineend="183" name="classes" signature="classes" />
          <scope doc="map the module hash to an array externally" ilk="function" line="186" lineend="188" name="modules" signature="modules" />
          <scope doc="Change the default visibility for new methods" ilk="function" line="191" lineend="193" name="ongoing_visibility=" signature="ongoing_visibility=(vis)" />
          <scope doc="Given an array +methods+ of method names, set the visibility&#xA;of the corresponding AnyMethod object" ilk="function" line="198" lineend="217" name="set_visibility_for" signature="set_visibility_for(methods, vis, singleton=false)" />
          <scope doc="Record the file that we happen to find it in" ilk="function" line="220" lineend="222" name="record_location" signature="record_location(toplevel)" />
          <scope doc="Return true if at least part of this thing was defined in&#xA;+file+" ilk="function" line="225" lineend="227" name="defined_in?" signature="defined_in?(file)" />
          <scope ilk="function" line="229" lineend="231" name="add_class" signature="add_class(class_type, name, superclass)" />
          <scope ilk="function" line="233" lineend="235" name="add_module" signature="add_module(class_type, name)" />
          <scope ilk="function" line="237" lineend="241" name="add_method" signature="add_method(a_method)" />
          <scope ilk="function" line="243" lineend="245" name="add_attribute" signature="add_attribute(an_attribute)" />
          <scope ilk="function" line="247" lineend="260" name="add_alias" signature="add_alias(an_alias)" />
          <scope ilk="function" line="262" lineend="264" name="add_include" signature="add_include(an_include)" />
          <scope ilk="function" line="266" lineend="268" name="add_constant" signature="add_constant(const)" />
          <scope doc="Requires always get added to the top-level (file) context" ilk="function" line="271" lineend="277" name="add_require" signature="add_require(a_require)" />
          <scope ilk="function" line="279" lineend="292" name="add_class_or_module" signature="add_class_or_module(collection, class_type, name, superclass=nil)" />
          <scope ilk="function" line="294" lineend="298" name="add_to" signature="add_to(array, thing)" />
          <scope doc="If a class&apos;s documentation is turned off after we&apos;ve started&#xA;collecting methods etc., we need to remove the ones we have" ilk="function" line="304" lineend="306" name="remove_methods_etc" signature="remove_methods_etc" />
          <scope ilk="function" line="308" lineend="315" name="initialize_methods_etc" signature="initialize_methods_etc" />
          <scope doc="and remove classes and modules when we see a :nodoc: all" ilk="function" line="318" lineend="320" name="remove_classes_and_modules" signature="remove_classes_and_modules" />
          <scope ilk="function" line="322" lineend="325" name="initialize_classes_and_modules" signature="initialize_classes_and_modules" />
          <scope doc="Find a named module" ilk="function" line="328" lineend="333" name="find_module_named" signature="find_module_named(name)" />
          <scope doc="find a module at a higher scope" ilk="function" line="336" lineend="338" name="find_enclosing_module_named" signature="find_enclosing_module_named(name)" />
          <scope doc="Iterate over all the classes and modules in this object" ilk="function" line="343" lineend="346" name="each_classmodule" signature="each_classmodule" />
          <scope ilk="function" line="348" lineend="350" name="each_method" signature="each_method" />
          <scope ilk="function" line="352" lineend="354" name="each_attribute" signature="each_attribute" />
          <scope ilk="function" line="356" lineend="358" name="each_constant" signature="each_constant" />
          <scope doc="Return the toplevel that owns us" ilk="function" line="362" lineend="367" name="toplevel" signature="toplevel" />
          <scope doc="allow us to sort modules by name" ilk="function" line="370" lineend="372" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
          <scope doc="Look up the given symbol." ilk="function" line="377" lineend="420" name="find_symbol" signature="find_symbol(symbol, method=nil)" />
          <scope ilk="function" line="422" lineend="427" name="find_local_symbol" signature="find_local_symbol(symbol)" />
          <scope doc="Handle sections" ilk="function" line="431" lineend="434" name="set_current_section" signature="set_current_section(title, comment)" />
          <scope doc="Find a named method, or return nil" ilk="function" line="439" lineend="441" name="find_method_named" signature="find_method_named(name)" />
          <scope doc="Find a named instance method, or return nil" ilk="function" line="444" lineend="446" name="find_instance_method_named" signature="find_instance_method_named(name)" />
          <scope doc="Find a named constant, or return nil" ilk="function" line="449" lineend="451" name="find_constant_named" signature="find_constant_named(name)" />
          <scope doc="Find a named attribute, or return nil" ilk="function" line="454" lineend="456" name="find_attribute_named" signature="find_attribute_named(name)" />
        </scope>
        <scope classrefs="Context" doc="A TopLevel context is a source file" ilk="class" line="463" lineend="546" name="TopLevel">
          <scope ilk="function" line="464" lineend="464" name="file_stat" />
          <scope ilk="function" line="464" lineend="464" name="file_stat=" />
          <scope ilk="function" line="465" lineend="465" name="file_relative_name" />
          <scope ilk="function" line="465" lineend="465" name="file_relative_name=" />
          <scope ilk="function" line="466" lineend="466" name="file_absolute_name" />
          <scope ilk="function" line="466" lineend="466" name="file_absolute_name=" />
          <scope ilk="function" line="467" lineend="467" name="diagram" />
          <scope ilk="function" line="467" lineend="467" name="diagram=" />
          <scope attributes="__classmethod__" ilk="function" line="472" lineend="475" name="reset" signature="TopLevel::reset" />
          <scope attributes="__ctor__" ilk="function" line="477" lineend="484" name="initialize" signature="initialize(file_name)" />
          <scope ilk="function" line="486" lineend="488" name="full_name" signature="full_name" />
          <scope doc="Adding a class or module to a TopLevel is special, as we&#xA;only want one copy of a particular top-level class." ilk="function" line="496" lineend="516" name="add_class_or_module" signature="add_class_or_module(collection, class_type, name, superclass)" />
          <scope attributes="__classmethod__" ilk="function" line="518" lineend="520" name="all_classes_and_modules" signature="TopLevel.all_classes_and_modules" />
          <scope attributes="__classmethod__" ilk="function" line="522" lineend="528" name="find_class_named" signature="TopLevel.find_class_named(name)" />
          <scope ilk="function" line="530" lineend="532" name="find_local_symbol" signature="find_local_symbol(symbol)" />
          <scope ilk="function" line="534" lineend="538" name="find_class_or_module_named" signature="find_class_or_module_named(symbol)" />
          <scope doc="Find a named module" ilk="function" line="541" lineend="543" name="find_module_named" signature="find_module_named(name)" />
        </scope>
        <scope classrefs="Context" doc="ClassModule is the base class for objects representing&#xA;either a class or a module." ilk="class" line="551" lineend="596" name="ClassModule">
          <scope ilk="function" line="553" lineend="553" name="superclass" />
          <scope ilk="function" line="554" lineend="554" name="diagram" />
          <scope ilk="function" line="554" lineend="554" name="diagram=" />
          <scope attributes="__ctor__" ilk="function" line="556" lineend="562" name="initialize" signature="initialize(name, superclass = nil)" />
          <scope doc="Return the fully qualified name of this class or module" ilk="function" line="565" lineend="571" name="full_name" signature="full_name" />
          <scope ilk="function" line="573" lineend="576" name="http_url" signature="http_url(prefix)" />
          <scope doc="Return +true+ if this object represents a module" ilk="function" line="579" lineend="581" name="is_module?" signature="is_module?" />
          <scope doc="to_s is simply for debugging" ilk="function" line="584" lineend="589" name="to_s" signature="to_s" />
          <scope ilk="function" line="591" lineend="595" name="find_class_named" signature="find_class_named(name)" />
        </scope>
        <scope classrefs="ClassModule" doc="Anonymous classes" ilk="class" line="599" lineend="600" name="AnonClass" />
        <scope classrefs="ClassModule" doc="Normal classes" ilk="class" line="603" lineend="604" name="NormalClass" />
        <scope classrefs="ClassModule" doc="Singleton classes" ilk="class" line="607" lineend="608" name="SingleClass" />
        <scope classrefs="ClassModule" doc="Module" ilk="class" line="611" lineend="615" name="NormalModule">
          <scope ilk="function" line="612" lineend="614" name="is_module?" signature="is_module?" />
        </scope>
        <scope classrefs="CodeObject" doc="AnyMethod is the base class for objects representing methods" ilk="class" line="620" lineend="685" name="AnyMethod">
          <scope ilk="function" line="621" lineend="621" name="name" />
          <scope ilk="function" line="621" lineend="621" name="name=" />
          <scope ilk="function" line="622" lineend="622" name="visibility" />
          <scope ilk="function" line="622" lineend="622" name="visibility=" />
          <scope ilk="function" line="623" lineend="623" name="block_params" />
          <scope ilk="function" line="623" lineend="623" name="block_params=" />
          <scope ilk="function" line="624" lineend="624" name="dont_rename_initialize" />
          <scope ilk="function" line="624" lineend="624" name="dont_rename_initialize=" />
          <scope ilk="function" line="625" lineend="625" name="singleton" />
          <scope ilk="function" line="625" lineend="625" name="singleton=" />
          <scope ilk="function" line="626" lineend="626" name="aliases" />
          <scope ilk="function" line="627" lineend="627" name="is_alias_for" />
          <scope ilk="function" line="627" lineend="627" name="is_alias_for=" />
          <scope ilk="function" line="631" lineend="631" name="call_seq" />
          <scope ilk="function" line="631" lineend="631" name="call_seq=" />
          <scope attributes="__ctor__" doc="or a method we&apos;re aliasing" ilk="function" line="636" lineend="648" name="initialize" signature="initialize(text, name)" />
          <scope ilk="function" line="650" lineend="652" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
          <scope ilk="function" line="654" lineend="658" name="to_s" signature="to_s" />
          <scope ilk="function" line="660" lineend="680" name="param_seq" signature="param_seq" />
          <scope ilk="function" line="682" lineend="684" name="add_alias" signature="add_alias(method)" />
          <import symbol="TokenStream" />
        </scope>
        <scope classrefs="CodeObject" doc="Represent an alias, which is an old_name/ new_name pair&#xA;associated with a particular context" ilk="class" line="690" lineend="704" name="Alias">
          <scope ilk="function" line="691" lineend="691" name="text" />
          <scope ilk="function" line="691" lineend="691" name="text=" />
          <scope ilk="function" line="691" lineend="691" name="old_name" />
          <scope ilk="function" line="691" lineend="691" name="old_name=" />
          <scope ilk="function" line="691" lineend="691" name="new_name" />
          <scope ilk="function" line="691" lineend="691" name="new_name=" />
          <scope ilk="function" line="691" lineend="691" name="comment" />
          <scope ilk="function" line="691" lineend="691" name="comment=" />
          <scope attributes="__ctor__" ilk="function" line="693" lineend="699" name="initialize" signature="initialize(text, old_name, new_name, comment)" />
          <scope ilk="function" line="701" lineend="703" name="to_s" signature="to_s" />
        </scope>
        <scope classrefs="CodeObject" doc="Represent a constant" ilk="class" line="707" lineend="716" name="Constant">
          <scope ilk="function" line="708" lineend="708" name="name" />
          <scope ilk="function" line="708" lineend="708" name="name=" />
          <scope ilk="function" line="708" lineend="708" name="value" />
          <scope ilk="function" line="708" lineend="708" name="value=" />
          <scope attributes="__ctor__" ilk="function" line="710" lineend="715" name="initialize" signature="initialize(name, value, comment)" />
        </scope>
        <scope classrefs="CodeObject" doc="Represent attributes" ilk="class" line="719" lineend="738" name="Attr">
          <scope ilk="function" line="720" lineend="720" name="text" />
          <scope ilk="function" line="720" lineend="720" name="text=" />
          <scope ilk="function" line="720" lineend="720" name="name" />
          <scope ilk="function" line="720" lineend="720" name="name=" />
          <scope ilk="function" line="720" lineend="720" name="rw" />
          <scope ilk="function" line="720" lineend="720" name="rw=" />
          <scope ilk="function" line="720" lineend="720" name="visibility" />
          <scope ilk="function" line="720" lineend="720" name="visibility=" />
          <scope attributes="__ctor__" ilk="function" line="722" lineend="729" name="initialize" signature="initialize(text, name, rw, comment)" />
          <scope ilk="function" line="731" lineend="733" name="to_s" signature="to_s" />
          <scope ilk="function" line="735" lineend="737" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
        </scope>
        <scope classrefs="CodeObject" doc="a required file" ilk="class" line="742" lineend="751" name="Require">
          <scope ilk="function" line="743" lineend="743" name="name" />
          <scope ilk="function" line="743" lineend="743" name="name=" />
          <scope attributes="__ctor__" ilk="function" line="745" lineend="749" name="initialize" signature="initialize(name, comment)" />
        </scope>
        <scope classrefs="CodeObject" doc="an included module" ilk="class" line="754" lineend="763" name="Include">
          <scope ilk="function" line="755" lineend="755" name="name" />
          <scope ilk="function" line="755" lineend="755" name="name=" />
          <scope attributes="__ctor__" ilk="function" line="757" lineend="761" name="initialize" signature="initialize(name, comment)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="rational">
      <scope classrefs="Numeric" doc="Rational implements a rational class for numbers." ilk="class" name="Rational">
        <scope attributes="__classmethod__ __ctor__" doc="This method is actually private." ilk="function" name="new" signature="(num, den)" />
        <scope attributes="__classmethod__" doc="Implements the constructor. This method does not reduce to&#xA;lowest terms or check for division by zero." ilk="function" name="new!" signature="(num, den = 1)" />
        <scope attributes="__classmethod__" doc="Reduces the given numerator and denominator to their lowest&#xA;terms. Use Rational() instead." ilk="function" name="reduce" signature="(num, den = 1)" />
        <scope doc="Returns the remainder when this value is divided by other." ilk="function" name="%" signature="(other)" />
        <scope doc="Returns the product of this value and a." ilk="function" name="*" signature="(a)" />
        <scope doc="Returns this value raised to the given power." ilk="function" name="**" signature="(other)" />
        <scope doc="Returns the addition of this value and a." ilk="function" name="+" signature="(a)" />
        <scope doc="Returns the quotient of this value and a." ilk="function" name="/" signature="(a)" />
        <scope doc="Standard comparison operator." ilk="function" name="&lt;=&gt;" signature="(other)" />
        <scope doc="Returns true iff this value is numerically equal to other." ilk="function" name="==" signature="(other)" />
        <scope doc="Returns the absolute value." ilk="function" name="abs" signature="()" />
        <scope ilk="function" name="coerce" signature="(other)" />
        <scope ilk="function" name="denominator" />
        <scope doc="Returns the quotient `and&apos; remainder." ilk="function" name="divmod" signature="(other)" />
        <scope doc="Returns a hash code for the object." ilk="function" name="hash" signature="()" />
        <scope doc="Returns a reconstructable string representation:" ilk="function" name="inspect" signature="()" />
        <scope ilk="function" name="numerator" />
        <scope doc="Converts the rational to a Float." ilk="function" name="to_f" signature="()" />
        <scope doc="Converts the rational to an Integer. Not the `nearest&apos;&#xA;integer, the truncated integer." ilk="function" name="to_i" signature="()" />
        <scope doc="Returns self." ilk="function" name="to_r" signature="()" />
        <scope doc="Returns a string representation of the rational number." ilk="function" name="to_s" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="racc/parser">
      <scope doc="parser.rb" ilk="namespace" line="20" lineend="22" name="Racc">
        <scope classrefs="StandardError" ilk="class" line="21" lineend="21" name="ParseError" />
      </scope>
      <scope ilk="namespace" line="28" lineend="456" name="Racc">
        <scope classrefs="Object" ilk="class" line="34" lineend="454" name="Parser">
          <import line="42" module="racc/cparse" symbol="*" />
          <scope attributes="__classmethod__" doc="Racc_Runtime_Core_Version_C  = (defined in extension)" ilk="function" line="65" lineend="67" name="racc_runtime_type" signature="Parser.racc_runtime_type" />
          <scope ilk="function" line="71" lineend="81" name="_racc_setup" signature="_racc_setup" />
          <scope ilk="function" line="83" lineend="95" name="_racc_init_sysvars" signature="_racc_init_sysvars" />
          <scope doc="do_parse" ilk="function" line="101" lineend="103" name="do_parse" signature="do_parse" />
          <scope ilk="function" line="105" lineend="107" name="next_token" signature="next_token" />
          <scope ilk="function" line="109" lineend="148" name="_racc_do_parse_rb" signature="_racc_do_parse_rb( arg, in_debug )" />
          <scope doc="yyparse" ilk="function" line="154" lineend="156" name="yyparse" signature="yyparse( recv, mid )" />
          <scope ilk="function" line="158" lineend="219" name="_racc_yyparse_rb" signature="_racc_yyparse_rb( recv, mid, arg, c_debug )" />
          <scope doc="common" ilk="function" line="225" lineend="320" name="_racc_evalact" signature="_racc_evalact( act, arg )" />
          <scope ilk="function" line="322" lineend="361" name="_racc_do_reduce" signature="_racc_do_reduce( arg, act )" />
          <scope ilk="function" line="363" lineend="366" name="on_error" signature="on_error( t, val, vstack )" />
          <scope ilk="function" line="368" lineend="370" name="yyerror" signature="yyerror" />
          <scope ilk="function" line="372" lineend="374" name="yyaccept" signature="yyaccept" />
          <scope ilk="function" line="376" lineend="378" name="yyerrok" signature="yyerrok" />
          <scope doc="for debugging output" ilk="function" line="384" lineend="389" name="racc_read_token" signature="racc_read_token( t, tok, val )" />
          <scope ilk="function" line="391" lineend="395" name="racc_shift" signature="racc_shift( tok, tstack, vstack )" />
          <scope ilk="function" line="397" lineend="409" name="racc_reduce" signature="racc_reduce( toks, sim, tstack, vstack )" />
          <scope ilk="function" line="411" lineend="414" name="racc_accept" signature="racc_accept" />
          <scope ilk="function" line="416" lineend="421" name="racc_e_pop" signature="racc_e_pop( state, tstack, vstack )" />
          <scope ilk="function" line="423" lineend="427" name="racc_next_state" signature="racc_next_state( curstate, state )" />
          <scope ilk="function" line="429" lineend="436" name="racc_print_stacks" signature="racc_print_stacks( t, v )" />
          <scope ilk="function" line="438" lineend="443" name="racc_print_states" signature="racc_print_states( s )" />
          <scope ilk="function" line="445" lineend="448" name="racc_token2str" signature="racc_token2str( tok )" />
          <scope ilk="function" line="450" lineend="452" name="token_to_str" signature="token_to_str( t )" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="pstore">
      <scope classrefs="Object" doc="PStore implements a file based persistance mechanism based&#xA;on a Hash. User code can store hierarchies of Ruby objects&#xA;(values) into the data store file by name (keys)." ilk="class" name="PStore">
        <scope classrefs="StandardError" doc="The error type thrown by all PStore methods." ilk="class" name="Error" />
        <scope attributes="__classmethod__ __ctor__" doc="To construct a PStore object, pass in the `file&apos; path where&#xA;you would like the data to be stored." ilk="function" name="new" signature="(file)" />
        <scope doc="Retrieves a value from the PStore file data, by `name&apos;. The&#xA;hierarchy of Ruby objects stored under that root `name&apos; will&#xA;be returned." ilk="function" name="[]" signature="(name)" />
        <scope doc="Stores an individual Ruby object or a hierarchy of Ruby&#xA;objects in the data store file under the root `name&apos;.&#xA;Assigning to a `name&apos; already in the data store clobbers the&#xA;old data." ilk="function" name="[]=" signature="(name, value)" />
        <scope doc="Ends the current PStore#transaction, discarding any changes&#xA;to the data store." ilk="function" name="abort" signature="()" />
        <scope doc="Ends the current PStore#transaction, committing any changes&#xA;to the data store immediately." ilk="function" name="commit" signature="()" />
        <scope attributes="private" doc="Commits changes to the data store file." ilk="function" name="commit_new" signature="(f)" />
        <scope doc="Removes an object hierarchy from the data store, by `name&apos;." ilk="function" name="delete" signature="(name)" />
        <scope doc="This method is just like PStore#[], save that you may also&#xA;provide a `default&apos; value for the object. In the event the&#xA;specified `name&apos; is not found in the data store, your&#xA;`default&apos; will be returned instead." ilk="function" name="fetch" signature="(name, default=PStore::Error)" />
        <scope attributes="private" doc="Raises PStore::Error if the calling code is not in a&#xA;PStore#transaction." ilk="function" name="in_transaction" signature="()" />
        <scope attributes="private" doc="Raises PStore::Error if the calling code is not in a&#xA;PStore#transaction or if the code is in a read-only&#xA;PStore#transaction." ilk="function" name="in_transaction_wr" signature="()" />
        <scope doc="Returns the path to the data store file." ilk="function" name="path" signature="()" />
        <scope doc="Returns true if the supplied `name&apos; is currently in the data&#xA;store." ilk="function" name="root?" signature="(name)" />
        <scope doc="Returns the names of all object hierarchies currently in the&#xA;store." ilk="function" name="roots" signature="()" />
        <scope doc="Opens a new transaction for the data store. Code executed&#xA;inside a block passed to this method may read and write data&#xA;to and from the data store file." ilk="function" name="transaction" signature="(read_only=false) {|pstore| ...}" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="profiler">
      <scope ilk="namespace" line="1" lineend="59" name="Profiler__">
        <scope doc="internal values" ilk="function" line="23" lineend="28" name="start_profile" signature="start_profile" />
        <scope ilk="function" line="29" lineend="31" name="stop_profile" signature="stop_profile" />
        <scope ilk="function" line="32" lineend="48" name="print_profile" signature="print_profile(f)" />
        <scope ilk="function" line="49" lineend="57" name="get_name" signature="get_name(klass, id)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="profile">
      <import line="1" module="profiler" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="prettyprint">
      <import line="400" module="test/unit" symbol="*" />
      <scope classrefs="Object" doc="$Id$" ilk="class" line="128" lineend="397" name="PrettyPrint">
        <scope attributes="__classmethod__" ilk="function" line="129" lineend="134" name="format" signature="PrettyPrint.format(output=&apos;&apos;, maxwidth=79, newline=&quot;\n&quot;, genspace=lambda {|n| &apos; &apos; * n})" />
        <scope attributes="__classmethod__" ilk="function" line="136" lineend="140" name="singleline_format" signature="PrettyPrint.singleline_format(output=&apos;&apos;, maxwidth=nil, newline=nil, genspace=nil)" />
        <scope attributes="__ctor__" ilk="function" line="142" lineend="156" name="initialize" signature="initialize(output=&apos;&apos;, maxwidth=79, newline=&quot;\n&quot;, &amp;genspace)" />
        <scope ilk="function" line="157" lineend="157" name="output" />
        <scope ilk="function" line="157" lineend="157" name="maxwidth" />
        <scope ilk="function" line="157" lineend="157" name="newline" />
        <scope ilk="function" line="157" lineend="157" name="genspace" />
        <scope ilk="function" line="158" lineend="158" name="indent" />
        <scope ilk="function" line="158" lineend="158" name="group_queue" />
        <scope ilk="function" line="160" lineend="162" name="current_group" signature="current_group" />
        <scope ilk="function" line="164" lineend="167" name="first?" signature="first?" />
        <scope ilk="function" line="169" lineend="183" name="break_outmost_groups" signature="break_outmost_groups" />
        <scope ilk="function" line="185" lineend="199" name="text" signature="text(obj, width=obj.length)" />
        <scope ilk="function" line="201" lineend="203" name="fill_breakable" signature="fill_breakable(sep=&apos; &apos;, width=sep.length)" />
        <scope ilk="function" line="205" lineend="218" name="breakable" signature="breakable(sep=&apos; &apos;, width=sep.length)" />
        <scope ilk="function" line="220" lineend="228" name="group" signature="group(indent=0, open_obj=&apos;&apos;, close_obj=&apos;&apos;, open_width=open_obj.length, close_width=close_obj.length)" />
        <scope ilk="function" line="230" lineend="242" name="group_sub" signature="group_sub" />
        <scope ilk="function" line="244" lineend="251" name="nest" signature="nest(indent)" />
        <scope ilk="function" line="253" lineend="259" name="flush" signature="flush" />
        <scope classrefs="Object" ilk="class" line="261" lineend="277" name="Text">
          <scope attributes="__ctor__" ilk="function" line="262" lineend="265" name="initialize" signature="initialize" />
          <scope ilk="function" line="266" lineend="266" name="width" />
          <scope ilk="function" line="268" lineend="271" name="output" signature="output(out, output_width)" />
          <scope ilk="function" line="273" lineend="276" name="add" signature="add(obj, width)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="279" lineend="302" name="Breakable">
          <scope attributes="__ctor__" ilk="function" line="280" lineend="287" name="initialize" signature="initialize(sep, width, q)" />
          <scope ilk="function" line="288" lineend="288" name="obj" />
          <scope ilk="function" line="288" lineend="288" name="width" />
          <scope ilk="function" line="288" lineend="288" name="indent" />
          <scope ilk="function" line="290" lineend="301" name="output" signature="output(out, output_width)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="304" lineend="328" name="Group">
          <scope attributes="__ctor__" ilk="function" line="305" lineend="309" name="initialize" signature="initialize(depth)" />
          <scope ilk="function" line="310" lineend="310" name="depth" />
          <scope ilk="function" line="310" lineend="310" name="breakables" />
          <scope ilk="function" line="312" lineend="314" name="break" signature="break" />
          <scope ilk="function" line="316" lineend="318" name="break?" signature="break?" />
          <scope ilk="function" line="320" lineend="327" name="first?" signature="first?" />
        </scope>
        <scope classrefs="Object" ilk="class" line="330" lineend="360" name="GroupQueue">
          <scope attributes="__ctor__" ilk="function" line="331" lineend="334" name="initialize" signature="initialize(*groups)" />
          <scope ilk="function" line="336" lineend="340" name="enq" signature="enq(group)" />
          <scope ilk="function" line="342" lineend="355" name="deq" signature="deq" />
          <scope ilk="function" line="357" lineend="359" name="delete" signature="delete(group)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="362" lineend="396" name="SingleLine">
          <scope attributes="__ctor__" ilk="function" line="363" lineend="366" name="initialize" signature="initialize(output, maxwidth=nil, newline=nil)" />
          <scope ilk="function" line="368" lineend="370" name="text" signature="text(obj, width=nil)" />
          <scope ilk="function" line="372" lineend="374" name="breakable" signature="breakable(sep=&apos; &apos;, width=nil)" />
          <scope ilk="function" line="376" lineend="378" name="nest" signature="nest(indent)" />
          <scope ilk="function" line="380" lineend="386" name="group" signature="group(indent=nil, open_obj=&apos;&apos;, close_obj=&apos;&apos;, open_width=nil, close_width=nil)" />
          <scope ilk="function" line="388" lineend="389" name="flush" signature="flush" />
          <scope ilk="function" line="391" lineend="395" name="first?" signature="first?" />
        </scope>
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="402" lineend="637" name="WadlerExample">
        <scope ilk="function" line="403" lineend="410" name="setup" signature="setup" />
        <scope ilk="function" line="412" lineend="428" name="hello" signature="hello(width)" />
        <scope ilk="function" line="430" lineend="440" name="test_hello_00_06" signature="test_hello_00_06" />
        <scope ilk="function" line="442" lineend="451" name="test_hello_07_08" signature="test_hello_07_08" />
        <scope ilk="function" line="453" lineend="461" name="test_hello_09_10" signature="test_hello_09_10" />
        <scope ilk="function" line="463" lineend="470" name="test_hello_11_12" signature="test_hello_11_12" />
        <scope ilk="function" line="472" lineend="477" name="test_hello_13" signature="test_hello_13" />
        <scope ilk="function" line="479" lineend="481" name="tree" signature="tree(width)" />
        <scope ilk="function" line="483" lineend="494" name="test_tree_00_19" signature="test_tree_00_19" />
        <scope ilk="function" line="496" lineend="506" name="test_tree_20_22" signature="test_tree_20_22" />
        <scope ilk="function" line="508" lineend="516" name="test_tree_23_43" signature="test_tree_23_43" />
        <scope ilk="function" line="518" lineend="522" name="test_tree_44" signature="test_tree_44" />
        <scope ilk="function" line="524" lineend="526" name="tree_alt" signature="tree_alt(width)" />
        <scope ilk="function" line="528" lineend="545" name="test_tree_alt_00_18" signature="test_tree_alt_00_18" />
        <scope ilk="function" line="547" lineend="561" name="test_tree_alt_19_20" signature="test_tree_alt_19_20" />
        <scope ilk="function" line="563" lineend="573" name="test_tree_alt_20_49" signature="test_tree_alt_20_49" />
        <scope ilk="function" line="575" lineend="580" name="test_tree_alt_50" signature="test_tree_alt_50" />
        <scope classrefs="Object" ilk="class" line="582" lineend="636" name="Tree">
          <scope attributes="__ctor__" ilk="function" line="583" lineend="586" name="initialize" signature="initialize(string, *children)" />
          <scope ilk="function" line="588" lineend="610" name="show" signature="show(q)" />
          <scope ilk="function" line="612" lineend="634" name="altshow" signature="altshow(q)" />
        </scope>
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="639" lineend="782" name="StrictPrettyExample">
        <scope ilk="function" line="640" lineend="664" name="prog" signature="prog(width)" />
        <scope ilk="function" line="666" lineend="683" name="test_00_04" signature="test_00_04" />
        <scope ilk="function" line="685" lineend="700" name="test_05" signature="test_05" />
        <scope ilk="function" line="702" lineend="715" name="test_06" signature="test_06" />
        <scope ilk="function" line="717" lineend="729" name="test_07" signature="test_07" />
        <scope ilk="function" line="731" lineend="741" name="test_08" signature="test_08" />
        <scope ilk="function" line="743" lineend="752" name="test_09" signature="test_09" />
        <scope ilk="function" line="754" lineend="762" name="test_10" signature="test_10" />
        <scope ilk="function" line="764" lineend="773" name="test_11_31" signature="test_11_31" />
        <scope ilk="function" line="775" lineend="780" name="test_32" signature="test_32" />
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="784" lineend="802" name="TailGroup">
        <scope ilk="function" line="785" lineend="801" name="test_1" signature="test_1" />
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="804" lineend="821" name="NonString">
        <scope ilk="function" line="805" lineend="811" name="format" signature="format(width)" />
        <scope ilk="function" line="813" lineend="815" name="test_6" signature="test_6" />
        <scope ilk="function" line="817" lineend="819" name="test_7" signature="test_7" />
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="823" lineend="913" name="Fill">
        <scope ilk="function" line="824" lineend="842" name="format" signature="format(width)" />
        <scope ilk="function" line="844" lineend="856" name="test_00_06" signature="test_00_06" />
        <scope ilk="function" line="858" lineend="867" name="test_07_10" signature="test_07_10" />
        <scope ilk="function" line="869" lineend="877" name="test_11_14" signature="test_11_14" />
        <scope ilk="function" line="879" lineend="886" name="test_15_18" signature="test_15_18" />
        <scope ilk="function" line="888" lineend="895" name="test_19_22" signature="test_19_22" />
        <scope ilk="function" line="897" lineend="904" name="test_23_26" signature="test_23_26" />
        <scope ilk="function" line="906" lineend="911" name="test_27" signature="test_27" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="pp">
      <import line="46" module="prettyprint" symbol="*" />
      <import line="461" module="test/unit" symbol="*" />
      <scope doc="== Pretty-printer for Ruby objects." ilk="namespace" line="48" lineend="57" name="Kernel">
        <scope ilk="function" line="50" lineend="55" name="pp" signature="pp(*objs)" />
      </scope>
      <scope classrefs="PrettyPrint" ilk="class" line="59" lineend="284" name="PP">
        <scope attributes="__classmethod__" doc="Outputs +obj+ to +out+ in pretty printed format of +width+&#xA;columns in width." ilk="function" line="67" lineend="73" name="pp" signature="PP.pp(obj, out=$&gt;, width=79)" />
        <scope attributes="__classmethod__" doc="Outputs +obj+ to +out+ like PP.pp but with no indent and&#xA;newline." ilk="function" line="79" lineend="84" name="singleline_pp" signature="PP.singleline_pp(obj, out=$&gt;)" />
        <scope classrefs="Object" ilk="class" line="87" lineend="91" name="self">
          <scope ilk="function" line="90" lineend="90" name="sharing_detection" />
          <scope ilk="function" line="90" lineend="90" name="sharing_detection=" />
        </scope>
        <scope ilk="namespace" line="93" lineend="220" name="PPMethods">
          <scope ilk="function" line="96" lineend="109" name="guard_inspect_key" signature="guard_inspect_key" />
          <scope doc="Adds +obj+ to the pretty printing buffer using&#xA;Object#pretty_print or Object#pretty_print_cycle." ilk="function" line="116" lineend="130" name="pp" signature="pp(obj)" />
          <scope doc="A convenience method which is same as follows:" ilk="function" line="135" lineend="137" name="object_group" signature="object_group(obj, &amp;block)" />
          <scope ilk="function" line="139" lineend="143" name="object_address_group" signature="object_address_group(obj, &amp;block)" />
          <scope doc="A convenience method which is same as follows:" ilk="function" line="149" lineend="152" name="comma_breakable" signature="comma_breakable" />
          <scope doc="Adds a separated list." ilk="function" line="178" lineend="189" name="seplist" signature="seplist(list, sep=nil, iter_method=:each)" />
          <scope ilk="function" line="191" lineend="204" name="pp_object" signature="pp_object(obj)" />
          <scope ilk="function" line="206" lineend="219" name="pp_hash" signature="pp_hash(obj)" />
        </scope>
        <scope classrefs="PrettyPrint::SingleLine" ilk="class" line="224" lineend="226" name="SingleLine">
          <import symbol="PPMethods" />
        </scope>
        <scope ilk="namespace" line="228" lineend="283" name="ObjectMixin">
          <scope doc="1." ilk="function" line="243" lineend="251" name="pretty_print" signature="pretty_print(q)" />
          <scope doc="A default pretty printing method for general objects that&#xA;are detected as part of a cycle." ilk="function" line="255" lineend="260" name="pretty_print_cycle" signature="pretty_print_cycle(q)" />
          <scope doc="Returns a sorted array of instance variable names." ilk="function" line="266" lineend="268" name="pretty_print_instance_variables" signature="pretty_print_instance_variables" />
          <scope doc="Is #inspect implementation using #pretty_print." ilk="function" line="277" lineend="282" name="pretty_print_inspect" signature="pretty_print_inspect" />
        </scope>
        <import symbol="PPMethods" />
      </scope>
      <scope classrefs="Object" ilk="class" line="286" lineend="298" name="Array">
        <scope ilk="function" line="287" lineend="293" name="pretty_print" signature="pretty_print(q)" />
        <scope ilk="function" line="295" lineend="297" name="pretty_print_cycle" signature="pretty_print_cycle(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="300" lineend="308" name="Hash">
        <scope ilk="function" line="301" lineend="303" name="pretty_print" signature="pretty_print(q)" />
        <scope ilk="function" line="305" lineend="307" name="pretty_print_cycle" signature="pretty_print_cycle(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="310" lineend="314" name="ENV">
        <scope ilk="function" line="311" lineend="313" name="pretty_print" signature="pretty_print(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="316" lineend="334" name="Struct">
        <scope ilk="function" line="317" lineend="329" name="pretty_print" signature="pretty_print(q)" />
        <scope ilk="function" line="331" lineend="333" name="pretty_print_cycle" signature="pretty_print_cycle(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="336" lineend="344" name="Range">
        <scope ilk="function" line="337" lineend="343" name="pretty_print" signature="pretty_print(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="346" lineend="426" name="File">
        <scope classrefs="Object" ilk="class" line="347" lineend="425" name="Stat">
          <scope ilk="function" line="348" lineend="424" name="pretty_print" signature="pretty_print(q)">
            <import line="349" module="etc.so" symbol="*" />
          </scope>
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="428" lineend="437" name="MatchData">
        <scope ilk="function" line="429" lineend="436" name="pretty_print" signature="pretty_print(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="439" lineend="441" name="Object">
        <import symbol="PP::ObjectMixin" />
      </scope>
      <scope classrefs="Test::Unit::" doc=":enddoc:" ilk="class" line="463" lineend="471" name="PPTest">
        <scope ilk="function" line="464" lineend="466" name="test_list01215012123_12" signature="test_list0123_12" />
        <scope ilk="function" line="468" lineend="470" name="test_list01215012123_11" signature="test_list0123_11" />
      </scope>
      <scope classrefs="Object" ilk="class" line="473" lineend="481" name="HasInspect">
        <scope attributes="__ctor__" ilk="function" line="474" lineend="476" name="initialize" signature="initialize(a)" />
        <scope ilk="function" line="478" lineend="480" name="inspect" signature="inspect" />
      </scope>
      <scope classrefs="Object" ilk="class" line="483" lineend="493" name="HasPrettyPrint">
        <scope attributes="__ctor__" ilk="function" line="484" lineend="486" name="initialize" signature="initialize(a)" />
        <scope ilk="function" line="488" lineend="492" name="pretty_print" signature="pretty_print(q)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="495" lineend="509" name="HasBoth">
        <scope attributes="__ctor__" ilk="function" line="496" lineend="498" name="initialize" signature="initialize(a)" />
        <scope ilk="function" line="500" lineend="502" name="inspect" signature="inspect" />
        <scope ilk="function" line="504" lineend="508" name="pretty_print" signature="pretty_print(q)" />
      </scope>
      <scope classrefs="HasPrettyPrint" ilk="class" line="511" lineend="513" name="PrettyPrintInspect" />
      <scope classrefs="Object" ilk="class" line="515" lineend="517" name="PrettyPrintInspectWithoutPrettyPrint" />
      <scope classrefs="Test::Unit::" ilk="class" line="519" lineend="567" name="PPInspectTest">
        <scope ilk="function" line="520" lineend="523" name="test_hasinspect" signature="test_hasinspect" />
        <scope ilk="function" line="525" lineend="528" name="test_hasprettyprint" signature="test_hasprettyprint" />
        <scope ilk="function" line="530" lineend="533" name="test_hasboth" signature="test_hasboth" />
        <scope ilk="function" line="535" lineend="540" name="test_pretty_print_inspect" signature="test_pretty_print_inspect" />
        <scope ilk="function" line="542" lineend="545" name="test_proc" signature="test_proc" />
        <scope ilk="function" line="547" lineend="558" name="test_to_s_with_iv" signature="test_to_s_with_iv">
          <scope ilk="function" line="549" name="a.to_s" signature="a.to_s()" />
        </scope>
        <scope ilk="function" line="560" lineend="566" name="test_to_s_without_iv" signature="test_to_s_without_iv">
          <scope ilk="function" line="562" name="a.to_s" signature="a.to_s()" />
        </scope>
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="569" lineend="619" name="PPCycleTest">
        <scope ilk="function" line="570" lineend="575" name="test_array" signature="test_array" />
        <scope ilk="function" line="577" lineend="582" name="test_hash" signature="test_hash" />
        <scope ilk="function" line="585" lineend="590" name="test_struct" signature="test_struct" />
        <scope ilk="function" line="592" lineend="596" name="test_object" signature="test_object" />
        <scope ilk="function" line="598" lineend="601" name="test_anonymous" signature="test_anonymous" />
        <scope ilk="function" line="603" lineend="608" name="test_withinspect" signature="test_withinspect" />
        <scope ilk="function" line="610" lineend="618" name="test_share_nil" signature="test_share_nil" />
      </scope>
      <scope classrefs="Test::Unit::" ilk="class" line="621" lineend="626" name="PPSingleLineTest">
        <scope ilk="function" line="622" lineend="625" name="test_hash" signature="test_hash" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="ping">
      <import line="40" module="timeout" symbol="*" />
      <import line="41" module="socket" symbol="*" />
      <scope doc="ping.rb -- check a host for upness" ilk="namespace" line="43" lineend="58" name="Ping">
        <scope ilk="function" line="44" lineend="56" name="pingecho" signature="pingecho(host, timeout=5, service=&quot;echo&quot;)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="pathname">
      <scope classrefs="Object" ilk="class" name="Pathname">
        <scope attributes="__classmethod__" doc="See Dir.getwd. Returns the current working directory as a&#xA;Pathname." ilk="function" name="getwd" signature="()" />
        <scope attributes="__classmethod__" doc="See Dir.glob. Returns or yields Pathname objects." ilk="function" name="glob" signature="(*args) {|p| ...}" />
        <scope attributes="__classmethod__ __ctor__" doc="Create a Pathname object from the given String (or String-&#xA;like object). If path contains a NUL character (\0), an&#xA;ArgumentError is raised." ilk="function" name="new" signature="(path)" />
        <scope doc="Pathname#+ appends a pathname fragment to this one to&#xA;produce a new Pathname object." ilk="function" name="+" signature="(other)" />
        <scope doc="Provides for comparing pathnames, case-sensitively." ilk="function" name="&lt;=&gt;" signature="(other)" />
        <scope doc="Compare this pathname with other. The comparison is string-&#xA;based." ilk="function" name="==" signature="(other)" />
        <scope doc="Alias for #==" ilk="function" name="===" signature="(other)" />
        <scope doc="Predicate method for testing whether a path is absolute. It&#xA;returns true if the pathname begins with a slash." ilk="function" name="absolute?" signature="()" />
        <scope doc="See File.atime. Returns last access time." ilk="function" name="atime" signature="()" />
        <scope doc="See File.basename. Returns the last component of the path." ilk="function" name="basename" signature="(*args)" />
        <scope doc="See FileTest.blockdev?." ilk="function" name="blockdev?" signature="()" />
        <scope doc="See FileTest.chardev?." ilk="function" name="chardev?" signature="()" />
        <scope doc="Pathname#chdir is *obsoleted* at 1.8.1." ilk="function" name="chdir" signature="(&amp;block)" />
        <scope doc="Returns the children of the directory (files and&#xA;subdirectories, not recursive) as an array of Pathname&#xA;objects. By default, the returned pathnames will have enough&#xA;information to access the files." ilk="function" name="children" signature="(with_directory=true)" />
        <scope doc="See File.chmod. Changes permissions." ilk="function" name="chmod" signature="(mode)" />
        <scope doc="See File.chown. Change owner and group of file." ilk="function" name="chown" signature="(owner, group)" />
        <scope doc="Pathname#chroot is *obsoleted* at 1.8.1." ilk="function" name="chroot" signature="()" />
        <scope doc="Returns clean pathname of self with consecutive slashes and&#xA;useless dots removed. The filesystem is not accessed." ilk="function" name="cleanpath" signature="(consider_symlink=false)" />
        <scope attributes="private" doc="Clean the path simply by resolving and removing excess &quot;.&quot;&#xA;and &quot;..&quot; entries. Nothing more, nothing less." ilk="function" name="cleanpath_aggressive" signature="()" />
        <scope attributes="private" ilk="function" name="cleanpath_conservative" signature="()" />
        <scope doc="See File.ctime. Returns last (directory entry, not file)&#xA;change time." ilk="function" name="ctime" signature="()" />
        <scope doc="Alias for #unlink" ilk="function" name="delete" signature="()" />
        <scope doc="Pathname#dir_foreach is *obsoleted* at 1.8.1." ilk="function" name="dir_foreach" signature="(*args, &amp;block)" />
        <scope doc="See FileTest.directory?." ilk="function" name="directory?" signature="()" />
        <scope doc="See File.dirname. Returns all but the last component of the&#xA;path." ilk="function" name="dirname" signature="()" />
        <scope doc="Iterates over the entries (files and subdirectories) in the&#xA;directory. It yields a Pathname object for each entry." ilk="function" name="each_entry" signature="() {|p| ...}" />
        <scope doc="Iterates over each component of the path." ilk="function" name="each_filename" signature="( {|s| ...}" />
        <scope doc="#each_line iterates over the line in the file. It yields a&#xA;String object for each line." ilk="function" name="each_line" signature="(*args) {|line| ...}" />
        <scope doc="Return the entries (files and subdirectories) in the&#xA;directory, each as a Pathname object." ilk="function" name="entries" signature="()" />
        <scope doc="Alias for #==" ilk="function" name="eql?" signature="(other)" />
        <scope doc="See FileTest.executable?." ilk="function" name="executable?" signature="()" />
        <scope doc="See FileTest.executable_real?." ilk="function" name="executable_real?" signature="()" />
        <scope doc="See FileTest.exist?." ilk="function" name="exist?" signature="()" />
        <scope doc="See File.expand_path." ilk="function" name="expand_path" signature="(*args)" />
        <scope doc="See File.extname. Returns the file&apos;s extension." ilk="function" name="extname" signature="()" />
        <scope doc="See FileTest.file?." ilk="function" name="file?" signature="()" />
        <scope doc="Pathname#find is an iterator to traverse a directory tree in&#xA;a depth first manner. It yields a Pathname for each file&#xA;under &quot;this&quot; directory." ilk="function" name="find" signature="() {|p| ...}" />
        <scope doc="See File.fnmatch. Return true if the receiver matches the&#xA;given pattern." ilk="function" name="fnmatch" signature="(pattern, *args)" />
        <scope doc="See File.fnmatch? (same as #fnmatch)." ilk="function" name="fnmatch?" signature="(pattern, *args)" />
        <scope doc="This method is *obsoleted* at 1.8.1. Use #each_line or&#xA;#each_entry." ilk="function" name="foreach" signature="(*args, &amp;block)" />
        <scope doc="Pathname#foreachline is *obsoleted* at 1.8.1. Use&#xA;#each_line." ilk="function" name="foreachline" signature="(*args, &amp;block)" />
        <scope ilk="function" name="freeze" signature="()" />
        <scope doc="See File.ftype. Returns &quot;type&quot; of file (&quot;file&quot;, &quot;directory&quot;,&#xA;etc)." ilk="function" name="ftype" signature="()" />
        <scope doc="See FileTest.grpowned?." ilk="function" name="grpowned?" signature="()" />
        <scope doc="Pathname#join joins pathnames." ilk="function" name="join" signature="(*args)" />
        <scope doc="See File.lchmod." ilk="function" name="lchmod" signature="(mode)" />
        <scope doc="See File.lchown." ilk="function" name="lchown" signature="(owner, group)" />
        <scope doc="Pathname#link is confusing and *obsoleted* because the&#xA;receiver/argument order is inverted to corresponding system&#xA;call." ilk="function" name="link" signature="(old)" />
        <scope doc="See File.lstat." ilk="function" name="lstat" signature="()" />
        <scope doc="See File.link. Creates a hard link." ilk="function" name="make_link" signature="(old)" />
        <scope doc="See File.symlink. Creates a symbolic link." ilk="function" name="make_symlink" signature="(old)" />
        <scope doc="See Dir.mkdir. Create the referenced directory." ilk="function" name="mkdir" signature="(*args)" />
        <scope doc="See FileUtils.mkpath. Creates a full path, including any&#xA;intermediate directories that don&apos;t yet exist." ilk="function" name="mkpath" signature="()" />
        <scope doc="#mountpoint? returns true if self points to a mountpoint." ilk="function" name="mountpoint?" signature="()" />
        <scope doc="See File.mtime. Returns last modification time." ilk="function" name="mtime" signature="()" />
        <scope doc="See File.open. Opens the file for reading or writing." ilk="function" name="open" signature="(*args) {|file| ...}" />
        <scope doc="See Dir.open." ilk="function" name="opendir" signature="() {|dir| ...}" />
        <scope doc="See FileTest.owned?." ilk="function" name="owned?" signature="()" />
        <scope doc="#parent returns the parent directory." ilk="function" name="parent" signature="()" />
        <scope doc="See FileTest.pipe?." ilk="function" name="pipe?" signature="()" />
        <scope doc="See IO.read. Returns all the bytes from the file, or the&#xA;first N if specified." ilk="function" name="read" signature="(*args)" />
        <scope doc="See FileTest.readable?." ilk="function" name="readable?" signature="()" />
        <scope doc="See FileTest.readable_real?." ilk="function" name="readable_real?" signature="()" />
        <scope doc="See IO.readlines. Returns all the lines from the file." ilk="function" name="readlines" signature="(*args)" />
        <scope doc="See File.readlink. Read symbolic link." ilk="function" name="readlink" signature="()" />
        <scope doc="Returns a real (absolute) pathname of self in the actual&#xA;filesystem. The real pathname doesn&apos;t contain symlinks or&#xA;useless dots." ilk="function" name="realpath" signature="(*args)" />
        <scope doc="The opposite of #absolute?" ilk="function" name="relative?" signature="()" />
        <scope doc="#relative_path_from returns a relative path from the&#xA;argument to the receiver. If self is absolute, the argument&#xA;must be absolute too." ilk="function" name="relative_path_from" signature="(base_directory)" />
        <scope doc="See File.rename. Rename the file." ilk="function" name="rename" signature="(to)" />
        <scope doc="See Dir.rmdir. Remove the referenced directory." ilk="function" name="rmdir" signature="()" />
        <scope doc="See FileUtils.rm_r. Deletes a directory and all beneath it." ilk="function" name="rmtree" signature="()" />
        <scope doc="#root? is a predicate for root directories. I.e." ilk="function" name="root?" signature="()" />
        <scope doc="See FileTest.setgid?." ilk="function" name="setgid?" signature="()" />
        <scope doc="See FileTest.setuid?." ilk="function" name="setuid?" signature="()" />
        <scope doc="See FileTest.size." ilk="function" name="size" signature="()" />
        <scope doc="See FileTest.size?." ilk="function" name="size?" signature="()" />
        <scope doc="See FileTest.socket?." ilk="function" name="socket?" signature="()" />
        <scope doc="See File.split. Returns the #dirname and the #basename in an&#xA;Array." ilk="function" name="split" signature="()" />
        <scope doc="See File.stat. Returns a File::Stat object." ilk="function" name="stat" signature="()" />
        <scope doc="See FileTest.sticky?." ilk="function" name="sticky?" signature="()" />
        <scope doc="Pathname#symlink is confusing and *obsoleted* because the&#xA;receiver/argument order is inverted to corresponding system&#xA;call." ilk="function" name="symlink" signature="(old)" />
        <scope doc="See FileTest.symlink?." ilk="function" name="symlink?" signature="()" />
        <scope doc="See IO.sysopen." ilk="function" name="sysopen" signature="(*args)" />
        <scope ilk="function" name="taint" signature="()" />
        <scope doc="Return the path as a String." ilk="function" name="to_s" signature="()" />
        <scope doc="Alias for #to_s" ilk="function" name="to_str" signature="()" />
        <scope doc="See File.truncate. Truncate the file to length bytes." ilk="function" name="truncate" signature="(length)" />
        <scope doc="Removes a file or directory, using File.unlink or Dir.unlink&#xA;as necessary." ilk="function" name="unlink" signature="()" />
        <scope ilk="function" name="untaint" signature="()" />
        <scope doc="See File.utime. Update the access and modification times." ilk="function" name="utime" signature="(atime, mtime)" />
        <scope doc="See FileTest.writable?." ilk="function" name="writable?" signature="()" />
        <scope doc="See FileTest.writable_real?." ilk="function" name="writable_real?" signature="()" />
        <scope doc="See FileTest.zero?." ilk="function" name="zero?" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="parsedate">
      <import line="4" module="date/format" symbol="*" />
      <scope doc="parsedate.rb: Written by Tadayoshi Funaba 2001, 2002 $Id:&#xA;parsedate.rb,v 2.6 2002-05-14 07:43:18+09 tadf Exp $" ilk="namespace" line="6" lineend="15" name="ParseDate">
        <scope ilk="function" line="8" lineend="11" name="parsedate" signature="parsedate(str, comp=false)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="parsearg">
      <import line="17" module="getopts" symbol="*" />
      <scope doc="parsearg.rb - parse arguments $Release Version: $ $Revision:&#xA;1.2.2.1 $ $Date: 2005/03/07 00:20:15 $ by Yasuo OHBA(SHL&#xA;Japan Inc." ilk="function" line="19" lineend="24" name="printUsageAndExit" signature="printUsageAndExit()" />
      <scope ilk="function" line="26" lineend="33" name="setParenthesis" signature="setParenthesis(ex, opt, c)" />
      <scope ilk="function" line="35" lineend="42" name="setOrAnd" signature="setOrAnd(ex, opt, c)" />
      <scope ilk="function" line="44" lineend="58" name="setExpression" signature="setExpression(ex, opt, op)" />
      <scope ilk="function" line="60" lineend="85" name="parseArgs" signature="parseArgs(argc, nopt, single_opts, *opts)" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="ostruct">
      <scope classrefs="Object" doc="= ostruct.rb: OpenStruct implementation" ilk="class" line="33" lineend="146" name="OpenStruct">
        <scope attributes="__ctor__" doc="Create a new OpenStruct object." ilk="function" line="46" lineend="54" name="initialize" signature="initialize(hash=nil)" />
        <scope doc="Duplicate an OpenStruct object members." ilk="function" line="57" lineend="60" name="initialize_copy" signature="initialize_copy(orig)" />
        <scope ilk="function" line="62" lineend="64" name="marshal_dump" signature="marshal_dump" />
        <scope ilk="function" line="65" lineend="68" name="marshal_load" signature="marshal_load(x)" />
        <scope ilk="function" line="70" lineend="77" name="new_ostruct_member" signature="new_ostruct_member(name)">
          <scope classrefs="Object" ilk="class" line="73" lineend="73" name="self" />
        </scope>
        <scope ilk="function" line="79" lineend="97" name="method_missing" signature="method_missing(mid, *args)" />
        <scope doc="Remove the named field from the object." ilk="function" line="102" lineend="104" name="delete_field" signature="delete_field(name)" />
        <scope doc=":nodoc:" ilk="function" line="111" lineend="133" name="inspect" signature="inspect" />
        <scope ilk="function" line="136" lineend="136" name="table" />
        <scope doc="Compare this object and +other+ for equality." ilk="function" line="142" lineend="145" name="==" signature="==(other" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="optparse">
      <scope classrefs="Object" doc="optparse.rb - command-line option analysis with the&#xA;OptionParser class." ilk="class" line="193" lineend="1813" name="OptionParser">
        <import line="734" module="optparse/version" symbol="*" />
        <scope doc=":startdoc:" ilk="namespace" line="209" lineend="253" name="Completion">
          <scope ilk="function" line="210" lineend="248" name="complete" signature="complete(key, icase = false, pat = nil)" />
          <scope ilk="function" line="250" lineend="252" name="convert" signature="convert(opt = nil, val = nil, *)" />
        </scope>
        <scope classrefs="Hash" doc="Map from option/keyword string to object with completion." ilk="class" line="259" lineend="261" name="OptionMap">
          <import symbol="Completion" />
        </scope>
        <scope classrefs="Object" doc="Individual switch class. Not important to the user." ilk="class" line="270" lineend="490" name="Switch">
          <scope ilk="function" line="271" lineend="271" name="pattern" />
          <scope ilk="function" line="271" lineend="271" name="conv" />
          <scope ilk="function" line="271" lineend="271" name="short" />
          <scope ilk="function" line="271" lineend="271" name="long" />
          <scope ilk="function" line="271" lineend="271" name="arg" />
          <scope ilk="function" line="271" lineend="271" name="desc" />
          <scope ilk="function" line="271" lineend="271" name="block" />
          <scope attributes="__classmethod__" doc="Guesses argument style from +arg+." ilk="function" line="277" lineend="290" name="guess" signature="self.guess(arg)" />
          <scope attributes="__classmethod__" ilk="function" line="292" lineend="294" name="incompatible_argument_styles" signature="self.incompatible_argument_styles(arg, t)" />
          <scope attributes="__classmethod__" ilk="function" line="296" lineend="298" name="pattern" signature="self.pattern" />
          <scope attributes="__ctor__" ilk="function" line="300" lineend="306" name="initialize" signature="initialize(pattern = nil, conv = nil, short = nil, long = nil, arg = nil, desc = ([] if short or long), block = Proc.new)" />
          <scope doc="OptionParser::Switch#parse_arg(arg) {non-serious error&#xA;handler}" ilk="function" line="319" lineend="336" name="parse_arg" signature="parse_arg(arg)" />
          <scope doc="OptionParser::Switch#conv_arg(arg, val) {semi-error handler}" ilk="function" line="355" lineend="366" name="conv_arg" signature="conv_arg(arg, val = nil)" />
          <scope doc="OptionParser::Switch#summarize(sdone, ldone, width, max,&#xA;indent)" ilk="function" line="388" lineend="417" name="summarize" signature="summarize(sdone = [], ldone = [], width = 1, max = width - 1, indent = &quot;&quot;)" />
          <scope classrefs="self" doc="Switch that takes no arguments." ilk="class" line="422" lineend="435" name="NoArgument">
            <scope doc="Raises an exception if any arguments given." ilk="function" line="426" lineend="429" name="parse" signature="parse(arg, argv, &amp;error)" />
            <scope attributes="__classmethod__" ilk="function" line="430" lineend="431" name="incompatible_argument_styles" signature="self.incompatible_argument_styles(*)" />
            <scope attributes="__classmethod__" ilk="function" line="432" lineend="434" name="pattern" signature="self.pattern" />
          </scope>
          <scope classrefs="self" doc="Switch that takes an argument." ilk="class" line="440" lineend="451" name="RequiredArgument">
            <scope doc="Raises an exception if argument is not present." ilk="function" line="444" lineend="450" name="parse" signature="parse(arg, argv)" />
          </scope>
          <scope classrefs="self" doc="Switch that can omit argument." ilk="class" line="456" lineend="467" name="OptionalArgument">
            <scope doc="Parses argument if given, or uses default value." ilk="function" line="460" lineend="466" name="parse" signature="parse(arg, argv, &amp;error)" />
          </scope>
          <scope classrefs="self" doc="Switch that takes an argument, which does not begin with&#xA;&apos;-&apos;." ilk="class" line="472" lineend="489" name="PlacedArgument">
            <scope doc="Returns nil if argument is not present or begins with &apos;-&apos;." ilk="function" line="476" lineend="488" name="parse" signature="parse(arg, argv, &amp;error)" />
          </scope>
        </scope>
        <scope classrefs="Object" doc="Simple option list providing mapping from short and/or long&#xA;option string to ((&lt;OptionParser::Switch&gt;)), and mapping&#xA;from acceptable argument to matching pattern and converter&#xA;pair." ilk="class" line="498" lineend="659" name="List">
          <scope ilk="function" line="500" lineend="500" name="atype" />
          <scope ilk="function" line="503" lineend="503" name="short" />
          <scope ilk="function" line="506" lineend="506" name="long" />
          <scope ilk="function" line="509" lineend="509" name="list" />
          <scope attributes="__ctor__" doc="Just initializes all instance variables." ilk="function" line="514" lineend="519" name="initialize" signature="initialize" />
          <scope doc="See OptionParser.accept." ilk="function" line="524" lineend="534" name="accept" signature="accept(t, pat = /.*/nm, &amp;block)" />
          <scope doc="See OptionParser.reject." ilk="function" line="539" lineend="541" name="reject" signature="reject(t)" />
          <scope doc="OptionParser::List#update(sw, sopts, lopts, nlopts = nil)" ilk="function" line="558" lineend="565" name="update" signature="update(sw, sopts, lopts, nsw = nil, nlopts = nil)" />
          <scope doc="OptionParser::List#prepend(switch, short_opts, long_opts,&#xA;nolong_opts)" ilk="function" line="573" lineend="576" name="prepend" signature="prepend(*args)" />
          <scope doc="OptionParser::List#append(switch, short_opts, long_opts,&#xA;nolong_opts)" ilk="function" line="592" lineend="595" name="append" signature="append(*args)" />
          <scope doc="OptionParser::List#search(id, key) [{block}]" ilk="function" line="609" lineend="615" name="search" signature="search(id, key)" />
          <scope doc="OptionParser::List#complete(id, opt, *pat, &amp;block)" ilk="function" line="633" lineend="635" name="complete" signature="complete(id, opt, icase = false, *pat, &amp;block)" />
          <scope doc="OptionParser::List#summarize(*args) {...}" ilk="function" line="648" lineend="658" name="summarize" signature="summarize(*args, &amp;block)" />
        </scope>
        <scope classrefs="Hash" doc="Hash with completion search feature. See Completion module." ilk="class" line="664" lineend="677" name="CompletingHash">
          <scope doc="OptionParser::CompletingHash#match(key)" ilk="function" line="672" lineend="676" name="match" signature="match(key)" />
          <import symbol="Completion" />
        </scope>
        <scope attributes="__classmethod__" doc="&apos;#&quot;#`#" ilk="function" line="771" lineend="775" name="with" signature="self.with(*args, &amp;block)" />
        <scope attributes="__classmethod__" ilk="function" line="782" lineend="789" name="inc" signature="self.inc(arg, default = nil)" />
        <scope ilk="function" line="790" lineend="792" name="inc" signature="inc(*args)" />
        <scope attributes="__ctor__" doc="&apos;#&quot;#`#" ilk="function" line="807" lineend="816" name="initialize" signature="initialize(banner = nil, width = 32, indent = &apos; &apos; * 4)" />
        <scope doc=":nodoc:" ilk="function" line="819" lineend="824" name="add_officious" signature="add_officious" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="834" lineend="836" name="terminate" signature="terminate(arg = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="837" lineend="839" name="terminate" signature="self.terminate(arg = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="842" name="top" signature="self.top()" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="856" name="accept" signature="accept(*args, &amp;blk)" />
        <scope attributes="__classmethod__" ilk="function" line="857" name="accept" signature="self.accept(*args, &amp;blk)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="867" name="reject" signature="reject(*args, &amp;blk)" />
        <scope attributes="__classmethod__" ilk="function" line="868" name="reject" signature="self.reject(*args, &amp;blk)" />
        <scope ilk="function" line="893" lineend="893" name="banner=" />
        <scope ilk="function" line="893" lineend="893" name="program_name=" />
        <scope ilk="function" line="894" lineend="894" name="summary_width" />
        <scope ilk="function" line="894" lineend="894" name="summary_width=" />
        <scope ilk="function" line="894" lineend="894" name="summary_indent" />
        <scope ilk="function" line="894" lineend="894" name="summary_indent=" />
        <scope ilk="function" line="895" lineend="895" name="default_argv" />
        <scope ilk="function" line="895" lineend="895" name="default_argv=" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="897" lineend="899" name="banner" signature="banner" />
        <scope ilk="function" line="901" lineend="903" name="program_name" signature="program_name" />
        <scope ilk="function" line="922" lineend="922" name="version=" />
        <scope ilk="function" line="922" lineend="922" name="release=" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="924" lineend="926" name="version" signature="version" />
        <scope ilk="function" line="928" lineend="930" name="release" signature="release" />
        <scope ilk="function" line="932" lineend="938" name="ver" signature="ver" />
        <scope ilk="function" line="940" lineend="942" name="warn" signature="warn(mesg = $!)" />
        <scope ilk="function" line="944" lineend="946" name="abort" signature="abort(mesg = $!)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="952" lineend="954" name="top" signature="top" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="960" lineend="962" name="base" signature="base" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="968" lineend="975" name="new" signature="new" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="981" lineend="983" name="remove" signature="remove" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1001" lineend="1004" name="summarize" signature="summarize(to = [], width = @summary_width, max = width - 1, indent = @summary_indent, &amp;blk)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1011" name="help" signature="help" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1018" name="to_a" signature="to_a" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1070" lineend="1080" name="notwice" signature="notwice(obj, prv, msg)" />
        <scope ilk="function" line="1083" lineend="1196" name="make_switch" signature="make_switch(*opts, &amp;block)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1211" lineend="1214" name="define" signature="define(*opts, &amp;block)" />
        <scope ilk="function" line="1215" lineend="1218" name="on" signature="on(*opts, &amp;block)" />
        <scope ilk="function" line="1221" lineend="1224" name="define_head" signature="define_head(*opts, &amp;block)" />
        <scope ilk="function" line="1225" lineend="1228" name="on_head" signature="on_head(*opts, &amp;block)" />
        <scope ilk="function" line="1231" lineend="1234" name="define_tail" signature="define_tail(*opts, &amp;block)" />
        <scope ilk="function" line="1235" lineend="1238" name="on_tail" signature="on_tail(*opts, &amp;block)" />
        <scope ilk="function" line="1241" lineend="1243" name="separator" signature="separator(string)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1263" lineend="1266" name="order" signature="order(*argv, &amp;block)" />
        <scope ilk="function" line="1268" lineend="1328" name="order!" signature="order!(argv = default_argv, &amp;nonopt)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1343" lineend="1346" name="permute" signature="permute(*argv)" />
        <scope ilk="function" line="1348" lineend="1354" name="permute!" signature="permute!(argv = default_argv)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1369" lineend="1372" name="parse" signature="parse(*argv)" />
        <scope ilk="function" line="1374" lineend="1380" name="parse!" signature="parse!(argv = default_argv)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1394" lineend="1400" name="visit" signature="visit(id, *args, &amp;block)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1415" lineend="1420" name="search" signature="search(id, k)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1439" lineend="1447" name="complete" signature="complete(typ, opt, icase = false, *pat)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1459" lineend="1471" name="load" signature="load(filename = nil)" />
        <scope doc="&apos;#&quot;#`#" ilk="function" line="1481" lineend="1484" name="environment" signature="environment(env = File.basename($0, &apos;.*&apos;))" />
        <scope classrefs="RuntimeError" doc="&apos;#&quot;#`#" ilk="class" line="1622" lineend="1661" name="ParseError">
          <scope attributes="__ctor__" ilk="function" line="1625" lineend="1628" name="initialize" signature="initialize(*args)" />
          <scope ilk="function" line="1630" lineend="1630" name="args" />
          <scope ilk="function" line="1631" lineend="1631" name="reason=" />
          <scope ilk="function" line="1633" lineend="1636" name="recover" signature="recover(argv)" />
          <scope ilk="function" line="1638" lineend="1645" name="set_option" signature="set_option(opt, eq)" />
          <scope ilk="function" line="1647" lineend="1649" name="reason" signature="reason" />
          <scope ilk="function" line="1651" lineend="1653" name="inspect" signature="inspect" />
          <scope ilk="function" line="1655" lineend="1657" name="message" signature="message" />
        </scope>
        <scope classrefs="ParseError" doc="&apos;#&quot;#`#" ilk="class" line="1669" lineend="1671" name="AmbiguousOption" />
        <scope classrefs="ParseError" doc="&apos;#&quot;#`#" ilk="class" line="1680" lineend="1682" name="NeedlessArgument" />
        <scope classrefs="ParseError" doc="&apos;#&quot;#`#" ilk="class" line="1691" lineend="1693" name="MissingArgument" />
        <scope classrefs="ParseError" doc="&apos;#&quot;#`#" ilk="class" line="1701" lineend="1703" name="InvalidOption" />
        <scope classrefs="ParseError" doc="&apos;#&quot;#`#" ilk="class" line="1711" lineend="1713" name="InvalidArgument" />
        <scope classrefs="InvalidArgument" doc="&apos;#&quot;#`#" ilk="class" line="1721" lineend="1723" name="AmbiguousArgument" />
        <scope doc="&apos;#&quot;#`#" ilk="namespace" line="1733" lineend="1800" name="Arguable">
          <scope doc="&apos;#&quot;#`#" ilk="function" line="1742" lineend="1749" name="options=" signature="options=(opt)">
            <scope classrefs="Object" ilk="class" line="1744" lineend="1747" name="self" />
          </scope>
          <scope doc="&apos;#&quot;#`#" ilk="function" line="1766" lineend="1776" name="options" signature="options" />
          <scope doc="&apos;#&quot;#`#" ilk="function" line="1785" name="order!" signature="order!(&amp;blk)" />
          <scope ilk="function" line="1786" name="permute!" signature="permute!()" />
          <scope ilk="function" line="1787" name="parse!" signature="parse!()" />
          <scope attributes="__classmethod__" doc="&apos;#&quot;#`#" ilk="function" line="1792" lineend="1795" name="extend_object" signature="self.extend_object(obj)" />
          <scope attributes="__ctor__" ilk="function" line="1796" lineend="1799" name="initialize" signature="initialize(*args)" />
        </scope>
        <scope doc="&apos;#&quot;#`#" ilk="namespace" line="1808" lineend="1812" name="Acceptables" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="optparse/version">
      <scope classrefs="Object" doc="OptionParser internal utility" ilk="class" line="3" lineend="70" name="OptionParser">
        <scope ilk="function" line="4" lineend="47" name="show_version" signature="show_version(*pkg)" />
        <scope ilk="function" line="49" lineend="57" name="each_const" signature="each_const(path, klass = ::Object)" />
        <scope ilk="function" line="59" lineend="69" name="search_const" signature="search_const(klass, name)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="optparse/uri">
      <import line="3" module="optparse" symbol="*" />
      <import line="4" module="uri" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="optparse/time">
      <import line="1" module="optparse" symbol="*" />
      <import line="2" module="time" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="optparse/shellwords">
      <import line="3" module="shellwords" symbol="*" />
      <import line="4" module="optparse" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="optparse/date">
      <import line="1" module="optparse" symbol="*" />
      <import line="2" module="date" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl">
      <import line="17" module="openssl.so" symbol="*" />
      <import line="19" module="openssl/bn" symbol="*" />
      <import line="20" module="openssl/cipher" symbol="*" />
      <import line="21" module="openssl/digest" symbol="*" />
      <import line="22" module="openssl/ssl" symbol="*" />
      <import line="23" module="openssl/x509" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl/x509">
      <import line="17" module="openssl" symbol="*" />
      <scope ilk="namespace" line="19" lineend="154" name="OpenSSL">
        <scope ilk="namespace" line="20" lineend="153" name="X509">
          <scope classrefs="Object" ilk="class" line="21" lineend="45" name="ExtensionFactory">
            <scope ilk="function" line="22" lineend="28" name="create_extension" signature="create_extension(*arg)" />
            <scope ilk="function" line="30" lineend="33" name="create_ext_from_array" signature="create_ext_from_array(ary)" />
            <scope ilk="function" line="35" lineend="40" name="create_ext_from_string" signature="create_ext_from_string(str)" />
            <scope ilk="function" line="42" lineend="44" name="create_ext_from_hash" signature="create_ext_from_hash(hash)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="47" lineend="62" name="Extension">
            <scope ilk="function" line="48" lineend="53" name="to_s" signature="to_s" />
            <scope ilk="function" line="55" lineend="57" name="to_h" signature="to_h" />
            <scope ilk="function" line="59" lineend="61" name="to_a" signature="to_a" />
          </scope>
          <scope classrefs="Object" ilk="class" line="64" lineend="152" name="Name">
            <scope ilk="namespace" line="65" lineend="137" name="RFC2253DN">
              <scope doc="])((?:#{StringChar}|#{Pair})*)|" ilk="function" line="83" lineend="92" name="expand_pair" signature="expand_pair(str)" />
              <scope ilk="function" line="94" lineend="99" name="expand_hexstring" signature="expand_hexstring(str)" />
              <scope ilk="function" line="101" lineend="106" name="expand_value" signature="expand_value(str1, str2, str3)" />
              <scope ilk="function" line="108" lineend="136" name="scan" signature="scan(dn)" />
            </scope>
            <scope classrefs="Object" ilk="class" line="139" lineend="151" name="self">
              <scope ilk="function" line="140" lineend="143" name="parse_rfc2253" signature="parse_rfc2253(str, template=OBJECT_TYPE_TEMPLATE)" />
              <scope ilk="function" line="145" lineend="148" name="parse_openssl" signature="parse_openssl(str, template=OBJECT_TYPE_TEMPLATE)" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl/ssl">
      <import line="17" module="openssl" symbol="*" />
      <import line="18" module="openssl/buffering" symbol="*" />
      <import line="19" module="fcntl" symbol="*" />
      <scope ilk="namespace" line="21" lineend="135" name="OpenSSL">
        <scope ilk="namespace" line="22" lineend="134" name="SSL">
          <scope ilk="namespace" line="23" lineend="51" name="SocketForwarder">
            <scope ilk="function" line="24" lineend="26" name="addr" signature="addr" />
            <scope ilk="function" line="28" lineend="30" name="peeraddr" signature="peeraddr" />
            <scope ilk="function" line="32" lineend="34" name="getsockopt" signature="getsockopt(level, optname, optval)" />
            <scope ilk="function" line="36" lineend="38" name="setsockopt" signature="setsockopt(level, optname)" />
            <scope ilk="function" line="40" lineend="42" name="fcntl" signature="fcntl(*args)" />
            <scope ilk="function" line="44" lineend="46" name="closed?" signature="closed?" />
            <scope ilk="function" line="48" lineend="50" name="do_not_reverse_lookup=" signature="do_not_reverse_lookup=(flag)" />
          </scope>
          <scope ilk="namespace" line="53" lineend="60" name="Nonblock">
            <scope attributes="__ctor__" ilk="function" line="54" lineend="59" name="initialize" signature="initialize(*args)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="62" lineend="93" name="SSLSocket">
            <scope ilk="function" line="67" lineend="92" name="post_connection_check" signature="post_connection_check(hostname)" />
            <import symbol="Buffering" />
            <import symbol="SocketForwarder" />
            <import symbol="Nonblock" />
          </scope>
          <scope classrefs="Object" ilk="class" line="95" lineend="133" name="SSLServer">
            <scope ilk="function" line="97" lineend="97" name="start_immediately" />
            <scope ilk="function" line="97" lineend="97" name="start_immediately=" />
            <scope attributes="__ctor__" ilk="function" line="99" lineend="107" name="initialize" signature="initialize(svr, ctx)" />
            <scope ilk="function" line="109" lineend="111" name="to_io" signature="to_io" />
            <scope ilk="function" line="113" lineend="115" name="listen" signature="listen(backlog=5)" />
            <scope ilk="function" line="117" lineend="128" name="accept" signature="accept" />
            <scope ilk="function" line="130" lineend="132" name="close" signature="close" />
            <import symbol="SocketForwarder" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl/digest">
      <scope doc="Should we care what if somebody require this file directly?&#xA;require &apos;openssl&apos;" ilk="namespace" line="21" lineend="48" name="OpenSSL">
        <scope ilk="namespace" line="22" lineend="47" name="Digest" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl/cipher">
      <scope doc="Should we care what if somebody require this file directly?&#xA;require &apos;openssl&apos;" ilk="namespace" line="21" lineend="52" name="OpenSSL">
        <scope ilk="namespace" line="22" lineend="51" name="Cipher">
          <scope classrefs="Object" ilk="class" line="38" lineend="50" name="Cipher">
            <scope ilk="function" line="39" lineend="43" name="random_key" signature="random_key" />
            <scope ilk="function" line="45" lineend="49" name="random_iv" signature="random_iv" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl/buffering">
      <scope ilk="namespace" line="17" lineend="239" name="Buffering">
        <scope attributes="__ctor__" ilk="function" line="22" lineend="26" name="initialize" signature="initialize(*args)" />
        <scope doc="for reading." ilk="function" line="33" lineend="41" name="fill_rbuff" signature="fill_rbuff" />
        <scope ilk="function" line="43" lineend="52" name="consume_rbuff" signature="consume_rbuff(size=nil)" />
        <scope ilk="function" line="56" lineend="75" name="read" signature="read(size=nil, buf=nil)" />
        <scope ilk="function" line="77" lineend="100" name="readpartial" signature="readpartial(maxlen, buf=nil)" />
        <scope ilk="function" line="102" lineend="115" name="gets" signature="gets(eol=$/)" />
        <scope ilk="function" line="117" lineend="121" name="each" signature="each(eol=$/)" />
        <scope ilk="function" line="124" lineend="130" name="readlines" signature="readlines(eol=$/)" />
        <scope ilk="function" line="132" lineend="135" name="readline" signature="readline(eol=$/)" />
        <scope ilk="function" line="137" lineend="140" name="getc" signature="getc" />
        <scope ilk="function" line="142" lineend="146" name="each_byte" signature="each_byte" />
        <scope ilk="function" line="148" lineend="151" name="readchar" signature="readchar" />
        <scope ilk="function" line="153" lineend="155" name="ungetc" signature="ungetc(c)" />
        <scope ilk="function" line="157" lineend="160" name="eof?" signature="eof?" />
        <scope doc="for writing." ilk="function" line="168" lineend="187" name="do_write" signature="do_write(s)" />
        <scope ilk="function" line="191" lineend="194" name="write" signature="write(s)" />
        <scope ilk="function" line="196" lineend="199" name="&lt;&lt;" signature="&lt;&lt; (s" />
        <scope ilk="function" line="201" lineend="214" name="puts" signature="puts(*args)" />
        <scope ilk="function" line="216" lineend="221" name="print" signature="print(*args)" />
        <scope ilk="function" line="223" lineend="226" name="printf" signature="printf(s, *args)" />
        <scope ilk="function" line="228" lineend="233" name="flush" signature="flush" />
        <scope ilk="function" line="235" lineend="238" name="close" signature="close" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="openssl/bn">
      <scope doc="Should we care what if somebody require this file directly?&#xA;require &apos;openssl&apos;" ilk="namespace" line="21" lineend="25" name="OpenSSL">
        <scope classrefs="Object" ilk="class" line="22" lineend="24" name="BN">
          <import symbol="Comparable" />
        </scope>
      </scope>
      <scope classrefs="Object" doc="OpenSSL" ilk="class" line="30" lineend="34" name="Integer">
        <scope ilk="function" line="31" lineend="33" name="to_bn" signature="to_bn" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="open3">
      <scope doc="open3.rb: Spawn a program like popen, but with stderr, too." ilk="namespace" line="13" lineend="57" name="Open3">
        <scope doc="[stdin, stdout, stderr] = popen3(command);" ilk="function" line="15" lineend="55" name="popen3" signature="popen3(*cmd)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="open-uri">
      <import line="57" module="uri" symbol="*" />
      <import line="58" module="stringio" symbol="*" />
      <import line="59" module="time" symbol="*" />
      <scope doc="= open-uri.rb" ilk="namespace" line="61" lineend="92" name="Kernel">
        <scope doc=":nodoc: makes possible to open various resources including&#xA;URIs." ilk="function" line="80" lineend="90" name="open" signature="open(name, *rest, &amp;block)" />
      </scope>
      <scope ilk="namespace" line="94" lineend="546" name="OpenURI">
        <scope attributes="__classmethod__" ilk="function" line="102" lineend="109" name="check_options" signature="OpenURI.check_options(options)" />
        <scope attributes="__classmethod__" ilk="function" line="111" lineend="119" name="scan_open_optional_arguments" signature="OpenURI.scan_open_optional_arguments(*rest)" />
        <scope attributes="__classmethod__" ilk="function" line="121" lineend="145" name="open_uri" signature="OpenURI.open_uri(name, *rest)" />
        <scope attributes="__classmethod__" ilk="function" line="147" lineend="194" name="open_loop" signature="OpenURI.open_loop(uri, options)" />
        <scope attributes="__classmethod__" ilk="function" line="196" lineend="202" name="redirectable?" signature="OpenURI.redirectable?(uri1, uri2)" />
        <scope attributes="__classmethod__" ilk="function" line="204" lineend="292" name="open_http" signature="OpenURI.open_http(buf, target, proxy, options)">
          <import line="214" module="net/http" symbol="*" />
          <import line="233" module="net/https" symbol="*" />
        </scope>
        <scope classrefs="StandardError" ilk="class" line="294" lineend="300" name="HTTPError">
          <scope attributes="__ctor__" ilk="function" line="295" lineend="298" name="initialize" signature="initialize(message, io)" />
          <scope ilk="function" line="299" lineend="299" name="io" />
        </scope>
        <scope classrefs="Object" ilk="class" line="302" lineend="327" name="Buffer">
          <scope attributes="__ctor__" doc=":nodoc:" ilk="function" line="303" lineend="306" name="initialize" signature="initialize" />
          <scope ilk="function" line="307" lineend="307" name="size" />
          <scope ilk="function" line="310" lineend="321" name="&lt;&lt;" signature="&lt;&lt;(str">
            <import line="314" module="tempfile" symbol="*" />
          </scope>
          <scope ilk="function" line="323" lineend="326" name="io" signature="io" />
        </scope>
        <scope doc="Mixin for holding meta-information." ilk="namespace" line="330" lineend="435" name="Meta">
          <scope attributes="__classmethod__" ilk="function" line="331" lineend="344" name="init" signature="Meta.init(obj, src=nil)" />
          <scope doc="returns a Hash which represents header fields." ilk="function" line="357" lineend="359" name="meta_add_field" signature="meta_add_field(name, value)" />
          <scope doc="returns a Time which represents Last-Modified field." ilk="function" line="362" lineend="368" name="last_modified" signature="last_modified" />
          <scope ilk="function" line="375" lineend="390" name="content_type_parse" signature="content_type_parse" />
          <scope doc="returns &quot;type/subtype&quot; which is MIME Content-Type." ilk="function" line="395" lineend="398" name="content_type" signature="content_type" />
          <scope doc="returns a charset parameter in Content-Type field." ilk="function" line="410" lineend="422" name="charset" signature="charset" />
          <scope doc="returns a list of encodings in Content-Encoding field as an&#xA;Array of String." ilk="function" line="427" lineend="434" name="content_encoding" signature="content_encoding" />
        </scope>
        <scope doc="Mixin for HTTP and FTP URIs." ilk="namespace" line="438" lineend="545" name="OpenRead">
          <scope doc="OpenURI::OpenRead#open provides `open&apos; for URI::HTTP and&#xA;URI::FTP." ilk="function" line="530" lineend="532" name="open" signature="open(*rest, &amp;block)" />
          <scope doc="OpenURI::OpenRead#read([options]) reads a content referenced&#xA;by self and returns the content as string." ilk="function" line="538" lineend="544" name="read" signature="read(options={})" />
        </scope>
      </scope>
      <scope ilk="namespace" line="548" lineend="691" name="URI">
        <scope classrefs="Object" ilk="class" line="549" lineend="625" name="Generic">
          <scope doc="returns a proxy URI." ilk="function" line="563" lineend="624" name="find_proxy" signature="find_proxy">
            <import line="600" module="socket" symbol="*" />
          </scope>
        </scope>
        <scope classrefs="Object" ilk="class" line="627" lineend="633" name="HTTP">
          <scope ilk="function" line="628" lineend="630" name="buffer_open" signature="buffer_open(buf, proxy, options)" />
          <import symbol="OpenURI::OpenRead" />
        </scope>
        <scope classrefs="Object" ilk="class" line="635" lineend="690" name="FTP">
          <scope ilk="function" line="636" lineend="687" name="buffer_open" signature="buffer_open(buf, proxy, options)">
            <import line="641" module="net/ftp" symbol="*" />
          </scope>
          <import symbol="OpenURI::OpenRead" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="observer">
      <scope doc="observer.rb implements the _Observer_ object-oriented design&#xA;pattern." ilk="namespace" line="117" lineend="192" name="Observable">
        <scope doc="Add +observer+ as an observer on this object." ilk="function" line="123" lineend="129" name="add_observer" signature="add_observer(observer)" />
        <scope doc="Delete +observer+ as an observer on this object." ilk="function" line="135" lineend="137" name="delete_observer" signature="delete_observer(observer)" />
        <scope doc="Delete all observers associated with this object." ilk="function" line="142" lineend="144" name="delete_observers" signature="delete_observers" />
        <scope doc="Return the number of observers associated with this object." ilk="function" line="149" lineend="155" name="count_observers" signature="count_observers" />
        <scope doc="Set the changed state of this object." ilk="function" line="161" lineend="163" name="changed" signature="changed(state=true)" />
        <scope doc="Query the changed state of this object." ilk="function" line="168" lineend="174" name="changed?" signature="changed?" />
        <scope doc="If this object&apos;s changed state is +true+, invoke the update&#xA;method in each currently associated observer in turn,&#xA;passing it the given arguments." ilk="function" line="181" lineend="190" name="notify_observers" signature="notify_observers(*arg)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/telnets">
      <import line="56" module="net/telnet" symbol="*" />
      <import line="57" module="openssl" symbol="*" />
      <scope ilk="namespace" line="59" lineend="248" name="Net">
        <scope classrefs="Object" ilk="class" line="60" lineend="247" name="Telnet">
          <scope ilk="function" line="61" lineend="61" name="ssl" />
          <scope doc="&quot;\001&quot; # &quot;\x01&quot; # FOLLOWS (for STARTTLS)" ilk="function" line="68" name="ssl?" signature="ssl?" />
          <scope ilk="function" line="70" lineend="144" name="preprocess" signature="preprocess(string)" />
          <scope doc="preprocess" ilk="function" line="148" lineend="223" name="waitfor" signature="waitfor(options)" />
          <scope ilk="function" line="227" lineend="245" name="detect_sub_negotiation" signature="detect_sub_negotiation(data, pos)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/telnet">
      <import line="12" module="socket" symbol="*" />
      <import line="13" module="delegate" symbol="*" />
      <import line="14" module="timeout" symbol="*" />
      <import line="15" module="English" symbol="*" />
      <scope doc="= net/telnet.rb - Simple Telnet Client Library" ilk="namespace" line="17" lineend="741" name="Net">
        <scope classrefs="SimpleDelegator" doc="== Net::Telnet" ilk="class" line="96" lineend="740" name="Telnet">
          <scope attributes="__ctor__" doc=":startdoc:" ilk="function" line="275" lineend="372" name="initialize" signature="initialize(options)">
            <scope doc=":yield: mesg" ilk="function" line="310" lineend="330" name="@dumplog" signature="@dumplog." />
          </scope>
          <scope ilk="function" line="377" lineend="377" name="sock" />
          <scope doc="Set telnet command interpretation on (+mode+ == true) or off&#xA;(+mode+ == false), or return the current value (+mode+ not&#xA;provided)." ilk="function" line="384" lineend="393" name="telnetmode" signature="telnetmode(mode = nil)" />
          <scope doc="Turn telnet command interpretation on (true) or off (false)." ilk="function" line="398" lineend="404" name="telnetmode=" signature="telnetmode=(mode)" />
          <scope doc="Turn newline conversion on (+mode+ == false) or off (+mode+&#xA;== true), or return the current value (+mode+ is not&#xA;specified)." ilk="function" line="408" lineend="417" name="binmode" signature="binmode(mode = nil)" />
          <scope doc="Turn newline conversion on (false) or off (true)." ilk="function" line="420" lineend="426" name="binmode=" signature="binmode=(mode)" />
          <scope doc="Preprocess received data from the host." ilk="function" line="434" lineend="489" name="preprocess" signature="preprocess(string)" />
          <scope doc="preprocess Read data from the host until a certain sequence&#xA;is matched." ilk="function" line="524" lineend="590" name="waitfor" signature="waitfor(options)" />
          <scope doc="Write +string+ to the host." ilk="function" line="596" lineend="603" name="write" signature="write(string)" />
          <scope doc="Sends a string to the host." ilk="function" line="611" lineend="628" name="print" signature="print(string)" />
          <scope doc="Sends a string to the host." ilk="function" line="633" lineend="635" name="puts" signature="puts(string)" />
          <scope doc="Send a command to the host." ilk="function" line="664" lineend="682" name="cmd" signature="cmd(options)" />
          <scope doc="Login to the host with a given username and password." ilk="function" line="706" lineend="738" name="login" signature="login(options, password = nil)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/smtp">
      <import line="23" module="net/protocol" symbol="*" />
      <import line="24" module="digest/md5" symbol="*" />
      <scope doc="= net/smtp.rb" ilk="namespace" line="26" lineend="697" name="Net">
        <scope doc="Module mixed in to all SMTP error classes" ilk="namespace" line="29" lineend="32" name="SMTPError" />
        <scope classrefs="ProtoAuthError" doc="Represents an SMTP authentication error." ilk="class" line="35" lineend="37" name="SMTPAuthenticationError">
          <import symbol="SMTPError" />
        </scope>
        <scope classrefs="ProtoServerError" doc="Represents SMTP error code 420 or 450, a temporary error." ilk="class" line="40" lineend="42" name="SMTPServerBusy">
          <import symbol="SMTPError" />
        </scope>
        <scope classrefs="ProtoSyntaxError" doc="Represents an SMTP command syntax error (error code 500)" ilk="class" line="45" lineend="47" name="SMTPSyntaxError">
          <import symbol="SMTPError" />
        </scope>
        <scope classrefs="ProtoFatalError" doc="Represents a fatal SMTP error (error code 5xx, except for&#xA;500)" ilk="class" line="50" lineend="52" name="SMTPFatalError">
          <import symbol="SMTPError" />
        </scope>
        <scope classrefs="ProtoUnknownError" doc="Unexpected reply code returned from server." ilk="class" line="55" lineend="57" name="SMTPUnknownError">
          <import symbol="SMTPError" />
        </scope>
        <scope classrefs="Object" doc="= Net::SMTP" ilk="class" line="164" lineend="693" name="SMTP">
          <scope attributes="__classmethod__" doc="The default SMTP port, port 25." ilk="function" line="169" lineend="171" name="default_port" signature="SMTP.default_port" />
          <scope attributes="__ctor__" doc="Creates a new Net::SMTP object." ilk="function" line="184" lineend="194" name="initialize" signature="initialize( address, port = nil )" />
          <scope doc="Provide human-readable stringification of class state." ilk="function" line="197" lineend="199" name="inspect" signature="inspect" />
          <scope doc="+true+ if the SMTP object uses ESMTP (which it does by&#xA;default)." ilk="function" line="202" lineend="204" name="esmtp?" signature="esmtp?" />
          <scope doc="Set whether to use ESMTP or not." ilk="function" line="213" lineend="215" name="esmtp=" signature="esmtp=( bool )" />
          <scope ilk="function" line="220" lineend="220" name="address" />
          <scope ilk="function" line="223" lineend="223" name="port" />
          <scope ilk="function" line="228" lineend="228" name="open_timeout" />
          <scope ilk="function" line="228" lineend="228" name="open_timeout=" />
          <scope ilk="function" line="233" lineend="233" name="read_timeout" />
          <scope doc="Set the number of seconds to wait until timing-out a read(2)&#xA;call." ilk="function" line="237" lineend="240" name="read_timeout=" signature="read_timeout=( sec )" />
          <scope doc="WARNING: This method causes serious security holes." ilk="function" line="256" lineend="258" name="set_debug_output" signature="set_debug_output( arg )" />
          <scope attributes="__classmethod__" doc="SMTP session control" ilk="function" line="312" lineend="317" name="start" signature="SMTP.start( address, port = nil, helo = &apos;localhost.localdomain&apos;, user = nil, secret = nil, authtype = nil, &amp;block)" />
          <scope doc="+true+ if the SMTP session has been started." ilk="function" line="320" lineend="322" name="started?" signature="started?" />
          <scope doc="Opens a TCP connection and starts the SMTP session." ilk="function" line="374" lineend="387" name="start" signature="start( helo = &apos;localhost.localdomain&apos;, user = nil, secret = nil, authtype = nil )" />
          <scope ilk="function" line="389" lineend="415" name="do_start" signature="do_start( helodomain, user, secret, authtype )" />
          <scope doc="Finishes the SMTP session and closes TCP connection." ilk="function" line="420" lineend="423" name="finish" signature="finish" />
          <scope ilk="function" line="425" lineend="432" name="do_finish" signature="do_finish" />
          <scope doc="Sends +msgstr+ as a message." ilk="function" line="471" lineend="475" name="send_message" signature="send_message( msgstr, from_addr, *to_addrs )" />
          <scope doc="obsolete" ilk="function" line="524" lineend="528" name="open_message_stream" signature="open_message_stream( from_addr, *to_addrs, &amp;block )" />
          <scope doc="obsolete" ilk="function" line="534" lineend="554" name="send0" signature="send0( from_addr, to_addrs )" />
          <scope doc="auth" ilk="function" line="562" lineend="568" name="check_auth_args" signature="check_auth_args( user, secret, authtype )" />
          <scope ilk="function" line="570" lineend="572" name="authenticate" signature="authenticate( user, secret, authtype )" />
          <scope ilk="function" line="574" lineend="578" name="auth_plain" signature="auth_plain( user, secret )" />
          <scope ilk="function" line="580" lineend="587" name="auth_login" signature="auth_login( user, secret )" />
          <scope ilk="function" line="589" lineend="609" name="auth_cram_md5" signature="auth_cram_md5( user, secret )" />
          <scope ilk="function" line="611" lineend="614" name="base64_encode" signature="base64_encode( str )" />
          <scope doc="SMTP command dispatcher" ilk="function" line="622" lineend="624" name="helo" signature="helo( domain )" />
          <scope ilk="function" line="626" lineend="628" name="ehlo" signature="ehlo( domain )" />
          <scope ilk="function" line="630" lineend="632" name="mailfrom" signature="mailfrom( fromaddr )" />
          <scope ilk="function" line="634" lineend="636" name="rcptto" signature="rcptto( to )" />
          <scope ilk="function" line="638" lineend="640" name="quit" signature="quit" />
          <scope doc="row level library" ilk="function" line="648" lineend="654" name="getok" signature="getok( fmt, *args )" />
          <scope ilk="function" line="656" lineend="659" name="get_response" signature="get_response( fmt, *args )" />
          <scope ilk="function" line="661" lineend="669" name="recv_response" signature="recv_response" />
          <scope ilk="function" line="671" lineend="681" name="check_response" signature="check_response( res, allow_continue = false )" />
          <scope ilk="function" line="683" lineend="691" name="critical" signature="critical( &amp;block )" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/protocol">
      <import line="21" module="socket" symbol="*" />
      <import line="22" module="timeout" symbol="*" />
      <scope doc="= net/protocol.rb" ilk="namespace" line="24" lineend="390" name="Net">
        <scope classrefs="Object" doc=":nodoc:" ilk="class" line="26" lineend="35" name="Protocol">
          <scope attributes="__classmethod__" doc=":nodoc: internal use only" ilk="function" line="28" lineend="34" name="protocol_param" signature="Protocol.protocol_param(name, val)" />
        </scope>
        <scope classrefs="StandardError" ilk="class" line="38" lineend="38" name="ProtocolError" />
        <scope classrefs="ProtocolError" ilk="class" line="39" lineend="39" name="ProtoSyntaxError" />
        <scope classrefs="ProtocolError" ilk="class" line="40" lineend="40" name="ProtoFatalError" />
        <scope classrefs="ProtocolError" ilk="class" line="41" lineend="41" name="ProtoUnknownError" />
        <scope classrefs="ProtocolError" ilk="class" line="42" lineend="42" name="ProtoServerError" />
        <scope classrefs="ProtocolError" ilk="class" line="43" lineend="43" name="ProtoAuthError" />
        <scope classrefs="ProtocolError" ilk="class" line="44" lineend="44" name="ProtoCommandError" />
        <scope classrefs="ProtocolError" ilk="class" line="45" lineend="45" name="ProtoRetriableError" />
        <scope classrefs="Object" ilk="class" line="49" lineend="199" name="BufferedIO">
          <scope attributes="__ctor__" doc=":nodoc: internal use only" ilk="function" line="50" lineend="55" name="initialize" signature="initialize(io)" />
          <scope ilk="function" line="57" lineend="57" name="io" />
          <scope ilk="function" line="58" lineend="58" name="read_timeout" />
          <scope ilk="function" line="58" lineend="58" name="read_timeout=" />
          <scope ilk="function" line="59" lineend="59" name="debug_output" />
          <scope ilk="function" line="59" lineend="59" name="debug_output=" />
          <scope ilk="function" line="61" lineend="63" name="inspect" signature="inspect" />
          <scope ilk="function" line="65" lineend="67" name="closed?" signature="closed?" />
          <scope ilk="function" line="69" lineend="71" name="close" signature="close" />
          <scope doc="Read" ilk="function" line="79" lineend="95" name="read" signature="read(len, dest = &apos;&apos;, ignore_eof = false)" />
          <scope ilk="function" line="97" lineend="111" name="read_all" signature="read_all(dest = &apos;&apos;)" />
          <scope ilk="function" line="113" lineend="123" name="readuntil" signature="readuntil(terminator, ignore_eof = false)" />
          <scope ilk="function" line="125" lineend="127" name="readline" signature="readline" />
          <scope ilk="function" line="131" lineend="135" name="rbuf_fill" signature="rbuf_fill" />
          <scope ilk="function" line="137" lineend="141" name="rbuf_consume" signature="rbuf_consume(len)" />
          <scope doc="Write" ilk="function" line="149" lineend="153" name="write" signature="write(str)" />
          <scope ilk="function" line="155" lineend="159" name="writeline" signature="writeline(str)" />
          <scope ilk="function" line="163" lineend="171" name="writing" signature="writing" />
          <scope ilk="function" line="173" lineend="178" name="write0" signature="write0(str)" />
          <scope doc="Logging" ilk="function" line="186" lineend="189" name="LOG_off" signature="LOG_off" />
          <scope ilk="function" line="191" lineend="193" name="LOG_on" signature="LOG_on" />
          <scope ilk="function" line="195" lineend="198" name="LOG" signature="LOG(msg)" />
        </scope>
        <scope classrefs="BufferedIO" ilk="class" line="202" lineend="325" name="InternetMessageIO">
          <scope attributes="__classmethod__" doc=":nodoc: internal use only" ilk="function" line="203" lineend="211" name="old_open" signature="InternetMessageIO.old_open(addr, port, open_timeout = nil, read_timeout = nil, debug_output = nil)" />
          <scope attributes="__ctor__" ilk="function" line="213" lineend="216" name="initialize" signature="initialize(io)" />
          <scope doc="Read" ilk="function" line="222" lineend="232" name="each_message_chunk" signature="each_message_chunk" />
          <scope doc="*library private* (cannot handle &apos;break&apos;)" ilk="function" line="235" lineend="239" name="each_list_item" signature="each_list_item" />
          <scope ilk="function" line="241" lineend="247" name="write_message_0" signature="write_message_0(src)" />
          <scope doc="Write" ilk="function" line="253" lineend="264" name="write_message" signature="write_message(src)" />
          <scope ilk="function" line="266" lineend="281" name="write_message_by_block" signature="write_message_by_block(&amp;block)" />
          <scope ilk="function" line="285" lineend="295" name="using_each_crlf_line" signature="using_each_crlf_line" />
          <scope ilk="function" line="297" lineend="303" name="each_crlf_line" signature="each_crlf_line(src)" />
          <scope ilk="function" line="305" lineend="324" name="buffer_filling" signature="buffer_filling(buf, src)" />
        </scope>
        <scope classrefs="Object" doc="The writer adapter class" ilk="class" line="331" lineend="359" name="WriteAdapter">
          <scope attributes="__ctor__" ilk="function" line="332" lineend="335" name="initialize" signature="initialize(socket, method)" />
          <scope ilk="function" line="337" lineend="339" name="inspect" signature="inspect" />
          <scope ilk="function" line="341" lineend="343" name="write" signature="write(str)" />
          <scope ilk="function" line="347" lineend="350" name="&lt;&lt;" signature="&lt;&lt;(str" />
          <scope ilk="function" line="352" lineend="354" name="puts" signature="puts(str = &apos;&apos;)" />
          <scope ilk="function" line="356" lineend="358" name="printf" signature="printf(*args)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="362" lineend="383" name="ReadAdapter">
          <scope attributes="__ctor__" doc=":nodoc: internal use only" ilk="function" line="363" lineend="365" name="initialize" signature="initialize(block)" />
          <scope ilk="function" line="367" lineend="369" name="inspect" signature="inspect" />
          <scope ilk="function" line="371" lineend="373" name="&lt;&lt;" signature="&lt;&lt;(str" />
          <scope doc="This method is needed because @block must be called by&#xA;yield, not Proc#call." ilk="function" line="380" lineend="382" name="call_block" signature="call_block(str)" />
        </scope>
        <scope ilk="namespace" line="386" lineend="388" name="NetPrivate" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/pop">
      <import line="23" module="net/protocol" symbol="*" />
      <import line="24" module="digest/md5" symbol="*" />
      <scope doc="= net/pop.rb" ilk="namespace" line="26" lineend="878" name="Net">
        <scope classrefs="ProtocolError" doc="Non-authentication POP3 protocol error (reply code &quot;-ERR&quot;,&#xA;except authentication)." ilk="class" line="30" lineend="30" name="POPError" />
        <scope classrefs="ProtoAuthError" doc="POP3 authentication error." ilk="class" line="33" lineend="33" name="POPAuthenticationError" />
        <scope classrefs="POPError" doc="Unexpected response from the server." ilk="class" line="36" lineend="36" name="POPBadResponse" />
        <scope classrefs="Protocol" doc="= Net::POP3" ilk="class" line="191" lineend="574" name="POP3">
          <scope attributes="__classmethod__" doc="Class Parameters" ilk="function" line="200" lineend="202" name="default_port" signature="POP3.default_port" />
          <scope attributes="__classmethod__" ilk="function" line="204" lineend="206" name="socket_type" signature="POP3.socket_type" />
          <scope attributes="__classmethod__" doc="Utilities" ilk="function" line="223" lineend="225" name="APOP" signature="POP3.APOP( isapop )" />
          <scope attributes="__classmethod__" doc="Starts a POP3 session and iterates over each POPMail object,&#xA;yielding it to the +block+." ilk="function" line="247" lineend="253" name="foreach" signature="POP3.foreach( address, port = nil, account = nil, password = nil, isapop = false, &amp;block )" />
          <scope attributes="__classmethod__" doc="Starts a POP3 session and deletes all messages on the&#xA;server." ilk="function" line="268" lineend="274" name="delete_all" signature="POP3.delete_all( address, port = nil, account = nil, password = nil, isapop = false, &amp;block )" />
          <scope attributes="__classmethod__" doc="Opens a POP3 session, attempts authentication, and quits." ilk="function" line="290" lineend="294" name="auth_only" signature="POP3.auth_only( address, port = nil, account = nil, password = nil, isapop = false )" />
          <scope doc="Starts a pop3 session, attempts authentication, and quits." ilk="function" line="299" lineend="304" name="auth_only" signature="auth_only( account, password )" />
          <scope attributes="__classmethod__" doc="Session management" ilk="function" line="326" lineend="330" name="start" signature="POP3.start( address, port = nil, account = nil, password = nil, isapop = false, &amp;block )" />
          <scope attributes="__ctor__" doc="Creates a new POP3 object." ilk="function" line="342" lineend="357" name="initialize" signature="initialize( addr, port = nil, isapop = false )" />
          <scope doc="Does this instance use APOP authentication?" ilk="function" line="360" lineend="362" name="apop?" signature="apop?" />
          <scope doc="Provide human-readable stringification of class state." ilk="function" line="365" lineend="367" name="inspect" signature="inspect" />
          <scope doc="*WARNING*: This method causes a serious security hole." ilk="function" line="382" lineend="384" name="set_debug_output" signature="set_debug_output( arg )" />
          <scope ilk="function" line="387" lineend="387" name="address" />
          <scope ilk="function" line="390" lineend="390" name="port" />
          <scope ilk="function" line="395" lineend="395" name="open_timeout" />
          <scope ilk="function" line="395" lineend="395" name="open_timeout=" />
          <scope ilk="function" line="400" lineend="400" name="read_timeout" />
          <scope doc="Set the read timeout." ilk="function" line="403" lineend="406" name="read_timeout=" signature="read_timeout=( sec )" />
          <scope doc="+true+ if the POP3 session has started." ilk="function" line="409" lineend="411" name="started?" signature="started?" />
          <scope doc=":nodoc: obsolete Starts a POP3 session." ilk="function" line="421" lineend="435" name="start" signature="start( account, password )" />
          <scope ilk="function" line="437" lineend="450" name="do_start" signature="do_start( account, password )" />
          <scope ilk="function" line="453" lineend="454" name="on_connect" signature="on_connect" />
          <scope doc="Finishes a POP3 session and closes TCP connection." ilk="function" line="458" lineend="461" name="finish" signature="finish" />
          <scope ilk="function" line="463" lineend="471" name="do_finish" signature="do_finish" />
          <scope ilk="function" line="474" lineend="478" name="command" signature="command" />
          <scope doc="POP protocol wrapper" ilk="function" line="486" lineend="490" name="n_mails" signature="n_mails" />
          <scope doc="Returns the total size in bytes of all the messages on the&#xA;POP server." ilk="function" line="493" lineend="497" name="n_bytes" signature="n_bytes" />
          <scope doc="Returns an array of Net::POPMail objects, representing all&#xA;the messages on the server." ilk="function" line="505" lineend="517" name="mails" signature="mails" />
          <scope doc="Yields each message to the passed-in block in turn." ilk="function" line="527" lineend="529" name="each_mail" signature="each_mail( &amp;block )" />
          <scope doc="Deletes all messages on the server." ilk="function" line="549" lineend="554" name="delete_all" signature="delete_all" />
          <scope doc="Resets the session. This clears all &quot;deleted&quot; marks from&#xA;messages." ilk="function" line="559" lineend="566" name="reset" signature="reset" />
          <scope ilk="function" line="568" lineend="572" name="set_all_uids" signature="set_all_uids" />
        </scope>
        <scope classrefs="POP3" doc="This class is equivalent to POP3, except that it uses APOP&#xA;authentication." ilk="class" line="584" lineend="589" name="APOP">
          <scope doc="Always returns true." ilk="function" line="586" lineend="588" name="apop?" signature="apop?" />
        </scope>
        <scope classrefs="Object" doc="This class represents a message which exists on the POP&#xA;server." ilk="class" line="599" lineend="744" name="POPMail">
          <scope attributes="__ctor__" ilk="function" line="601" lineend="608" name="initialize" signature="initialize( num, len, pop, cmd )" />
          <scope ilk="function" line="611" lineend="611" name="number" />
          <scope ilk="function" line="614" lineend="614" name="length" />
          <scope doc="Provide human-readable stringification of class state." ilk="function" line="618" lineend="620" name="inspect" signature="inspect" />
          <scope doc="This method fetches the message." ilk="function" line="660" lineend="670" name="pop" signature="pop( dest = &apos;&apos;, &amp;block )" />
          <scope doc=":nodoc: obsolete Fetches the message header and +lines+&#xA;lines of body." ilk="function" line="680" lineend="685" name="top" signature="top( lines, dest = &apos;&apos; )" />
          <scope doc="Fetches the message header." ilk="function" line="692" lineend="694" name="header" signature="header( dest = &apos;&apos; )" />
          <scope doc="Marks a message for deletion on the server." ilk="function" line="716" lineend="719" name="delete" signature="delete" />
          <scope doc=":nodoc: obsolete True if the mail has been deleted." ilk="function" line="724" lineend="726" name="deleted?" signature="deleted?" />
          <scope doc="Returns the unique-id of the message." ilk="function" line="732" lineend="736" name="unique_id" signature="unique_id" />
          <scope ilk="function" line="740" lineend="742" name="uid=" signature="uid=( uid )" />
        </scope>
        <scope classrefs="Object" doc="class POPMail" ilk="class" line="747" lineend="876" name="POP3Command">
          <scope attributes="__ctor__" doc=":nodoc: internal use only" ilk="function" line="749" lineend="754" name="initialize" signature="initialize( sock )" />
          <scope ilk="function" line="756" lineend="758" name="inspect" signature="inspect" />
          <scope ilk="function" line="760" lineend="765" name="auth" signature="auth( account, password )" />
          <scope ilk="function" line="767" lineend="775" name="apop" signature="apop( account, password )" />
          <scope ilk="function" line="777" lineend="788" name="list" signature="list" />
          <scope ilk="function" line="790" lineend="795" name="stat" signature="stat" />
          <scope ilk="function" line="797" lineend="799" name="rset" signature="rset" />
          <scope ilk="function" line="801" lineend="806" name="top" signature="top( num, lines = 0, &amp;block )" />
          <scope ilk="function" line="808" lineend="813" name="retr" signature="retr( num, &amp;block )" />
          <scope ilk="function" line="815" lineend="817" name="dele" signature="dele( num )" />
          <scope ilk="function" line="819" lineend="834" name="uidl" signature="uidl( num = nil )" />
          <scope ilk="function" line="836" lineend="838" name="quit" signature="quit" />
          <scope ilk="function" line="842" lineend="845" name="getok" signature="getok( fmt, *fargs )" />
          <scope ilk="function" line="847" lineend="850" name="get_response" signature="get_response( fmt, *fargs )" />
          <scope ilk="function" line="852" lineend="854" name="recv_response" signature="recv_response" />
          <scope ilk="function" line="856" lineend="859" name="check_response" signature="check_response( res )" />
          <scope ilk="function" line="861" lineend="864" name="check_response_auth" signature="check_response_auth( res )" />
          <scope ilk="function" line="866" lineend="874" name="critical" signature="critical" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/imap">
      <import line="16" module="socket" symbol="*" />
      <import line="17" module="monitor" symbol="*" />
      <import line="18" module="digest/md5" symbol="*" />
      <import line="20" module="openssl" symbol="*" />
      <import line="3206" module="getoptlong" symbol="*" />
      <scope doc="= net/imap.rb" ilk="namespace" line="24" lineend="3202" name="Net">
        <scope classrefs="Object" doc="Net::IMAP implements Internet Message Access Protocol (IMAP)&#xA;client functionality." ilk="class" line="200" lineend="3201" name="IMAP">
          <scope ilk="function" line="208" lineend="208" name="greeting" />
          <scope ilk="function" line="217" lineend="217" name="responses" />
          <scope ilk="function" line="220" lineend="220" name="response_handlers" />
          <scope ilk="function" line="223" lineend="223" name="client_thread" />
          <scope ilk="function" line="223" lineend="223" name="client_thread=" />
          <scope attributes="__classmethod__" doc="Returns the debug mode." ilk="function" line="263" lineend="265" name="debug" signature="self.debug" />
          <scope attributes="__classmethod__" doc="Sets the debug mode." ilk="function" line="268" lineend="270" name="debug=" signature="self.debug=(val)" />
          <scope attributes="__classmethod__" doc="Adds an authenticator for Net::IMAP#authenticate." ilk="function" line="281" lineend="283" name="add_authenticator" signature="self.add_authenticator(auth_type, authenticator)" />
          <scope doc="Disconnects from the server." ilk="function" line="286" lineend="290" name="disconnect" signature="disconnect" />
          <scope doc="Returns true if disconnected from the server." ilk="function" line="293" lineend="295" name="disconnected?" signature="disconnected?" />
          <scope doc="Sends a CAPABILITY command, and returns an array of&#xA;capabilities that the server supports." ilk="function" line="307" lineend="312" name="capability" signature="capability" />
          <scope doc="Sends a NOOP command to the server. It does nothing." ilk="function" line="315" lineend="317" name="noop" signature="noop" />
          <scope doc="Sends a LOGOUT command to inform the server that the client&#xA;is done with the connection." ilk="function" line="321" lineend="323" name="logout" signature="logout" />
          <scope doc="Sends an AUTHENTICATE command to authenticate the client." ilk="function" line="350" lineend="365" name="authenticate" signature="authenticate(auth_type, *args)" />
          <scope doc="Sends a LOGIN command to identify the client and carries the&#xA;plaintext +password+ authenticating this +user+." ilk="function" line="373" lineend="375" name="login" signature="login(user, password)" />
          <scope doc="Sends a SELECT command to select a +mailbox+ so that&#xA;messages in the +mailbox+ can be accessed." ilk="function" line="389" lineend="394" name="select" signature="select(mailbox)" />
          <scope doc="Sends a EXAMINE command to select a +mailbox+ so that&#xA;messages in the +mailbox+ can be accessed." ilk="function" line="402" lineend="407" name="examine" signature="examine(mailbox)" />
          <scope doc="Sends a CREATE command to create a new +mailbox+." ilk="function" line="413" lineend="415" name="create" signature="create(mailbox)" />
          <scope doc="Sends a DELETE command to remove the +mailbox+." ilk="function" line="422" lineend="424" name="delete" signature="delete(mailbox)" />
          <scope doc="Sends a RENAME command to change the name of the +mailbox+&#xA;to +newname+." ilk="function" line="433" lineend="435" name="rename" signature="rename(mailbox, newname)" />
          <scope doc="Sends a SUBSCRIBE command to add the specified +mailbox+&#xA;name to the server&apos;s set of &quot;active&quot; or &quot;subscribed&quot;&#xA;mailboxes as returned by #lsub()." ilk="function" line="443" lineend="445" name="subscribe" signature="subscribe(mailbox)" />
          <scope doc="Sends a UNSUBSCRIBE command to remove the specified&#xA;+mailbox+ name from the server&apos;s set of &quot;active&quot; or&#xA;&quot;subscribed&quot; mailboxes." ilk="function" line="453" lineend="455" name="unsubscribe" signature="unsubscribe(mailbox)" />
          <scope doc="Sends a LIST command, and returns a subset of names from the&#xA;complete set of all names available to the client." ilk="function" line="479" lineend="484" name="list" signature="list(refname, mailbox)" />
          <scope doc="Sends the GETQUOTAROOT command along with specified&#xA;+mailbox+." ilk="function" line="490" lineend="498" name="getquotaroot" signature="getquotaroot(mailbox)" />
          <scope doc="Sends the GETQUOTA command along with specified +mailbox+." ilk="function" line="504" lineend="509" name="getquota" signature="getquota(mailbox)" />
          <scope doc="Sends a SETQUOTA command along with the specified +mailbox+&#xA;and +quota+." ilk="function" line="516" lineend="523" name="setquota" signature="setquota(mailbox, quota)" />
          <scope doc="Sends the SETACL command along with +mailbox+, +user+ and&#xA;the +rights+ that user is to have on that mailbox." ilk="function" line="529" lineend="535" name="setacl" signature="setacl(mailbox, user, rights)" />
          <scope doc="Send the GETACL command along with specified +mailbox+." ilk="function" line="540" lineend="545" name="getacl" signature="getacl(mailbox)" />
          <scope doc="Sends a LSUB command, and returns a subset of names from the&#xA;set of names that the user has declared as being &quot;active&quot; or&#xA;&quot;subscribed&quot;." ilk="function" line="552" lineend="557" name="lsub" signature="lsub(refname, mailbox)" />
          <scope doc="Sends a STATUS command, and returns the status of the&#xA;indicated +mailbox+." ilk="function" line="575" lineend="580" name="status" signature="status(mailbox, attr)" />
          <scope doc="Sends a APPEND command to append the +message+ to the end of&#xA;the +mailbox+." ilk="function" line="600" lineend="608" name="append" signature="append(mailbox, message, flags = nil, date_time = nil)" />
          <scope doc="Sends a CHECK command to request a checkpoint of the&#xA;currently selected mailbox." ilk="function" line="614" lineend="616" name="check" signature="check" />
          <scope doc="Sends a CLOSE command to close the currently selected&#xA;mailbox." ilk="function" line="621" lineend="623" name="close" signature="close" />
          <scope doc="Sends a EXPUNGE command to permanently remove from the&#xA;currently selected mailbox all messages that have the&#xA;\Deleted flag set." ilk="function" line="627" lineend="632" name="expunge" signature="expunge" />
          <scope doc="Sends a SEARCH command to search the mailbox for messages&#xA;that match the given searching criteria, and returns message&#xA;sequence numbers." ilk="function" line="674" lineend="676" name="search" signature="search(keys, charset = nil)" />
          <scope doc="As for #search(), but returns unique identifiers." ilk="function" line="679" lineend="681" name="uid_search" signature="uid_search(keys, charset = nil)" />
          <scope doc="Sends a FETCH command to retrieve data associated with a&#xA;message in the mailbox." ilk="function" line="706" lineend="708" name="fetch" signature="fetch(set, attr)" />
          <scope doc="As for #fetch(), but +set+ contains unique identifiers." ilk="function" line="711" lineend="713" name="uid_fetch" signature="uid_fetch(set, attr)" />
          <scope doc="Sends a STORE command to alter data associated with messages&#xA;in the mailbox, in particular their flags." ilk="function" line="729" lineend="731" name="store" signature="store(set, attr, flags)" />
          <scope doc="As for #store(), but +set+ contains unique identifiers." ilk="function" line="734" lineend="736" name="uid_store" signature="uid_store(set, attr, flags)" />
          <scope doc="Sends a COPY command to copy the specified message(s) to the&#xA;end of the specified destination +mailbox+." ilk="function" line="742" lineend="744" name="copy" signature="copy(set, mailbox)" />
          <scope doc="As for #copy(), but +set+ contains unique identifiers." ilk="function" line="747" lineend="749" name="uid_copy" signature="uid_copy(set, mailbox)" />
          <scope doc="Sends a SORT command to sort messages in the mailbox." ilk="function" line="760" lineend="762" name="sort" signature="sort(sort_keys, search_keys, charset)" />
          <scope doc="As for #sort(), but returns an array of unique identifiers." ilk="function" line="765" lineend="767" name="uid_sort" signature="uid_sort(sort_keys, search_keys, charset)" />
          <scope doc="Adds a response handler." ilk="function" line="781" lineend="783" name="add_response_handler" signature="add_response_handler(handler = Proc.new)" />
          <scope doc="Removes the response handler." ilk="function" line="786" lineend="788" name="remove_response_handler" signature="remove_response_handler(handler)" />
          <scope doc="As for #search(), but returns message sequence numbers in&#xA;threaded format, as a Net::IMAP::ThreadMember tree." ilk="function" line="803" lineend="805" name="thread" signature="thread(algorithm, search_keys, charset)" />
          <scope doc="As for #thread(), but returns unique identifiers instead of&#xA;message sequence numbers." ilk="function" line="809" lineend="811" name="uid_thread" signature="uid_thread(algorithm, search_keys, charset)" />
          <scope attributes="__classmethod__" doc="Decode a string from modified UTF-7 format to UTF-8." ilk="function" line="821" lineend="834" name="decode_utf7" signature="self.decode_utf7(s)" />
          <scope attributes="__classmethod__" doc="Encode a string from UTF-8 format to modified UTF-7." ilk="function" line="837" lineend="846" name="encode_utf7" signature="self.encode_utf7(s)" />
          <scope attributes="__ctor__" doc="Creates a new Net::IMAP object and connects it to the&#xA;specified +port+ (143 by default) on the named +host+." ilk="function" line="875" lineend="920" name="initialize" signature="initialize(host, port = PORT, usessl = false, certs = nil, verify = false)" />
          <scope ilk="function" line="922" lineend="962" name="receive_responses" signature="receive_responses" />
          <scope ilk="function" line="964" lineend="977" name="get_tagged_response" signature="get_tagged_response(tag, cmd)" />
          <scope ilk="function" line="979" lineend="997" name="get_response" signature="get_response" />
          <scope ilk="function" line="999" lineend="1004" name="record_response" signature="record_response(name, data)" />
          <scope ilk="function" line="1006" lineend="1029" name="send_command" signature="send_command(cmd, *args, &amp;block)" />
          <scope ilk="function" line="1031" lineend="1034" name="generate_tag" signature="generate_tag" />
          <scope ilk="function" line="1036" lineend="1049" name="put_string" signature="put_string(str)" />
          <scope ilk="function" line="1051" lineend="1068" name="send_data" signature="send_data(data)" />
          <scope ilk="function" line="1070" lineend="1083" name="send_string_data" signature="send_string_data(str)" />
          <scope ilk="function" line="1085" lineend="1087" name="send_quoted_string" signature="send_quoted_string(str)" />
          <scope ilk="function" line="1089" lineend="1093" name="send_literal" signature="send_literal(str)" />
          <scope ilk="function" line="1095" lineend="1100" name="send_number_data" signature="send_number_data(num)" />
          <scope ilk="function" line="1102" lineend="1114" name="send_list_data" signature="send_list_data(list)" />
          <scope ilk="function" line="1118" lineend="1124" name="send_time_data" signature="send_time_data(time)" />
          <scope ilk="function" line="1126" lineend="1128" name="send_symbol_data" signature="send_symbol_data(symbol)" />
          <scope ilk="function" line="1130" lineend="1144" name="search_internal" signature="search_internal(cmd, keys, charset)" />
          <scope ilk="function" line="1146" lineend="1155" name="fetch_internal" signature="fetch_internal(cmd, set, attr)" />
          <scope ilk="function" line="1157" lineend="1166" name="store_internal" signature="store_internal(cmd, set, attr, flags)" />
          <scope ilk="function" line="1168" lineend="1170" name="copy_internal" signature="copy_internal(cmd, set, mailbox)" />
          <scope ilk="function" line="1172" lineend="1183" name="sort_internal" signature="sort_internal(cmd, sort_keys, search_keys, charset)" />
          <scope ilk="function" line="1185" lineend="1194" name="thread_internal" signature="thread_internal(cmd, algorithm, search_keys, charset)" />
          <scope ilk="function" line="1196" lineend="1205" name="normalize_searching_criteria" signature="normalize_searching_criteria(keys)" />
          <scope attributes="__classmethod__" ilk="function" line="1207" lineend="1256" name="u16tou8" signature="self.u16tou8(s)" />
          <scope attributes="__classmethod__" ilk="function" line="1259" lineend="1323" name="u8tou16" signature="self.u8tou16(s)" />
          <scope classrefs="Object" ilk="class" line="1326" lineend="1336" name="RawData">
            <scope doc=":nodoc:" ilk="function" line="1327" lineend="1329" name="send_data" signature="send_data(imap)" />
            <scope attributes="__ctor__" ilk="function" line="1333" lineend="1335" name="initialize" signature="initialize(data)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1338" lineend="1348" name="Atom">
            <scope doc=":nodoc:" ilk="function" line="1339" lineend="1341" name="send_data" signature="send_data(imap)" />
            <scope attributes="__ctor__" ilk="function" line="1345" lineend="1347" name="initialize" signature="initialize(data)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1350" lineend="1360" name="QuotedString">
            <scope doc=":nodoc:" ilk="function" line="1351" lineend="1353" name="send_data" signature="send_data(imap)" />
            <scope attributes="__ctor__" ilk="function" line="1357" lineend="1359" name="initialize" signature="initialize(data)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1362" lineend="1372" name="Literal">
            <scope doc=":nodoc:" ilk="function" line="1363" lineend="1365" name="send_data" signature="send_data(imap)" />
            <scope attributes="__ctor__" ilk="function" line="1369" lineend="1371" name="initialize" signature="initialize(data)" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1374" lineend="1416" name="MessageSet">
            <scope doc=":nodoc:" ilk="function" line="1375" lineend="1377" name="send_data" signature="send_data(imap)" />
            <scope attributes="__ctor__" ilk="function" line="1381" lineend="1383" name="initialize" signature="initialize(data)" />
            <scope ilk="function" line="1385" lineend="1407" name="format_internal" signature="format_internal(data)" />
            <scope ilk="function" line="1409" lineend="1415" name="ensure_nz_number" signature="ensure_nz_number(num)" />
          </scope>
          <scope classrefs="Struct.new" doc="Net::IMAP::BodyTypeBasic represents basic body structures of&#xA;messages." ilk="class" line="1732" lineend="1749" name="BodyTypeBasic">
            <scope ilk="function" line="1737" lineend="1739" name="multipart?" signature="multipart?" />
            <scope doc="Obsolete: use +subtype+ instead." ilk="function" line="1744" lineend="1748" name="media_subtype" signature="media_subtype" />
          </scope>
          <scope classrefs="Struct.new" doc="Net::IMAP::BodyTypeText represents TEXT body structures of&#xA;messages." ilk="class" line="1759" lineend="1777" name="BodyTypeText">
            <scope ilk="function" line="1765" lineend="1767" name="multipart?" signature="multipart?" />
            <scope doc="Obsolete: use +subtype+ instead." ilk="function" line="1772" lineend="1776" name="media_subtype" signature="media_subtype" />
          </scope>
          <scope classrefs="Struct.new" doc="Net::IMAP::BodyTypeMessage represents MESSAGE/RFC822 body&#xA;structures of messages." ilk="class" line="1789" lineend="1807" name="BodyTypeMessage">
            <scope ilk="function" line="1795" lineend="1797" name="multipart?" signature="multipart?" />
            <scope doc="Obsolete: use +subtype+ instead." ilk="function" line="1802" lineend="1806" name="media_subtype" signature="media_subtype" />
          </scope>
          <scope classrefs="Struct.new" doc="Net::IMAP::BodyTypeMultipart represents multipart body&#xA;structures of messages." ilk="class" line="1832" lineend="1848" name="BodyTypeMultipart">
            <scope ilk="function" line="1836" lineend="1838" name="multipart?" signature="multipart?" />
            <scope doc="Obsolete: use +subtype+ instead." ilk="function" line="1843" lineend="1847" name="media_subtype" signature="media_subtype" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1850" lineend="3106" name="ResponseParser">
            <scope doc=":nodoc:" ilk="function" line="1851" lineend="1857" name="parse" signature="parse(str)" />
            <scope doc="1:  LBRA    )(\[)|\" ilk="function" line="1924" lineend="1937" name="response" signature="response" />
            <scope ilk="function" line="1939" lineend="1943" name="continue_req" signature="continue_req" />
            <scope ilk="function" line="1945" lineend="1979" name="response_untagged" signature="response_untagged" />
            <scope ilk="function" line="1981" lineend="1988" name="response_tagged" signature="response_tagged" />
            <scope ilk="function" line="1990" lineend="1995" name="response_cond" signature="response_cond" />
            <scope ilk="function" line="1997" lineend="2011" name="numeric_response" signature="numeric_response" />
            <scope ilk="function" line="2013" lineend="2047" name="msg_att" signature="msg_att" />
            <scope ilk="function" line="2049" lineend="2054" name="envelope_data" signature="envelope_data" />
            <scope ilk="function" line="2056" lineend="2089" name="envelope" signature="envelope" />
            <scope ilk="function" line="2091" lineend="2096" name="flags_data" signature="flags_data" />
            <scope ilk="function" line="2098" lineend="2104" name="internaldate_data" signature="internaldate_data" />
            <scope ilk="function" line="2106" lineend="2111" name="rfc822_text" signature="rfc822_text" />
            <scope ilk="function" line="2113" lineend="2118" name="rfc822_size" signature="rfc822_size" />
            <scope ilk="function" line="2120" lineend="2137" name="body_data" signature="body_data" />
            <scope ilk="function" line="2139" lineend="2157" name="body" signature="body" />
            <scope ilk="function" line="2159" lineend="2169" name="body_type_1part" signature="body_type_1part" />
            <scope ilk="function" line="2171" lineend="2184" name="body_type_basic" signature="body_type_basic" />
            <scope ilk="function" line="2186" lineend="2198" name="body_type_text" signature="body_type_text" />
            <scope ilk="function" line="2200" lineend="2216" name="body_type_msg" signature="body_type_msg" />
            <scope ilk="function" line="2218" lineend="2234" name="body_type_mpart" signature="body_type_mpart" />
            <scope ilk="function" line="2236" lineend="2241" name="media_type" signature="media_type" />
            <scope ilk="function" line="2243" lineend="2254" name="body_fields" signature="body_fields" />
            <scope ilk="function" line="2256" lineend="2279" name="body_fld_param" signature="body_fld_param" />
            <scope ilk="function" line="2281" lineend="2315" name="body_ext_1part" signature="body_ext_1part" />
            <scope ilk="function" line="2317" lineend="2345" name="body_ext_mpart" signature="body_ext_mpart" />
            <scope ilk="function" line="2347" lineend="2359" name="body_fld_dsp" signature="body_fld_dsp" />
            <scope ilk="function" line="2361" lineend="2385" name="body_fld_lang" signature="body_fld_lang" />
            <scope ilk="function" line="2387" lineend="2399" name="body_extensions" signature="body_extensions" />
            <scope ilk="function" line="2401" lineend="2414" name="body_extension" signature="body_extension" />
            <scope ilk="function" line="2416" lineend="2449" name="section" signature="section" />
            <scope ilk="function" line="2451" lineend="2465" name="format_string" signature="format_string(str)" />
            <scope ilk="function" line="2467" lineend="2472" name="uid_data" signature="uid_data" />
            <scope ilk="function" line="2474" lineend="2482" name="text_response" signature="text_response" />
            <scope ilk="function" line="2484" lineend="2489" name="flags_response" signature="flags_response" />
            <scope ilk="function" line="2491" lineend="2496" name="list_response" signature="list_response" />
            <scope ilk="function" line="2498" lineend="2510" name="mailbox_list" signature="mailbox_list" />
            <scope ilk="function" line="2512" lineend="2543" name="getquota_response" signature="getquota_response" />
            <scope ilk="function" line="2545" lineend="2560" name="getquotaroot_response" signature="getquotaroot_response" />
            <scope ilk="function" line="2562" lineend="2587" name="getacl_response" signature="getacl_response" />
            <scope ilk="function" line="2589" lineend="2610" name="search_response" signature="search_response" />
            <scope ilk="function" line="2612" lineend="2637" name="thread_response" signature="thread_response" />
            <scope ilk="function" line="2639" lineend="2672" name="thread_branch" signature="thread_branch(token)" />
            <scope ilk="function" line="2674" lineend="2699" name="status_response" signature="status_response" />
            <scope ilk="function" line="2701" lineend="2717" name="capability_response" signature="capability_response" />
            <scope ilk="function" line="2719" lineend="2730" name="resp_text" signature="resp_text" />
            <scope ilk="function" line="2732" lineend="2756" name="resp_text_code" signature="resp_text_code" />
            <scope ilk="function" line="2758" lineend="2779" name="address_list" signature="address_list" />
            <scope doc="4: HOST )(?:NIL|&quot;((?:[^\x80-\xff\x00\r\n&quot;\\]|\\[&quot;\\])*)&quot;)\" ilk="function" line="2788" lineend="2813" name="address" signature="address" />
            <scope doc="FLAG        )\\([^\x80-\xff(){ \x00-\x1f\x7f%&quot;\\]+)|\" ilk="function" line="2852" lineend="2861" name="flag_list" signature="flag_list" />
            <scope ilk="function" line="2863" lineend="2871" name="nstring" signature="nstring" />
            <scope ilk="function" line="2873" lineend="2880" name="astring" signature="astring" />
            <scope ilk="function" line="2882" lineend="2890" name="string" signature="string" />
            <scope ilk="function" line="2894" lineend="2896" name="string_token?" signature="string_token?(token)" />
            <scope ilk="function" line="2898" lineend="2906" name="case_insensitive_string" signature="case_insensitive_string" />
            <scope ilk="function" line="2908" lineend="2923" name="atom" signature="atom" />
            <scope ilk="function" line="2934" lineend="2936" name="atom_token?" signature="atom_token?(token)" />
            <scope ilk="function" line="2938" lineend="2946" name="number" signature="number" />
            <scope ilk="function" line="2948" lineend="2951" name="nil_atom" signature="nil_atom" />
            <scope ilk="function" line="2953" lineend="2962" name="match" signature="match(*args)" />
            <scope ilk="function" line="2964" lineend="2969" name="lookahead" signature="lookahead" />
            <scope ilk="function" line="2971" lineend="2973" name="shift_token" signature="shift_token" />
            <scope ilk="function" line="2975" lineend="3092" name="next_token" signature="next_token" />
            <scope ilk="function" line="3094" lineend="3105" name="parse_error" signature="parse_error(fmt, *args)" />
          </scope>
          <scope classrefs="Object" doc="Authenticator for the &quot;LOGIN&quot; authentication type." ilk="class" line="3110" lineend="3131" name="LoginAuthenticator">
            <scope ilk="function" line="3111" lineend="3119" name="process" signature="process(data)" />
            <scope attributes="__ctor__" ilk="function" line="3126" lineend="3130" name="initialize" signature="initialize(user, password)" />
          </scope>
          <scope classrefs="Object" doc="Authenticator for the &quot;CRAM-MD5&quot; authentication type." ilk="class" line="3136" lineend="3165" name="CramMD5Authenticator">
            <scope ilk="function" line="3137" lineend="3140" name="process" signature="process(challenge)" />
            <scope attributes="__ctor__" ilk="function" line="3144" lineend="3147" name="initialize" signature="initialize(user, password)" />
            <scope ilk="function" line="3149" lineend="3164" name="hmac_md5" signature="hmac_md5(text, key)" />
          </scope>
          <scope classrefs="StandardError" doc="Superclass of IMAP errors." ilk="class" line="3169" lineend="3170" name="Error" />
          <scope classrefs="Error" doc="Error raised when data is in the incorrect format." ilk="class" line="3173" lineend="3174" name="DataFormatError" />
          <scope classrefs="Error" doc="Error raised when a response from the server is non-&#xA;parseable." ilk="class" line="3177" lineend="3178" name="ResponseParseError" />
          <scope classrefs="Error" doc="Superclass of all errors used to encapsulate &quot;fail&quot;&#xA;responses from the server." ilk="class" line="3182" lineend="3183" name="ResponseError" />
          <scope classrefs="ResponseError" doc="Error raised upon a &quot;NO&quot; response from the server,&#xA;indicating that the client command could not be completed&#xA;successfully." ilk="class" line="3187" lineend="3188" name="NoResponseError" />
          <scope classrefs="ResponseError" doc="Error raised upon a &quot;BAD&quot; response from the server,&#xA;indicating that the client command violated the IMAP&#xA;protocol, or an internal server failure has occurred." ilk="class" line="3193" lineend="3194" name="BadResponseError" />
          <scope classrefs="ResponseError" doc="Error raised upon a &quot;BYE&quot; response from the server,&#xA;indicating that the client is not being allowed to login, or&#xA;has been timed out due to inactivity." ilk="class" line="3199" lineend="3200" name="ByeResponseError" />
          <import symbol="MonitorMixin" />
          <import symbol="OpenSSL" />
          <import symbol="SSL" />
        </scope>
      </scope>
      <scope doc=":enddoc:" ilk="function" line="3214" lineend="3224" name="usage" signature="usage" />
      <scope ilk="function" line="3226" lineend="3235" name="get_password" signature="get_password" />
      <scope ilk="function" line="3237" lineend="3244" name="get_command" signature="get_command" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/https">
      <import line="101" module="net/http" symbol="*" />
      <import line="102" module="openssl" symbol="*" />
      <scope ilk="namespace" line="104" lineend="173" name="Net">
        <scope classrefs="Object" ilk="class" line="106" lineend="171" name="HTTP">
          <scope ilk="function" line="108" lineend="110" name="use_ssl?" signature="use_ssl?" />
          <scope doc="Turn on/off SSL." ilk="function" line="119" lineend="127" name="use_ssl=" signature="use_ssl=(flag)" />
          <scope attributes="__classmethod__" ilk="function" line="129" lineend="141" name="ssl_context_accessor" signature="self.ssl_context_accessor(name)" />
          <scope ilk="function" line="152" lineend="155" name="ssl_timeout" signature="ssl_timeout" />
          <scope ilk="function" line="157" lineend="162" name="ssl_timeout=" signature="ssl_timeout=(sec)" />
          <scope doc="For backward compatibility" ilk="function" line="167" lineend="170" name="peer_cert" signature="peer_cert" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/http">
      <import line="28" module="net/protocol" symbol="*" />
      <import line="29" module="uri" symbol="*" />
      <scope doc="= net/http.rb" ilk="namespace" line="31" lineend="2243" name="Net">
        <scope classrefs="StandardError" doc=":nodoc: :stopdoc:" ilk="class" line="34" lineend="34" name="HTTPBadResponse" />
        <scope classrefs="StandardError" ilk="class" line="35" lineend="35" name="HTTPHeaderSyntaxError" />
        <scope classrefs="Protocol" doc=":startdoc: == What Is This Library?" ilk="class" line="278" lineend="1116" name="HTTP">
          <scope attributes="__classmethod__" doc=":startdoc: Turns on net/http 1.2 (ruby 1.8) features." ilk="function" line="294" lineend="296" name="version_1_2" signature="HTTP.version_1_2" />
          <scope attributes="__classmethod__" doc="Turns on net/http 1.1 (ruby 1.6) features." ilk="function" line="300" lineend="302" name="version_1_1" signature="HTTP.version_1_1" />
          <scope attributes="__classmethod__" doc="true if net/http is in version 1.2 mode." ilk="function" line="306" lineend="308" name="version_1_2?" signature="HTTP.version_1_2?" />
          <scope attributes="__classmethod__" doc="true if net/http is in version 1.1 compatible mode." ilk="function" line="312" lineend="314" name="version_1_1?" signature="HTTP.version_1_1?" />
          <scope classrefs="Object" ilk="class" line="316" lineend="319" name="HTTP" />
          <scope attributes="__classmethod__" doc="short cut methods" ilk="function" line="336" lineend="343" name="get_print" signature="HTTP.get_print(uri_or_host, path = nil, port = nil)" />
          <scope attributes="__classmethod__" doc="Send a GET request to the target and return the response as&#xA;a string." ilk="function" line="355" lineend="357" name="get" signature="HTTP.get(uri_or_host, path = nil, port = nil)" />
          <scope attributes="__classmethod__" doc="Send a GET request to the target and return the response as&#xA;a Net::HTTPResponse object." ilk="function" line="371" lineend="383" name="get_response" signature="HTTP.get_response(uri_or_host, path = nil, port = nil, &amp;block)" />
          <scope attributes="__classmethod__" doc="Posts HTML form data to the +URL+." ilk="function" line="400" lineend="407" name="post_form" signature="HTTP.post_form(url, params)" />
          <scope attributes="__classmethod__" doc="HTTP session management" ilk="function" line="414" lineend="416" name="default_port" signature="HTTP.default_port" />
          <scope attributes="__classmethod__" doc="The default port to use for HTTP requests; defaults to 80." ilk="function" line="419" lineend="421" name="http_default_port" signature="HTTP.http_default_port" />
          <scope attributes="__classmethod__" doc="The default port to use for HTTPS requests; defaults to 443." ilk="function" line="424" lineend="426" name="https_default_port" signature="HTTP.https_default_port" />
          <scope attributes="__classmethod__" ilk="function" line="428" lineend="430" name="socket_type" signature="HTTP.socket_type" />
          <scope attributes="__classmethod__" doc="creates a new Net::HTTP object and opens its TCP connection&#xA;and HTTP session." ilk="function" line="439" lineend="441" name="start" signature="HTTP.start(address, port = nil, p_addr = nil, p_port = nil, p_user = nil, p_pass = nil, &amp;block)" />
          <scope classrefs="Object" ilk="class" line="443" lineend="445" name="HTTP" />
          <scope attributes="__classmethod__" doc="Creates a new Net::HTTP object." ilk="function" line="450" lineend="456" name="new" signature="HTTP.new(address, port = nil, p_addr = nil, p_port = nil, p_user = nil, p_pass = nil)" />
          <scope attributes="__ctor__" doc="Creates a new Net::HTTP object for the specified +address+." ilk="function" line="460" lineend="473" name="initialize" signature="initialize(address, port = nil)" />
          <scope ilk="function" line="475" lineend="477" name="inspect" signature="inspect" />
          <scope doc="*WARNING* This method causes serious security hole." ilk="function" line="488" lineend="491" name="set_debug_output" signature="set_debug_output(output)" />
          <scope ilk="function" line="494" lineend="494" name="address" />
          <scope ilk="function" line="497" lineend="497" name="port" />
          <scope ilk="function" line="502" lineend="502" name="open_timeout" />
          <scope ilk="function" line="502" lineend="502" name="open_timeout=" />
          <scope ilk="function" line="507" lineend="507" name="read_timeout" />
          <scope doc="Setter for the read_timeout attribute." ilk="function" line="510" lineend="513" name="read_timeout=" signature="read_timeout=(sec)" />
          <scope doc="returns true if the HTTP session is started." ilk="function" line="516" lineend="518" name="started?" signature="started?" />
          <scope ilk="function" line="522" lineend="522" name="close_on_empty_response" />
          <scope ilk="function" line="522" lineend="522" name="close_on_empty_response=" />
          <scope doc="returns true if use SSL/TLS with HTTP." ilk="function" line="525" lineend="527" name="use_ssl?" signature="use_ssl?" />
          <scope doc="Opens TCP connection and HTTP session." ilk="function" line="538" lineend="550" name="start" signature="start" />
          <scope ilk="function" line="552" lineend="555" name="do_start" signature="do_start" />
          <scope ilk="function" line="558" lineend="589" name="connect" signature="connect" />
          <scope ilk="function" line="592" lineend="593" name="on_connect" signature="on_connect" />
          <scope doc="Finishes HTTP session and closes TCP connection." ilk="function" line="598" lineend="601" name="finish" signature="finish" />
          <scope ilk="function" line="603" lineend="607" name="do_finish" signature="do_finish" />
          <scope attributes="__classmethod__" doc="Creates an HTTP proxy class." ilk="function" line="638" lineend="652" name="Proxy" signature="HTTP.Proxy(p_addr, p_port = nil, p_user = nil, p_pass = nil)" />
          <scope classrefs="Object" ilk="class" line="654" lineend="664" name="HTTP">
            <scope doc="returns true if self is a class which was created by&#xA;HTTP::Proxy." ilk="function" line="656" lineend="658" name="proxy_class?" signature="proxy_class?" />
            <scope ilk="function" line="660" lineend="660" name="proxy_address" />
            <scope ilk="function" line="661" lineend="661" name="proxy_port" />
            <scope ilk="function" line="662" lineend="662" name="proxy_user" />
            <scope ilk="function" line="663" lineend="663" name="proxy_pass" />
          </scope>
          <scope doc="True if self is a HTTP proxy class." ilk="function" line="667" lineend="669" name="proxy?" signature="proxy?" />
          <scope doc="Address of proxy host. If self does not use a proxy, nil." ilk="function" line="672" lineend="674" name="proxy_address" signature="proxy_address" />
          <scope doc="Port number of proxy host. If self does not use a proxy,&#xA;nil." ilk="function" line="677" lineend="679" name="proxy_port" signature="proxy_port" />
          <scope doc="User name for accessing proxy. If self does not use a proxy,&#xA;nil." ilk="function" line="682" lineend="684" name="proxy_user" signature="proxy_user" />
          <scope doc="User password for accessing proxy. If self does not use a&#xA;proxy, nil." ilk="function" line="687" lineend="689" name="proxy_pass" signature="proxy_pass" />
          <scope doc="without proxy" ilk="function" line="698" lineend="700" name="conn_address" signature="conn_address" />
          <scope ilk="function" line="702" lineend="704" name="conn_port" signature="conn_port" />
          <scope ilk="function" line="706" lineend="708" name="edit_path" signature="edit_path(path)" />
          <scope ilk="namespace" line="710" lineend="724" name="ProxyDelta">
            <scope doc=":nodoc: internal use only" ilk="function" line="713" lineend="715" name="conn_address" signature="conn_address" />
            <scope ilk="function" line="717" lineend="719" name="conn_port" signature="conn_port" />
            <scope ilk="function" line="721" lineend="723" name="edit_path" signature="edit_path(path)" />
          </scope>
          <scope doc="Gets data from +path+ on the connected-to host." ilk="function" line="767" lineend="779" name="get" signature="get(path, initheader = nil, dest = nil, &amp;block)" />
          <scope doc="Gets only the header from +path+ on the connected-to host." ilk="function" line="797" lineend="801" name="head" signature="head(path, initheader = nil)" />
          <scope doc="Posts +data+ (must be a String) to +path+." ilk="function" line="836" lineend="848" name="post" signature="post(path, data, initheader = nil, dest = nil, &amp;block)" />
          <scope ilk="function" line="850" lineend="854" name="put" signature="put(path, data, initheader = nil)" />
          <scope doc="Sends a PROPPATCH request to the +path+ and gets a response,&#xA;as an HTTPResponse object." ilk="function" line="858" lineend="860" name="proppatch" signature="proppatch(path, body, initheader = nil)" />
          <scope doc="Sends a LOCK request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="864" lineend="866" name="lock" signature="lock(path, body, initheader = nil)" />
          <scope doc="Sends a UNLOCK request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="870" lineend="872" name="unlock" signature="unlock(path, body, initheader = nil)" />
          <scope doc="Sends a OPTIONS request to the +path+ and gets a response,&#xA;as an HTTPResponse object." ilk="function" line="876" lineend="878" name="options" signature="options(path, initheader = nil)" />
          <scope doc="Sends a PROPFIND request to the +path+ and gets a response,&#xA;as an HTTPResponse object." ilk="function" line="882" lineend="884" name="propfind" signature="propfind(path, body = nil, initheader = {&apos;Depth&apos; =&gt; &apos;0&apos;})" />
          <scope doc="Sends a DELETE request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="888" lineend="890" name="delete" signature="delete(path, initheader = {&apos;Depth&apos; =&gt; &apos;Infinity&apos;})" />
          <scope doc="Sends a MOVE request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="894" lineend="896" name="move" signature="move(path, initheader = nil)" />
          <scope doc="Sends a COPY request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="900" lineend="902" name="copy" signature="copy(path, initheader = nil)" />
          <scope doc="Sends a MKCOL request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="906" lineend="908" name="mkcol" signature="mkcol(path, body = nil, initheader = nil)" />
          <scope doc="Sends a TRACE request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="912" lineend="914" name="trace" signature="trace(path, initheader = nil)" />
          <scope doc="Sends a GET request to the +path+ and gets a response, as an&#xA;HTTPResponse object." ilk="function" line="941" lineend="943" name="request_get" signature="request_get(path, initheader = nil, &amp;block)" />
          <scope doc="Sends a HEAD request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="955" lineend="957" name="request_head" signature="request_head(path, initheader = nil, &amp;block)" />
          <scope doc="Sends a POST request to the +path+ and gets a response, as&#xA;an HTTPResponse object." ilk="function" line="985" lineend="987" name="request_post" signature="request_post(path, data, initheader = nil, &amp;block)" />
          <scope ilk="function" line="989" lineend="991" name="request_put" signature="request_put(path, data, initheader = nil, &amp;block)" />
          <scope doc=":nodoc: obsolete Sends an HTTP request to the HTTP server." ilk="function" line="1009" lineend="10121501212" name="send_request" signature="send_request(name, path, data = nil, header = nil)" />
          <scope doc="Sends an HTTPRequest object REQUEST to the HTTP server." ilk="function" line="1027" lineend="1052" name="request" signature="request(req, body = nil, &amp;block)" />
          <scope ilk="function" line="1056" lineend="1067" name="begin_transport" signature="begin_transport(req)" />
          <scope ilk="function" line="1069" lineend="1084" name="end_transport" signature="end_transport(req, res)" />
          <scope ilk="function" line="1086" lineend="1094" name="keep_alive?" signature="keep_alive?(req, res)" />
          <scope doc="utils" ilk="function" line="1102" lineend="1108" name="addr_port" signature="addr_port" />
          <scope ilk="function" line="1110" lineend="1114" name="D" signature="D(msg)" />
        </scope>
        <scope doc="Header module." ilk="namespace" line="1129" lineend="1422" name="HTTPHeader">
          <scope ilk="function" line="1131" lineend="1138" name="initialize_http_header" signature="initialize_http_header(initheader)" />
          <scope ilk="function" line="1140" lineend="1142" name="size" signature="size" />
          <scope doc=":nodoc: obsolete Returns the header field corresponding to&#xA;the case-insensitive key." ilk="function" line="1148" lineend="1151" name="[]" signature="[](key" />
          <scope doc="Sets the header field corresponding to the case-insensitive&#xA;key." ilk="function" line="1154" lineend="1160" name="[]=" signature="[]=(key" />
          <scope doc="[Ruby 1.8.3] Adds header field instead of replace." ilk="function" line="1177" lineend="1183" name="add_field" signature="add_field(key, val)" />
          <scope doc="[Ruby 1.8.3] Returns an array of header field strings&#xA;corresponding to the case-insensitive +key+." ilk="function" line="1196" lineend="1199" name="get_fields" signature="get_fields(key)" />
          <scope doc="Returns the header field corresponding to the case-&#xA;insensitive key." ilk="function" line="1204" lineend="1207" name="fetch" signature="fetch(key, *args, &amp;block)" />
          <scope doc="Iterates for each header names and values." ilk="function" line="1210" lineend="1214" name="each_header" signature="each_header" />
          <scope doc="Iterates for each header names." ilk="function" line="1219" lineend="1221" name="each_name" signature="each_name(&amp;block)" />
          <scope doc="Iterates for each capitalized header names." ilk="function" line="1226" lineend="1230" name="each_capitalized_name" signature="each_capitalized_name(&amp;block)" />
          <scope doc="Iterates for each header values." ilk="function" line="1233" lineend="1237" name="each_value" signature="each_value" />
          <scope doc="Removes a header field." ilk="function" line="1240" lineend="1242" name="delete" signature="delete(key)" />
          <scope doc="true if +key+ header exists." ilk="function" line="1245" lineend="1247" name="key?" signature="key?(key)" />
          <scope doc="Returns a Hash consist of header names and values." ilk="function" line="1250" lineend="1252" name="to_hash" signature="to_hash" />
          <scope doc="As for #each_header, except the keys are provided in&#xA;capitalized form." ilk="function" line="1255" lineend="1259" name="each_capitalized" signature="each_capitalized" />
          <scope ilk="function" line="1263" lineend="1265" name="capitalize" signature="capitalize(name)" />
          <scope doc="Returns an Array of Range objects which represents Range:&#xA;header field, or +nil+ if there is no such header." ilk="function" line="1270" lineend="1284" name="range" signature="range" />
          <scope doc="Set Range: header from Range (arg r) or beginning index and&#xA;length from it (arg idx&amp;len)." ilk="function" line="1292" lineend="1319" name="set_range" signature="set_range(r, e = nil)" />
          <scope doc="Returns an Integer object which represents the Content-&#xA;Length: header field or +nil+ if that field is not provided." ilk="function" line="1325" lineend="1330" name="content_length" signature="content_length" />
          <scope ilk="function" line="1332" lineend="1338" name="content_length=" signature="content_length=(len)" />
          <scope doc="Returns &quot;true&quot; if the &quot;transfer-encoding&quot; header is present&#xA;and set to &quot;chunked&quot;." ilk="function" line="1344" lineend="1348" name="chunked?" signature="chunked?" />
          <scope doc="Returns a Range object which represents Content-Range:&#xA;header field." ilk="function" line="1353" lineend="1358" name="content_range" signature="content_range" />
          <scope doc="The length of the range represented in Content-Range:&#xA;header." ilk="function" line="1361" lineend="1364" name="range_length" signature="range_length" />
          <scope ilk="function" line="1366" lineend="1368" name="content_type" signature="content_type" />
          <scope ilk="function" line="1370" lineend="1373" name="main_type" signature="main_type" />
          <scope ilk="function" line="1375" lineend="1378" name="sub_type" signature="sub_type" />
          <scope ilk="function" line="1380" lineend="1387" name="type_params" signature="type_params" />
          <scope ilk="function" line="1389" lineend="1391" name="set_content_type" signature="set_content_type(type, params = {})" />
          <scope ilk="function" line="1395" lineend="1398" name="set_form_data" signature="set_form_data(params, sep = &apos;&amp;&apos;)" />
          <scope ilk="function" line="1402" lineend="1404" name="urlencode" signature="urlencode(str)" />
          <scope doc="Set the Authorization: header for &quot;Basic&quot; authorization." ilk="function" line="1408" lineend="1410" name="basic_auth" signature="basic_auth(account, password)" />
          <scope doc="Set Proxy-Authorization: header for &quot;Basic&quot; authorization." ilk="function" line="1413" lineend="1415" name="proxy_basic_auth" signature="proxy_basic_auth(account, password)" />
          <scope ilk="function" line="1417" lineend="1419" name="basic_encode" signature="basic_encode(account, password)" />
        </scope>
        <scope classrefs="Object" doc="Parent of HTTPRequest class." ilk="class" line="1431" lineend="1543" name="HTTPGenericRequest">
          <scope attributes="__ctor__" ilk="function" line="1435" lineend="1445" name="initialize" signature="initialize(m, reqbody, resbody, path, initheader = nil)" />
          <scope ilk="function" line="1447" lineend="1447" name="method" />
          <scope ilk="function" line="1448" lineend="1448" name="path" />
          <scope ilk="function" line="1450" lineend="1452" name="inspect" signature="inspect" />
          <scope ilk="function" line="1454" lineend="1456" name="request_body_permitted?" signature="request_body_permitted?" />
          <scope ilk="function" line="1458" lineend="1460" name="response_body_permitted?" signature="response_body_permitted?" />
          <scope ilk="function" line="1462" lineend="1465" name="body_exist?" signature="body_exist?" />
          <scope ilk="function" line="1467" lineend="1467" name="body" />
          <scope ilk="function" line="1469" lineend="1473" name="body=" signature="body=(str)" />
          <scope ilk="function" line="1475" lineend="1475" name="body_stream" />
          <scope ilk="function" line="1477" lineend="1481" name="body_stream=" signature="body_stream=(input)" />
          <scope ilk="function" line="1483" lineend="1486" name="set_body_internal" signature="set_body_internal(str)" />
          <scope doc="write" ilk="function" line="1492" lineend="1500" name="exec" signature="exec(sock, ver, path)" />
          <scope ilk="function" line="1504" lineend="1513" name="send_request_with_body" signature="send_request_with_body(sock, ver, path, body)" />
          <scope ilk="function" line="1515" lineend="1532" name="send_request_with_body_stream" signature="send_request_with_body_stream(sock, ver, path, f)" />
          <scope ilk="function" line="1534" lineend="1541" name="write_header" signature="write_header(sock, ver, path)" />
          <import symbol="HTTPHeader" />
        </scope>
        <scope classrefs="HTTPGenericRequest" doc="HTTP request class. This class wraps request header and&#xA;entity path." ilk="class" line="1550" lineend="1559" name="HTTPRequest">
          <scope attributes="__ctor__" doc="Creates HTTP request object." ilk="function" line="1553" lineend="1558" name="initialize" signature="initialize(path, initheader = nil)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="1562" lineend="1654" name="HTTP">
          <scope classrefs="HTTPRequest" doc="reopen" ilk="class" line="1567" lineend="1571" name="Get" />
          <scope classrefs="HTTPRequest" ilk="class" line="1573" lineend="1577" name="Head" />
          <scope classrefs="HTTPRequest" ilk="class" line="1579" lineend="1583" name="Post" />
          <scope classrefs="HTTPRequest" ilk="class" line="1585" lineend="1589" name="Put" />
          <scope classrefs="HTTPRequest" ilk="class" line="1591" lineend="1595" name="Delete" />
          <scope classrefs="HTTPRequest" ilk="class" line="1597" lineend="1601" name="Options" />
          <scope classrefs="HTTPRequest" ilk="class" line="1603" lineend="1607" name="Trace" />
          <scope classrefs="HTTPRequest" doc="WebDAV methods --- RFC2518" ilk="class" line="1613" lineend="1617" name="Propfind" />
          <scope classrefs="HTTPRequest" ilk="class" line="1619" lineend="1623" name="Proppatch" />
          <scope classrefs="HTTPRequest" ilk="class" line="1625" lineend="1629" name="Mkcol" />
          <scope classrefs="HTTPRequest" ilk="class" line="1631" lineend="1635" name="Copy" />
          <scope classrefs="HTTPRequest" ilk="class" line="1637" lineend="1641" name="Move" />
          <scope classrefs="HTTPRequest" ilk="class" line="1643" lineend="1647" name="Lock" />
          <scope classrefs="HTTPRequest" ilk="class" line="1649" lineend="1653" name="Unlock" />
        </scope>
        <scope doc="Response" ilk="namespace" line="1663" lineend="1670" name="HTTPExceptions">
          <scope attributes="__ctor__" ilk="function" line="1664" lineend="1667" name="initialize" signature="initialize(msg, res)" />
        </scope>
        <scope classrefs="ProtocolError" ilk="class" line="1671" lineend="1673" name="HTTPError">
          <import symbol="HTTPExceptions" />
        </scope>
        <scope classrefs="ProtoRetriableError" ilk="class" line="1674" lineend="1676" name="HTTPRetriableError">
          <import symbol="HTTPExceptions" />
        </scope>
        <scope classrefs="ProtoServerError" ilk="class" line="1677" lineend="1680" name="HTTPServerException">
          <import symbol="HTTPExceptions" />
        </scope>
        <scope classrefs="ProtoFatalError" ilk="class" line="1681" lineend="1683" name="HTTPFatalError">
          <import symbol="HTTPExceptions" />
        </scope>
        <scope classrefs="Object" doc="HTTP response class. This class wraps response header and&#xA;entity." ilk="class" line="1748" lineend="1757" name="HTTPResponse">
          <scope attributes="__classmethod__" doc="true if the response has body." ilk="function" line="1750" lineend="1752" name="body_permitted?" signature="HTTPResponse.body_permitted?" />
          <scope attributes="__classmethod__" ilk="function" line="1754" lineend="1756" name="exception_type" signature="HTTPResponse.exception_type" />
        </scope>
        <scope classrefs="HTTPResponse" doc="reopened after :stopdoc:" ilk="class" line="1761" lineend="1764" name="HTTPUnknownResponse" />
        <scope classrefs="HTTPResponse" ilk="class" line="1765" lineend="1768" name="HTTPInformation" />
        <scope classrefs="HTTPResponse" ilk="class" line="1769" lineend="1772" name="HTTPSuccess" />
        <scope classrefs="HTTPResponse" ilk="class" line="1773" lineend="1776" name="HTTPRedirection" />
        <scope classrefs="HTTPResponse" ilk="class" line="1777" lineend="1780" name="HTTPClientError" />
        <scope classrefs="HTTPResponse" ilk="class" line="1781" lineend="1784" name="HTTPServerError" />
        <scope classrefs="HTTPInformation" ilk="class" line="1786" lineend="1788" name="HTTPContinue" />
        <scope classrefs="HTTPInformation" ilk="class" line="1789" lineend="1791" name="HTTPSwitchProtocol" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1793" lineend="1795" name="HTTPOK" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1796" lineend="1798" name="HTTPCreated" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1799" lineend="1801" name="HTTPAccepted" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1802" lineend="1804" name="HTTPNonAuthoritativeInformation" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1805" lineend="1807" name="HTTPNoContent" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1808" lineend="1810" name="HTTPResetContent" />
        <scope classrefs="HTTPSuccess" ilk="class" line="1811" lineend="1813" name="HTTPPartialContent" />
        <scope classrefs="HTTPRedirection" ilk="class" line="1815" lineend="1817" name="HTTPMultipleChoice" />
        <scope classrefs="HTTPRedirection" ilk="class" line="1818" lineend="1820" name="HTTPMovedPermanently" />
        <scope classrefs="HTTPRedirection" ilk="class" line="1821" lineend="1823" name="HTTPFound" />
        <scope classrefs="HTTPRedirection" ilk="class" line="1825" lineend="1827" name="HTTPSeeOther" />
        <scope classrefs="HTTPRedirection" ilk="class" line="1828" lineend="1830" name="HTTPNotModified" />
        <scope classrefs="HTTPRedirection" ilk="class" line="1831" lineend="1833" name="HTTPUseProxy" />
        <scope classrefs="HTTPRedirection" doc="306 unused" ilk="class" line="1835" lineend="1837" name="HTTPTemporaryRedirect" />
        <scope classrefs="HTTPClientError" ilk="class" line="1839" lineend="1841" name="HTTPBadRequest" />
        <scope classrefs="HTTPClientError" ilk="class" line="1842" lineend="1844" name="HTTPUnauthorized" />
        <scope classrefs="HTTPClientError" ilk="class" line="1845" lineend="1847" name="HTTPPaymentRequired" />
        <scope classrefs="HTTPClientError" ilk="class" line="1848" lineend="1850" name="HTTPForbidden" />
        <scope classrefs="HTTPClientError" ilk="class" line="1851" lineend="1853" name="HTTPNotFound" />
        <scope classrefs="HTTPClientError" ilk="class" line="1854" lineend="1856" name="HTTPMethodNotAllowed" />
        <scope classrefs="HTTPClientError" ilk="class" line="1857" lineend="1859" name="HTTPNotAcceptable" />
        <scope classrefs="HTTPClientError" ilk="class" line="1860" lineend="1862" name="HTTPProxyAuthenticationRequired" />
        <scope classrefs="HTTPClientError" ilk="class" line="1863" lineend="1865" name="HTTPRequestTimeOut" />
        <scope classrefs="HTTPClientError" ilk="class" line="1866" lineend="1868" name="HTTPConflict" />
        <scope classrefs="HTTPClientError" ilk="class" line="1869" lineend="1871" name="HTTPGone" />
        <scope classrefs="HTTPClientError" ilk="class" line="1872" lineend="1874" name="HTTPLengthRequired" />
        <scope classrefs="HTTPClientError" ilk="class" line="1875" lineend="1877" name="HTTPPreconditionFailed" />
        <scope classrefs="HTTPClientError" ilk="class" line="1878" lineend="1880" name="HTTPRequestEntityTooLarge" />
        <scope classrefs="HTTPClientError" ilk="class" line="1881" lineend="1883" name="HTTPRequestURITooLong" />
        <scope classrefs="HTTPClientError" ilk="class" line="1885" lineend="1887" name="HTTPUnsupportedMediaType" />
        <scope classrefs="HTTPClientError" ilk="class" line="1888" lineend="1890" name="HTTPRequestedRangeNotSatisfiable" />
        <scope classrefs="HTTPClientError" ilk="class" line="1891" lineend="1893" name="HTTPExpectationFailed" />
        <scope classrefs="HTTPServerError" ilk="class" line="1895" lineend="1897" name="HTTPInternalServerError" />
        <scope classrefs="HTTPServerError" ilk="class" line="1898" lineend="1900" name="HTTPNotImplemented" />
        <scope classrefs="HTTPServerError" ilk="class" line="1901" lineend="1903" name="HTTPBadGateway" />
        <scope classrefs="HTTPServerError" ilk="class" line="1904" lineend="1906" name="HTTPServiceUnavailable" />
        <scope classrefs="HTTPServerError" ilk="class" line="1907" lineend="1909" name="HTTPGatewayTimeOut" />
        <scope classrefs="HTTPServerError" ilk="class" line="1910" lineend="1912" name="HTTPVersionNotSupported" />
        <scope classrefs="Object" doc=":startdoc:" ilk="class" line="1917" lineend="2220" name="HTTPResponse">
          <scope classrefs="Object" doc="reopen" ilk="class" line="1973" lineend="2007" name="HTTPResponse">
            <scope ilk="function" line="1974" lineend="1981" name="read_new" signature="read_new(sock)" />
            <scope ilk="function" line="1985" lineend="1990" name="read_status_line" signature="read_status_line(sock)" />
            <scope ilk="function" line="1992" lineend="1996" name="response_class" signature="response_class(code)" />
            <scope ilk="function" line="1998" lineend="2006" name="each_response_header" signature="each_response_header(sock)" />
          </scope>
          <scope attributes="__ctor__" doc="next is to fix bug in RDoc, where the private inside class&#xA;&lt;&lt; self spills out." ilk="function" line="2015" lineend="2022" name="initialize" signature="initialize(httpv, code, msg)" />
          <scope ilk="function" line="2025" lineend="2025" name="http_version" />
          <scope ilk="function" line="2030" lineend="2030" name="code" />
          <scope ilk="function" line="2033" lineend="2033" name="message" />
          <scope doc=":nodoc: obsolete" ilk="function" line="2036" lineend="2038" name="inspect" signature="inspect" />
          <scope doc="For backward compatibility." ilk="function" line="2045" lineend="2052" name="to_ary" signature="to_ary">
            <scope classrefs="Object" ilk="class" line="2048" lineend="2050" name="res" />
          </scope>
          <scope doc="response &lt;-&gt; exception relationship" ilk="function" line="2058" lineend="2060" name="code_type" signature="code_type" />
          <scope ilk="function" line="2062" lineend="2064" name="error!" signature="error!" />
          <scope ilk="function" line="2066" lineend="2068" name="error_type" signature="error_type" />
          <scope doc="Raises HTTP error if the response is not 2xx." ilk="function" line="2071" lineend="2073" name="value" signature="value" />
          <scope doc="header (for backward compatibility only; DO NOT USE)" ilk="function" line="2079" lineend="2082" name="response" signature="response" />
          <scope ilk="function" line="2084" lineend="2087" name="header" signature="header" />
          <scope ilk="function" line="2089" lineend="2092" name="read_header" signature="read_header" />
          <scope doc="body" ilk="function" line="2098" lineend="2107" name="reading_body" signature="reading_body(sock, reqmethodallowbody)" />
          <scope doc="Gets entity body. If the block given, yields it to +block+." ilk="function" line="2131" lineend="2147" name="read_body" signature="read_body(dest = nil, &amp;block)" />
          <scope doc="Returns the entity body." ilk="function" line="2163" lineend="2165" name="body" signature="body" />
          <scope doc=":nodoc: obsolete" ilk="function" line="2171" lineend="2187" name="read_body_0" signature="read_body_0(dest)" />
          <scope ilk="function" line="2189" lineend="2204" name="read_chunked" signature="read_chunked(dest)" />
          <scope ilk="function" line="2206" lineend="2208" name="stream_check" signature="stream_check" />
          <scope ilk="function" line="2210" lineend="2218" name="procdest" signature="procdest(dest, block)" />
          <import symbol="HTTPHeader" />
        </scope>
        <scope classrefs="Object" doc=":enddoc: -- for backward compatibility" ilk="class" line="2227" lineend="2229" name="HTTP" />
        <scope ilk="namespace" line="2230" lineend="2232" name="NetPrivate" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/ftptls">
      <import line="26" module="socket" symbol="*" />
      <import line="27" module="openssl" symbol="*" />
      <import line="28" module="net/ftp" symbol="*" />
      <scope ilk="namespace" line="30" lineend="43" name="Net">
        <scope classrefs="FTP" ilk="class" line="31" lineend="42" name="FTPTLS">
          <scope ilk="function" line="32" lineend="41" name="login" signature="login(user = &quot;anonymous&quot;, passwd = nil, acct = nil)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="net/ftp">
      <import line="17" module="socket" symbol="*" />
      <import line="18" module="monitor" symbol="*" />
      <scope doc="= net/ftp.rb - FTP Client Library" ilk="namespace" line="20" lineend="917" name="Net">
        <scope classrefs="StandardError" doc=":stopdoc:" ilk="class" line="23" lineend="23" name="FTPError" />
        <scope classrefs="FTPError" ilk="class" line="24" lineend="24" name="FTPReplyError" />
        <scope classrefs="FTPError" ilk="class" line="25" lineend="25" name="FTPTempError" />
        <scope classrefs="FTPError" ilk="class" line="26" lineend="26" name="FTPPermError" />
        <scope classrefs="FTPError" ilk="class" line="27" lineend="27" name="FTPProtoError" />
        <scope classrefs="Object" doc=":startdoc:" ilk="class" line="72" lineend="915" name="FTP">
          <scope ilk="function" line="82" lineend="82" name="binary" />
          <scope ilk="function" line="82" lineend="82" name="binary=" />
          <scope ilk="function" line="85" lineend="85" name="passive" />
          <scope ilk="function" line="85" lineend="85" name="passive=" />
          <scope ilk="function" line="89" lineend="89" name="debug_mode" />
          <scope ilk="function" line="89" lineend="89" name="debug_mode=" />
          <scope ilk="function" line="93" lineend="93" name="resume" />
          <scope ilk="function" line="93" lineend="93" name="resume=" />
          <scope ilk="function" line="96" lineend="96" name="welcome" />
          <scope ilk="function" line="99" lineend="99" name="last_response_code" />
          <scope ilk="function" line="103" lineend="103" name="last_response" />
          <scope attributes="__classmethod__" doc="A synonym for &lt;tt&gt;FTP.new&lt;/tt&gt;, but with a mandatory host&#xA;parameter." ilk="function" line="111" lineend="122" name="open" signature="FTP.open(host, user = nil, passwd = nil, acct = nil)" />
          <scope attributes="__ctor__" doc="Creates and returns a new +FTP+ object." ilk="function" line="129" lineend="141" name="initialize" signature="initialize(host = nil, user = nil, passwd = nil, acct = nil)" />
          <scope doc="Obsolete" ilk="function" line="144" lineend="147" name="return_code" signature="return_code" />
          <scope doc="Obsolete" ilk="function" line="150" lineend="152" name="return_code=" signature="return_code=(s)" />
          <scope ilk="function" line="154" lineend="161" name="open_socket" signature="open_socket(host, port)" />
          <scope doc="Establishes an FTP connection to host, optionally overriding&#xA;the default port." ilk="function" line="170" lineend="178" name="connect" signature="connect(host, port = FTP_PORT)" />
          <scope doc="WRITEME or make private" ilk="function" line="183" lineend="190" name="set_socket" signature="set_socket(sock, get_greeting = true)" />
          <scope ilk="function" line="192" lineend="198" name="sanitize" signature="sanitize(s)" />
          <scope ilk="function" line="201" lineend="207" name="putline" signature="putline(line)" />
          <scope ilk="function" line="210" lineend="217" name="getline" signature="getline" />
          <scope ilk="function" line="220" lineend="231" name="getmultiline" signature="getmultiline" />
          <scope ilk="function" line="234" lineend="247" name="getresp" signature="getresp" />
          <scope ilk="function" line="250" lineend="255" name="voidresp" signature="voidresp" />
          <scope doc="Sends a command and returns the response." ilk="function" line="261" lineend="266" name="sendcmd" signature="sendcmd(cmd)" />
          <scope doc="Sends a command and expect a response beginning with &apos;2&apos;." ilk="function" line="271" lineend="276" name="voidcmd" signature="voidcmd(cmd)" />
          <scope ilk="function" line="278" lineend="291" name="sendport" signature="sendport(host, port)" />
          <scope ilk="function" line="294" lineend="300" name="makeport" signature="makeport" />
          <scope ilk="function" line="303" lineend="311" name="makepasv" signature="makepasv" />
          <scope ilk="function" line="314" lineend="344" name="transfercmd" signature="transfercmd(cmd, rest_offset = nil)" />
          <scope ilk="function" line="347" lineend="360" name="getaddress" signature="getaddress" />
          <scope doc="Logs in to the remote host." ilk="function" line="371" lineend="390" name="login" signature="login(user = &quot;anonymous&quot;, passwd = nil, acct = nil)" />
          <scope doc="Puts the connection into binary (image) mode, issues the&#xA;given command, and fetches the data returned, passing it to&#xA;the associated block in chunks of +blocksize+ characters." ilk="function" line="398" lineend="410" name="retrbinary" signature="retrbinary(cmd, blocksize, rest_offset = nil)" />
          <scope doc="Puts the connection into ASCII (text) mode, issues the given&#xA;command, and passes the resulting data, one line at a time,&#xA;to the associated block." ilk="function" line="418" lineend="435" name="retrlines" signature="retrlines(cmd)" />
          <scope doc="Puts the connection into binary (image) mode, issues the&#xA;given server-side command (such as &quot;STOR myfile&quot;), and sends&#xA;the contents of the file named +file+ to the server." ilk="function" line="443" lineend="459" name="storbinary" signature="storbinary(cmd, file, blocksize, rest_offset = nil, &amp;block)" />
          <scope doc="Puts the connection into ASCII (text) mode, issues the given&#xA;server-side command (such as &quot;STOR myfile&quot;), and sends the&#xA;contents of the file named +file+ to the server, one line at&#xA;a time." ilk="function" line="467" lineend="483" name="storlines" signature="storlines(cmd, file, &amp;block)" />
          <scope doc="Retrieves +remotefile+ in binary mode, storing the result in&#xA;+localfile+." ilk="function" line="490" lineend="508" name="getbinaryfile" signature="getbinaryfile(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE, &amp;block)" />
          <scope doc="Retrieves +remotefile+ in ASCII (text) mode, storing the&#xA;result in +localfile+." ilk="function" line="515" lineend="525" name="gettextfile" signature="gettextfile(remotefile, localfile = File.basename(remotefile), &amp;block)" />
          <scope doc="Retrieves +remotefile+ in whatever mode the session is set&#xA;(text or binary)." ilk="function" line="531" lineend="538" name="get" signature="get(remotefile, localfile = File.basename(remotefile), blocksize = DEFAULT_BLOCKSIZE, &amp;block)" />
          <scope doc="Transfers +localfile+ to the server in binary mode, storing&#xA;the result in +remotefile+." ilk="function" line="545" lineend="563" name="putbinaryfile" signature="putbinaryfile(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE, &amp;block)" />
          <scope doc="Transfers +localfile+ to the server in ASCII (text) mode,&#xA;storing the result in +remotefile+." ilk="function" line="570" lineend="577" name="puttextfile" signature="puttextfile(localfile, remotefile = File.basename(localfile), &amp;block)" />
          <scope doc="Transfers +localfile+ to the server in whatever mode the&#xA;session is set (text or binary)." ilk="function" line="583" lineend="590" name="put" signature="put(localfile, remotefile = File.basename(localfile), blocksize = DEFAULT_BLOCKSIZE, &amp;block)" />
          <scope doc="Sends the ACCT command. TODO: more info." ilk="function" line="595" lineend="598" name="acct" signature="acct(account)" />
          <scope doc="Returns an array of filenames in the remote directory." ilk="function" line="603" lineend="613" name="nlst" signature="nlst(dir = nil)" />
          <scope doc="Returns an array of file information in the directory (the&#xA;output is like `ls -l`)." ilk="function" line="619" lineend="633" name="list" signature="list(*args, &amp;block)" />
          <scope doc="Renames a file on the server." ilk="function" line="640" lineend="646" name="rename" signature="rename(fromname, toname)" />
          <scope doc="Deletes a file on the server." ilk="function" line="651" lineend="660" name="delete" signature="delete(filename)" />
          <scope doc="Changes the (remote) directory." ilk="function" line="665" lineend="678" name="chdir" signature="chdir(dirname)" />
          <scope doc="Returns the size of the given (remote) filename." ilk="function" line="683" lineend="690" name="size" signature="size(filename)" />
          <scope doc=":nodoc:" ilk="function" line="698" lineend="702" name="mtime" signature="mtime(filename, local = false)" />
          <scope doc="Creates a remote directory." ilk="function" line="707" lineend="710" name="mkdir" signature="mkdir(dirname)" />
          <scope doc="Removes a remote directory." ilk="function" line="715" lineend="717" name="rmdir" signature="rmdir(dirname)" />
          <scope doc="Returns the current remote directory." ilk="function" line="722" lineend="725" name="pwd" signature="pwd" />
          <scope doc="Returns system information." ilk="function" line="731" lineend="737" name="system" signature="system" />
          <scope doc="Aborts the previous command (ABOR command)." ilk="function" line="742" lineend="751" name="abort" signature="abort" />
          <scope doc="Returns the status (STAT command)." ilk="function" line="756" lineend="761" name="status" signature="status" />
          <scope doc="Issues the MDTM command. TODO: more info." ilk="function" line="766" lineend="771" name="mdtm" signature="mdtm(filename)" />
          <scope doc="Issues the HELP command." ilk="function" line="776" lineend="782" name="help" signature="help(arg = nil)" />
          <scope doc="Exits the FTP session." ilk="function" line="787" lineend="789" name="quit" signature="quit" />
          <scope doc="Issues a NOOP command." ilk="function" line="794" lineend="796" name="noop" signature="noop" />
          <scope doc="Issues a SITE command." ilk="function" line="801" lineend="804" name="site" signature="site(arg)" />
          <scope doc="Closes the connection." ilk="function" line="810" lineend="812" name="close" signature="close" />
          <scope doc="Returns +true+ iff the connection is closed." ilk="function" line="817" lineend="819" name="closed?" signature="closed?" />
          <scope ilk="function" line="821" lineend="837" name="parse227" signature="parse227(resp)" />
          <scope ilk="function" line="840" lineend="869" name="parse228" signature="parse228(resp)" />
          <scope ilk="function" line="872" lineend="888" name="parse229" signature="parse229(resp)" />
          <scope ilk="function" line="891" lineend="913" name="parse257" signature="parse257(resp)" />
          <import symbol="MonitorMixin" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="mutex_m">
      <scope doc="mutex_m.rb - $Release Version: 3.0$ $Revision: 1.7 $ $Date:&#xA;1998/02/27 04:28:57 $ Original from mutex.rb" ilk="namespace" line="27" lineend="118" name="Mutex_m">
        <scope attributes="__classmethod__" ilk="function" line="28" lineend="36" name="define_aliases" signature="Mutex_m.define_aliases(cl)" />
        <scope attributes="__classmethod__" ilk="function" line="38" lineend="41" name="append_features" signature="Mutex_m.append_features(cl)" />
        <scope attributes="__classmethod__" ilk="function" line="43" lineend="46" name="extend_object" signature="Mutex_m.extend_object(obj)" />
        <scope ilk="function" line="48" lineend="57" name="mu_extended" signature="mu_extended">
          <scope classrefs="Object" ilk="class" line="54" lineend="54" name="self" />
        </scope>
        <scope doc="locking" ilk="function" line="60" lineend="67" name="mu_synchronize" signature="mu_synchronize" />
        <scope ilk="function" line="69" lineend="71" name="mu_locked?" signature="mu_locked?" />
        <scope ilk="function" line="73" lineend="82" name="mu_try_lock" signature="mu_try_lock" />
        <scope ilk="function" line="84" lineend="92" name="mu_lock" signature="mu_lock" />
        <scope ilk="function" line="94" lineend="105" name="mu_unlock" signature="mu_unlock" />
        <scope ilk="function" line="109" lineend="112" name="mu_initialize" signature="mu_initialize" />
        <scope attributes="__ctor__" ilk="function" line="114" lineend="117" name="initialize" signature="initialize(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="multi-tk">
      <import line="5" module="tcltklib" symbol="*" />
      <import line="6" module="tkutil" symbol="*" />
      <import line="7" module="thread" symbol="*" />
      <import line="2925" module="tk" symbol="*" />
      <scope classrefs="Object" doc="TclTkLib.mainloop_abort_on_exception = false&#xA;TclTkLib.mainloop_abort_on_exception = nil" ilk="class" line="23" lineend="33" name="TclTkIp">
        <scope ilk="function" line="27" lineend="32" name="new" signature="new(*args)" />
      </scope>
      <scope classrefs="Exception" doc="exceptiopn to treat the return value from IP" ilk="class" line="38" lineend="50" name="MultiTkIp_OK">
        <scope attributes="__classmethod__" ilk="function" line="39" lineend="41" name="send" signature="self.send(thread, ret=nil)" />
        <scope attributes="__ctor__" ilk="function" line="43" lineend="46" name="initialize" signature="initialize(ret=nil)" />
        <scope ilk="function" line="48" lineend="48" name="return_value" />
      </scope>
      <scope classrefs="Object" doc="methods for construction" ilk="class" line="56" lineend="1167" name="MultiTkIp">
        <scope classrefs="Object" doc="table of [name, args, body]" ilk="class" line="71" lineend="138" name="@@TK_CMD_TBL">
          <scope ilk="function" line="78" lineend="80" name="kind_of?" signature="kind_of?(klass)" />
          <scope ilk="function" line="82" lineend="89" name="inspect" signature="inspect" />
          <scope ilk="function" line="91" lineend="100" name="[]" signature="[](idx" />
          <scope ilk="function" line="102" lineend="107" name="[]=" signature="[]=(idx" />
          <scope ilk="function" line="109" lineend="118" name="delete" signature="delete(idx, &amp;blk)" />
          <scope ilk="function" line="120" lineend="130" name="each" signature="each(&amp;blk)" />
          <scope ilk="function" line="132" lineend="134" name="has_key?" signature="has_key?(k)" />
        </scope>
        <scope ilk="function" line="196" lineend="201" name="_keys2opts" signature="_keys2opts(src_keys)" />
        <scope ilk="function" line="204" lineend="252" name="_check_and_return" signature="_check_and_return(thread, exception, wait=0)" />
        <scope ilk="function" line="256" lineend="258" name="set_cb_error" signature="set_cb_error(cmd = Proc.new)" />
        <scope ilk="function" line="260" lineend="264" name="cb_error" signature="cb_error(e)" />
        <scope ilk="function" line="268" lineend="274" name="set_safe_level" signature="set_safe_level(safe)" />
        <scope ilk="function" line="275" lineend="277" name="safe_level=" signature="safe_level=(safe)" />
        <scope attributes="__classmethod__" ilk="function" line="278" lineend="280" name="set_safe_level" signature="self.set_safe_level(safe)" />
        <scope attributes="__classmethod__" ilk="function" line="281" lineend="283" name="safe_level=" signature="self.safe_level=(safe)" />
        <scope ilk="function" line="284" lineend="286" name="safe_level" signature="safe_level" />
        <scope attributes="__classmethod__" ilk="function" line="287" lineend="289" name="safe_level" signature="self.safe_level" />
        <scope ilk="function" line="291" lineend="293" name="wait_on_mainloop?" signature="wait_on_mainloop?" />
        <scope ilk="function" line="294" lineend="296" name="wait_on_mainloop=" signature="wait_on_mainloop=(bool)" />
        <scope ilk="function" line="298" lineend="300" name="running_mainloop?" signature="running_mainloop?" />
        <scope ilk="function" line="302" lineend="344" name="_destroy_slaves_of_slaveIP" signature="_destroy_slaves_of_slaveIP(ip)" />
        <scope ilk="function" line="346" lineend="526" name="_receiver_eval_proc_core" signature="_receiver_eval_proc_core(safe_level, thread, cmd, *args)" />
        <scope ilk="function" line="528" lineend="544" name="_receiver_eval_proc" signature="_receiver_eval_proc(last_thread, safe_level, thread, cmd, *args)" />
        <scope ilk="function" line="548" lineend="564" name="_receiver_mainloop" signature="_receiver_mainloop(check_root)" />
        <scope ilk="function" line="566" lineend="629" name="_create_receiver_and_watchdog" signature="_create_receiver_and_watchdog(lvl = $SAFE)" />
        <scope attributes="__classmethod__" doc="defend against modification" ilk="function" line="751" lineend="772" name="inherited" signature="self.inherited(subclass)">
          <scope classrefs="Object" doc="trust if on ThreadGroup::Default or @@DEFAULT_MASTER&apos;s&#xA;ThreadGroup" ilk="class" line="755" lineend="765" name="subclass" />
        </scope>
        <scope ilk="function" line="783" lineend="807" name="_parse_slaveopts" signature="_parse_slaveopts(keys)" />
        <scope ilk="function" line="810" lineend="814" name="_create_slave_ip_name" signature="_create_slave_ip_name" />
        <scope ilk="function" line="819" lineend="873" name="__check_safetk_optkeys" signature="__check_safetk_optkeys(optkeys)" />
        <scope ilk="function" line="876" lineend="951" name="__create_safetk_frame" signature="__create_safetk_frame(slave_ip, slave_name, app_name, keys)" />
        <scope ilk="function" line="954" lineend="995" name="__create_safe_slave_obj" signature="__create_safe_slave_obj(safe_opts, app_name, tk_opts)">
          <scope doc="safe interpreter" ilk="function" line="961" lineend="963" name="slave_ip.safe_base?" signature="slave_ip.safe_base?" />
        </scope>
        <scope ilk="function" line="997" lineend="1007" name="__create_trusted_slave_obj" signature="__create_trusted_slave_obj(name, keys)" />
        <scope ilk="function" line="1011" lineend="1016" name="_create_slave_object" signature="_create_slave_object(keys={})" />
        <scope attributes="__ctor__" ilk="function" line="1020" lineend="1136" name="initialize" signature="initialize(master, safeip=true, keys={})">
          <scope classrefs="Object" doc="@wait_on_mainloop = [false, 0].taint" ilk="class" line="1128" lineend="1130" name="self" />
        </scope>
        <scope ilk="function" line="1140" lineend="1165" name="_default_delete_hook" signature="_default_delete_hook(slave)" />
      </scope>
      <scope classrefs="Object" doc="get target IP" ilk="class" line="1171" lineend="1196" name="MultiTkIp">
        <scope attributes="__classmethod__" ilk="function" line="1172" lineend="1174" name="_ip_id_" signature="self._ip_id_" />
        <scope ilk="function" line="1175" lineend="1178" name="_ip_id_" signature="_ip_id_" />
        <scope attributes="__classmethod__" ilk="function" line="1180" lineend="1195" name="__getip" signature="self.__getip" />
      </scope>
      <scope classrefs="Object" doc="aliases of constructor" ilk="class" line="1200" lineend="1272" name="MultiTkIp">
        <scope ilk="function" line="1205" lineend="1225" name="new_master" signature="new_master(safe=nil, keys={})" />
        <scope ilk="function" line="1229" lineend="1249" name="new_slave" signature="new_slave(safe=nil, keys={})" />
        <scope ilk="function" line="1252" lineend="1270" name="new_safe_slave" signature="new_safe_slave(safe=4, keys={})" />
      </scope>
      <scope classrefs="Object" doc="get info" ilk="class" line="1276" lineend="1380" name="MultiTkIp">
        <scope ilk="function" line="1277" lineend="1297" name="inspect" signature="inspect" />
        <scope ilk="function" line="1299" lineend="1305" name="master?" signature="master?" />
        <scope attributes="__classmethod__" ilk="function" line="1306" lineend="1308" name="master?" signature="self.master?" />
        <scope ilk="function" line="1310" lineend="1312" name="slave?" signature="slave?" />
        <scope attributes="__classmethod__" ilk="function" line="1313" lineend="1315" name="slave?" signature="self.slave?" />
        <scope ilk="function" line="1317" lineend="1327" name="alive?" signature="alive?" />
        <scope attributes="__classmethod__" ilk="function" line="1328" lineend="1330" name="alive?" signature="self.alive?" />
        <scope ilk="function" line="1332" lineend="1334" name="path" signature="path" />
        <scope attributes="__classmethod__" ilk="function" line="1335" lineend="1337" name="path" signature="self.path" />
        <scope ilk="function" line="1338" lineend="1340" name="ip_name" signature="ip_name" />
        <scope attributes="__classmethod__" ilk="function" line="1341" lineend="1343" name="ip_name" signature="self.ip_name" />
        <scope ilk="function" line="1344" lineend="1346" name="to_eval" signature="to_eval" />
        <scope attributes="__classmethod__" ilk="function" line="1347" lineend="1349" name="to_eval" signature="self.to_eval" />
        <scope ilk="function" line="1351" lineend="1362" name="slaves" signature="slaves(all = false)" />
        <scope attributes="__classmethod__" ilk="function" line="1363" lineend="1365" name="slaves" signature="self.slaves(all = false)" />
        <scope ilk="function" line="1367" lineend="1371" name="manipulable?" signature="manipulable?" />
        <scope attributes="__classmethod__" ilk="function" line="1372" lineend="1374" name="manipulable?" signature="self.manipulable?" />
        <scope ilk="function" line="1376" lineend="1378" name="_is_master_of?" signature="_is_master_of?(tcltkip_obj)" />
      </scope>
      <scope classrefs="Object" doc="instance methods to treat tables" ilk="class" line="1384" lineend="1428" name="MultiTkIp">
        <scope ilk="function" line="1385" lineend="1389" name="_tk_cmd_tbl" signature="_tk_cmd_tbl" />
        <scope ilk="function" line="1391" lineend="1393" name="_tk_windows" signature="_tk_windows" />
        <scope ilk="function" line="1395" lineend="1397" name="_tk_table_list" signature="_tk_table_list" />
        <scope ilk="function" line="1399" lineend="1404" name="_add_new_tables" signature="_add_new_tables (@@TK_TABLE_LIST" />
        <scope ilk="function" line="1406" lineend="1408" name="_init_ip_env" signature="_init_ip_env(script)" />
        <scope ilk="function" line="1410" lineend="1416" name="_add_tk_procs" signature="_add_tk_procs(name, args, body)" />
        <scope ilk="function" line="1418" lineend="1427" name="_init_ip_internal" signature="_init_ip_internal(init_ip_env, add_tk_procs)" />
      </scope>
      <scope classrefs="Object" doc="class methods to treat tables" ilk="class" line="1432" lineend="1476" name="MultiTkIp">
        <scope attributes="__classmethod__" ilk="function" line="1433" lineend="1435" name="tk_cmd_tbl" signature="self.tk_cmd_tbl" />
        <scope attributes="__classmethod__" ilk="function" line="1436" lineend="1438" name="tk_windows" signature="self.tk_windows" />
        <scope attributes="__classmethod__" ilk="function" line="1439" lineend="1441" name="tk_object_table" signature="self.tk_object_table(id)" />
        <scope attributes="__classmethod__" ilk="function" line="1442" lineend="1457" name="create_table" signature="self.create_table" />
        <scope attributes="__classmethod__" ilk="function" line="1459" lineend="1464" name="init_ip_env" signature="self.init_ip_env(script = Proc.new)" />
        <scope attributes="__classmethod__" ilk="function" line="1466" lineend="1471" name="add_tk_procs" signature="self.add_tk_procs(name, args=nil, body=nil)" />
        <scope attributes="__classmethod__" ilk="function" line="1473" lineend="1475" name="init_ip_internal" signature="self.init_ip_internal" />
      </scope>
      <scope classrefs="Object" doc="for callback operation" ilk="class" line="1480" lineend="1500" name="MultiTkIp">
        <scope attributes="__classmethod__" ilk="function" line="1481" lineend="1483" name="cb_entry_class" signature="self.cb_entry_class" />
        <scope attributes="__classmethod__" ilk="function" line="1484" lineend="1486" name="get_cb_entry" signature="self.get_cb_entry(cmd)" />
        <scope ilk="function" line="1488" lineend="1499" name="cb_eval" signature="cb_eval(cmd, *args)" />
      </scope>
      <scope classrefs="Object" doc="evaluate a procedure on the proper interpreter" ilk="class" line="1504" lineend="1734" name="MultiTkIp">
        <scope doc="instance method" ilk="function" line="1506" lineend="1595" name="eval_proc_core" signature="eval_proc_core(req_val, cmd, *args)" />
        <scope ilk="function" line="1598" lineend="1612" name="eval_callback" signature="eval_callback(*args)" />
        <scope ilk="function" line="1614" lineend="1647" name="eval_proc" signature="eval_proc(*args)" />
        <scope ilk="function" line="1650" lineend="1669" name="bg_eval_proc" signature="bg_eval_proc(*args)" />
        <scope ilk="function" line="1675" lineend="1686" name="eval_string" signature="eval_string(cmd, *eval_args)" />
        <scope ilk="function" line="1689" lineend="1701" name="bg_eval_string" signature="bg_eval_string(cmd, *eval_args)" />
        <scope ilk="function" line="1706" lineend="1718" name="eval" signature="eval(*args, &amp;blk)" />
        <scope ilk="function" line="1720" lineend="1732" name="bg_eval" signature="bg_eval(*args, &amp;blk)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="1736" lineend="1776" name="MultiTkIp">
        <scope doc="class method" ilk="function" line="1738" lineend="1741" name="eval_proc" signature="eval_proc(*args, &amp;blk)" />
        <scope ilk="function" line="1744" lineend="1747" name="bg_eval_proc" signature="bg_eval_proc(*args, &amp;blk)" />
        <scope ilk="function" line="1753" lineend="1756" name="eval_string" signature="eval_string(cmd, *eval_args)" />
        <scope ilk="function" line="1759" lineend="1762" name="bg_eval_string" signature="bg_eval_string(cmd, *eval_args)" />
        <scope ilk="function" line="1767" lineend="1770" name="eval" signature="eval(*args, &amp;blk)" />
        <scope ilk="function" line="1771" lineend="1774" name="bg_eval" signature="bg_eval(*args, &amp;blk)" />
      </scope>
      <scope classrefs="Object" doc="event loop all master/slave IPs are controled by only one&#xA;event-loop" ilk="class" line="1781" lineend="1817" name="MultiTkIp">
        <scope ilk="function" line="1782" lineend="1784" name="mainloop" signature="mainloop(check_root = true)" />
        <scope ilk="function" line="1785" lineend="1787" name="mainloop_watchdog" signature="mainloop_watchdog(check_root = true)" />
        <scope ilk="function" line="1788" lineend="1790" name="do_one_event" signature="do_one_event(flag = TclTkLib::EventFlag::ALL)" />
        <scope ilk="function" line="1791" lineend="1794" name="mainloop_abort_on_exception" signature="mainloop_abort_on_exception" />
        <scope ilk="function" line="1795" lineend="1798" name="mainloop_abort_on_exception=" signature="mainloop_abort_on_exception=(mode)" />
        <scope ilk="function" line="1799" lineend="1801" name="set_eventloop_tick" signature="set_eventloop_tick(tick)" />
        <scope ilk="function" line="1802" lineend="1804" name="get_eventloop_tick" signature="get_eventloop_tick" />
        <scope ilk="function" line="1805" lineend="1807" name="set_no_event_wait" signature="set_no_event_wait(tick)" />
        <scope ilk="function" line="1808" lineend="1810" name="get_no_event_wait" signature="get_no_event_wait" />
        <scope ilk="function" line="1811" lineend="1813" name="set_eventloop_weight" signature="set_eventloop_weight(loop_max, no_event_tick)" />
        <scope ilk="function" line="1814" lineend="1816" name="get_eventloop_weight" signature="get_eventloop_weight" />
      </scope>
      <scope classrefs="Object" doc="class methods to delegate to TclTkIp" ilk="class" line="1820" lineend="1983" name="MultiTkIp">
        <scope ilk="function" line="1821" lineend="1823" name="method_missing" signature="method_missing(id, *args)" />
        <scope ilk="function" line="1825" lineend="1827" name="make_safe" signature="make_safe" />
        <scope ilk="function" line="1829" lineend="1831" name="safe?" signature="safe?" />
        <scope ilk="function" line="1833" lineend="1839" name="safe_base?" signature="safe_base?" />
        <scope ilk="function" line="1841" lineend="1843" name="allow_ruby_exit?" signature="allow_ruby_exit?" />
        <scope ilk="function" line="1845" lineend="1847" name="allow_ruby_exit=" signature="allow_ruby_exit= (mode)" />
        <scope ilk="function" line="1849" lineend="1851" name="delete" signature="delete" />
        <scope ilk="function" line="1853" lineend="1855" name="deleted?" signature="deleted?" />
        <scope ilk="function" line="1857" lineend="1859" name="has_mainwindow?" signature="has_mainwindow?" />
        <scope ilk="function" line="1861" lineend="1863" name="invalid_namespace?" signature="invalid_namespace?" />
        <scope ilk="function" line="1865" lineend="1867" name="abort" signature="abort(msg = nil)" />
        <scope ilk="function" line="1869" lineend="1871" name="exit" signature="exit(st = true)" />
        <scope ilk="function" line="1873" lineend="1875" name="exit!" signature="exit!(st = false)" />
        <scope ilk="function" line="1877" lineend="1886" name="restart" signature="restart(app_name = nil, keys = {})" />
        <scope ilk="function" line="1888" lineend="1890" name="_eval" signature="_eval(str)" />
        <scope ilk="function" line="1892" lineend="1894" name="_invoke" signature="_invoke(*args)" />
        <scope ilk="function" line="1896" lineend="1898" name="_eval_without_enc" signature="_eval_without_enc(str)" />
        <scope ilk="function" line="1900" lineend="1902" name="_invoke_without_enc" signature="_invoke_without_enc(*args)" />
        <scope ilk="function" line="1904" lineend="1906" name="_eval_with_enc" signature="_eval_with_enc(str)" />
        <scope ilk="function" line="1908" lineend="1910" name="_invoke_with_enc" signature="_invoke_with_enc(*args)" />
        <scope ilk="function" line="1912" lineend="1914" name="_toUTF8" signature="_toUTF8(str, encoding=nil)" />
        <scope ilk="function" line="1916" lineend="1918" name="_fromUTF8" signature="_fromUTF8(str, encoding=nil)" />
        <scope ilk="function" line="1920" lineend="1922" name="_thread_vwait" signature="_thread_vwait(var)" />
        <scope ilk="function" line="1924" lineend="1926" name="_thread_tkwait" signature="_thread_tkwait(mode, target)" />
        <scope ilk="function" line="1928" lineend="1930" name="_return_value" signature="_return_value" />
        <scope ilk="function" line="1932" lineend="1934" name="_get_variable" signature="_get_variable(var, flag)" />
        <scope ilk="function" line="1935" lineend="1937" name="_get_variable2" signature="_get_variable2(var, idx, flag)" />
        <scope ilk="function" line="1938" lineend="1940" name="_set_variable" signature="_set_variable(var, value, flag)" />
        <scope ilk="function" line="1941" lineend="1943" name="_set_variable2" signature="_set_variable2(var, idx, value, flag)" />
        <scope ilk="function" line="1944" lineend="1946" name="_unset_variable" signature="_unset_variable(var, flag)" />
        <scope ilk="function" line="1947" lineend="1949" name="_unset_variable2" signature="_unset_variable2(var, idx, flag)" />
        <scope ilk="function" line="1951" lineend="1953" name="_get_global_var" signature="_get_global_var(var)" />
        <scope ilk="function" line="1954" lineend="1956" name="_get_global_var2" signature="_get_global_var2(var, idx)" />
        <scope ilk="function" line="1957" lineend="1959" name="_set_global_var" signature="_set_global_var(var, value)" />
        <scope ilk="function" line="1960" lineend="1962" name="_set_global_var2" signature="_set_global_var2(var, idx, value)" />
        <scope ilk="function" line="1963" lineend="1965" name="_unset_global_var" signature="_unset_global_var(var)" />
        <scope ilk="function" line="1966" lineend="1968" name="_unset_global_var2" signature="_unset_global_var2(var, idx)" />
        <scope ilk="function" line="1970" lineend="1972" name="_split_tklist" signature="_split_tklist(str)" />
        <scope ilk="function" line="1973" lineend="1975" name="_merge_tklist" signature="_merge_tklist(*args)" />
        <scope ilk="function" line="1976" lineend="1978" name="_conv_listelement" signature="_conv_listelement(arg)" />
        <scope ilk="function" line="1980" lineend="1982" name="_create_console" signature="_create_console" />
      </scope>
      <scope classrefs="Object" doc="wrap methods on TclTkLib : not permit calling TclTkLib&#xA;module methods" ilk="class" line="1987" lineend="2031" name="TclTkLib">
        <scope ilk="function" line="1988" lineend="1990" name="mainloop" signature="mainloop(check_root = true)" />
        <scope ilk="function" line="1991" lineend="1993" name="mainloop_watchdog" signature="mainloop_watchdog(check_root = true)" />
        <scope ilk="function" line="1994" lineend="1996" name="do_one_event" signature="do_one_event(flag = TclTkLib::EventFlag::ALL)" />
        <scope doc="def mainloop_abort_on_exception&#xA;MultiTkIp.mainloop_abort_on_exception end def&#xA;mainloop_abort_on_exception=(mode)&#xA;MultiTkIp.mainloop_abort_on_exception=(mode)" ilk="function" line="2003" lineend="2005" name="set_eventloop_tick" signature="set_eventloop_tick(tick)" />
        <scope ilk="function" line="2006" lineend="2008" name="get_eventloop_tick" signature="get_eventloop_tick" />
        <scope ilk="function" line="2009" lineend="2011" name="set_no_event_wait" signature="set_no_event_wait(tick)" />
        <scope ilk="function" line="20121501212" lineend="2014" name="get_no_event_wait" signature="get_no_event_wait" />
        <scope ilk="function" line="2015" lineend="2017" name="set_eventloop_weight" signature="set_eventloop_weight(loop_max, no_event_tick)" />
        <scope ilk="function" line="2018" lineend="2020" name="get_eventloop_weight" signature="get_eventloop_weight" />
        <scope ilk="function" line="2021" lineend="2023" name="restart" signature="restart(*args)" />
        <scope ilk="function" line="2025" lineend="2027" name="_merge_tklist" signature="_merge_tklist(*args)" />
        <scope ilk="function" line="2028" lineend="2030" name="_conv_listelement" signature="_conv_listelement(arg)" />
      </scope>
      <scope classrefs="Object" doc="depend on TclTkIp" ilk="class" line="2035" lineend="2423" name="MultiTkIp">
        <scope ilk="function" line="2036" lineend="2143" name="mainloop" signature="mainloop(check_root = true, restart_on_dead = true)" />
        <scope ilk="function" line="2145" lineend="2148" name="make_safe" signature="make_safe" />
        <scope ilk="function" line="2150" lineend="2153" name="safe?" signature="safe?" />
        <scope ilk="function" line="2155" lineend="2158" name="safe_base?" signature="safe_base?" />
        <scope ilk="function" line="2160" lineend="2163" name="allow_ruby_exit?" signature="allow_ruby_exit?" />
        <scope ilk="function" line="2165" lineend="2168" name="allow_ruby_exit=" signature="allow_ruby_exit= (mode)" />
        <scope ilk="function" line="2170" lineend="2231" name="delete" signature="delete" />
        <scope ilk="function" line="2233" lineend="2236" name="deleted?" signature="deleted?" />
        <scope ilk="function" line="2238" lineend="2241" name="has_mainwindow?" signature="has_mainwindow?" />
        <scope ilk="function" line="2243" lineend="2246" name="invalid_namespace?" signature="invalid_namespace?" />
        <scope ilk="function" line="2248" lineend="2261" name="abort" signature="abort(msg = nil)" />
        <scope ilk="function" line="2263" lineend="2271" name="exit" signature="exit(st = true)" />
        <scope ilk="function" line="2273" lineend="2281" name="exit!" signature="exit!(st = false)" />
        <scope ilk="function" line="2283" lineend="2294" name="restart" signature="restart(app_name = nil, keys = {})" />
        <scope ilk="function" line="2296" lineend="2299" name="__eval" signature="__eval(str)" />
        <scope ilk="function" line="2301" lineend="2304" name="__invoke" signature="__invoke(*args)" />
        <scope ilk="function" line="2306" lineend="2309" name="_eval" signature="_eval(str)" />
        <scope ilk="function" line="2311" lineend="2314" name="_invoke" signature="_invoke(*args)" />
        <scope ilk="function" line="2316" lineend="2319" name="_eval_without_enc" signature="_eval_without_enc(str)" />
        <scope ilk="function" line="2321" lineend="2324" name="_invoke_without_enc" signature="_invoke_without_enc(*args)" />
        <scope ilk="function" line="2326" lineend="2329" name="_eval_with_enc" signature="_eval_with_enc(str)" />
        <scope ilk="function" line="2331" lineend="2334" name="_invoke_with_enc" signature="_invoke_with_enc(*args)" />
        <scope ilk="function" line="2336" lineend="2339" name="_toUTF8" signature="_toUTF8(str, encoding=nil)" />
        <scope ilk="function" line="2341" lineend="2344" name="_fromUTF8" signature="_fromUTF8(str, encoding=nil)" />
        <scope ilk="function" line="2346" lineend="2349" name="_thread_vwait" signature="_thread_vwait(var)" />
        <scope ilk="function" line="2351" lineend="2354" name="_thread_tkwait" signature="_thread_tkwait(mode, target)" />
        <scope ilk="function" line="2356" lineend="2359" name="_return_value" signature="_return_value" />
        <scope ilk="function" line="2361" lineend="2364" name="_get_variable" signature="_get_variable(var, flag)" />
        <scope ilk="function" line="2365" lineend="2368" name="_get_variable2" signature="_get_variable2(var, idx, flag)" />
        <scope ilk="function" line="2369" lineend="2372" name="_set_variable" signature="_set_variable(var, value, flag)" />
        <scope ilk="function" line="2373" lineend="2376" name="_set_variable2" signature="_set_variable2(var, idx, value, flag)" />
        <scope ilk="function" line="2377" lineend="2380" name="_unset_variable" signature="_unset_variable(var, flag)" />
        <scope ilk="function" line="2381" lineend="2384" name="_unset_variable2" signature="_unset_variable2(var, idx, flag)" />
        <scope ilk="function" line="2386" lineend="2389" name="_get_global_var" signature="_get_global_var(var)" />
        <scope ilk="function" line="2390" lineend="2393" name="_get_global_var2" signature="_get_global_var2(var, idx)" />
        <scope ilk="function" line="2394" lineend="2397" name="_set_global_var" signature="_set_global_var(var, value)" />
        <scope ilk="function" line="2398" lineend="2401" name="_set_global_var2" signature="_set_global_var2(var, idx, value)" />
        <scope ilk="function" line="2402" lineend="2405" name="_unset_global_var" signature="_unset_global_var(var)" />
        <scope ilk="function" line="2406" lineend="2409" name="_unset_global_var2" signature="_unset_global_var2(var, idx)" />
        <scope ilk="function" line="2411" lineend="2414" name="_split_tklist" signature="_split_tklist(str)" />
        <scope ilk="function" line="2415" lineend="2418" name="_merge_tklist" signature="_merge_tklist(*args)" />
        <scope ilk="function" line="2419" lineend="2422" name="_conv_listelement" signature="_conv_listelement(arg)" />
      </scope>
      <scope classrefs="Object" doc="interp command support" ilk="class" line="2427" lineend="2801" name="MultiTkIp">
        <scope ilk="function" line="2428" lineend="2456" name="_lst2ary" signature="_lst2ary(str)" />
        <scope ilk="function" line="2459" lineend="2467" name="_slavearg" signature="_slavearg(slave)" />
        <scope ilk="function" line="2470" lineend="2473" name="alias_info" signature="alias_info(slave, cmd_name)" />
        <scope attributes="__classmethod__" ilk="function" line="2474" lineend="2476" name="alias_info" signature="self.alias_info(slave, cmd_name)" />
        <scope ilk="function" line="2478" lineend="2482" name="alias_delete" signature="alias_delete(slave, cmd_name)" />
        <scope attributes="__classmethod__" ilk="function" line="2483" lineend="2486" name="alias_delete" signature="self.alias_delete(slave, cmd_name)" />
        <scope ilk="function" line="2488" lineend="2493" name="def_alias" signature="def_alias(slave, new_cmd, org_cmd, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="2494" lineend="2497" name="def_alias" signature="self.def_alias(slave, new_cmd, org_cmd, *args)" />
        <scope ilk="function" line="2499" lineend="2502" name="aliases" signature="aliases(slave = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2503" lineend="2505" name="aliases" signature="self.aliases(slave = &apos;&apos;)" />
        <scope ilk="function" line="2507" lineend="2512" name="delete_slaves" signature="delete_slaves(*args)" />
        <scope attributes="__classmethod__" ilk="function" line="2513" lineend="2516" name="delete_slaves" signature="self.delete_slaves(*args)" />
        <scope ilk="function" line="2518" lineend="2522" name="exist?" signature="exist?(slave = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2523" lineend="2525" name="exist?" signature="self.exist?(slave = &apos;&apos;)" />
        <scope ilk="function" line="2527" lineend="2532" name="delete_cmd" signature="delete_cmd(slave, cmd)" />
        <scope attributes="__classmethod__" ilk="function" line="2533" lineend="2536" name="delete_cmd" signature="self.delete_cmd(slave, cmd)" />
        <scope ilk="function" line="2538" lineend="2546" name="expose_cmd" signature="expose_cmd(slave, cmd, aliasname = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2547" lineend="2550" name="expose_cmd" signature="self.expose_cmd(slave, cmd, aliasname = nil)" />
        <scope ilk="function" line="2552" lineend="2560" name="hide_cmd" signature="hide_cmd(slave, cmd, aliasname = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2561" lineend="2564" name="hide_cmd" signature="self.hide_cmd(slave, cmd, aliasname = nil)" />
        <scope ilk="function" line="2566" lineend="2569" name="hidden_cmds" signature="hidden_cmds(slave = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2570" lineend="2572" name="hidden_cmds" signature="self.hidden_cmds(slave = &apos;&apos;)" />
        <scope ilk="function" line="2574" lineend="2589" name="invoke_hidden" signature="invoke_hidden(slave, cmd, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="2590" lineend="2592" name="invoke_hidden" signature="self.invoke_hidden(slave, cmd, *args)" />
        <scope ilk="function" line="2594" lineend="2610" name="invoke_hidden_on_global" signature="invoke_hidden_on_global(slave, cmd, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="2611" lineend="2613" name="invoke_hidden_on_global" signature="self.invoke_hidden_on_global(slave, cmd, *args)" />
        <scope ilk="function" line="2615" lineend="2628" name="invoke_hidden_on_namespace" signature="invoke_hidden_on_namespace(slave, ns, cmd, *args)" />
        <scope attributes="__classmethod__" ilk="function" line="2629" lineend="2631" name="invoke_hidden_on_namespace" signature="self.invoke_hidden_on_namespace(slave, ns, cmd, *args)" />
        <scope ilk="function" line="2633" lineend="2637" name="mark_trusted" signature="mark_trusted(slave = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2638" lineend="2641" name="mark_trusted" signature="self.mark_trusted(slave = &apos;&apos;)" />
        <scope ilk="function" line="2643" lineend="2655" name="set_bgerror_handler" signature="set_bgerror_handler(cmd = Proc.new, slave = nil, &amp;b)" />
        <scope attributes="__classmethod__" ilk="function" line="2656" lineend="2658" name="bgerror" signature="self.bgerror(cmd = Proc.new, slave = nil, &amp;b)" />
        <scope ilk="function" line="2660" lineend="2663" name="get_bgerror_handler" signature="get_bgerror_handler(slave = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2664" lineend="2666" name="bgerror" signature="self.bgerror(slave = &apos;&apos;)" />
        <scope ilk="function" line="2668" lineend="2671" name="set_limit" signature="set_limit(limit_type, slave = &apos;&apos;, opts = {})" />
        <scope attributes="__classmethod__" ilk="function" line="2672" lineend="2674" name="set_limit" signature="self.set_limit(limit_type, slave = &apos;&apos;, opts = {})" />
        <scope ilk="function" line="2676" lineend="2696" name="get_limit" signature="get_limit(limit_type, slave = &apos;&apos;, slot = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="2697" lineend="2699" name="get_limit" signature="self.get_limit(limit_type, slave = &apos;&apos;, slot = nil)" />
        <scope ilk="function" line="2701" lineend="2705" name="recursion_limit" signature="recursion_limit(slave = &apos;&apos;, limit = None)" />
        <scope attributes="__classmethod__" ilk="function" line="2706" lineend="2708" name="recursion_limit" signature="self.recursion_limit(slave = &apos;&apos;, limit = None)" />
        <scope ilk="function" line="2710" lineend="2713" name="alias_target" signature="alias_target(aliascmd, slave = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2714" lineend="2716" name="alias_target" signature="self.alias_target(aliascmd, slave = &apos;&apos;)" />
        <scope ilk="function" line="2718" lineend="2722" name="share_stdin" signature="share_stdin(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2723" lineend="2726" name="share_stdin" signature="self.share_stdin(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2728" lineend="2732" name="share_stdout" signature="share_stdout(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2733" lineend="2736" name="share_stdout" signature="self.share_stdout(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2738" lineend="2742" name="share_stderr" signature="share_stderr(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2743" lineend="2746" name="share_stderr" signature="self.share_stderr(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2748" lineend="2752" name="transfer_stdin" signature="transfer_stdin(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2753" lineend="2756" name="transfer_stdin" signature="self.transfer_stdin(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2758" lineend="2762" name="transfer_stdout" signature="transfer_stdout(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2763" lineend="2766" name="transfer_stdout" signature="self.transfer_stdout(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2768" lineend="2772" name="transfer_stderr" signature="transfer_stderr(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2773" lineend="2776" name="transfer_stderr" signature="self.transfer_stderr(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2778" lineend="2784" name="share_stdio" signature="share_stdio(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2785" lineend="2788" name="share_stdio" signature="self.share_stdio(dist, src = &apos;&apos;)" />
        <scope ilk="function" line="2790" lineend="2796" name="transfer_stdio" signature="transfer_stdio(dist, src = &apos;&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="2797" lineend="2800" name="transfer_stdio" signature="self.transfer_stdio(dist, src = &apos;&apos;)" />
      </scope>
      <scope classrefs="Object" doc="Safe Base :: manipulating safe interpreter" ilk="class" line="2805" lineend="2878" name="MultiTkIp">
        <scope ilk="function" line="2806" lineend="2817" name="safeip_configure" signature="safeip_configure(slot, value=None)" />
        <scope ilk="function" line="2819" lineend="2857" name="safeip_configinfo" signature="safeip_configinfo(slot = nil)" />
        <scope ilk="function" line="2859" lineend="2862" name="safeip_delete" signature="safeip_delete" />
        <scope ilk="function" line="2864" lineend="2867" name="safeip_add_to_access_path" signature="safeip_add_to_access_path(dir)" />
        <scope ilk="function" line="2869" lineend="2872" name="safeip_find_in_access_path" signature="safeip_find_in_access_path(dir)" />
        <scope ilk="function" line="2874" lineend="2877" name="safeip_set_log_cmd" signature="safeip_set_log_cmd(cmd = Proc.new)" />
      </scope>
      <scope classrefs="Object" doc="encoding convert" ilk="class" line="2882" lineend="2903" name="MultiTkIp">
        <scope ilk="function" line="2883" lineend="2886" name="encoding" signature="encoding" />
        <scope ilk="function" line="2887" lineend="2890" name="encoding=" signature="encoding=(enc)" />
        <scope ilk="function" line="2892" lineend="2895" name="encoding_convertfrom" signature="encoding_convertfrom(str, enc=None)" />
        <scope ilk="function" line="2898" lineend="2901" name="encoding_convertto" signature="encoding_convertto(str, enc=None)" />
      </scope>
      <scope classrefs="Object" doc="remove methods for security" ilk="class" line="2907" lineend="2911" name="MultiTkIp" />
      <scope doc="end of MultiTkIp definition defend against modification&#xA;MultiTkIp.freeze TclTkLib.freeze" ilk="namespace" line="2922" lineend="2924" name="TkCore" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="monitor">
      <scope doc="Adds monitor functionality to an arbitrary object by mixing&#xA;the module with +include+." ilk="namespace" line="79" lineend="290" name="MonitorMixin">
        <scope classrefs="Object" doc="FIXME: This isn&apos;t documented in Nutshell." ilk="class" line="86" lineend="171" name="ConditionVariable">
          <scope classrefs="Exception" ilk="class" line="87" lineend="87" name="Timeout" />
          <scope ilk="function" line="89" lineend="113" name="wait" signature="wait(timeout = nil)" />
          <scope ilk="function" line="115" lineend="119" name="wait_while" signature="wait_while" />
          <scope ilk="function" line="121" lineend="125" name="wait_until" signature="wait_until" />
          <scope ilk="function" line="127" lineend="134" name="signal" signature="signal" />
          <scope ilk="function" line="136" lineend="145" name="broadcast" signature="broadcast" />
          <scope ilk="function" line="147" lineend="149" name="count_waiters" signature="count_waiters" />
          <scope attributes="__ctor__" ilk="function" line="153" lineend="156" name="initialize" signature="initialize(monitor)" />
          <scope ilk="function" line="158" lineend="170" name="create_timer" signature="create_timer(timeout)" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="173" lineend="176" name="extend_object" signature="self.extend_object(obj)" />
        <scope doc="Attempts to enter exclusive section. Returns +false+ if lock&#xA;fails." ilk="function" line="181" lineend="193" name="mon_try_enter" signature="mon_try_enter" />
        <scope doc="Enters exclusive section." ilk="function" line="200" lineend="205" name="mon_enter" signature="mon_enter" />
        <scope doc="Leaves exclusive section." ilk="function" line="210" lineend="219" name="mon_exit" signature="mon_exit" />
        <scope doc="Enters exclusive section and executes the block." ilk="function" line="226" lineend="233" name="mon_synchronize" signature="mon_synchronize" />
        <scope doc="FIXME: This isn&apos;t documented in Nutshell." ilk="function" line="239" lineend="241" name="new_cond" signature="new_cond" />
        <scope attributes="__ctor__" ilk="function" line="245" lineend="248" name="initialize" signature="initialize(*args)" />
        <scope ilk="function" line="250" lineend="255" name="mon_initialize" signature="mon_initialize" />
        <scope ilk="function" line="257" lineend="261" name="mon_check_owner" signature="mon_check_owner" />
        <scope ilk="function" line="263" lineend="270" name="mon_acquire" signature="mon_acquire(queue)" />
        <scope ilk="function" line="272" lineend="277" name="mon_release" signature="mon_release" />
        <scope ilk="function" line="279" lineend="282" name="mon_enter_for_cond" signature="mon_enter_for_cond(count)" />
        <scope ilk="function" line="284" lineend="289" name="mon_exit_for_cond" signature="mon_exit_for_cond" />
      </scope>
      <scope classrefs="Object" ilk="class" line="292" lineend="297" name="Monitor">
        <import symbol="MonitorMixin" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="mkmf">
      <import line="4" module="rbconfig" symbol="*" />
      <import line="5" module="fileutils" symbol="*" />
      <import line="6" module="shellwords" symbol="*" />
      <scope doc="module to create Makefile for extension modules invoke like:&#xA;ruby -r mkmf extconf.rb" ilk="function" line="64" lineend="66" name="config_string" signature="config_string(key, config = CONFIG)" />
      <scope ilk="function" line="68" lineend="70" name="dir_re" signature="dir_re(dir)" />
      <scope ilk="function" line="81" lineend="105" name="install_dirs" signature="install_dirs(target_prefix = nil)" />
      <scope ilk="function" line="107" lineend="110" name="map_dir" signature="map_dir(dir, map = nil)" />
      <scope classrefs="Object" ilk="class" line="129" lineend="133" name="String">
        <scope ilk="function" line="130" lineend="132" name="quote" signature="quote" />
      </scope>
      <scope classrefs="Object" ilk="class" line="134" lineend="138" name="Array">
        <scope ilk="function" line="135" lineend="137" name="quote" signature="quote" />
      </scope>
      <scope ilk="function" line="140" lineend="142" name="rm_f" signature="rm_f(*files)" />
      <scope ilk="function" line="144" lineend="148" name="modified?" signature="modified?(target, times)" />
      <scope ilk="function" line="150" lineend="164" name="merge_libs" signature="merge_libs(*libs)" />
      <scope ilk="namespace" line="166" lineend="215" name="Logging">
        <scope attributes="__classmethod__" ilk="function" line="173" lineend="182" name="open" signature="self::open" />
        <scope attributes="__classmethod__" ilk="function" line="184" lineend="188" name="message" signature="self::message(*s)" />
        <scope attributes="__classmethod__" ilk="function" line="190" lineend="197" name="logfile" signature="self::logfile" />
        <scope attributes="__classmethod__" ilk="function" line="199" lineend="214" name="postpone" signature="self::postpone" />
      </scope>
      <scope ilk="function" line="217" lineend="222" name="xsystem" signature="xsystem" />
      <scope ilk="function" line="224" lineend="234" name="xpopen" signature="xpopen" />
      <scope ilk="function" line="236" lineend="240" name="log_src" signature="log_src(src)" />
      <scope ilk="function" line="254" lineend="259" name="try_do" signature="try_do(src, command, &amp;b)" />
      <scope ilk="function" line="261" lineend="273" name="link_command" signature="link_command(ldflags, opt=&quot;&quot;, libpath=$LIBPATH)" />
      <scope ilk="function" line="275" lineend="279" name="cc_command" signature="cc_command(opt=&quot;&quot;)" />
      <scope ilk="function" line="281" lineend="285" name="cpp_command" signature="cpp_command(outfile, opt=&quot;&quot;)" />
      <scope ilk="function" line="287" lineend="291" name="libpathflag" signature="libpathflag(libpath=$LIBPATH)" />
      <scope ilk="function" line="293" lineend="295" name="try_link0" signature="try_link0(src, opt=&quot;&quot;, &amp;b)" />
      <scope ilk="function" line="297" lineend="301" name="try_link" signature="try_link(src, opt=&quot;&quot;, &amp;b)" />
      <scope ilk="function" line="303" lineend="307" name="try_compile" signature="try_compile(src, opt=&quot;&quot;, &amp;b)" />
      <scope ilk="function" line="309" lineend="313" name="try_cpp" signature="try_cpp(src, opt=&quot;&quot;, &amp;b)" />
      <scope ilk="function" line="315" lineend="322" name="cpp_include" signature="cpp_include(header)" />
      <scope ilk="function" line="324" lineend="330" name="with_cppflags" signature="with_cppflags(flags)" />
      <scope ilk="function" line="332" lineend="338" name="with_cflags" signature="with_cflags(flags)" />
      <scope ilk="function" line="340" lineend="346" name="with_ldflags" signature="with_ldflags(flags)" />
      <scope ilk="function" line="348" lineend="356" name="try_static_assert" signature="try_static_assert(expr, headers = nil, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="358" lineend="408" name="try_constant" signature="try_constant(const, headers = nil, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="410" name="try_func" signature="try_func(func, libs, headers = nil, &amp;b)" />
      <scope ilk="function" line="426" lineend="435" name="try_var" signature="try_var(var, headers = nil, &amp;b)" />
      <scope ilk="function" line="437" lineend="461" name="egrep_cpp" signature="egrep_cpp(pat, src, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="463" lineend="472" name="macro_defined?" signature="macro_defined?(macro, src, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="474" lineend="482" name="try_run" signature="try_run(src, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="484" lineend="519" name="install_files" signature="install_files(mfile, ifiles, map = nil, srcprefix = nil)" />
      <scope ilk="function" line="521" lineend="523" name="install_rb" signature="install_rb(mfile, dest, srcdir = nil)" />
      <scope ilk="function" line="525" lineend="527" name="append_library" signature="append_library(libs, lib)" />
      <scope ilk="function" line="529" lineend="534" name="message" signature="message(*s)" />
      <scope ilk="function" line="536" lineend="549" name="checking_for" signature="checking_for(m, fmt = nil)" />
      <scope ilk="function" line="551" lineend="557" name="have_macro" signature="have_macro(macro, headers = nil, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="559" lineend="575" name="have_library" signature="have_library(lib, func = nil, header=nil, &amp;b)" />
      <scope ilk="function" line="577" lineend="597" name="find_library" signature="find_library(lib, func, *paths, &amp;b)" />
      <scope ilk="function" line="599" lineend="608" name="have_func" signature="have_func(func, headers = nil, &amp;b)" />
      <scope ilk="function" line="610" lineend="619" name="have_var" signature="have_var(var, headers = nil, &amp;b)" />
      <scope ilk="function" line="621" lineend="630" name="have_header" signature="have_header(header, &amp;b)" />
      <scope ilk="function" line="632" lineend="649" name="find_header" signature="find_header(header, *paths)" />
      <scope ilk="function" line="651" lineend="666" name="have_struct_member" signature="have_struct_member(type, member, header = nil, &amp;b)" />
      <scope ilk="function" line="668" lineend="688" name="have_type" signature="have_type(type, header = nil, opt = &quot;&quot;, &amp;b)" />
      <scope ilk="function" line="690" lineend="707" name="check_sizeof" signature="check_sizeof(type, header = nil, &amp;b)" />
      <scope ilk="function" line="709" lineend="718" name="scalar_ptr_type?" signature="scalar_ptr_type?(type, member = nil, headers = nil, &amp;b)" />
      <scope ilk="function" line="720" lineend="729" name="scalar_type?" signature="scalar_type?(type, member = nil, headers = nil, &amp;b)" />
      <scope ilk="function" line="731" lineend="762" name="what_type?" signature="what_type?(type, member = nil, headers = nil, &amp;b)">
        <scope ilk="function" line="740" lineend="742" name="fmt" signature="fmt." />
      </scope>
      <scope ilk="function" line="764" lineend="782" name="find_executable0" signature="find_executable0(bin, path = nil)" />
      <scope ilk="function" line="784" lineend="788" name="find_executable" signature="find_executable(bin, path = nil)" />
      <scope ilk="function" line="790" lineend="794" name="arg_config" signature="arg_config(config, *defaults, &amp;block)" />
      <scope ilk="function" line="796" lineend="815" name="with_config" signature="with_config(config, *defaults)" />
      <scope ilk="function" line="817" lineend="827" name="enable_config" signature="enable_config(config, *defaults)" />
      <scope ilk="function" line="829" lineend="846" name="create_header" signature="create_header(header = &quot;extconf.h&quot;)" />
      <scope ilk="function" line="848" lineend="880" name="dir_config" signature="dir_config(target, idefault=nil, ldefault=nil)" />
      <scope ilk="function" line="882" lineend="902" name="pkg_config" signature="pkg_config(pkg)" />
      <scope ilk="function" line="904" lineend="906" name="with_destdir" signature="with_destdir(dir)" />
      <scope ilk="function" line="908" lineend="910" name="winsep" signature="winsep(s)" />
      <scope ilk="function" line="912" lineend="997" name="configuration" signature="configuration(srcdir)" />
      <scope ilk="function" line="999" lineend="1007" name="dummy_makefile" signature="dummy_makefile(srcdir)" />
      <scope ilk="function" line="1009" lineend="1262" name="create_makefile" signature="create_makefile(target, srcprefix = nil)" />
      <scope ilk="function" line="1264" lineend="1301" name="init_mkmf" signature="init_mkmf(config = CONFIG)" />
      <scope ilk="function" line="1311" lineend="1316" name="mkmf_failed" signature="mkmf_failed(path)" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="md5">
      <import line="6" module="digest/md5" symbol="*" />
      <scope classrefs="Object" doc="just for compatibility; requiring &quot;md5&quot; is obsoleted" ilk="class" line="10" lineend="14" name="MD5">
        <scope attributes="__classmethod__" ilk="function" line="11" lineend="13" name="md5" signature="self.md5(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="matrix">
      <scope classrefs="Object" doc="The Matrix class represents a mathematical matrix, and&#xA;provides methods for creating special-case matrices (zero,&#xA;identity, diagonal, singular, vector), operating on them&#xA;arithmetically and algebraically, and determining their&#xA;mathematical properties (trace, rank, inverse, determinant)." ilk="class" name="Matrix">
        <scope classrefs="Numeric" doc="Private CLASS" ilk="class" name="Scalar" />
        <import symbol="ExceptionForMatrix" />
        <scope attributes="__classmethod__" doc="Creates a matrix where each argument is a row." ilk="function" name="[]" signature="(*rows)" />
        <scope attributes="__classmethod__" doc="Creates a single-column matrix where the values of that&#xA;column are as given in column." ilk="function" name="column_vector" signature="(column)" />
        <scope attributes="__classmethod__" doc="Creates a matrix using columns as an array of column&#xA;vectors." ilk="function" name="columns" signature="(columns)" />
        <scope attributes="__classmethod__" doc="Creates a matrix where the diagonal elements are composed of&#xA;values." ilk="function" name="diagonal" signature="(*values)" />
        <scope attributes="__classmethod__" doc="Creates an n by n identity matrix." ilk="function" name="identity" signature="(n)" />
        <scope attributes="__classmethod__ __ctor__" doc="This method is used by the other methods that create&#xA;matrices, and is of no use to general users." ilk="function" name="new" signature="(init_method, *argv)" />
        <scope attributes="__classmethod__" doc="Creates a single-row matrix where the values of that row are&#xA;as given in row." ilk="function" name="row_vector" signature="(row)" />
        <scope attributes="__classmethod__" doc="Creates a matrix where rows is an array of arrays, each of&#xA;which is a row to the matrix. If the optional argument copy&#xA;is false, use the given arrays as the internal structure of&#xA;the matrix without copying." ilk="function" name="rows" signature="(rows, copy = true)" />
        <scope attributes="__classmethod__" doc="Creates an n by n diagonal matrix where each diagonal&#xA;element is value." ilk="function" name="scalar" signature="(n, value)" />
        <scope attributes="__classmethod__" doc="Creates an n by n zero matrix." ilk="function" name="zero" signature="(n)" />
        <scope doc="Matrix multiplication." ilk="function" name="*" signature="(m)" />
        <scope doc="Matrix exponentiation. Defined for integer powers only." ilk="function" name="**" signature="(other)" />
        <scope doc="Matrix addition." ilk="function" name="+" signature="(m)" />
        <scope doc="Matrix division (multiplication by the inverse)." ilk="function" name="/" signature="(other)" />
        <scope doc="Returns true if and only if the two matrices contain equal&#xA;elements." ilk="function" name="==" signature="(other)" />
        <scope doc="Returns element (i,j) of the matrix. That is: row i, column&#xA;j." ilk="function" name="[]" signature="(i, j)" />
        <scope doc="Returns a clone of the matrix, so that the contents of each&#xA;do not reference identical objects." ilk="function" name="clone" signature="()" />
        <scope doc="FIXME: describe #coerce." ilk="function" name="coerce" signature="(other)" />
        <scope doc="Returns a matrix that is the result of iteration of the&#xA;given block over all elements of the matrix." ilk="function" name="collect" signature="( {|e| ...}" />
        <scope doc="Returns column vector number j of the matrix as a Vector&#xA;(starting at 0 like an array). When a block is given, the&#xA;elements of that vector are iterated." ilk="function" name="column" signature="(j) {|e| ...}" />
        <scope doc="Returns the number of columns. Note that it is possible to&#xA;construct a matrix with uneven columns (e.g." ilk="function" name="column_size" signature="()" />
        <scope doc="Returns an array of the column vectors of the matrix. See&#xA;Vector." ilk="function" name="column_vectors" signature="()" />
        <scope doc="Not really intended for general consumption." ilk="function" name="compare_by_row_vectors" signature="(rows)" />
        <scope doc="Alias for #determinant" ilk="function" name="det" signature="()" />
        <scope doc="Returns the determinant of the matrix. If the matrix is not&#xA;square, the result is 0." ilk="function" name="determinant" signature="()" />
        <scope doc="Alias for #==" ilk="function" name="eql?" signature="(other)" />
        <scope doc="Returns a hash-code for the matrix." ilk="function" name="hash" signature="()" />
        <scope attributes="private" ilk="function" name="init_rows" signature="(rows, copy)" />
        <scope doc="Overrides Object#inspect" ilk="function" name="inspect" signature="()" />
        <scope doc="Alias for #inverse" ilk="function" name="inv" signature="()" />
        <scope doc="Returns the inverse of the matrix." ilk="function" name="inverse" signature="()" />
        <scope doc="Not for public consumption?" ilk="function" name="inverse_from" signature="(src)" />
        <scope doc="Alias for #collect" ilk="function" name="map" signature="(" />
        <scope doc="Returns a section of the matrix." ilk="function" name="minor" signature="(*param)" />
        <scope doc="Returns the rank of the matrix. Beware that using Float&#xA;values, with their usual lack of precision, can affect the&#xA;value returned by this method." ilk="function" name="rank" signature="()" />
        <scope doc="Returns true if this is a regular matrix." ilk="function" name="regular?" signature="()" />
        <scope doc="Returns row vector number i of the matrix as a Vector&#xA;(starting at 0 like an array). When a block is given, the&#xA;elements of that vector are iterated." ilk="function" name="row" signature="(i) {|e| ...}" />
        <scope doc="Returns the number of rows." ilk="function" name="row_size" signature="()" />
        <scope doc="Returns an array of the row vectors of the matrix. See&#xA;Vector." ilk="function" name="row_vectors" signature="()" />
        <scope doc="Returns true is this is a singular (i.e. non-regular)&#xA;matrix." ilk="function" name="singular?" signature="()" />
        <scope doc="Returns true is this is a square matrix. See note in&#xA;column_size about this being unreliable, though." ilk="function" name="square?" signature="()" />
        <scope doc="Alias for #transpose" ilk="function" name="t" signature="()" />
        <scope doc="Returns an array of arrays that describe the rows of the&#xA;matrix." ilk="function" name="to_a" signature="()" />
        <scope doc="Overrides Object#to_s" ilk="function" name="to_s" signature="()" />
        <scope doc="Alias for #trace" ilk="function" name="tr" signature="()" />
        <scope doc="Returns the trace (sum of diagonal elements) of the matrix." ilk="function" name="trace" signature="()" />
        <scope doc="Returns the transpose of the matrix." ilk="function" name="transpose" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="mathn">
      <import line="13" module="complex.rb" symbol="*" />
      <import line="14" module="rational.rb" symbol="*" />
      <import line="15" module="matrix.rb" symbol="*" />
      <scope classrefs="Object" doc="mathn.rb - $Release Version: 0.5 $ $Revision: 1.1.1.1.4.1 $&#xA;$Date: 1998/01/16 12:36:05 $ by Keiju ISHITSUKA(SHL Japan&#xA;Inc.)" ilk="class" line="17" lineend="66" name="Integer">
        <scope ilk="function" line="19" lineend="35" name="gcd2" signature="gcd2(int)" />
        <scope attributes="__classmethod__" ilk="function" line="37" lineend="43" name="from_prime_division" signature="Integer.from_prime_division(pd)" />
        <scope ilk="function" line="45" lineend="65" name="prime_division" signature="prime_division" />
      </scope>
      <scope classrefs="Object" ilk="class" line="68" lineend="106" name="Prime">
        <scope attributes="__ctor__" ilk="function" line="71" lineend="75" name="initialize" signature="initialize" />
        <scope ilk="function" line="77" lineend="98" name="succ" signature="succ" />
        <scope ilk="function" line="101" lineend="105" name="each" signature="each" />
        <import symbol="Enumerable" />
      </scope>
      <scope classrefs="Object" ilk="class" line="108" lineend="110" name="Fixnum" />
      <scope classrefs="Object" ilk="class" line="112" lineend="114" name="Bignum" />
      <scope classrefs="Object" ilk="class" line="116" lineend="229" name="Rational">
        <scope ilk="function" line="119" lineend="121" name="inspect" signature="inspect" />
        <scope ilk="function" line="125" lineend="184" name="**" signature="** (other" />
        <scope ilk="function" line="186" lineend="228" name="power2" signature="power2(other)" />
      </scope>
      <scope ilk="namespace" line="231" lineend="302" name="Math">
        <scope ilk="function" line="232" lineend="253" name="sqrt" signature="sqrt(a)" />
        <scope ilk="function" line="255" lineend="298" name="rsqrt" signature="rsqrt(a)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="304" lineend="306" name="Complex" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="mailread">
      <scope classrefs="Object" ilk="class" line="1" lineend="48" name="Mail">
        <scope attributes="__ctor__" ilk="function" line="3" lineend="35" name="initialize" signature="initialize(f)" />
        <scope ilk="function" line="37" lineend="39" name="header" signature="header" />
        <scope ilk="function" line="41" lineend="43" name="body" signature="body" />
        <scope ilk="function" line="45" lineend="47" name="[]" signature="[](field" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="logger">
      <scope classrefs="Object" ilk="class" name="Logger">
        <scope doc="Logging severity." ilk="namespace" name="Severity" />
        <scope classrefs="Error" ilk="class" name="ShiftingError" />
        <scope classrefs="Object" ilk="class" name="Application">
          <import symbol="Logger::Severity" />
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(appname = nil)" />
          <scope ilk="function" name="appname" />
          <scope doc="Set the logging threshold, just like Logger#level=." ilk="function" name="level=" signature="(level)" />
          <scope doc="See Logger#add. This application&apos;s appname is used." ilk="function" name="log" signature="(severity, message = nil, &amp;block)" />
          <scope ilk="function" name="log=" signature="(logdev)" />
          <scope ilk="function" name="logdev" />
          <scope attributes="private" ilk="function" name="run" signature="()" />
          <scope doc="Sets the log device for this application. See the class&#xA;Logger for an explanation of the arguments." ilk="function" name="set_log" signature="(logdev, shift_age = 0, shift_size = 1024000)" />
          <scope doc="Start the application. Return the status code." ilk="function" name="start" signature="()" />
        </scope>
        <scope classrefs="Object" ilk="class" name="Formatter">
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="()" />
          <scope ilk="function" name="call" signature="(severity, time, progname, msg)" />
          <scope ilk="function" name="datetime_format" />
          <scope ilk="function" name="datetime_format=" />
          <scope attributes="private" ilk="function" name="format_datetime" signature="(time)" />
          <scope attributes="private" ilk="function" name="msg2str" signature="(msg)" />
        </scope>
        <scope classrefs="Object" ilk="class" name="LogDevice">
          <scope classrefs="Object" ilk="class" name="LogDeviceMutex">
            <import symbol="MonitorMixin" />
          </scope>
          <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(log = nil, opt = {})" />
          <scope attributes="private" ilk="function" name="add_log_header" signature="(file)" />
          <scope attributes="private" ilk="function" name="check_shift_log" signature="()" />
          <scope ilk="function" name="close" signature="()" />
          <scope attributes="private" ilk="function" name="create_logfile" signature="(filename)" />
          <scope ilk="function" name="dev" />
          <scope attributes="private" ilk="function" name="eod" signature="(t)" />
          <scope ilk="function" name="filename" />
          <scope attributes="private" ilk="function" name="open_logfile" signature="(filename)" />
          <scope attributes="private" ilk="function" name="previous_period_end" signature="(now)" />
          <scope attributes="private" ilk="function" name="shift_log_age" signature="()" />
          <scope attributes="private" ilk="function" name="shift_log_period" signature="(now)" />
          <scope ilk="function" name="write" signature="(message)" />
        </scope>
        <scope classrefs="RuntimeError" ilk="class" name="Error" />
        <import symbol="Severity" />
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(logdev, shift_age = 0, shift_size = 1048576)" />
        <scope doc="Dump given message to the log device without any formatting.&#xA;If no log device exists, return nil." ilk="function" name="&lt;&lt;" signature="(msg)" />
        <scope ilk="function" name="add" signature="(severity, message = nil, progname = nil, &amp;block) {|| ...}" />
        <scope doc="Close the logging device." ilk="function" name="close" signature="()" />
        <scope ilk="function" name="datetime_format" signature="()" />
        <scope doc="Logging date-time format (string passed to strftime)." ilk="function" name="datetime_format=" signature="(datetime_format)" />
        <scope doc="Log a DEBUG message." ilk="function" name="debug" signature="(progname = nil, &amp;block)" />
        <scope doc="Returns true iff the current severity level allows for the&#xA;printing of DEBUG messages." ilk="function" name="debug?" signature="()" />
        <scope doc="Log an ERROR message." ilk="function" name="error" signature="(progname = nil, &amp;block)" />
        <scope doc="Returns true iff the current severity level allows for the&#xA;printing of ERROR messages." ilk="function" name="error?" signature="()" />
        <scope doc="Log a FATAL message." ilk="function" name="fatal" signature="(progname = nil, &amp;block)" />
        <scope doc="Returns true iff the current severity level allows for the&#xA;printing of FATAL messages." ilk="function" name="fatal?" signature="()" />
        <scope attributes="private" ilk="function" name="format_message" signature="(severity, datetime, progname, msg)" />
        <scope attributes="private" ilk="function" name="format_severity" signature="(severity)" />
        <scope doc="Logging formatter. formatter#call is invoked with 4&#xA;arguments; severity, time, progname and msg for each log." ilk="function" name="formatter" />
        <scope doc="Logging formatter. formatter#call is invoked with 4&#xA;arguments; severity, time, progname and msg for each log." ilk="function" name="formatter=" />
        <scope doc="Log an INFO message." ilk="function" name="info" signature="(progname = nil, &amp;block)" />
        <scope doc="Returns true iff the current severity level allows for the&#xA;printing of INFO messages." ilk="function" name="info?" signature="()" />
        <scope doc="Logging severity threshold (e.g. Logger::INFO)." ilk="function" name="level" />
        <scope doc="Logging severity threshold (e.g. Logger::INFO)." ilk="function" name="level=" />
        <scope doc="Alias for #add" ilk="function" name="log" signature="(severity, message = nil, progname = nil, &amp;block)" />
        <scope doc="Logging program name." ilk="function" name="progname" />
        <scope doc="Logging program name." ilk="function" name="progname=" />
        <scope doc="Log an UNKNOWN message. This will be printed no matter what&#xA;the logger level." ilk="function" name="unknown" signature="(progname = nil, &amp;block)" />
        <scope doc="Log a WARN message." ilk="function" name="warn" signature="(progname = nil, &amp;block)" />
        <scope doc="Returns true iff the current severity level allows for the&#xA;printing of WARN messages." ilk="function" name="warn?" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="kconv">
      <scope ilk="namespace" name="Kconv">
        <scope doc="Guess input encoding by NKF.guess2" ilk="function" name="guess" signature="Kconv.guess(str)   -&gt; integer" />
        <scope doc="Guess input encoding by NKF.guess1" ilk="function" name="guess_old" signature="Kconv.guess_old(str)   -&gt; integer" />
        <scope doc="Returns whether input encoding is EUC-JP or not." ilk="function" name="iseuc" signature="Kconv.iseuc(str)   -&gt; obj or nil" />
        <scope doc="Returns whether input encoding is Shift_JIS or not." ilk="function" name="issjis" signature="Kconv.issjis(str)   -&gt; obj or nil" />
        <scope doc="Returns whether input encoding is UTF-8 or not." ilk="function" name="isutf8" signature="Kconv.isutf8(str)   -&gt; obj or nil" />
        <scope doc="Convert str to out_code. out_code and in_code are given as&#xA;constants of Kconv." ilk="function" name="kconv" signature="Kconv.kconv(str, out_code, in_code = Kconv::AUTO)" />
        <scope doc="Convert str to EUC-JP" ilk="function" name="toeuc" signature="Kconv.toeuc(str)   -&gt; string" />
        <scope doc="Convert str to ISO-2022-JP" ilk="function" name="tojis" signature="Kconv.tojis(str)   -&gt; string" />
        <scope doc="Convert str to Shift_JIS" ilk="function" name="tosjis" signature="Kconv.tosjis(str)   -&gt; string" />
        <scope doc="Convert str to UTF-16" ilk="function" name="toutf16" signature="Kconv.toutf16(str)   -&gt; string" />
        <scope doc="Convert str to UTF-8" ilk="function" name="toutf8" signature="Kconv.toutf8(str)   -&gt; string" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="jcode">
      <scope classrefs="Object" doc="jcode.rb - ruby code to handle japanese (EUC/SJIS) string" ilk="class" line="8" lineend="219" name="String">
        <scope ilk="function" line="11" lineend="15" name="_regex_quote" signature="_regex_quote(str)" />
        <scope ilk="function" line="46" lineend="57" name="mbchar?" signature="mbchar?" />
        <scope ilk="function" line="59" lineend="70" name="end_regexp" signature="end_regexp" />
        <scope ilk="function" line="78" lineend="90" name="succ!" signature="succ!" />
        <scope ilk="function" line="92" lineend="95" name="succ" signature="succ" />
        <scope ilk="function" line="99" lineend="116" name="_expand_ch" signature="_expand_ch" />
        <scope ilk="function" line="118" lineend="124" name="expand_ch_hash" signature="expand_ch_hash" />
        <scope ilk="function" line="133" lineend="145" name="tr!" signature="tr!(from, to)" />
        <scope ilk="function" line="147" lineend="149" name="tr" signature="tr(from, to)" />
        <scope ilk="function" line="151" lineend="154" name="delete!" signature="delete!(del)" />
        <scope ilk="function" line="156" lineend="158" name="delete" signature="delete(del)" />
        <scope ilk="function" line="160" lineend="169" name="squeeze!" signature="squeeze!(del=nil)" />
        <scope ilk="function" line="171" lineend="173" name="squeeze" signature="squeeze(del=nil)" />
        <scope ilk="function" line="175" lineend="186" name="tr_s!" signature="tr_s!(from, to)" />
        <scope ilk="function" line="188" lineend="190" name="tr_s" signature="tr_s(from, to)" />
        <scope ilk="function" line="192" lineend="194" name="chop!" signature="chop!" />
        <scope ilk="function" line="196" lineend="198" name="chop" signature="chop (str = self.dup)" />
        <scope ilk="function" line="200" lineend="202" name="jlength" signature="jlength" />
        <scope ilk="function" line="205" lineend="207" name="jcount" signature="jcount(str)" />
        <scope ilk="function" line="209" lineend="217" name="each_char" signature="each_char" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb">
      <import line="12" module="e2mmap" symbol="*" />
      <import line="14" module="irb/init" symbol="*" />
      <import line="15" module="irb/context" symbol="*" />
      <import line="16" module="irb/extend-command" symbol="*" />
      <import line="19" module="irb/ruby-lex" symbol="*" />
      <import line="20" module="irb/input-method" symbol="*" />
      <import line="21" module="irb/locale" symbol="*" />
      <scope doc="require &quot;irb/workspace&quot;" ilk="namespace" line="25" lineend="342" name="IRB">
        <scope classrefs="Exception" ilk="class" line="28" lineend="28" name="Abort" />
        <scope attributes="__classmethod__" ilk="function" line="33" lineend="35" name="conf" signature="IRB.conf" />
        <scope attributes="__classmethod__" doc="IRB version method" ilk="function" line="38" lineend="44" name="version" signature="IRB.version">
          <import line="41" module="irb/version" symbol="*" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="46" lineend="48" name="CurrentContext" signature="IRB.CurrentContext" />
        <scope attributes="__classmethod__" doc="initialize IRB and start TOP_LEVEL irb" ilk="function" line="51" lineend="73" name="start" signature="IRB.start(ap_path = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="75" lineend="77" name="irb_exit" signature="IRB.irb_exit(irb, ret)" />
        <scope attributes="__classmethod__" ilk="function" line="79" lineend="85" name="irb_abort" signature="IRB.irb_abort(irb, exception = Abort)" />
        <scope classrefs="Object" doc="irb interpriter main routine" ilk="class" line="90" lineend="318" name="Irb">
          <scope attributes="__ctor__" ilk="function" line="91" lineend="98" name="initialize" signature="initialize(workspace = nil, input_method = nil, output_method = nil)" />
          <scope ilk="function" line="99" lineend="99" name="context" />
          <scope ilk="function" line="100" lineend="100" name="scanner" />
          <scope ilk="function" line="100" lineend="100" name="scanner=" />
          <scope ilk="function" line="102" lineend="191" name="eval_input" signature="eval_input" />
          <scope ilk="function" line="193" lineend="202" name="suspend_name" signature="suspend_name(path = nil, name = nil)" />
          <scope ilk="function" line="204" lineend="211" name="suspend_workspace" signature="suspend_workspace(workspace)" />
          <scope ilk="function" line="213" lineend="221" name="suspend_input_method" signature="suspend_input_method(input_method)" />
          <scope ilk="function" line="223" lineend="230" name="suspend_context" signature="suspend_context(context)" />
          <scope ilk="function" line="232" lineend="251" name="signal_handle" signature="signal_handle" />
          <scope ilk="function" line="253" lineend="263" name="signal_status" signature="signal_status(status)" />
          <scope ilk="function" line="265" lineend="294" name="prompt" signature="prompt(prompt, ltype, indent, line_no)" />
          <scope ilk="function" line="296" lineend="302" name="output_value" signature="output_value" />
          <scope ilk="function" line="304" lineend="317" name="inspect" signature="inspect" />
        </scope>
        <scope doc="Singleton method" ilk="function" line="321" lineend="341" name="@CONF" signature="@CONF." />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/xmp">
      <import line="13" module="irb" symbol="*" />
      <import line="14" module="irb/frame" symbol="*" />
      <scope classrefs="Object" doc="xmp.rb - irb version of gotoken xmp $Release Version: 0.9$&#xA;$Revision: 1.3 $ $Date: 2002/07/09 11:17:16 $ by Keiju&#xA;ISHITSUKA(Nippon Rational Inc.)" ilk="class" line="16" lineend="79" name="XMP">
        <scope attributes="__ctor__" ilk="function" line="19" lineend="34" name="initialize" signature="initialize(bind = nil)" />
        <scope ilk="function" line="36" lineend="53" name="puts" signature="puts(exps)" />
        <scope classrefs="IRB::InputMethod" ilk="class" line="55" lineend="78" name="StringInputMethod">
          <scope attributes="__ctor__" ilk="function" line="56" lineend="59" name="initialize" signature="initialize" />
          <scope ilk="function" line="61" lineend="63" name="eof?" signature="eof?" />
          <scope ilk="function" line="65" lineend="73" name="gets" signature="gets" />
          <scope ilk="function" line="75" lineend="77" name="puts" signature="puts(exps)" />
        </scope>
      </scope>
      <scope ilk="function" line="81" lineend="86" name="xmp" signature="xmp(exps, bind = nil)" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ws-for-case-2" />
    <scope ilk="blob" lang="Ruby" name="irb/workspace">
      <scope doc="irb/workspace-binding.rb - $Release Version: 0.9.5$&#xA;$Revision: 1.5.2.2 $ $Date: 2005/04/19 19:24:57 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="12" lineend="107" name="IRB">
        <scope classrefs="Object" ilk="class" line="13" lineend="106" name="WorkSpace">
          <scope attributes="__ctor__" doc="create new workspace." ilk="function" line="16" lineend="75" name="initialize" signature="initialize(*main)">
            <import line="29" module="tempfile" symbol="*" />
            <import line="40" module="thread" symbol="*" />
          </scope>
          <scope ilk="function" line="77" lineend="77" name="binding" />
          <scope ilk="function" line="78" lineend="78" name="main" />
          <scope ilk="function" line="80" lineend="82" name="evaluate" signature="evaluate(context, statements, file = __FILE__, line = __LINE__)" />
          <scope doc="error message manipulator" ilk="function" line="85" lineend="102" name="filter_backtrace" signature="filter_backtrace(bt)" />
          <scope ilk="function" line="104" lineend="105" name="IRB.delete_caller" signature="IRB.delete_caller" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/version">
      <scope doc="irb/version.rb - irb version definition file $Release&#xA;Version: 0.9.5$ $Revision: 1.4.2.1 $ $Date: 2005/04/19&#xA;19:24:57 $ by Keiju ISHITSUKA(keiju@ishitsuka.com)" ilk="namespace" line="13" lineend="16" name="IRB" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/slex">
      <import line="13" module="e2mmap" symbol="*" />
      <import line="14" module="irb/notifier" symbol="*" />
      <scope doc="irb/slex.rb - symple lex analizer $Release Version: 0.9.5$&#xA;$Revision: 1.6.2.3 $ $Date: 2005/04/19 19:24:57 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="16" lineend="246" name="IRB">
        <scope classrefs="Object" ilk="class" line="17" lineend="245" name="SLex">
          <scope attributes="__ctor__" ilk="function" line="31" lineend="33" name="initialize" signature="initialize" />
          <scope ilk="function" line="35" lineend="40" name="def_rule" signature="def_rule(token, preproc = nil, postproc = nil, &amp;block)" />
          <scope ilk="function" line="42" lineend="49" name="def_rules" signature="def_rules(*tokens, &amp;block)" />
          <scope ilk="function" line="51" lineend="54" name="preproc" signature="preproc(token, proc)" />
          <scope doc="$BMW%A%&apos;%C%/(B?" ilk="function" line="57" lineend="60" name="postproc" signature="postproc(token)" />
          <scope ilk="function" line="62" lineend="64" name="search" signature="search(token)" />
          <scope ilk="function" line="66" lineend="68" name="create" signature="create(token, preproc = nil, postproc = nil)" />
          <scope ilk="function" line="70" lineend="81" name="match" signature="match(token)" />
          <scope ilk="function" line="83" lineend="85" name="inspect" signature="inspect" />
          <scope classrefs="Object" doc="------------------------------------------------------------&#xA;----------" ilk="class" line="92" lineend="244" name="Node">
            <scope attributes="__ctor__" doc="if postproc is nil, this node is an abstract node." ilk="function" line="95" lineend="99" name="initialize" signature="initialize(preproc = nil, postproc = nil)" />
            <scope ilk="function" line="101" lineend="101" name="preproc" />
            <scope ilk="function" line="101" lineend="101" name="preproc=" />
            <scope ilk="function" line="102" lineend="102" name="postproc" />
            <scope ilk="function" line="102" lineend="102" name="postproc=" />
            <scope ilk="function" line="104" lineend="117" name="search" signature="search(chrs, opt = nil)" />
            <scope ilk="function" line="119" lineend="159" name="create_subnode" signature="create_subnode(chrs, preproc = nil, postproc = nil)" />
            <scope doc="chrs: String character array io must have getc()/ungetc();&#xA;and ungetc() must be able to be called arbitrary number of&#xA;times." ilk="function" line="167" lineend="202" name="match" signature="match(chrs, op = &quot;&quot;)" />
            <scope ilk="function" line="204" lineend="243" name="match_io" signature="match_io(io, op = &quot;&quot;)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ruby-token">
      <scope doc="irb/ruby-token.rb - ruby tokens $Release Version: 0.9.5$&#xA;$Revision: 1.5.2.1 $ $Date: 2005/04/19 19:24:57 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="12" lineend="273" name="RubyToken">
        <scope classrefs="Object" doc="for ruby 1.4X" ilk="class" line="26" lineend="35" name="Token">
          <scope attributes="__ctor__" ilk="function" line="27" lineend="31" name="initialize" signature="initialize(seek, line_no, char_no)" />
          <scope ilk="function" line="32" lineend="32" name="seek" />
          <scope ilk="function" line="33" lineend="33" name="line_no" />
          <scope ilk="function" line="34" lineend="34" name="char_no" />
        </scope>
        <scope classrefs="Token" ilk="class" line="37" lineend="42" name="TkNode">
          <scope attributes="__ctor__" ilk="function" line="38" lineend="40" name="initialize" signature="initialize(seek, line_no, char_no)" />
          <scope ilk="function" line="41" lineend="41" name="node" />
        </scope>
        <scope classrefs="Token" ilk="class" line="44" lineend="50" name="TkId">
          <scope attributes="__ctor__" ilk="function" line="45" lineend="48" name="initialize" signature="initialize(seek, line_no, char_no, name)" />
          <scope ilk="function" line="49" lineend="49" name="name" />
        </scope>
        <scope classrefs="Token" ilk="class" line="52" lineend="58" name="TkVal">
          <scope attributes="__ctor__" ilk="function" line="53" lineend="56" name="initialize" signature="initialize(seek, line_no, char_no, value = nil)" />
          <scope ilk="function" line="57" lineend="57" name="value" />
        </scope>
        <scope classrefs="Token" ilk="class" line="60" lineend="62" name="TkOp">
          <scope ilk="function" line="61" lineend="61" name="name" />
        </scope>
        <scope classrefs="TkOp" ilk="class" line="64" lineend="71" name="TkOPASGN">
          <scope attributes="__ctor__" ilk="function" line="65" lineend="69" name="initialize" signature="initialize(seek, line_no, char_no, op)" />
          <scope ilk="function" line="70" lineend="70" name="op" />
        </scope>
        <scope classrefs="Token" ilk="class" line="73" lineend="79" name="TkUnknownChar">
          <scope attributes="__ctor__" ilk="function" line="74" lineend="77" name="initialize" signature="initialize(seek, line_no, char_no, id)" />
          <scope ilk="function" line="78" lineend="78" name="name" />
        </scope>
        <scope classrefs="Token" ilk="class" line="81" lineend="82" name="TkError" />
        <scope ilk="function" line="84" lineend="107" name="Token" signature="Token(token, value = nil)" />
        <scope attributes="__classmethod__" doc="{reading =&gt; token_class} {reading =&gt; [token_class, *opt]}" ilk="function" line="250" lineend="268" name="def_token" signature="RubyToken.def_token(token_n, super_token = Token, reading = nil, *opts)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ruby-lex">
      <import line="13" module="e2mmap" symbol="*" />
      <import line="14" module="irb/slex" symbol="*" />
      <import line="15" module="irb/ruby-token" symbol="*" />
      <scope classrefs="Object" doc="irb/ruby-lex.rb - ruby lexcal analizer $Release Version:&#xA;0.9.5$ $Revision: 1.22.2.5 $ $Date: 2005/06/30 10:11:14 $ by&#xA;Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="class" line="17" lineend="1134" name="RubyLex">
        <scope classrefs="Object" ilk="class" line="32" lineend="37" name="self">
          <scope ilk="function" line="33" lineend="33" name="debug_level" />
          <scope ilk="function" line="33" lineend="33" name="debug_level=" />
          <scope ilk="function" line="34" lineend="36" name="debug?" signature="debug?" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="40" lineend="66" name="initialize" signature="initialize" />
        <scope ilk="function" line="68" lineend="68" name="skip_space" />
        <scope ilk="function" line="68" lineend="68" name="skip_space=" />
        <scope ilk="function" line="69" lineend="69" name="readed_auto_clean_up" />
        <scope ilk="function" line="69" lineend="69" name="readed_auto_clean_up=" />
        <scope ilk="function" line="70" lineend="70" name="exception_on_syntax_error" />
        <scope ilk="function" line="70" lineend="70" name="exception_on_syntax_error=" />
        <scope ilk="function" line="72" lineend="72" name="seek" />
        <scope ilk="function" line="73" lineend="73" name="char_no" />
        <scope ilk="function" line="74" lineend="74" name="line_no" />
        <scope ilk="function" line="75" lineend="75" name="indent" />
        <scope doc="io functions" ilk="function" line="78" lineend="87" name="set_input" signature="set_input(io, p = nil, &amp;block)" />
        <scope ilk="function" line="89" lineend="99" name="get_readed" signature="get_readed" />
        <scope ilk="function" line="101" lineend="120" name="getc" signature="getc" />
        <scope ilk="function" line="122" lineend="130" name="gets" signature="gets" />
        <scope ilk="function" line="132" lineend="134" name="eof?" signature="eof?" />
        <scope ilk="function" line="136" lineend="142" name="getc_of_rests" signature="getc_of_rests" />
        <scope ilk="function" line="144" lineend="163" name="ungetc" signature="ungetc(c = nil)" />
        <scope ilk="function" line="165" lineend="171" name="peek_equal?" signature="peek_equal?(str)" />
        <scope ilk="function" line="173" lineend="178" name="peek_match?" signature="peek_match?(regexp)" />
        <scope ilk="function" line="180" lineend="185" name="peek" signature="peek(i = 0)" />
        <scope ilk="function" line="187" lineend="193" name="buf_input" signature="buf_input" />
        <scope ilk="function" line="196" lineend="203" name="set_prompt" signature="set_prompt(p = nil, &amp;block)" />
        <scope ilk="function" line="205" lineend="209" name="prompt" signature="prompt" />
        <scope ilk="function" line="211" lineend="225" name="initialize_input" signature="initialize_input" />
        <scope ilk="function" line="227" lineend="260" name="each_top_level_statement" signature="each_top_level_statement" />
        <scope ilk="function" line="262" lineend="277" name="lex" signature="lex" />
        <scope ilk="function" line="279" lineend="299" name="token" signature="token" />
        <scope doc=", &quot;when&quot;" ilk="function" line="339" lineend="530" name="lex_init" signature="lex_init()" />
        <scope ilk="function" line="532" lineend="730" name="lex_int2" signature="lex_int2" />
        <scope ilk="function" line="732" lineend="754" name="identify_gvar" signature="identify_gvar" />
        <scope ilk="function" line="756" lineend="863" name="identify_identifier" signature="identify_identifier" />
        <scope ilk="function" line="865" lineend="915" name="identify_here_document" signature="identify_here_document" />
        <scope ilk="function" line="917" lineend="933" name="identify_quotation" signature="identify_quotation" />
        <scope ilk="function" line="935" lineend="1029" name="identify_number" signature="identify_number" />
        <scope ilk="function" line="1031" lineend="1068" name="identify_string" signature="identify_string(ltype, quoted = ltype)" />
        <scope ilk="function" line="1070" lineend="1084" name="identify_comment" signature="identify_comment" />
        <scope ilk="function" line="1086" lineend="1133" name="read_escape" signature="read_escape" />
        <import symbol="RubyToken" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/output-method">
      <import line="13" module="e2mmap" symbol="*" />
      <scope doc="output-method.rb - optput methods used by irb $Release&#xA;Version: 0.9.5$ $Revision: 1.2.4.1 $ $Date: 2005/04/19&#xA;19:24:57 $ by Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="15" lineend="85" name="IRB">
        <scope classrefs="Object" doc="OutputMethod StdioOutputMethod" ilk="class" line="19" lineend="78" name="OutputMethod">
          <scope ilk="function" line="22" lineend="24" name="print" signature="print(*opts)" />
          <scope ilk="function" line="26" lineend="28" name="printn" signature="printn(*opts)" />
          <scope doc="extend printf" ilk="function" line="31" lineend="36" name="printf" signature="printf(format, *opts)" />
          <scope doc="% &lt;&#165;&#213;&#165;&#233;&#165;&#176;&gt;  [#0- +] &lt;&#186;&#199;&#190;&#174;&#165;&#213;&#165;&#163;&#161;&#188;&#165;&#235;&#165;&#201;&#201;&#253;&gt;&#xA;(\*|\*[1-9][0-9]*\$|[1-9][0-9]*)&#xA;&lt;&#192;&#186;&#197;&#217;&gt;.(\*|\*[1-9][0-9]*\$|[1-9][0-9]*|)?&#xA;#&lt;&#196;&#185;&#164;&#181;&#189;&#164;&#192;&#181;&#202;&#184;&#187;&#250;&gt;(hh|h|l|ll|L|q|j|z|t)" ilk="function" line="44" lineend="46" name="parse_printf_format" signature="parse_printf_format(format, opts)" />
          <scope ilk="function" line="48" lineend="61" name="foo" signature="foo(format)" />
          <scope ilk="function" line="63" lineend="68" name="puts" signature="puts(*objs)" />
          <scope ilk="function" line="70" lineend="72" name="pp" signature="pp(*objs)" />
          <scope ilk="function" line="74" lineend="76" name="ppx" signature="ppx(prefix, *objs)" />
        </scope>
        <scope classrefs="OutputMethod" ilk="class" line="80" lineend="84" name="StdioOutputMethod">
          <scope ilk="function" line="81" lineend="83" name="print" signature="print(*opts)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/notifier">
      <import line="13" module="e2mmap" symbol="*" />
      <import line="14" module="irb/output-method" symbol="*" />
      <scope doc="notifier.rb - optput methods used by irb $Release Version:&#xA;0.9.5$ $Revision: 1.2.4.1 $ $Date: 2005/04/19 19:24:57 $ by&#xA;Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="16" lineend="145" name="IRB">
        <scope ilk="namespace" line="17" lineend="144" name="Notifier">
          <scope ilk="function" line="24" lineend="26" name="def_notifier" signature="def_notifier(prefix = &quot;&quot;, output_method = StdioOutputMethod.new)" />
          <scope classrefs="Object" ilk="class" line="29" lineend="74" name="AbstructNotifier">
            <scope attributes="__ctor__" ilk="function" line="30" lineend="33" name="initialize" signature="initialize(prefix, base_notifier)" />
            <scope ilk="function" line="35" lineend="35" name="prefix" />
            <scope ilk="function" line="37" lineend="39" name="notify?" signature="notify?" />
            <scope ilk="function" line="41" lineend="43" name="print" signature="print(*opts)" />
            <scope ilk="function" line="45" lineend="47" name="printn" signature="printn(*opts)" />
            <scope ilk="function" line="49" lineend="51" name="printf" signature="printf(format, *opts)" />
            <scope ilk="function" line="53" lineend="57" name="puts" signature="puts(*objs)" />
            <scope ilk="function" line="59" lineend="63" name="pp" signature="pp(*objs)" />
            <scope ilk="function" line="65" lineend="69" name="ppx" signature="ppx(prefix, *objs)" />
            <scope ilk="function" line="71" lineend="73" name="exec_if" signature="exec_if" />
          </scope>
          <scope classrefs="AbstructNotifier" ilk="class" line="76" lineend="109" name="CompositeNotifier">
            <scope attributes="__ctor__" ilk="function" line="77" lineend="82" name="initialize" signature="initialize(prefix, base_notifier)" />
            <scope ilk="function" line="84" lineend="84" name="notifiers" />
            <scope ilk="function" line="86" lineend="90" name="def_notifier" signature="def_notifier(level, prefix = &quot;&quot;)" />
            <scope ilk="function" line="92" lineend="92" name="level_notifier" />
            <scope ilk="function" line="95" lineend="106" name="level_notifier=" signature="level_notifier=(value)" />
          </scope>
          <scope classrefs="AbstructNotifier" ilk="class" line="111" lineend="129" name="LeveledNotifier">
            <scope attributes="__ctor__" ilk="function" line="114" lineend="118" name="initialize" signature="initialize(base, level, prefix)" />
            <scope ilk="function" line="120" lineend="120" name="level" />
            <scope ilk="function" line="122" lineend="124" name="&lt;=&gt;" signature="&lt;=&gt;(other" />
            <scope ilk="function" line="126" lineend="128" name="notify?" signature="notify?" />
            <import symbol="Comparable" />
          </scope>
          <scope classrefs="LeveledNotifier" ilk="class" line="131" lineend="141" name="NoMsgNotifier">
            <scope attributes="__ctor__" ilk="function" line="132" lineend="136" name="initialize" signature="initialize" />
            <scope ilk="function" line="138" lineend="140" name="notify?" signature="notify?" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/locale">
      <scope doc="irb/locale.rb - internationalization module $Release&#xA;Version: 0.9.5$ $Revision: 1.6.2.3 $ $Date: 2005/09/01&#xA;18:30:46 $ by Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="15" lineend="180" name="IRB">
        <scope classrefs="Object" ilk="class" line="16" lineend="179" name="Locale">
          <scope attributes="__ctor__" ilk="function" line="22" lineend="24" name="initialize" signature="initialize(locale = nil)" />
          <scope ilk="function" line="26" lineend="26" name="lang" />
          <scope ilk="function" line="28" lineend="37" name="lc2kconv" signature="lc2kconv(lang)" />
          <scope ilk="function" line="40" lineend="49" name="String" signature="String(mes)" />
          <scope ilk="function" line="51" lineend="53" name="format" signature="format(*opts)" />
          <scope ilk="function" line="55" lineend="57" name="gets" signature="gets(*rs)" />
          <scope ilk="function" line="59" lineend="61" name="readline" signature="readline(*rs)" />
          <scope ilk="function" line="63" lineend="66" name="print" signature="print(*opts)" />
          <scope ilk="function" line="68" lineend="71" name="printf" signature="printf(*opts)" />
          <scope ilk="function" line="73" lineend="76" name="puts" signature="puts(*opts)" />
          <scope ilk="function" line="78" lineend="101" name="require" signature="require(file, priv = nil)" />
          <scope doc="/" ilk="function" line="129" lineend="136" name="real_load" signature="real_load(path, priv)" />
          <scope ilk="function" line="139" lineend="153" name="find" signature="find(file , paths = $:)" />
          <scope ilk="function" line="155" lineend="165" name="search_file" signature="search_file(path, file)" />
          <scope ilk="function" line="168" lineend="177" name="lc_path" signature="lc_path(file = &quot;&quot;, lc = @lang)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/lc/ja/error">
      <import line="12" module="e2mmap" symbol="*" />
      <scope doc="irb/lc/ja/error.rb - $Release Version: 0.9.5$ $Revision:&#xA;1.5.2.1 $ $Date: 2005/04/19 19:24:59 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="14" lineend="27" name="IRB" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/lc/error">
      <import line="12" module="e2mmap" symbol="*" />
      <scope doc="irb/lc/error.rb - $Release Version: 0.9.5$ $Revision:&#xA;1.5.2.1 $ $Date: 2005/04/19 19:24:59 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="14" lineend="29" name="IRB" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/input-method">
      <scope doc="irb/input-method.rb - input methods used irb $Release&#xA;Version: 0.9.5$ $Revision: 1.4.2.2 $ $Date: 2005/05/25&#xA;13:53:41 $ by Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="12" lineend="120" name="IRB">
        <import line="85" module="readline" symbol="*" />
        <scope classrefs="Object" doc="InputMethod StdioInputMethod FileInputMethod&#xA;(ReadlineInputMethod)" ilk="class" line="20" lineend="38" name="InputMethod">
          <scope attributes="__ctor__" ilk="function" line="23" lineend="25" name="initialize" signature="initialize(file = STDIN_FILE_NAME)" />
          <scope ilk="function" line="26" lineend="26" name="file_name" />
          <scope ilk="function" line="28" lineend="28" name="prompt" />
          <scope ilk="function" line="28" lineend="28" name="prompt=" />
          <scope ilk="function" line="30" lineend="32" name="gets" signature="gets" />
          <scope ilk="function" line="35" lineend="37" name="readable_atfer_eof?" signature="readable_atfer_eof?" />
        </scope>
        <scope classrefs="InputMethod" ilk="class" line="40" lineend="63" name="StdioInputMethod">
          <scope attributes="__ctor__" ilk="function" line="41" lineend="45" name="initialize" signature="initialize" />
          <scope ilk="function" line="47" lineend="50" name="gets" signature="gets" />
          <scope ilk="function" line="52" lineend="54" name="eof?" signature="eof?" />
          <scope ilk="function" line="56" lineend="58" name="readable_atfer_eof?" signature="readable_atfer_eof?" />
          <scope ilk="function" line="60" lineend="62" name="line" signature="line(line_no)" />
        </scope>
        <scope classrefs="InputMethod" ilk="class" line="65" lineend="82" name="FileInputMethod">
          <scope attributes="__ctor__" ilk="function" line="66" lineend="69" name="initialize" signature="initialize(file)" />
          <scope ilk="function" line="70" lineend="70" name="file_name" />
          <scope ilk="function" line="72" lineend="74" name="eof?" signature="eof?" />
          <scope ilk="function" line="76" lineend="81" name="gets" signature="gets" />
        </scope>
        <scope classrefs="InputMethod" ilk="class" line="86" lineend="117" name="ReadlineInputMethod">
          <scope attributes="__ctor__" ilk="function" line="88" lineend="94" name="initialize" signature="initialize" />
          <scope ilk="function" line="96" lineend="104" name="gets" signature="gets" />
          <scope ilk="function" line="106" lineend="108" name="eof?" signature="eof?" />
          <scope ilk="function" line="110" lineend="112" name="readable_atfer_eof?" signature="readable_atfer_eof?" />
          <scope ilk="function" line="114" lineend="116" name="line" signature="line(line_no)" />
          <import symbol="Readline" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/init">
      <scope doc="irb/init.rb - irb initialize module $Release Version: 0.9.5$&#xA;$Revision: 1.6.2.5 $ $Date: 2005/09/01 18:30:46 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="13" lineend="259" name="IRB">
        <scope attributes="__classmethod__" doc="initialize config" ilk="function" line="16" lineend="26" name="setup" signature="IRB.setup(ap_path)" />
        <scope attributes="__classmethod__" doc="@CONF default setting" ilk="function" line="29" lineend="118" name="init_config" signature="IRB.init_config(ap_path)" />
        <scope attributes="__classmethod__" ilk="function" line="120" lineend="122" name="init_error" signature="IRB.init_error" />
        <scope attributes="__classmethod__" doc="option analyzing" ilk="function" line="127" lineend="201" name="parse_opts" signature="IRB.parse_opts">
          <import line="184" module="irb/help" symbol="*" />
        </scope>
        <scope attributes="__classmethod__" doc="running config" ilk="function" line="204" lineend="217" name="run_config" signature="IRB.run_config" />
        <scope attributes="__classmethod__" ilk="function" line="220" lineend="231" name="rc_file" signature="IRB.rc_file(ext = IRBRC_EXT)" />
        <scope attributes="__classmethod__" doc="enumerate possible rc-file base name generators" ilk="function" line="234" lineend="246" name="rc_file_generators" signature="IRB.rc_file_generators" />
        <scope attributes="__classmethod__" doc="loading modules" ilk="function" line="249" lineend="257" name="load_modules" signature="IRB.load_modules" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/help">
      <scope doc="irb/help.rb - print usase module $Release Version: 0.9.5$&#xA;$Revision: 1.2.2.1 $ $Date: 2005/04/19 19:24:57 $ by Keiju&#xA;ISHITSUKA(keiju@ishitsuka.com)" ilk="namespace" line="13" lineend="32" name="IRB">
        <scope attributes="__classmethod__" ilk="function" line="14" lineend="31" name="print_usage" signature="IRB.print_usage" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/frame">
      <import line="13" module="e2mmap" symbol="*" />
      <scope doc="frame.rb - $Release Version: 0.9$ $Revision: 1.4 $ $Date:&#xA;2002/07/09 11:17:16 $ by Keiju ISHITSUKA(Nihon Rational&#xA;Software Co.,Ltd)" ilk="namespace" line="15" lineend="67" name="IRB">
        <scope classrefs="Object" ilk="class" line="16" lineend="66" name="Frame">
          <scope attributes="__ctor__" ilk="function" line="24" lineend="26" name="initialize" signature="initialize" />
          <scope ilk="function" line="28" lineend="35" name="trace_func" signature="trace_func(event, file, line, id, binding)" />
          <scope ilk="function" line="37" lineend="41" name="top" signature="top(n = 0)" />
          <scope ilk="function" line="43" lineend="47" name="bottom" signature="bottom(n = 0)" />
          <scope attributes="__classmethod__" doc="singleton functions" ilk="function" line="50" lineend="52" name="bottom" signature="Frame.bottom(n = 0)" />
          <scope attributes="__classmethod__" ilk="function" line="54" lineend="56" name="top" signature="Frame.top(n = 0)" />
          <scope attributes="__classmethod__" ilk="function" line="58" lineend="60" name="sender" signature="Frame.sender" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/extend-command">
      <scope doc="irb/extend-command.rb - irb extend command $Release Version:&#xA;0.9.5$ $Revision: 1.4.2.2 $ $Date: 2005/04/19 19:24:57 $ by&#xA;Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="12" lineend="263" name="IRB">
        <scope doc="IRB extended command" ilk="namespace" line="16" lineend="185" name="ExtendCommandBundle">
          <scope ilk="function" line="23" lineend="25" name="irb_exit" signature="irb_exit(ret = 0)" />
          <scope ilk="function" line="27" lineend="29" name="irb_context" signature="irb_context" />
          <scope doc="[:popw, NO_OVERRIDE]," ilk="function" line="109" lineend="113" name="EXCB.install_extend_commands" signature="EXCB.install_extend_commands" />
          <scope doc="aliases = [commans_alias, flag], ..." ilk="function" line="116" lineend="148" name="EXCB.def_extend_command" signature="EXCB.def_extend_command(cmd_name, cmd_class, load_file = nil, *aliases)">
            <scope ilk="function" line="127" lineend="135" name="require" signature="require">
              <scope doc="{cmd_name}(*opts, &amp;b)" ilk="function" line="130" lineend="132" name="ExtendCommand" signature="ExtendCommand::" />
            </scope>
            <scope ilk="function" line="139" lineend="141" name="ExtendCommand" signature="ExtendCommand::" />
          </scope>
          <scope doc="override = {NO_OVERRIDE, OVERRIDE_PRIVATE_ONLY,&#xA;OVERRIDE_ALL}" ilk="function" line="151" lineend="169" name="install_alias_method" signature="install_alias_method(to, from, override = NO_OVERRIDE)">
            <scope classrefs="Object" ilk="class" line="159" lineend="159" name="self" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="171" lineend="173" name="irb_original_method_name" signature="self.irb_original_method_name(method_name)" />
          <scope ilk="function" line="175" lineend="182" name="EXCB.extend_object" signature="EXCB.extend_object(obj)">
            <scope classrefs="Object" ilk="class" line="176" lineend="176" name="obj" />
          </scope>
        </scope>
        <scope doc="extension support for Context" ilk="namespace" line="188" lineend="219" name="ContextExtender">
          <scope ilk="function" line="199" lineend="203" name="CE.install_extend_commands" signature="CE.install_extend_commands" />
          <scope ilk="function" line="205" lineend="216" name="CE.def_extend_command" signature="CE.def_extend_command(cmd_name, load_file, *aliases)">
            <scope ilk="function" line="207" lineend="211" name="Context.module_eval" signature="Context.module_eval" />
          </scope>
        </scope>
        <scope ilk="namespace" line="221" lineend="262" name="MethodExtender">
          <scope ilk="function" line="222" lineend="234" name="def_pre_proc" signature="def_pre_proc(base_method, extend_method)">
            <scope ilk="function" line="229" lineend="232" name="send" signature="send" />
          </scope>
          <scope ilk="function" line="236" lineend="248" name="def_post_proc" signature="def_post_proc(base_method, extend_method)">
            <scope ilk="function" line="243" lineend="246" name="send" signature="send" />
          </scope>
          <scope doc="return #{prefix}#{name}#{postfix}&lt;num&gt;" ilk="function" line="251" lineend="261" name="new_alias_name" signature="new_alias_name(name, prefix = &quot;__alias_of__&quot;, postfix = &quot;__&quot;)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/workspaces">
      <scope doc="push-ws.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="13" lineend="55" name="IRB">
        <scope classrefs="Object" ilk="class" line="14" lineend="54" name="Context">
          <scope ilk="function" line="16" lineend="18" name="irb_level" signature="irb_level" />
          <scope ilk="function" line="20" lineend="26" name="workspaces" signature="workspaces" />
          <scope ilk="function" line="28" lineend="45" name="push_workspace" signature="push_workspace(*_main)">
            <scope classrefs="Object" ilk="class" line="42" lineend="42" name="main" />
          </scope>
          <scope ilk="function" line="47" lineend="53" name="pop_workspace" signature="pop_workspace" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/use-loader">
      <import line="13" module="irb/cmd/load" symbol="*" />
      <import line="14" module="irb/ext/loader" symbol="*" />
      <scope classrefs="Object" doc="use-loader.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1&#xA;$ $Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju&#xA;@ruby-lang.org)" ilk="class" line="16" name="Object" />
      <scope ilk="namespace" line="21" lineend="63" name="IRB">
        <scope ilk="namespace" line="22" lineend="29" name="ExtendCommandBundle">
          <scope ilk="function" line="23" lineend="25" name="irb_load" signature="irb_load(*opts, &amp;b)" />
          <scope ilk="function" line="26" lineend="28" name="irb_require" signature="irb_require(*opts, &amp;b)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="31" lineend="62" name="Context">
          <scope ilk="function" line="35" lineend="37" name="use_loader" signature="use_loader" />
          <scope ilk="function" line="41" lineend="61" name="use_loader=" signature="use_loader=(opt)">
            <scope classrefs="Object" ilk="class" line="48" lineend="48" name="@workspace" />
            <scope classrefs="Object" ilk="class" line="53" lineend="53" name="@workspace" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/tracer">
      <import line="12" module="tracer" symbol="*" />
      <scope doc="irb/lib/tracer.rb - $Release Version: 0.9.5$ $Revision:&#xA;1.1.2.1 $ $Date: 2005/04/19 19:24:58 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="14" lineend="60" name="IRB">
        <scope attributes="__classmethod__" doc="initialize tracing function" ilk="function" line="17" lineend="24" name="initialize_tracer" signature="IRB.initialize_tracer" />
        <scope classrefs="Object" ilk="class" line="26" lineend="41" name="Context">
          <scope ilk="function" line="27" lineend="27" name="use_tracer" />
          <scope ilk="function" line="30" lineend="40" name="use_tracer=" signature="use_tracer=(opt)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="43" lineend="57" name="WorkSpace">
          <scope ilk="function" line="45" lineend="56" name="evaluate" signature="evaluate(context, statements, file = nil, line = nil)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/save-history">
      <import line="14" module="readline" symbol="*" />
      <scope doc="!/usr/local/bin/ruby" ilk="namespace" line="16" lineend="84" name="IRB">
        <scope ilk="namespace" line="17" lineend="19" name="HistorySavingAbility" />
        <scope classrefs="Object" ilk="class" line="21" lineend="48" name="Context">
          <scope ilk="function" line="22" lineend="26" name="init_save_history" signature="init_save_history">
            <scope classrefs="Object" ilk="class" line="23" lineend="23" name="@io" />
          </scope>
          <scope ilk="function" line="28" lineend="30" name="save_history" signature="save_history" />
          <scope ilk="function" line="32" lineend="39" name="save_history=" signature="save_history=(val)" />
          <scope ilk="function" line="41" lineend="43" name="history_file" signature="history_file" />
          <scope ilk="function" line="45" lineend="47" name="history_file=" signature="history_file=(hist)" />
        </scope>
        <scope ilk="namespace" line="50" lineend="83" name="HistorySavingAbility">
          <scope attributes="__classmethod__" ilk="function" line="53" lineend="66" name="create_finalizer" signature="HistorySavingAbility.create_finalizer" />
          <scope attributes="__classmethod__" ilk="function" line="68" lineend="72" name="extended" signature="HistorySavingAbility.extended(obj)" />
          <scope ilk="function" line="74" lineend="82" name="load_history" signature="load_history" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/multi-irb">
      <import line="13" module="thread" symbol="*" />
      <scope doc="irb/multi-irb.rb - multiple irb module $Release Version:&#xA;0.9.5$ $Revision: 1.2.2.1 $ $Date: 2005/04/19 19:24:58 $ by&#xA;Keiju ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="15" lineend="241" name="IRB">
        <scope classrefs="Object" doc="job management class" ilk="class" line="17" lineend="135" name="JobManager">
          <scope attributes="__ctor__" ilk="function" line="20" lineend="24" name="initialize" signature="initialize" />
          <scope ilk="function" line="26" lineend="26" name="current_job" />
          <scope ilk="function" line="26" lineend="26" name="current_job=" />
          <scope ilk="function" line="28" lineend="30" name="n_jobs" signature="n_jobs" />
          <scope ilk="function" line="32" lineend="35" name="thread" signature="thread(key)" />
          <scope ilk="function" line="37" lineend="40" name="irb" signature="irb(key)" />
          <scope ilk="function" line="42" lineend="44" name="main_thread" signature="main_thread" />
          <scope ilk="function" line="46" lineend="48" name="main_irb" signature="main_irb" />
          <scope ilk="function" line="50" lineend="52" name="insert" signature="insert(irb)" />
          <scope ilk="function" line="54" lineend="62" name="switch" signature="switch(key)" />
          <scope ilk="function" line="64" lineend="70" name="kill" signature="kill(*keys)" />
          <scope ilk="function" line="72" lineend="85" name="search" signature="search(key)" />
          <scope ilk="function" line="87" lineend="108" name="delete" signature="delete(key)" />
          <scope ilk="function" line="110" lineend="134" name="inspect" signature="inspect" />
        </scope>
        <scope attributes="__classmethod__" ilk="function" line="139" lineend="141" name="JobManager" signature="IRB.JobManager" />
        <scope attributes="__classmethod__" ilk="function" line="143" lineend="145" name="CurrentContext" signature="IRB.CurrentContext" />
        <scope attributes="__classmethod__" doc="invoke multi-irb" ilk="function" line="148" lineend="188" name="irb" signature="IRB.irb(file = nil, *main)" />
        <scope classrefs="Object" doc="class Context def set_last_value(value) @last_value = value&#xA;@workspace.evaluate &quot;_ =&#xA;IRB.JobManager.irb(Thread.current).context.last_value&quot; if&#xA;@eval_history #and !@__.equal?(@last_value)" ilk="class" line="213" lineend="234" name="Irb">
          <scope ilk="function" line="214" lineend="233" name="signal_handle" signature="signal_handle" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/math-mode">
      <import line="12" module="mathn" symbol="*" />
      <scope doc="math-mode.rb - $Release Version: 0.9.5$ $Revision: 1.2.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="14" lineend="36" name="IRB">
        <scope classrefs="Object" ilk="class" line="15" lineend="35" name="Context">
          <scope ilk="function" line="16" lineend="16" name="math_mode" />
          <scope ilk="function" line="19" lineend="30" name="math_mode=" signature="math_mode=(opt)" />
          <scope ilk="function" line="32" lineend="34" name="inspect?" signature="inspect?" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/loader">
      <scope doc="loader.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="14" lineend="119" name="IRB">
        <scope classrefs="Exception" ilk="class" line="15" lineend="15" name="LoadAbort" />
        <scope ilk="namespace" line="17" lineend="118" name="IrbLoader">
          <scope ilk="function" line="30" lineend="42" name="search_file_from_ruby_path" signature="search_file_from_ruby_path(fn)" />
          <scope ilk="function" line="44" lineend="61" name="source_file" signature="source_file(path)" />
          <scope ilk="function" line="63" lineend="89" name="load_file" signature="load_file(path, priv = nil)" />
          <scope ilk="function" line="91" lineend="117" name="old" signature="old" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/history">
      <scope doc="history.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.2 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="13" lineend="108" name="IRB">
        <scope classrefs="Object" ilk="class" line="15" lineend="49" name="Context">
          <scope ilk="function" line="21" lineend="31" name="set_last_value" signature="set_last_value(value)" />
          <scope ilk="function" line="33" lineend="33" name="eval_history" />
          <scope ilk="function" line="34" lineend="48" name="eval_history=" signature="eval_history=(no)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="51" lineend="107" name="History">
          <scope attributes="__ctor__" ilk="function" line="54" lineend="57" name="initialize" signature="initialize(size = 16)" />
          <scope ilk="function" line="59" lineend="64" name="size" signature="size(size)" />
          <scope ilk="function" line="66" lineend="76" name="[]" signature="[](idx" />
          <scope ilk="function" line="78" lineend="81" name="push" signature="push(no, val)" />
          <scope ilk="function" line="85" lineend="106" name="inspect" signature="inspect" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/ext/change-ws">
      <scope doc="irb/ext/cb.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1&#xA;$ $Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju&#xA;@ruby-lang.org)" ilk="namespace" line="13" lineend="61" name="IRB">
        <scope classrefs="Object" ilk="class" line="14" lineend="61" name="Context">
          <scope ilk="function" line="16" lineend="22" name="home_workspace" signature="home_workspace" />
          <scope ilk="function" line="24" lineend="35" name="change_workspace" signature="change_workspace(*_main)">
            <scope classrefs="Object" ilk="class" line="32" lineend="32" name="main" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/context">
      <import line="12" module="irb/workspace" symbol="*" />
      <scope doc="irb/context.rb - irb context $Release Version: 0.9.5$&#xA;$Revision: 1.8.2.3 $ $Date: 2005/07/31 15:10:26 $ by Keiju&#xA;ISHITSUKA(keiju@ruby-lang.org)" ilk="namespace" line="14" lineend="255" name="IRB">
        <scope classrefs="Object" ilk="class" line="15" lineend="254" name="Context">
          <scope attributes="__ctor__" doc="Arguments: input_method: nil -- stdin or readline String --&#xA;File other -- using this as InputMethod" ilk="function" line="22" lineend="100" name="initialize" signature="initialize(irb, workspace = nil, input_method = nil, output_method = nil)" />
          <scope ilk="function" line="102" lineend="104" name="main" signature="main" />
          <scope ilk="function" line="106" lineend="106" name="workspace_home" />
          <scope ilk="function" line="107" lineend="107" name="workspace" />
          <scope ilk="function" line="107" lineend="107" name="workspace=" />
          <scope ilk="function" line="108" lineend="108" name="thread" />
          <scope ilk="function" line="109" lineend="109" name="io" />
          <scope ilk="function" line="109" lineend="109" name="io=" />
          <scope ilk="function" line="111" lineend="111" name="irb" />
          <scope ilk="function" line="111" lineend="111" name="irb=" />
          <scope ilk="function" line="112" lineend="112" name="ap_name" />
          <scope ilk="function" line="112" lineend="112" name="ap_name=" />
          <scope ilk="function" line="113" lineend="113" name="rc" />
          <scope ilk="function" line="113" lineend="113" name="rc=" />
          <scope ilk="function" line="114" lineend="114" name="load_modules" />
          <scope ilk="function" line="114" lineend="114" name="load_modules=" />
          <scope ilk="function" line="115" lineend="115" name="irb_name" />
          <scope ilk="function" line="115" lineend="115" name="irb_name=" />
          <scope ilk="function" line="116" lineend="116" name="irb_path" />
          <scope ilk="function" line="116" lineend="116" name="irb_path=" />
          <scope ilk="function" line="118" lineend="118" name="use_readline" />
          <scope ilk="function" line="119" lineend="119" name="inspect_mode" />
          <scope ilk="function" line="121" lineend="121" name="prompt_mode" />
          <scope ilk="function" line="122" lineend="122" name="prompt_i" />
          <scope ilk="function" line="122" lineend="122" name="prompt_i=" />
          <scope ilk="function" line="123" lineend="123" name="prompt_s" />
          <scope ilk="function" line="123" lineend="123" name="prompt_s=" />
          <scope ilk="function" line="124" lineend="124" name="prompt_c" />
          <scope ilk="function" line="124" lineend="124" name="prompt_c=" />
          <scope ilk="function" line="125" lineend="125" name="prompt_n" />
          <scope ilk="function" line="125" lineend="125" name="prompt_n=" />
          <scope ilk="function" line="126" lineend="126" name="auto_indent_mode" />
          <scope ilk="function" line="126" lineend="126" name="auto_indent_mode=" />
          <scope ilk="function" line="127" lineend="127" name="return_format" />
          <scope ilk="function" line="127" lineend="127" name="return_format=" />
          <scope ilk="function" line="129" lineend="129" name="ignore_sigint" />
          <scope ilk="function" line="129" lineend="129" name="ignore_sigint=" />
          <scope ilk="function" line="130" lineend="130" name="ignore_eof" />
          <scope ilk="function" line="130" lineend="130" name="ignore_eof=" />
          <scope ilk="function" line="131" lineend="131" name="echo" />
          <scope ilk="function" line="131" lineend="131" name="echo=" />
          <scope ilk="function" line="132" lineend="132" name="verbose" />
          <scope ilk="function" line="132" lineend="132" name="verbose=" />
          <scope ilk="function" line="133" lineend="133" name="debug_level" />
          <scope ilk="function" line="135" lineend="135" name="back_trace_limit" />
          <scope ilk="function" line="135" lineend="135" name="back_trace_limit=" />
          <scope ilk="function" line="143" lineend="153" name="verbose?" signature="verbose?" />
          <scope ilk="function" line="155" lineend="158" name="prompting?" signature="prompting?" />
          <scope ilk="function" line="160" lineend="160" name="last_value" />
          <scope ilk="function" line="162" lineend="165" name="set_last_value" signature="set_last_value(value)" />
          <scope ilk="function" line="167" lineend="167" name="irb_name" />
          <scope ilk="function" line="169" lineend="182" name="prompt_mode=" signature="prompt_mode=(mode)" />
          <scope ilk="function" line="184" lineend="186" name="inspect?" signature="inspect?" />
          <scope ilk="function" line="188" lineend="190" name="file_input?" signature="file_input?" />
          <scope ilk="function" line="192" lineend="200" name="inspect_mode=" signature="inspect_mode=(opt)" />
          <scope ilk="function" line="202" lineend="205" name="use_readline=" signature="use_readline=(opt)" />
          <scope ilk="function" line="207" lineend="211" name="debug_level=" signature="debug_level=(value)" />
          <scope ilk="function" line="213" lineend="215" name="debug?" signature="debug?" />
          <scope ilk="function" line="217" lineend="222" name="evaluate" signature="evaluate(line, line_no)" />
          <scope ilk="function" line="225" lineend="227" name="exit" signature="exit(ret = 0)" />
          <scope ilk="function" line="234" lineend="251" name="inspect" signature="inspect" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/completion">
      <import line="10" module="readline" symbol="*" />
      <scope doc="irb/completor.rb - $Release Version: 0.9$ $Revision: 1.8.2.1&#xA;$ $Date: 2004/03/10 08:21:02 $ by Keiju&#xA;ISHITSUKA(keiju@ishitsuka.com)" ilk="namespace" line="12" lineend="182" name="IRB">
        <scope ilk="namespace" line="13" lineend="181" name="InputCompletor">
          <scope attributes="__classmethod__" doc="unknown(maybe String)" ilk="function" line="170" lineend="180" name="select_message" signature="self.select_message(receiver, message, candidates)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/subirb">
      <import line="14" module="irb/cmd/nop.rb" symbol="*" />
      <import line="15" module="irb/ext/multi-irb" symbol="*" />
      <scope doc="!/usr/local/bin/ruby" ilk="namespace" line="17" lineend="43" name="IRB">
        <scope ilk="namespace" line="18" lineend="42" name="ExtendCommand">
          <scope classrefs="Nop" ilk="class" line="19" lineend="23" name="IrbCommand">
            <scope ilk="function" line="20" lineend="22" name="execute" signature="execute(*obj)" />
          </scope>
          <scope classrefs="Nop" ilk="class" line="25" lineend="29" name="Jobs">
            <scope ilk="function" line="26" lineend="28" name="execute" signature="execute" />
          </scope>
          <scope classrefs="Nop" ilk="class" line="31" lineend="35" name="Foreground">
            <scope ilk="function" line="32" lineend="34" name="execute" signature="execute(key)" />
          </scope>
          <scope classrefs="Nop" ilk="class" line="37" lineend="41" name="Kill">
            <scope ilk="function" line="38" lineend="40" name="execute" signature="execute(*keys)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/pushws">
      <import line="13" module="irb/cmd/nop.rb" symbol="*" />
      <import line="14" module="irb/ext/workspaces.rb" symbol="*" />
      <scope doc="change-ws.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="16" lineend="38" name="IRB">
        <scope ilk="namespace" line="17" lineend="37" name="ExtendCommand">
          <scope classrefs="Nop" ilk="class" line="18" lineend="22" name="Workspaces">
            <scope ilk="function" line="19" lineend="21" name="execute" signature="execute(*obj)" />
          </scope>
          <scope classrefs="Workspaces" ilk="class" line="24" lineend="29" name="PushWorkspace">
            <scope ilk="function" line="25" lineend="28" name="execute" signature="execute(*obj)" />
          </scope>
          <scope classrefs="Workspaces" ilk="class" line="31" lineend="36" name="PopWorkspace">
            <scope ilk="function" line="32" lineend="35" name="execute" signature="execute(*obj)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/nop">
      <scope doc="nop.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="12" lineend="38" name="IRB">
        <scope ilk="namespace" line="13" lineend="37" name="ExtendCommand">
          <scope classrefs="Object" ilk="class" line="14" lineend="36" name="Nop">
            <scope attributes="__classmethod__" ilk="function" line="18" lineend="21" name="execute" signature="self.execute(conf, *opts)" />
            <scope attributes="__ctor__" ilk="function" line="23" lineend="25" name="initialize" signature="initialize(conf)" />
            <scope ilk="function" line="27" lineend="27" name="irb_context" />
            <scope ilk="function" line="29" lineend="31" name="irb" signature="irb" />
            <scope ilk="function" line="33" lineend="35" name="execute" signature="execute(*opts)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/load">
      <import line="13" module="irb/cmd/nop.rb" symbol="*" />
      <import line="14" module="irb/ext/loader" symbol="*" />
      <scope doc="load.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="16" lineend="67" name="IRB">
        <scope ilk="namespace" line="17" lineend="65" name="ExtendCommand">
          <scope classrefs="Nop" ilk="class" line="18" lineend="25" name="Load">
            <scope ilk="function" line="21" lineend="24" name="execute" signature="execute(file_name, priv = nil)" />
            <import symbol="IrbLoader" />
          </scope>
          <scope classrefs="Nop" ilk="class" line="27" lineend="57" name="Require">
            <scope ilk="function" line="30" lineend="56" name="execute" signature="execute(file_name)" />
            <import symbol="IrbLoader" />
          </scope>
          <scope classrefs="Nop" ilk="class" line="59" lineend="64" name="Source">
            <scope ilk="function" line="61" lineend="63" name="execute" signature="execute(file_name)" />
            <import symbol="IrbLoader" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/help">
      <import line="12" module="rdoc/ri/ri_driver" symbol="*" />
      <scope doc="help.rb - helper using ri $Release Version: 0.9.5$&#xA;$Revision: 1.2.4.1 $ $Date: 2005/04/19 19:24:58 $" ilk="namespace" line="14" lineend="34" name="IRB">
        <scope ilk="namespace" line="15" lineend="33" name="ExtendCommand">
          <scope ilk="namespace" line="16" lineend="32" name="Help">
            <scope attributes="__classmethod__" ilk="function" line="21" lineend="30" name="execute" signature="self.execute(context, *names)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/fork">
      <scope doc="fork.rb - $Release Version: 0.9.5 $ $Revision: 1.2.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="16" lineend="37" name="IRB">
        <scope ilk="namespace" line="17" lineend="36" name="ExtendCommand">
          <scope classrefs="Nop" ilk="class" line="18" lineend="35" name="Fork">
            <scope ilk="function" line="19" lineend="34" name="execute" signature="execute(&amp;block)">
              <scope classrefs="Object" ilk="class" line="22" lineend="24" name="self" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="irb/cmd/chws">
      <import line="13" module="irb/cmd/nop.rb" symbol="*" />
      <import line="14" module="irb/ext/change-ws.rb" symbol="*" />
      <scope doc="change-ws.rb - $Release Version: 0.9.5$ $Revision: 1.1.2.1 $&#xA;$Date: 2005/04/19 19:24:58 $ by Keiju ISHITSUKA(keiju@ruby-&#xA;lang.org)" ilk="namespace" line="16" lineend="32" name="IRB">
        <scope ilk="namespace" line="17" lineend="31" name="ExtendCommand">
          <scope classrefs="Nop" ilk="class" line="19" lineend="23" name="CurrentWorkingWorkspace">
            <scope ilk="function" line="20" lineend="22" name="execute" signature="execute(*obj)" />
          </scope>
          <scope classrefs="Nop" ilk="class" line="25" lineend="30" name="ChangeWorkspace">
            <scope ilk="function" line="26" lineend="29" name="execute" signature="execute(*obj)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="ipaddr">
      <import line="33" module="socket" symbol="*" />
      <scope classrefs="Object" doc="ipaddr.rb - A class to manipulate an IP address" ilk="class" line="36" lineend="38" name="Socket" />
      <scope classrefs="Object" ilk="class" line="40" lineend="75" name="IPSocket">
        <scope ilk="function" line="41" lineend="46" name="valid_v4?" signature="valid_v4?(addr)" />
        <scope ilk="function" line="48" lineend="59" name="valid_v6?" signature="valid_v6?(addr)" />
        <scope ilk="function" line="61" lineend="63" name="valid?" signature="valid?(addr)" />
        <scope ilk="function" line="66" lineend="74" name="getaddress" signature="getaddress(s)" />
      </scope>
      <scope classrefs="Object" doc="IPAddr provides a set of methods to manipulate an IP&#xA;address." ilk="class" line="80" lineend="524" name="IPAddr">
        <scope ilk="function" line="87" lineend="87" name="family" />
        <scope attributes="__classmethod__" doc="Creates a new ipaddr containing the given network byte&#xA;ordered string form of an IP address." ilk="function" line="91" lineend="93" name="new_ntoh" signature="IPAddr::new_ntoh(addr)" />
        <scope attributes="__classmethod__" doc="Convert a network byte ordered string form of an IP address&#xA;into human readable form." ilk="function" line="97" lineend="107" name="ntop" signature="IPAddr::ntop(addr)" />
        <scope doc="Returns a new ipaddr built by bitwise AND." ilk="function" line="110" lineend="112" name="&amp;" signature="&amp;(other" />
        <scope doc="Returns a new ipaddr built by bitwise OR." ilk="function" line="115" lineend="117" name="|" signature="|(other" />
        <scope doc="Returns a new ipaddr built by bitwise right-shift." ilk="function" line="120" lineend="122" name="&gt;&gt;" signature="&gt;&gt;(num" />
        <scope doc="Returns a new ipaddr built by bitwise left shift." ilk="function" line="125" lineend="127" name="&lt;&lt;" signature="&lt;&lt;(num" />
        <scope doc="Returns a new ipaddr built by bitwise negation." ilk="function" line="130" lineend="132" name="~" signature="~" />
        <scope doc="Returns true if two ipaddr are equal." ilk="function" line="135" lineend="140" name="==" signature="==(other" />
        <scope doc="Returns a new ipaddr built by masking IP address with the&#xA;given prefixlen/netmask." ilk="function" line="144" lineend="146" name="mask" signature="mask(prefixlen)" />
        <scope doc="Returns true if the given ipaddr is in the range." ilk="function" line="156" lineend="186" name="include?" signature="include?(other)" />
        <scope doc="Returns the integer representation of the ipaddr." ilk="function" line="190" lineend="192" name="to_i" signature="to_i" />
        <scope doc="Returns a string containing the IP address representation." ilk="function" line="195" lineend="217" name="to_s" signature="to_s" />
        <scope doc="Returns a string containing the IP address representation in&#xA;canonical form." ilk="function" line="221" lineend="223" name="to_string" signature="to_string" />
        <scope doc="Returns a network byte ordered string form of the IP&#xA;address." ilk="function" line="226" lineend="237" name="hton" signature="hton" />
        <scope doc="Returns true if the ipaddr is an IPv4 address." ilk="function" line="240" lineend="242" name="ipv4?" signature="ipv4?" />
        <scope doc="Returns true if the ipaddr is an IPv6 address." ilk="function" line="245" lineend="247" name="ipv6?" signature="ipv6?" />
        <scope doc="Returns true if the ipaddr is an IPv4-mapped IPv6 address." ilk="function" line="250" lineend="252" name="ipv4_mapped?" signature="ipv4_mapped?" />
        <scope doc="Returns true if the ipaddr is an IPv4-compatible IPv6&#xA;address." ilk="function" line="255" lineend="261" name="ipv4_compat?" signature="ipv4_compat?" />
        <scope doc="Returns a new ipaddr built by converting the native IPv4&#xA;address into an IPv4-mapped IPv6 address." ilk="function" line="265" lineend="270" name="ipv4_mapped" signature="ipv4_mapped" />
        <scope doc="Returns a new ipaddr built by converting the native IPv4&#xA;address into an IPv4-compatible IPv6 address." ilk="function" line="274" lineend="279" name="ipv4_compat" signature="ipv4_compat" />
        <scope doc="Returns a new ipaddr built by converting the IPv6 address&#xA;into a native IPv4 address." ilk="function" line="284" lineend="289" name="native" signature="native" />
        <scope doc="Returns a string for DNS reverse lookup." ilk="function" line="293" lineend="302" name="reverse" signature="reverse" />
        <scope doc="Returns a string for DNS reverse lookup compatible with&#xA;RFC3172." ilk="function" line="305" lineend="310" name="ip6_arpa" signature="ip6_arpa" />
        <scope doc="Returns a string for DNS reverse lookup compatible with&#xA;RFC1886." ilk="function" line="313" lineend="318" name="ip6_int" signature="ip6_int" />
        <scope doc="Returns a string containing a human-readable representation&#xA;of the ipaddr." ilk="function" line="322" lineend="333" name="inspect" signature="inspect" />
        <scope ilk="function" line="337" lineend="355" name="set" signature="set(addr, *family)" />
        <scope ilk="function" line="357" lineend="391" name="mask!" signature="mask!(mask)" />
        <scope attributes="__ctor__" doc="Creates a new ipaddr containing the given human readable&#xA;form of an IP address." ilk="function" line="403" lineend="444" name="initialize" signature="initialize(addr = &apos;::&apos;, family = Socket::AF_UNSPEC)" />
        <scope ilk="function" line="446" lineend="456" name="in_addr" signature="in_addr(addr)" />
        <scope ilk="function" line="458" lineend="484" name="in6_addr" signature="in6_addr(left)" />
        <scope ilk="function" line="486" lineend="496" name="addr_mask" signature="addr_mask(addr)" />
        <scope ilk="function" line="498" lineend="509" name="_reverse" signature="_reverse" />
        <scope ilk="function" line="511" lineend="522" name="_to_string" signature="_to_string(addr)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="io/nonblock">
      <import line="1" module="fcntl" symbol="*" />
      <scope classrefs="Object" ilk="class" line="2" lineend="23" name="IO">
        <scope ilk="function" line="3" lineend="5" name="nonblock?" signature="nonblock? (fcntl" />
        <scope ilk="function" line="7" lineend="15" name="nonblock=" signature="nonblock=(nb)" />
        <scope ilk="function" line="17" lineend="22" name="nonblock" signature="nonblock(nb = true)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="importenv" />
    <scope ilk="blob" lang="Ruby" name="rbconfig">
      <scope doc="This file was created by mkconfig.rb when ruby was built." ilk="namespace" line="5" lineend="156" name="Config">
        <scope attributes="__classmethod__" ilk="function" line="136" lineend="152" name="expand" signature="Config::expand(val, config = CONFIG)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="gserver">
      <import line="11" module="socket" symbol="*" />
      <import line="12" module="thread" symbol="*" />
      <scope classrefs="Object" doc="+GServer+ implements a generic server, featuring thread pool&#xA;management, simple logging, and multi-server management." ilk="class" line="82" lineend="249" name="GServer">
        <scope ilk="function" line="86" lineend="87" name="serve" signature="serve(io)" />
        <scope attributes="__classmethod__" doc="Hash of opened ports, i.e." ilk="function" line="92" lineend="96" name="stop" signature="GServer.stop(port, host = DEFAULT_HOST)" />
        <scope attributes="__classmethod__" ilk="function" line="98" lineend="101" name="in_service?" signature="GServer.in_service?(port, host = DEFAULT_HOST)" />
        <scope ilk="function" line="103" lineend="109" name="stop" signature="stop" />
        <scope ilk="function" line="111" lineend="113" name="stopped?" signature="stopped?" />
        <scope ilk="function" line="115" lineend="117" name="shutdown" signature="shutdown" />
        <scope ilk="function" line="119" lineend="121" name="connections" signature="connections" />
        <scope ilk="function" line="123" lineend="125" name="join" signature="join" />
        <scope ilk="function" line="127" lineend="127" name="port" />
        <scope ilk="function" line="127" lineend="127" name="host" />
        <scope ilk="function" line="127" lineend="127" name="maxConnections" />
        <scope ilk="function" line="128" lineend="128" name="stdlog" />
        <scope ilk="function" line="128" lineend="128" name="stdlog=" />
        <scope ilk="function" line="128" lineend="128" name="audit" />
        <scope ilk="function" line="128" lineend="128" name="audit=" />
        <scope ilk="function" line="128" lineend="128" name="debug" />
        <scope ilk="function" line="128" lineend="128" name="debug=" />
        <scope ilk="function" line="130" lineend="135" name="connecting" signature="connecting(client)" />
        <scope ilk="function" line="137" lineend="140" name="disconnecting" signature="disconnecting(clientPort)" />
        <scope ilk="function" line="144" lineend="146" name="starting" signature="starting()" />
        <scope ilk="function" line="148" lineend="150" name="stopping" signature="stopping()" />
        <scope ilk="function" line="154" lineend="156" name="error" signature="error(detail)" />
        <scope ilk="function" line="158" lineend="163" name="log" signature="log(msg)" />
        <scope attributes="__ctor__" ilk="function" line="167" lineend="179" name="initialize" signature="initialize(port, host = DEFAULT_HOST, maxConnections = 4, stdlog = $stderr, audit = false, debug = false)" />
        <scope ilk="function" line="181" lineend="247" name="start" signature="start(maxConnections = -1)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="getopts">
      <scope doc="getopts.rb - $Release Version: $ $Revision: 1.8.2.3 $ $Date:&#xA;2005/05/24 03:01:17 $ by Yasuo OHBA(SHL Japan Inc." ilk="function" line="23" lineend="126" name="getopts" signature="getopts(single_options, *options)" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="getoptlong">
      <scope classrefs="Object" doc="-*- Ruby -*- Copyright (C) 1998, 1999, 2000  Motoyuki&#xA;Kasahara" ilk="class" line="16" lineend="468" name="GetoptLong">
        <scope classrefs="StandardError" doc="Error types." ilk="class" line="36" lineend="36" name="Error" />
        <scope classrefs="Error" ilk="class" line="37" lineend="37" name="AmbigousOption" />
        <scope classrefs="Error" ilk="class" line="38" lineend="38" name="NeedlessArgument" />
        <scope classrefs="Error" ilk="class" line="39" lineend="39" name="MissingArgument" />
        <scope classrefs="Error" ilk="class" line="40" lineend="40" name="InvalidOption" />
        <scope attributes="__ctor__" doc="Initializer." ilk="function" line="45" lineend="103" name="initialize" signature="initialize(*arguments)" />
        <scope doc="Set ordering." ilk="function" line="108" lineend="129" name="ordering=" signature="ordering=(ordering)" />
        <scope ilk="function" line="134" lineend="134" name="ordering" />
        <scope doc="Set options" ilk="function" line="139" lineend="208" name="set_options" signature="set_options(*arguments)" />
        <scope ilk="function" line="213" lineend="213" name="quiet=" />
        <scope ilk="function" line="218" lineend="218" name="quiet" />
        <scope doc="Terminate option processing." ilk="function" line="228" lineend="243" name="terminate" signature="terminate" />
        <scope doc="Examine whether option processing is terminated or not." ilk="function" line="248" lineend="250" name="terminated?" signature="terminated?" />
        <scope doc="Set an error (protected)." ilk="function" line="255" lineend="266" name="set_error" signature="set_error(type, message)" />
        <scope ilk="function" line="272" lineend="272" name="error" />
        <scope doc="Return an error message." ilk="function" line="282" lineend="284" name="error_message" signature="error_message" />
        <scope doc="Get next option name and its argument as an array." ilk="function" line="289" lineend="446" name="get" signature="get" />
        <scope doc="Iterator version of `get&apos;." ilk="function" line="456" lineend="462" name="each" signature="each" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="generator">
      <scope classrefs="Object" doc="Generator converts an internal iterator (i.e. an Enumerable&#xA;object) to an external iterator." ilk="class" name="Generator">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new generator either from an Enumerable object or&#xA;from a block." ilk="function" name="new" signature="(enum = nil, &amp;block)" />
        <scope doc="Returns the element at the current position." ilk="function" name="current" signature="()" />
        <scope doc="Rewinds the generator and enumerates the elements." ilk="function" name="each" signature="() {|self.next| ...}" />
        <scope doc="Returns true if the generator has reached the end." ilk="function" name="end?" signature="()" />
        <scope doc="Returns the current index (position) counting from zero." ilk="function" name="index" signature="()" />
        <scope doc="Returns the element at the current position and moves&#xA;forward." ilk="function" name="next" signature="()" />
        <scope doc="Returns true if the generator has not reached the end yet." ilk="function" name="next?" signature="()" />
        <scope doc="Returns the current index (position) counting from zero." ilk="function" name="pos" signature="()" />
        <scope doc="Rewinds the generator." ilk="function" name="rewind" signature="()" />
        <scope doc="Yields an element to the generator." ilk="function" name="yield" signature="(value)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="ftools">
      <scope classrefs="Object" doc="= ftools.rb: Extra tools for the File class" ilk="class" line="34" lineend="35" name="File" />
      <scope classrefs="Object" ilk="class" line="37" lineend="262" name="File">
        <scope doc="If +to+ is a valid directory, +from+ will be appended to&#xA;+to+, adding and escaping backslashes as necessary." ilk="function" line="47" lineend="53" name="catname" signature="catname(from, to)" />
        <scope doc="Copies a file +from+ to +to+." ilk="function" line="59" lineend="83" name="syscopy" signature="syscopy(from, to)" />
        <scope doc="Copies a file +from+ to +to+ using #syscopy." ilk="function" line="90" lineend="93" name="copy" signature="copy(from, to, verbose = false)" />
        <scope doc="Moves a file +from+ to +to+ using #syscopy." ilk="function" line="102" lineend="125" name="move" signature="move(from, to, verbose = false)" />
        <scope doc="Returns +true+ iff the contents of files +from+ and +to+ are&#xA;identical." ilk="function" line="133" lineend="162" name="compare" signature="compare(from, to, verbose = false)" />
        <scope doc="Removes a list of files." ilk="function" line="171" lineend="190" name="safe_unlink" signature="safe_unlink(*files)" />
        <scope doc="Creates a directory and all its parent directories." ilk="function" line="208" lineend="224" name="makedirs" signature="makedirs(*dirs)" />
        <scope doc="Changes permission bits on +files+ to the bit pattern&#xA;represented by +mode+." ilk="function" line="240" lineend="244" name="chmod" signature="chmod(mode, *files)" />
        <scope doc="If +src+ is not the same as +dest+, copies it and changes&#xA;the permission mode to +mode+." ilk="function" line="253" lineend="260" name="install" signature="install(from, to, mode = nil, verbose = false)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="forwardable">
      <scope doc="The Forwardable module provides delegation of specified&#xA;methods to a designated object, using the methods&#xA;#def_delegator and #def_delegators." ilk="namespace" name="Forwardable">
        <scope doc="force Forwardable to show up in stack backtraces of&#xA;delegated methods" ilk="function" name="debug" />
        <scope doc="force Forwardable to show up in stack backtraces of&#xA;delegated methods" ilk="function" name="debug=" />
        <scope doc="Alias for #def_instance_delegator" ilk="function" name="def_delegator" signature="(accessor, method, ali = method)" />
        <scope doc="Alias for #def_instance_delegators" ilk="function" name="def_delegators" signature="(accessor, *methods)" />
        <scope doc="Defines a method `method&apos; which delegates to `obj&apos; (i.e. it&#xA;calls the method of the same name in `obj&apos;)." ilk="function" name="def_instance_delegator" signature="(accessor, method, ali = method)" />
        <scope doc="Shortcut for defining multiple delegator methods, but with&#xA;no provision for using a different name." ilk="function" name="def_instance_delegators" signature="(accessor, *methods)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="find">
      <scope doc="The Find module supports the top-down traversal of a set of&#xA;file paths." ilk="namespace" name="Find">
        <scope doc="Calls the associated block with the name of every file and&#xA;directory listed as arguments, then recursively on their&#xA;subdirectories, and so on." ilk="function" name="find" signature="(*paths) {|path| ...}" />
        <scope doc="Skips the current file or directory, restarting the loop&#xA;with the next entry. If the current file is a directory,&#xA;that directory will not be recursively entered." ilk="function" name="prune" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="finalize">
      <scope doc="finalizer.rb - $Release Version: 0.3$ $Revision: 1.4 $&#xA;$Date: 1998/02/27 05:34:33 $ by Keiju ISHITSUKA" ilk="namespace" line="44" lineend="186" name="Finalizer">
        <scope classrefs="Object" ilk="class" line="47" lineend="182" name="self">
          <scope doc="@dependency: {id =&gt; [[dependant, method, *opt], ...], ...}&#xA;add dependency R_method(obj, dependant)" ilk="function" line="51" lineend="60" name="add_dependency" signature="add_dependency(obj, dependant, method = :finalize, *opt)" />
          <scope doc="delete dependency R_method(obj, dependant)" ilk="function" line="64" lineend="74" name="delete_dependency" signature="delete_dependency(id, dependant, method = :finalize)" />
          <scope doc="delete dependency R_*(obj, dependant)" ilk="function" line="78" lineend="88" name="delete_all_dependency" signature="delete_all_dependency(id, dependant)" />
          <scope doc="delete dependency R_method(*, dependant)" ilk="function" line="91" lineend="96" name="delete_by_dependant" signature="delete_by_dependant(dependant, method = :finalize)" />
          <scope doc="delete dependency R_*(*, dependant)" ilk="function" line="99" lineend="103" name="delete_all_by_dependant" signature="delete_all_by_dependant(dependant)" />
          <scope doc="finalize the depandant connected by dependency R_method(obj,&#xA;dependtant)" ilk="function" line="106" lineend="117" name="finalize_dependency" signature="finalize_dependency(id, dependant, method = :finalize)" />
          <scope doc="finalize all dependants connected by dependency R_*(obj,&#xA;dependtant)" ilk="function" line="121" lineend="131" name="finalize_all_dependency" signature="finalize_all_dependency(id, dependant)" />
          <scope doc="finalize the dependant connected by dependency R_method(*,&#xA;dependtant)" ilk="function" line="134" lineend="139" name="finalize_by_dependant" signature="finalize_by_dependant(dependant, method = :finalize)" />
          <scope doc="finalize all dependants connected by dependency R_*(*,&#xA;dependtant)" ilk="function" line="142" lineend="146" name="finalize_all_by_dependant" signature="finalize_all_by_dependant(dependant)" />
          <scope doc="finalize all dependants registered to the Finalizer." ilk="function" line="149" lineend="156" name="finalize_all" signature="finalize_all" />
          <scope doc="method to call finalize_* safely." ilk="function" line="159" lineend="169" name="safe" signature="safe" />
          <scope doc="registering function to ObjectSpace#add_finalizer" ilk="function" line="174" lineend="180" name="final_of" signature="final_of(id)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="fileutils">
      <scope ilk="namespace" name="FileUtils">
        <scope doc="This module has all methods of FileUtils module, but never&#xA;changes files/directories, with printing message before&#xA;acting. This equates to passing the :noop and :verbose flag&#xA;to methods in FileUtils." ilk="namespace" name="DryRun">
          <import symbol="FileUtils" />
        </scope>
        <scope ilk="namespace" name="StreamUtils_">
          <scope attributes="private" ilk="function" name="fu_blksize" signature="(st)" />
          <scope attributes="private" ilk="function" name="fu_default_blksize" signature="()" />
          <scope attributes="private" ilk="function" name="fu_stream_blksize" signature="(*streams)" />
          <scope attributes="private" ilk="function" name="fu_windows?" signature="()" />
        </scope>
        <scope doc="This module has all methods of FileUtils module, but never&#xA;changes files/directories. This equates to passing the :noop&#xA;flag to methods in FileUtils." ilk="namespace" name="NoWrite">
          <import symbol="FileUtils" />
        </scope>
        <scope doc="This module has all methods of FileUtils module, but it&#xA;outputs messages before acting. This equates to passing the&#xA;:verbose flag to methods in FileUtils." ilk="namespace" name="Verbose">
          <import symbol="FileUtils" />
        </scope>
        <scope classrefs="Object" ilk="class" name="Entry_" />
        <import symbol="StreamUtils_" />
        <scope attributes="__classmethod__ private" doc="Returns an Array of method names which have the option opt." ilk="function" name="collect_method" signature="(opt)" />
        <scope attributes="__classmethod__ private" doc="Returns an Array of method names which have any options." ilk="function" name="commands" signature="()" />
        <scope attributes="__classmethod__ private" doc="Returns true if the method mid have an option opt." ilk="function" name="have_option?" signature="(mid, opt)" />
        <scope attributes="__classmethod__ private" doc="Returns an Array of option names." ilk="function" name="options" signature="()" />
        <scope attributes="__classmethod__ private" doc="Returns an Array of option names of the method mid." ilk="function" name="options_of" signature="(mid)" />
        <scope doc="Options: verbose" ilk="function" name="cd" signature="(dir, options = {}) {|dir| ...}" />
        <scope doc="Alias for #cd" ilk="function" name="chdir" signature="(dir, options = {})" />
        <scope doc="Options: noop verbose" ilk="function" name="chmod" signature="(mode, list, options = {})" />
        <scope doc="Options: noop verbose force" ilk="function" name="chmod_R" signature="(mode, list, options = {})" />
        <scope doc="Options: noop verbose" ilk="function" name="chown" signature="(user, group, list, options = {})" />
        <scope doc="Options: noop verbose force" ilk="function" name="chown_R" signature="(user, group, list, options = {})" />
        <scope doc="Alias for #compare_file" ilk="function" name="cmp" signature="(a, b)" />
        <scope doc="Returns true if the contents of a file A and a file B are&#xA;identical." ilk="function" name="compare_file" signature="(a, b)" />
        <scope doc="Returns true if the contents of a stream a and b are&#xA;identical." ilk="function" name="compare_stream" signature="(a, b)" />
        <scope doc="Alias for #cp" ilk="function" name="copy" signature="(src, dest, options = {})" />
        <scope doc="Copies a file system entry src to dest. If src is a&#xA;directory, this method copies its contents recursively." ilk="function" name="copy_entry" signature="(src, dest, preserve = false, dereference_root = false)" />
        <scope doc="Copies file contents of src to dest. Both of src and dest&#xA;must be a path name." ilk="function" name="copy_file" signature="(src, dest, preserve = false, dereference = true)" />
        <scope doc="Copies stream src to dest. src must respond to #read(n) and&#xA;dest must respond to #write(str)." ilk="function" name="copy_stream" signature="(src, dest)" />
        <scope doc="Options: preserve noop verbose" ilk="function" name="cp" signature="(src, dest, options = {})" />
        <scope doc="Options: preserve noop verbose dereference_root" ilk="function" name="cp_r" signature="(src, dest, options = {})" />
        <scope ilk="function" name="fu_have_symlink?" signature="(" />
        <scope ilk="function" name="fu_world_writable?" signature="(st)" />
        <scope doc="Alias for #pwd" ilk="function" name="getwd" signature="()" />
        <scope doc="Alias for #compare_file" ilk="function" name="identical?" signature="(a, b)" />
        <scope doc="Options: mode noop verbose" ilk="function" name="install" signature="(src, dest, options = {})" />
        <scope doc="Alias for #ln" ilk="function" name="link" signature="(src, dest, options = {})" />
        <scope doc="Options: force noop verbose" ilk="function" name="ln" signature="(src, dest, options = {})" />
        <scope doc="Options: force noop verbose" ilk="function" name="ln_s" signature="(src, dest, options = {})" />
        <scope doc="Options: noop verbose" ilk="function" name="ln_sf" signature="(src, dest, options = {})" />
        <scope doc="Alias for #mkdir_p" ilk="function" name="makedirs" signature="(list, options = {})" />
        <scope doc="Options: mode noop verbose" ilk="function" name="mkdir" signature="(list, options = {})" />
        <scope doc="Options: mode noop verbose" ilk="function" name="mkdir_p" signature="(list, options = {})" />
        <scope doc="Alias for #mkdir_p" ilk="function" name="mkpath" signature="(list, options = {})" />
        <scope doc="Alias for #mv" ilk="function" name="move" signature="(src, dest, options = {})" />
        <scope doc="Options: force noop verbose" ilk="function" name="mv" signature="(src, dest, options = {})" />
        <scope doc="Options: (none)" ilk="function" name="pwd" signature="()" />
        <scope doc="Alias for #rm" ilk="function" name="remove" signature="(list, options = {})" />
        <scope doc="Removes a directory dir and its contents recursively. This&#xA;method ignores StandardError if force is true." ilk="function" name="remove_dir" signature="(path, force = false)" />
        <scope doc="This method removes a file system entry path. path might be&#xA;a regular file, a directory, or something." ilk="function" name="remove_entry" signature="(path, force = false)" />
        <scope doc="This method removes a file system entry path. path shall be&#xA;a regular file, a directory, or something." ilk="function" name="remove_entry_secure" signature="(path, force = false)" />
        <scope doc="Removes a file path. This method ignores StandardError if&#xA;force is true." ilk="function" name="remove_file" signature="(path, force = false)" />
        <scope doc="Options: force noop verbose" ilk="function" name="rm" signature="(list, options = {})" />
        <scope doc="Options: noop verbose" ilk="function" name="rm_f" signature="(list, options = {})" />
        <scope doc="Options: force noop verbose secure" ilk="function" name="rm_r" signature="(list, options = {})" />
        <scope doc="Options: noop verbose secure" ilk="function" name="rm_rf" signature="(list, options = {})" />
        <scope doc="Options: noop, verbose" ilk="function" name="rmdir" signature="(list, options = {})" />
        <scope doc="Alias for #rm_rf" ilk="function" name="rmtree" signature="(list, options = {})" />
        <scope doc="Alias for #rm_f" ilk="function" name="safe_unlink" signature="(list, options = {})" />
        <scope doc="Alias for #ln_s" ilk="function" name="symlink" signature="(src, dest, options = {})" />
        <scope doc="Options: noop verbose" ilk="function" name="touch" signature="(list, options = {})" />
        <scope doc="Options: (none)" ilk="function" name="uptodate?" signature="(new, old_list, options = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="eregex">
      <scope classrefs="Object" doc="this is just a proof of concept toy." ilk="class" line="3" lineend="12" name="RegOr">
        <scope attributes="__ctor__" ilk="function" line="4" lineend="7" name="initialize" signature="initialize(re1, re2)" />
        <scope ilk="function" line="9" lineend="11" name="=~" signature="=~ (str" />
      </scope>
      <scope classrefs="Object" ilk="class" line="14" lineend="23" name="RegAnd">
        <scope attributes="__ctor__" ilk="function" line="15" lineend="18" name="initialize" signature="initialize(re1, re2)" />
        <scope ilk="function" line="20" lineend="22" name="=~" signature="=~ (str" />
      </scope>
      <scope classrefs="Object" ilk="class" line="25" lineend="32" name="Regexp">
        <scope ilk="function" line="26" lineend="28" name="|" signature="|(other" />
        <scope ilk="function" line="29" lineend="31" name="&amp;" signature="&amp;(other" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="erb">
      <scope classrefs="Object" ilk="class" name="ERB">
        <scope doc="A utility module for conversion routines, often handy in&#xA;HTML generation." ilk="namespace" name="Util">
          <scope doc="Alias for #html_escape" ilk="function" name="h" signature="(s)" />
          <scope doc="A utility method for escaping HTML tag characters in `s&apos;." ilk="function" name="html_escape" signature="(s)" />
          <scope doc="Alias for #url_encode" ilk="function" name="u" signature="(s)" />
          <scope doc="A utility method for encoding the String `s&apos; as a URL." ilk="function" name="url_encode" signature="(s)" />
        </scope>
        <scope classrefs="Object" ilk="class" name="Compiler">
          <scope classrefs="Scanner" ilk="class" name="TrimScanner" />
          <scope classrefs="Scanner" ilk="class" name="PercentScanner" />
          <scope classrefs="Scanner" ilk="class" name="SimpleScanner2" />
          <scope classrefs="Object" ilk="class" name="Scanner" />
          <scope classrefs="Object" ilk="class" name="PercentLine" />
          <scope classrefs="Scanner" ilk="class" name="SimpleScanner" />
          <scope classrefs="Object" ilk="class" name="Buffer" />
          <scope classrefs="Scanner" ilk="class" name="ExplicitScanner" />
        </scope>
        <scope ilk="namespace" name="DefMethod" />
        <scope attributes="__classmethod__ __ctor__" doc="Constructs a new ERB object with the template specified in&#xA;`str&apos;." ilk="function" name="new" signature="(str, safe_level=nil, trim_mode=nil, eoutvar=&apos;_erbout&apos;)" />
        <scope attributes="__classmethod__" doc="Returns revision information for the erb.rb module." ilk="function" name="version" signature="()" />
        <scope doc="The optional `filename&apos; argument passed to Kernel#eval when&#xA;the ERB code is run" ilk="function" name="filename" />
        <scope doc="The optional `filename&apos; argument passed to Kernel#eval when&#xA;the ERB code is run" ilk="function" name="filename=" />
        <scope doc="Executes the generated ERB code to produce a completed&#xA;template, returning the results of that code." ilk="function" name="result" signature="(b=TOPLEVEL_BINDING)" />
        <scope doc="Generate results and print them." ilk="function" name="run" signature="(b=TOPLEVEL_BINDING)" />
        <scope doc="Can be used to set `eoutvar&apos; as described in ERB#new. It&apos;s&#xA;probably easier to just use the constructor though, since&#xA;calling this method requires the setup of an ERB `compiler&apos;&#xA;object." ilk="function" name="set_eoutvar" signature="(compiler, eoutvar = &apos;_erbout&apos;)" />
        <scope doc="The Ruby code generated by ERB" ilk="function" name="src" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="Env">
      <import line="9" module="importenv" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="English" />
    <scope ilk="blob" lang="Ruby" name="e2mmap">
      <scope doc="e2mmap.rb - for ruby 1.1 $Release Version: 2.0$ $Revision:&#xA;1.10 $ $Date: 1999/02/17 12:33:17 $ by Keiju ISHITSUKA" ilk="namespace" line="53" lineend="193" name="Exception2MessageMapper">
        <scope ilk="function" line="58" lineend="61" name="E2MM.extend_object" signature="E2MM.extend_object(cl)" />
        <scope doc="backward compatibility" ilk="function" line="64" lineend="67" name="E2MM.extend_to" signature="E2MM.extend_to(b)" />
        <scope ilk="function" line="69" lineend="80" name="bind" signature="bind(cl)">
          <scope ilk="function" line="71" lineend="73" name="Raise" signature="Raise(err = nil, *rest)" />
          <scope attributes="__classmethod__" ilk="function" line="76" lineend="78" name="included" signature="self.included(mod)" />
        </scope>
        <scope doc="Fail(err, *rest) err:    exception rest:   message arguments" ilk="function" line="86" lineend="88" name="Raise" signature="Raise(err = nil, *rest)" />
        <scope doc="backward compatibility" ilk="function" line="93" lineend="99" name="fail" signature="fail(err = nil, *rest)" />
        <scope classrefs="Object" ilk="class" line="100" lineend="102" name="self" />
        <scope doc="def_e2message(c, m) c:  exception m:  message_form define&#xA;exception c with message m." ilk="function" line="110" lineend="112" name="def_e2message" signature="def_e2message(c, m)" />
        <scope doc="def_exception(n, m, s) n:  exception_name m:  message_form&#xA;s:  superclass(default: StandardError) define exception&#xA;named ``c&apos;&apos; with message m." ilk="function" line="120" lineend="122" name="def_exception" signature="def_exception(n, m, s = StandardError)" />
        <scope doc="E2MM.def_exception(k, e, m) k:  class to define exception&#xA;under." ilk="function" line="136" lineend="139" name="E2MM.def_e2message" signature="E2MM.def_e2message(k, c, m)" />
        <scope doc="E2MM.def_exception(k, n, m, s) k:  class to define exception&#xA;under." ilk="function" line="148" lineend="153" name="E2MM.def_exception" signature="E2MM.def_exception(k, n, m, s = StandardError)" />
        <scope doc="Fail(klass, err, *rest) klass:  class to define exception&#xA;under." ilk="function" line="160" lineend="171" name="E2MM.Raise" signature="E2MM.Raise(klass = E2MM, err = nil, *rest)" />
        <scope classrefs="Object" ilk="class" line="172" lineend="174" name="E2MM" />
        <scope ilk="function" line="176" lineend="185" name="E2MM.e2mm_message" signature="E2MM.e2mm_message(klass, exp)" />
        <scope classrefs="Object" ilk="class" line="186" lineend="188" name="self" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb">
      <import line="1" module="drb/drb" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/unix">
      <import line="1" module="socket" symbol="*" />
      <import line="2" module="drb/drb" symbol="*" />
      <import line="3" module="tmpdir" symbol="*" />
      <scope ilk="namespace" line="7" lineend="108" name="DRb">
        <scope classrefs="DRbTCPSocket" ilk="class" line="9" lineend="105" name="DRbUNIXSocket">
          <scope attributes="__classmethod__" ilk="function" line="10" lineend="19" name="parse_uri" signature="self.parse_uri(uri)" />
          <scope attributes="__classmethod__" ilk="function" line="21" lineend="26" name="open" signature="self.open(uri, config)" />
          <scope attributes="__classmethod__" ilk="function" line="28" lineend="49" name="open_server" signature="self.open_server(uri, config)">
            <import line="40" module="etc" symbol="*" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="51" lineend="54" name="uri_option" signature="self.uri_option(uri, config)" />
          <scope attributes="__ctor__" ilk="function" line="56" lineend="61" name="initialize" signature="initialize(uri, soc, config={}, server_mode = false)" />
          <scope attributes="__classmethod__" doc="import from tempfile.rb" ilk="function" line="66" lineend="86" name="temp_server" signature="self.temp_server" />
          <scope ilk="function" line="89" lineend="95" name="close" signature="close" />
          <scope ilk="function" line="97" lineend="100" name="accept" signature="accept" />
          <scope ilk="function" line="102" lineend="104" name="set_sockopt" signature="set_sockopt(soc)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/timeridconv">
      <import line="1" module="drb/drb" symbol="*" />
      <import line="2" module="monitor" symbol="*" />
      <scope ilk="namespace" line="4" lineend="89" name="DRb">
        <scope classrefs="DRbIdConv" ilk="class" line="5" lineend="88" name="TimerIdConv">
          <scope classrefs="Object" ilk="class" line="6" lineend="72" name="TimerHolder2">
            <scope classrefs="RuntimeError" ilk="class" line="9" lineend="9" name="InvalidIndexError" />
            <scope attributes="__ctor__" ilk="function" line="11" lineend="19" name="initialize" signature="initialize(timeout=600)" />
            <scope ilk="function" line="21" lineend="27" name="add" signature="add(obj)" />
            <scope ilk="function" line="29" lineend="39" name="fetch" signature="fetch(key, dv=@sentinel)" />
            <scope ilk="function" line="41" lineend="47" name="include?" signature="include?(key)" />
            <scope ilk="function" line="49" lineend="53" name="peek" signature="peek(key)" />
            <scope ilk="function" line="56" lineend="62" name="alternate" signature="alternate" />
            <scope ilk="function" line="64" lineend="71" name="keeper" signature="keeper" />
            <import symbol="MonitorMixin" />
          </scope>
          <scope attributes="__ctor__" ilk="function" line="74" lineend="76" name="initialize" signature="initialize(timeout=600)" />
          <scope ilk="function" line="78" lineend="83" name="to_obj" signature="to_obj(ref)" />
          <scope ilk="function" line="85" lineend="87" name="to_id" signature="to_id(obj)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/ssl">
      <import line="1" module="socket" symbol="*" />
      <import line="2" module="openssl" symbol="*" />
      <import line="3" module="drb/drb" symbol="*" />
      <import line="4" module="singleton" symbol="*" />
      <scope ilk="namespace" line="6" lineend="190" name="DRb">
        <scope classrefs="DRbTCPSocket" ilk="class" line="8" lineend="187" name="DRbSSLSocket">
          <scope classrefs="Object" ilk="class" line="10" lineend="110" name="SSLConfig">
            <scope attributes="__ctor__" doc="e.g." ilk="function" line="27" lineend="32" name="initialize" signature="initialize(config)" />
            <scope ilk="function" line="34" lineend="36" name="[]" signature="[](key" />
            <scope ilk="function" line="38" lineend="43" name="connect" signature="connect(tcp)" />
            <scope ilk="function" line="45" lineend="50" name="accept" signature="accept(tcp)" />
            <scope ilk="function" line="52" lineend="95" name="setup_certificate" signature="setup_certificate" />
            <scope ilk="function" line="97" lineend="109" name="setup_ssl_context" signature="setup_ssl_context" />
          </scope>
          <scope attributes="__classmethod__" ilk="function" line="112" lineend="122" name="parse_uri" signature="self.parse_uri(uri)" />
          <scope attributes="__classmethod__" ilk="function" line="124" lineend="133" name="open" signature="self.open(uri, config)" />
          <scope attributes="__classmethod__" ilk="function" line="135" lineend="151" name="open_server" signature="self.open_server(uri, config)" />
          <scope attributes="__classmethod__" ilk="function" line="153" lineend="156" name="uri_option" signature="self.uri_option(uri, config)" />
          <scope attributes="__ctor__" ilk="function" line="158" lineend="161" name="initialize" signature="initialize(uri, soc, config, is_established)" />
          <scope ilk="function" line="163" name="stream" signature="stream" />
          <scope ilk="function" line="165" lineend="171" name="close" signature="close" />
          <scope ilk="function" line="173" lineend="186" name="accept" signature="accept" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/observer">
      <import line="1" module="observer" symbol="*" />
      <scope ilk="namespace" line="3" lineend="22" name="DRb">
        <scope ilk="namespace" line="4" lineend="21" name="DRbObservable">
          <scope ilk="function" line="7" lineend="20" name="notify_observers" signature="notify_observers(*arg)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/invokemethod">
      <scope doc="for ruby-1.8.0" ilk="namespace" line="3" lineend="36" name="DRb">
        <scope classrefs="Object" ilk="class" line="4" lineend="35" name="DRbServer">
          <scope ilk="namespace" line="5" lineend="34" name="InvokeMethod18Mixin">
            <scope ilk="function" line="6" lineend="11" name="block_yield" signature="block_yield(x)" />
            <scope ilk="function" line="13" lineend="33" name="perform_with_block" signature="perform_with_block" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/gw">
      <import line="1" module="drb/drb" symbol="*" />
      <import line="2" module="monitor" symbol="*" />
      <scope ilk="namespace" line="4" lineend="56" name="DRb">
        <scope classrefs="DRbIdConv" ilk="class" line="5" lineend="12" name="GWIdConv">
          <scope ilk="function" line="6" lineend="11" name="to_obj" signature="to_obj(ref)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="14" lineend="32" name="GW">
          <scope attributes="__ctor__" ilk="function" line="16" lineend="19" name="initialize" signature="initialize" />
          <scope ilk="function" line="21" lineend="25" name="[]" signature="[](key" />
          <scope ilk="function" line="27" lineend="31" name="[]=" signature="[]=(key" />
          <import symbol="MonitorMixin" />
        </scope>
        <scope classrefs="Object" ilk="class" line="34" lineend="55" name="DRbObject">
          <scope attributes="__classmethod__" ilk="function" line="35" lineend="42" name="_load" signature="self._load(s)" />
          <scope ilk="function" line="44" lineend="54" name="_dump" signature="_dump(lv)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/extservm">
      <import line="6" module="drb/drb" symbol="*" />
      <import line="7" module="thread" symbol="*" />
      <scope ilk="namespace" line="9" lineend="96" name="DRb">
        <scope classrefs="Object" ilk="class" line="10" lineend="95" name="ExtServManager">
          <scope attributes="__classmethod__" ilk="function" line="15" lineend="17" name="command" signature="self.command" />
          <scope attributes="__classmethod__" ilk="function" line="19" lineend="21" name="command=" signature="self.command=(cmd)" />
          <scope attributes="__ctor__" ilk="function" line="23" lineend="29" name="initialize" signature="initialize" />
          <scope ilk="function" line="30" lineend="30" name="uri" />
          <scope ilk="function" line="30" lineend="30" name="uri=" />
          <scope ilk="function" line="32" lineend="41" name="service" signature="service(name)" />
          <scope ilk="function" line="43" lineend="57" name="regist" signature="regist(name, ro)" />
          <scope ilk="function" line="59" lineend="63" name="unregist" signature="unregist(name)" />
          <scope ilk="function" line="66" lineend="73" name="invoke_thread" signature="invoke_thread" />
          <scope ilk="function" line="75" lineend="80" name="invoke_service" signature="invoke_service(name)" />
          <scope ilk="function" line="82" lineend="94" name="invoke_service_command" signature="invoke_service_command(name, command)" />
          <import symbol="DRbUndumped" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/extserv">
      <import line="6" module="drb/drb" symbol="*" />
      <scope ilk="namespace" line="8" lineend="36" name="DRb">
        <scope classrefs="Object" ilk="class" line="9" lineend="35" name="ExtServ">
          <scope attributes="__ctor__" ilk="function" line="12" lineend="17" name="initialize" signature="initialize(there, name, server=nil)" />
          <scope ilk="function" line="18" lineend="18" name="server" />
          <scope ilk="function" line="20" lineend="22" name="front" signature="front" />
          <scope ilk="function" line="24" lineend="30" name="stop_service" signature="stop_service" />
          <scope ilk="function" line="32" lineend="34" name="alive?" signature="alive?" />
          <import symbol="DRbUndumped" />
        </scope>
      </scope>
      <scope classrefs="Object" ilk="class" line="39" lineend="53" name="Foo">
        <scope attributes="__ctor__" ilk="function" line="42" lineend="44" name="initialize" signature="initialize(str)" />
        <scope ilk="function" line="46" lineend="48" name="hello" signature="hello(it)" />
        <scope ilk="function" line="50" lineend="52" name="to_s" signature="to_s" />
        <import symbol="DRbUndumped" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/eq">
      <import line="1" module="drb/drb" symbol="*" />
      <scope ilk="namespace" line="3" lineend="16" name="DRb">
        <scope classrefs="Object" ilk="class" line="4" lineend="15" name="DRbObject">
          <scope ilk="function" line="5" lineend="8" name="==" signature="==(other" />
          <scope ilk="function" line="10" lineend="12" name="hash" signature="hash" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/drb">
      <import line="54" module="socket" symbol="*" />
      <import line="55" module="thread" symbol="*" />
      <import line="56" module="fcntl" symbol="*" />
      <import line="57" module="drb/eq" symbol="*" />
      <scope doc="== Overview" ilk="namespace" line="350" lineend="1756" name="DRb">
        <scope classrefs="RuntimeError" doc="Superclass of all errors raised in the DRb module." ilk="class" line="353" lineend="353" name="DRbError" />
        <scope classrefs="DRbError" doc="Error raised when an error occurs on the underlying&#xA;communication protocol." ilk="class" line="357" lineend="357" name="DRbConnError" />
        <scope classrefs="Object" doc="Class responsible for converting between an object and its&#xA;id." ilk="class" line="368" lineend="385" name="DRbIdConv">
          <scope doc="Convert an object reference id to an object." ilk="function" line="374" lineend="376" name="to_obj" signature="to_obj(ref)" />
          <scope doc="Convert an object into a reference id." ilk="function" line="382" lineend="384" name="to_id" signature="to_id(obj)" />
        </scope>
        <scope doc="Mixin module making an object undumpable or unmarshallable." ilk="namespace" line="393" lineend="397" name="DRbUndumped">
          <scope ilk="function" line="394" lineend="396" name="_dump" signature="_dump(dummy)" />
        </scope>
        <scope classrefs="DRbError" doc="Error raised by the DRb module when an attempt is made to&#xA;refer to the context&apos;s current drb server but the context&#xA;does not have one." ilk="class" line="402" lineend="402" name="DRbServerNotFound" />
        <scope classrefs="DRbError" doc="Error raised by the DRbProtocol module when it cannot find&#xA;any protocol implementation support the scheme specified in&#xA;a URI." ilk="class" line="406" lineend="406" name="DRbBadURI" />
        <scope classrefs="DRbError" doc="Error raised by a dRuby protocol when it doesn&apos;t support the&#xA;scheme specified in a URI." ilk="class" line="410" lineend="410" name="DRbBadScheme" />
        <scope classrefs="DRbError" doc="An exception wrapping a DRb::DRbUnknown object" ilk="class" line="413" lineend="431" name="DRbUnknownError">
          <scope attributes="__ctor__" doc="Create a new DRbUnknownError for the DRb::DRbUnknown object&#xA;+unknown+" ilk="function" line="416" lineend="419" name="initialize" signature="initialize(unknown)" />
          <scope ilk="function" line="422" lineend="422" name="unknown" />
          <scope attributes="__classmethod__" doc="Get the wrapped DRb::DRbUnknown object." ilk="function" line="424" lineend="426" name="_load" signature="self._load(s)" />
          <scope ilk="function" line="428" lineend="430" name="_dump" signature="_dump(lv)" />
        </scope>
        <scope classrefs="DRbError" ilk="class" line="433" lineend="440" name="DRbRemoteError">
          <scope attributes="__ctor__" ilk="function" line="434" lineend="438" name="initialize" signature="initialize(error)" />
          <scope ilk="function" line="439" lineend="439" name="reason" />
        </scope>
        <scope classrefs="Object" doc="Class wrapping a marshalled object whose type is unknown&#xA;locally." ilk="class" line="455" lineend="509" name="DRbUnknown">
          <scope attributes="__ctor__" doc="Create a new DRbUnknown object." ilk="function" line="463" lineend="473" name="initialize" signature="initialize(err, buf)" />
          <scope ilk="function" line="479" lineend="479" name="name" />
          <scope ilk="function" line="482" lineend="482" name="buf" />
          <scope attributes="__classmethod__" doc="Buffer contained the marshalled, unknown object." ilk="function" line="484" lineend="490" name="_load" signature="self._load(s)" />
          <scope ilk="function" line="492" lineend="494" name="_dump" signature="_dump(lv)" />
          <scope doc="Attempt to load the wrapped marshalled object again." ilk="function" line="501" lineend="503" name="reload" signature="reload" />
          <scope doc="Create a DRbUnknownError exception containing this object." ilk="function" line="506" lineend="508" name="exception" signature="exception" />
        </scope>
        <scope classrefs="Object" ilk="class" line="511" lineend="534" name="DRbArray">
          <scope attributes="__ctor__" ilk="function" line="512" lineend="525" name="initialize" signature="initialize(ary)" />
          <scope attributes="__classmethod__" ilk="function" line="527" lineend="529" name="_load" signature="self._load(s)" />
          <scope ilk="function" line="531" lineend="533" name="_dump" signature="_dump(lv)" />
        </scope>
        <scope classrefs="Object" doc="Handler for sending and receiving drb messages." ilk="class" line="545" lineend="642" name="DRbMessage">
          <scope attributes="__ctor__" ilk="function" line="546" lineend="549" name="initialize" signature="initialize(config)" />
          <scope ilk="function" line="551" lineend="559" name="dump" signature="dump(obj, error=false)" />
          <scope ilk="function" line="561" lineend="592" name="load" signature="load(soc)" />
          <scope ilk="function" line="594" lineend="606" name="send_request" signature="send_request(stream, ref, msg_id, arg, b)" />
          <scope ilk="function" line="608" lineend="620" name="recv_request" signature="recv_request(stream)" />
          <scope ilk="function" line="622" lineend="626" name="send_reply" signature="send_reply(stream, succ, result)" />
          <scope ilk="function" line="628" lineend="632" name="recv_reply" signature="recv_reply(stream)" />
          <scope ilk="function" line="635" lineend="641" name="make_proxy" signature="make_proxy(obj, error=false)" />
        </scope>
        <scope doc="Module managing the underlying network protocol(s) used by&#xA;drb." ilk="namespace" line="710" lineend="797" name="DRbProtocol">
          <scope doc="Add a new protocol to the DRbProtocol module." ilk="function" line="713" lineend="715" name="add_protocol" signature="add_protocol(prot)" />
          <scope doc="Open a client connection to +uri+ with the configuration&#xA;+config+." ilk="function" line="725" lineend="741" name="open" signature="open(uri, config, first=true)" />
          <scope doc="Open a server listening for connections at +uri+ with&#xA;configuration +config+." ilk="function" line="753" lineend="765" name="open_server" signature="open_server(uri, config, first=true)" />
          <scope doc="Parse +uri+ into a [uri, option] pair." ilk="function" line="774" lineend="788" name="uri_option" signature="uri_option(uri, config, first=true)" />
          <scope ilk="function" line="791" lineend="795" name="auto_load" signature="auto_load(uri, config)" />
        </scope>
        <scope classrefs="Object" doc="The default drb protocol." ilk="class" line="802" lineend="962" name="DRbTCPSocket">
          <scope attributes="__classmethod__" ilk="function" line="804" lineend="814" name="parse_uri" signature="self.parse_uri(uri)" />
          <scope attributes="__classmethod__" doc="Open a client connection to +uri+ using configuration&#xA;+config+." ilk="function" line="819" lineend="825" name="open" signature="self.open(uri, config)" />
          <scope attributes="__classmethod__" ilk="function" line="827" lineend="834" name="getservername" signature="self.getservername" />
          <scope attributes="__classmethod__" ilk="function" line="836" lineend="851" name="open_server_inaddr_any" signature="self.open_server_inaddr_any(host, port)" />
          <scope attributes="__classmethod__" doc="Open a server listening for connections at +uri+ using&#xA;configuration +config+." ilk="function" line="855" lineend="867" name="open_server" signature="self.open_server(uri, config)" />
          <scope attributes="__classmethod__" doc="Parse +uri+ into a [uri, option] pair." ilk="function" line="870" lineend="873" name="uri_option" signature="self.uri_option(uri, config)" />
          <scope attributes="__ctor__" doc="Create a new DRbTCPSocket instance." ilk="function" line="880" lineend="887" name="initialize" signature="initialize(uri, soc, config={})" />
          <scope ilk="function" line="890" lineend="890" name="uri" />
          <scope doc="Get the address of our TCP peer (the other end of the socket&#xA;we are bound to." ilk="function" line="894" lineend="896" name="peeraddr" signature="peeraddr" />
          <scope doc="Get the socket." ilk="function" line="899" name="stream" signature="stream" />
          <scope doc="On the client side, send a request to the server." ilk="function" line="902" lineend="904" name="send_request" signature="send_request(ref, msg_id, arg, b)" />
          <scope doc="On the server side, receive a request from the client." ilk="function" line="907" lineend="909" name="recv_request" signature="recv_request" />
          <scope doc="On the server side, send a reply to the client." ilk="function" line="912" lineend="914" name="send_reply" signature="send_reply(succ, result)" />
          <scope doc="On the client side, receive a reply from the server." ilk="function" line="917" lineend="919" name="recv_reply" signature="recv_reply" />
          <scope doc="Close the connection." ilk="function" line="929" lineend="934" name="close" signature="close" />
          <scope doc="On the server side, for an instance returned by&#xA;#open_server, accept a client connection and return a new&#xA;instance to handle the server&apos;s side of this client-server&#xA;session." ilk="function" line="939" lineend="946" name="accept" signature="accept" />
          <scope doc="Check to see if this connection is alive." ilk="function" line="949" lineend="956" name="alive?" signature="alive?" />
          <scope ilk="function" line="958" lineend="961" name="set_sockopt" signature="set_sockopt(soc)" />
        </scope>
        <scope ilk="namespace" line="964" lineend="966" name="DRbProtocol" />
        <scope classrefs="Object" ilk="class" line="968" lineend="985" name="DRbURIOption">
          <scope attributes="__ctor__" doc=":nodoc:  I don&apos;t understand the purpose of this class..." ilk="function" line="969" lineend="971" name="initialize" signature="initialize(option)" />
          <scope ilk="function" line="972" lineend="972" name="option" />
          <scope ilk="function" line="973" name="to_s" signature="to_s" />
          <scope ilk="function" line="975" lineend="978" name="==" signature="==(other" />
          <scope ilk="function" line="980" lineend="982" name="hash" signature="hash" />
        </scope>
        <scope classrefs="Object" doc="Object wrapping a reference to a remote drb object." ilk="class" line="991" lineend="1133" name="DRbObject">
          <scope attributes="__classmethod__" doc="Unmarshall a marshalled DRbObject." ilk="function" line="998" lineend="1010" name="_load" signature="self._load(s)" />
          <scope attributes="__classmethod__" ilk="function" line="10121501212" lineend="1017" name="new_with" signature="self.new_with(uri, ref)" />
          <scope attributes="__classmethod__" doc="Create a new DRbObject from a URI alone." ilk="function" line="1020" lineend="1022" name="new_with_uri" signature="self.new_with_uri(uri)" />
          <scope doc="Marshall this object." ilk="function" line="1027" lineend="1029" name="_dump" signature="_dump(lv)" />
          <scope attributes="__ctor__" doc="Create a new remote object stub." ilk="function" line="1036" lineend="1047" name="initialize" signature="initialize(obj, uri=nil)" />
          <scope doc="Get the URI of the remote object." ilk="function" line="1050" lineend="1052" name="__drburi" signature="__drburi" />
          <scope doc="Get the reference of the object, if local." ilk="function" line="1055" lineend="1057" name="__drbref" signature="__drbref" />
          <scope ilk="function" line="1062" lineend="1071" name="respond_to?" signature="respond_to?(msg_id, priv=false)" />
          <scope doc="Routes method calls to the referenced object." ilk="function" line="1074" lineend="1096" name="method_missing" signature="method_missing(msg_id, *a, &amp;b)" />
          <scope attributes="__classmethod__" ilk="function" line="1098" lineend="1107" name="with_friend" signature="self.with_friend(uri)" />
          <scope attributes="__classmethod__" ilk="function" line="1109" lineend="1121" name="prepare_backtrace" signature="self.prepare_backtrace(uri, result)" />
          <scope ilk="function" line="1123" lineend="1125" name="pretty_print" signature="pretty_print(q)" />
          <scope ilk="function" line="1127" lineend="1132" name="pretty_print_cycle" signature="pretty_print_cycle(q)" />
        </scope>
        <scope classrefs="Object" doc="Class handling the connection between a DRbObject and the&#xA;server the real object lives on." ilk="class" line="1144" lineend="1203" name="DRbConn">
          <scope attributes="__classmethod__" doc=":nodoc:" ilk="function" line="1149" lineend="1182" name="open" signature="self.open(remote_uri)" />
          <scope attributes="__ctor__" ilk="function" line="1184" lineend="1187" name="initialize" signature="initialize(remote_uri)" />
          <scope ilk="function" line="1188" lineend="1188" name="uri" />
          <scope doc=":nodoc:" ilk="function" line="1190" lineend="1193" name="send_message" signature="send_message(ref, msg_id, arg, block)" />
          <scope ilk="function" line="1195" lineend="1198" name="close" signature="close" />
          <scope ilk="function" line="1200" lineend="1202" name="alive?" signature="alive?" />
        </scope>
        <scope classrefs="Object" doc="Class representing a drb server instance." ilk="class" line="1216" lineend="1604" name="DRbServer">
          <import line="1559" module="drb/invokemethod" symbol="*" />
          <import line="1564" module="drb/invokemethod16" symbol="*" />
          <scope attributes="__classmethod__" doc="Set the default value for the :argc_limit option." ilk="function" line="1228" lineend="1230" name="default_argc_limit" signature="self.default_argc_limit(argc)" />
          <scope attributes="__classmethod__" doc="Set the default value for the :load_limit option." ilk="function" line="1235" lineend="1237" name="default_load_limit" signature="self.default_load_limit(sz)" />
          <scope attributes="__classmethod__" doc="Set the default value for the :acl option." ilk="function" line="1242" lineend="1244" name="default_acl" signature="self.default_acl(acl)" />
          <scope attributes="__classmethod__" doc="Set the default value for the :id_conv option." ilk="function" line="1249" lineend="1251" name="default_id_conv" signature="self.default_id_conv(idconv)" />
          <scope attributes="__classmethod__" ilk="function" line="1253" lineend="1255" name="default_safe_level" signature="self.default_safe_level(level)" />
          <scope attributes="__classmethod__" doc="Set the default value of the :verbose option." ilk="function" line="1260" lineend="1262" name="verbose=" signature="self.verbose=(on)" />
          <scope attributes="__classmethod__" doc="Get the default value of the :verbose option." ilk="function" line="1265" lineend="1267" name="verbose" signature="self.verbose" />
          <scope attributes="__classmethod__" ilk="function" line="1269" lineend="1279" name="make_config" signature="self.make_config(hash={})" />
          <scope attributes="__ctor__" doc="Create a new DRbServer instance." ilk="function" line="1324" lineend="1347" name="initialize" signature="initialize(uri=nil, front=nil, config_or_acl=nil)" />
          <scope ilk="function" line="1350" lineend="1350" name="uri" />
          <scope ilk="function" line="1357" lineend="1357" name="thread" />
          <scope ilk="function" line="1363" lineend="1363" name="front" />
          <scope ilk="function" line="1366" lineend="1366" name="config" />
          <scope ilk="function" line="1368" lineend="1368" name="safe_level" />
          <scope doc="Set whether to operate in verbose mode." ilk="function" line="1373" name="verbose=" signature="verbose=(v)" />
          <scope doc="Get whether the server is in verbose mode." ilk="function" line="1378" name="verbose" signature="verbose" />
          <scope doc="Is this server alive?" ilk="function" line="1381" lineend="1383" name="alive?" signature="alive?" />
          <scope doc="Stop this server." ilk="function" line="1386" lineend="1393" name="stop_service" signature="stop_service" />
          <scope doc="Convert a dRuby reference to the local object it refers to." ilk="function" line="1396" lineend="1400" name="to_obj" signature="to_obj(ref)" />
          <scope doc="Convert a local object to a dRuby reference." ilk="function" line="1403" lineend="1406" name="to_id" signature="to_id(obj)" />
          <scope ilk="function" line="1409" lineend="1421" name="kill_sub_thread" signature="kill_sub_thread" />
          <scope ilk="function" line="1423" lineend="1434" name="run" signature="run" />
          <scope doc="Has a method been included in the list of insecure methods?" ilk="function" line="1444" lineend="1446" name="insecure_method?" signature="insecure_method?(msg_id)" />
          <scope doc="Coerce an object to a string, providing our own&#xA;representation if to_s is not defined for the object." ilk="function" line="1450" lineend="1454" name="any_to_s" signature="any_to_s(obj)" />
          <scope doc="Check that a method is callable via dRuby." ilk="function" line="1464" lineend="1478" name="check_insecure_method" signature="check_insecure_method(obj, msg_id)" />
          <scope classrefs="Object" ilk="class" line="1481" lineend="1556" name="InvokeMethod">
            <scope attributes="__ctor__" doc=":nodoc:" ilk="function" line="1482" lineend="1486" name="initialize" signature="initialize(drb_server, client)" />
            <scope ilk="function" line="1488" lineend="1523" name="perform" signature="perform" />
            <scope ilk="function" line="1526" lineend="1532" name="init_with_client" signature="init_with_client" />
            <scope ilk="function" line="1534" lineend="1536" name="check_insecure_method" signature="check_insecure_method" />
            <scope ilk="function" line="1538" lineend="1541" name="setup_message" signature="setup_message" />
            <scope ilk="function" line="1543" lineend="1554" name="perform_without_block" signature="perform_without_block" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1560" lineend="1562" name="InvokeMethod">
            <import symbol="InvokeMethod18Mixin" />
          </scope>
          <scope classrefs="Object" ilk="class" line="1565" lineend="1567" name="InvokeMethod">
            <import symbol="InvokeMethod16Mixin" />
          </scope>
          <scope doc="The main loop performed by a DRbServer&apos;s internal thread." ilk="function" line="1577" lineend="1603" name="main_loop" signature="main_loop" />
        </scope>
        <scope doc="Start a dRuby server locally." ilk="function" line="1623" lineend="1625" name="start_service" signature="start_service(uri=nil, front=nil, config=nil)" />
        <scope doc="Get the &apos;current&apos; server." ilk="function" line="1644" lineend="1649" name="current_server" signature="current_server" />
        <scope doc="Stop the local dRuby server." ilk="function" line="1656" lineend="1659" name="stop_service" signature="stop_service" />
        <scope doc="Get the URI defining the local dRuby space." ilk="function" line="1665" lineend="1667" name="uri" signature="uri" />
        <scope doc="Is +uri+ the URI for the current local server?" ilk="function" line="1671" lineend="1673" name="here?" signature="here?(uri)" />
        <scope doc="Get the configuration of the current server." ilk="function" line="1680" lineend="1684" name="config" signature="config" />
        <scope doc="Get the front object of the current server." ilk="function" line="1691" lineend="1693" name="front" signature="front" />
        <scope doc="Convert a reference into an object using the current server." ilk="function" line="1700" lineend="1702" name="to_obj" signature="to_obj(ref)" />
        <scope doc="Get a reference id for an object using the current server." ilk="function" line="1708" lineend="1710" name="to_id" signature="to_id(obj)" />
        <scope doc="Get the thread of the primary server." ilk="function" line="1717" lineend="1719" name="thread" signature="thread" />
        <scope doc="Set the default id conv object." ilk="function" line="1725" lineend="1727" name="install_id_conv" signature="install_id_conv(idconv)" />
        <scope doc="Set the default acl." ilk="function" line="1733" lineend="1735" name="install_acl" signature="install_acl(acl)" />
        <scope ilk="function" line="1739" lineend="1744" name="regist_server" signature="regist_server(server)" />
        <scope ilk="function" line="1747" lineend="1749" name="remove_server" signature="remove_server(server)" />
        <scope ilk="function" line="1752" lineend="1754" name="fetch_server" signature="fetch_server(uri)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="drb/acl">
      <import line="8" module="ipaddr" symbol="*" />
      <scope classrefs="Object" doc="acl-2.0 - simple Access Control List" ilk="class" line="10" lineend="126" name="ACL">
        <scope classrefs="Object" ilk="class" line="12" lineend="58" name="ACLEntry">
          <scope attributes="__ctor__" ilk="function" line="13" lineend="23" name="initialize" signature="initialize(str)" />
          <scope ilk="function" line="26" lineend="31" name="dot_pat_str" signature="dot_pat_str(str)" />
          <scope ilk="function" line="34" lineend="37" name="dot_pat" signature="dot_pat(str)" />
          <scope ilk="function" line="40" lineend="57" name="match" signature="match(addr)" />
        </scope>
        <scope classrefs="Object" ilk="class" line="60" lineend="77" name="ACLList">
          <scope attributes="__ctor__" ilk="function" line="61" lineend="63" name="initialize" signature="initialize" />
          <scope ilk="function" line="66" lineend="71" name="match" signature="match(addr)" />
          <scope ilk="function" line="74" lineend="76" name="add" signature="add(str)" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="82" lineend="87" name="initialize" signature="initialize(list=nil, order = DENY_ALLOW)" />
        <scope ilk="function" line="90" lineend="92" name="allow_socket?" signature="allow_socket?(soc)" />
        <scope ilk="function" line="95" lineend="108" name="allow_addr?" signature="allow_addr?(addr)" />
        <scope ilk="function" line="111" lineend="125" name="install_list" signature="install_list(list)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="dl/win32">
      <import line="3" module="dl" symbol="*" />
      <scope classrefs="Object" doc="-*- ruby -*-" ilk="class" line="5" lineend="25" name="Win32API">
        <scope attributes="__ctor__" ilk="function" line="8" lineend="12" name="initialize" signature="initialize(dllname, func, import, export = &quot;0&quot;)" />
        <scope ilk="function" line="14" lineend="22" name="call" signature="call(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="dl/types">
      <import line="3" module="dl" symbol="*" />
      <scope doc="-*- ruby -*-" ilk="namespace" line="5" lineend="245" name="DL">
        <scope classrefs="Object" ilk="class" line="6" lineend="244" name="Types">
          <scope attributes="__ctor__" doc="DL::Importable primitive types" ilk="function" line="164" lineend="166" name="initialize" signature="initialize" />
          <scope ilk="function" line="168" lineend="170" name="typealias" signature="typealias(ty1, ty2, enc=nil, dec=nil, ty3=nil, senc=nil, sdec=nil)" />
          <scope ilk="function" line="172" lineend="174" name="init_types" signature="init_types" />
          <scope ilk="function" line="176" lineend="206" name="encode_argument_type" signature="encode_argument_type(alias_type)" />
          <scope ilk="function" line="208" lineend="211" name="encode_return_type" signature="encode_return_type(ty)" />
          <scope ilk="function" line="213" lineend="243" name="encode_struct_type" signature="encode_struct_type(alias_type)" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="dl/struct">
      <import line="3" module="dl" symbol="*" />
      <import line="4" module="dl/import" symbol="*" />
      <scope doc="-*- ruby -*-" ilk="namespace" line="6" lineend="149" name="DL">
        <scope ilk="namespace" line="7" lineend="148" name="Importable">
          <scope ilk="namespace" line="8" lineend="147" name="Internal">
            <scope ilk="function" line="9" lineend="12" name="define_struct" signature="define_struct(contents)" />
            <scope ilk="function" line="15" lineend="18" name="define_union" signature="define_union(contents)" />
            <scope classrefs="Object" ilk="class" line="21" lineend="62" name="Memory">
              <scope attributes="__ctor__" ilk="function" line="22" lineend="53" name="initialize" signature="initialize(ptr, names, ty, len, enc, dec)" />
              <scope ilk="function" line="55" lineend="57" name="to_ptr" signature="to_ptr" />
              <scope ilk="function" line="59" lineend="61" name="size" signature="size" />
            </scope>
            <scope classrefs="Object" ilk="class" line="64" lineend="137" name="Struct">
              <scope attributes="__ctor__" ilk="function" line="65" lineend="75" name="initialize" signature="initialize(types, contents)" />
              <scope ilk="function" line="77" lineend="79" name="size" signature="size" />
              <scope ilk="function" line="81" lineend="83" name="members" signature="members" />
              <scope doc="ptr must be a PtrData object." ilk="function" line="86" lineend="90" name="new" signature="new(ptr)" />
              <scope ilk="function" line="92" lineend="98" name="malloc" signature="malloc(size = nil)" />
              <scope ilk="function" line="100" lineend="115" name="parse" signature="parse(contents)" />
              <scope ilk="function" line="117" lineend="136" name="parse_elem" signature="parse_elem(elem)" />
            </scope>
            <scope classrefs="Struct" doc="class Struct" ilk="class" line="139" lineend="146" name="Union">
              <scope ilk="function" line="140" lineend="145" name="new" signature="new" />
            </scope>
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="dl/import">
      <import line="3" module="dl" symbol="*" />
      <import line="4" module="dl/types" symbol="*" />
      <scope doc="-*- ruby -*-" ilk="namespace" line="6" lineend="225" name="DL">
        <scope ilk="namespace" line="7" lineend="224" name="Importable">
          <scope ilk="namespace" line="10" lineend="222" name="Internal">
            <scope ilk="function" line="11" lineend="13" name="init_types" signature="init_types()" />
            <scope ilk="function" line="15" lineend="17" name="init_sym" signature="init_sym()" />
            <scope ilk="function" line="19" lineend="21" name="[]" signature="[](name" />
            <scope ilk="function" line="23" lineend="33" name="dlload" signature="dlload(*libnames)" />
            <scope ilk="function" line="36" lineend="54" name="parse_cproto" signature="parse_cproto(proto)" />
            <scope doc="example: extern &quot;int strlen(char*)&quot;" ilk="function" line="59" lineend="62" name="extern" signature="extern(proto)" />
            <scope doc="example: callback &quot;int method_name(int, char*)&quot;" ilk="function" line="67" lineend="97" name="callback" signature="callback(proto)" />
            <scope doc="example: typealias(&quot;uint&quot;, &quot;unsigned int&quot;)" ilk="function" line="102" lineend="106" name="typealias" signature="typealias(alias_type, ty1, enc1=nil, dec1=nil, ty2=nil, enc2=nil, dec2=nil)" />
            <scope doc="example: symbol &quot;foo_value&quot; symbol &quot;foo_func&quot;, &quot;IIP&quot;" ilk="function" line="112" lineend="129" name="symbol" signature="symbol(name, ty = nil)" />
            <scope doc="example: import(&quot;get_length&quot;, &quot;int&quot;, [&quot;void*&quot;, &quot;int&quot;])" ilk="function" line="134" lineend="178" name="import" signature="import(name, rettype, argtypes = nil)" />
            <scope ilk="function" line="180" lineend="182" name="_args_" signature="_args_" />
            <scope ilk="function" line="184" lineend="186" name="_retval_" signature="_retval_" />
            <scope ilk="function" line="188" lineend="221" name="encode_argument_types" signature="encode_argument_types(tys)" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="delegate">
      <scope classrefs="Object" doc="= delegate -- Support for the Delegation Pattern" ilk="class" line="117" lineend="188" name="Delegator">
        <scope attributes="__ctor__" doc="Pass in the _obj_ to delegate method calls to." ilk="function" line="123" lineend="151" name="initialize" signature="initialize(obj)" />
        <scope doc="Handles the magic of delegation through \_\_getobj\_\_." ilk="function" line="155" lineend="161" name="method_missing" signature="method_missing(m, *args)" />
        <scope doc="Checks for a method provided by this the delegate object by&#xA;fowarding the call through \_\_getobj\_\_." ilk="function" line="167" lineend="170" name="respond_to?" signature="respond_to?(m)" />
        <scope doc="This method must be overridden by subclasses and should&#xA;return the object method calls are being delegated to." ilk="function" line="176" lineend="178" name="__getobj__" signature="__getobj__" />
        <scope doc="Serialization support for the object returned by&#xA;\_\_getobj\_\_." ilk="function" line="181" lineend="183" name="marshal_dump" signature="marshal_dump" />
        <scope doc="Reinitializes delegation from a serialized object." ilk="function" line="185" lineend="187" name="marshal_load" signature="marshal_load(obj)" />
      </scope>
      <scope classrefs="Delegator" doc="A concrete implementation of Delegator, this class provides&#xA;the means to delegate all supported method calls to the&#xA;object passed into the constructor and even to change the&#xA;object being delegated to at a later time with&#xA;\_\_setobj\_\_ ." ilk="class" line="196" lineend="238" name="SimpleDelegator">
        <scope attributes="__ctor__" doc="Pass in the _obj_ you would like to delegate method calls&#xA;to." ilk="function" line="199" lineend="202" name="initialize" signature="initialize(obj)" />
        <scope doc="Returns the current object method calls are being delegated&#xA;to." ilk="function" line="205" lineend="207" name="__getobj__" signature="__getobj__" />
        <scope doc="Changes the delegate object to _obj_." ilk="function" line="223" lineend="226" name="__setobj__" signature="__setobj__(obj)" />
        <scope doc="Clone support for the object returned by \_\_getobj\_\_." ilk="function" line="229" lineend="232" name="clone" signature="clone" />
        <scope doc="Duplication support for the object returned by&#xA;\_\_getobj\_\_." ilk="function" line="234" lineend="237" name="dup" signature="dup(obj)" />
      </scope>
      <scope doc=":startdoc:" ilk="function" line="256" lineend="308" name="DelegateClass" signature="DelegateClass(superclass)" />
      <scope classrefs="Array" doc=":enddoc:" ilk="class" line="313" lineend="317" name="ExtArray">
        <scope attributes="__ctor__" ilk="function" line="314" lineend="316" name="initialize" signature="initialize()" />
      </scope>
      <scope ilk="function" line="325" lineend="327" name="foo.test" signature="foo.test" />
      <scope ilk="function" line="328" lineend="330" name="foo.error" signature="foo.error" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="debug">
      <import line="10" module="tracer" symbol="*" />
      <import line="11" module="pp" symbol="*" />
      <scope classrefs="Object" doc="Copyright (C) 2000  Network Applied Communication&#xA;Laboratory, Inc." ilk="class" line="13" lineend="17" name="Tracer">
        <scope attributes="__classmethod__" ilk="function" line="14" lineend="16" name="trace_func" signature="Tracer.trace_func(*vars)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="21" name="DEBUGGER__" />
      <scope classrefs="Object" ilk="class" line="22" lineend="60" name="Mutex">
        <scope attributes="__ctor__" ilk="function" line="23" lineend="27" name="initialize" signature="initialize" />
        <scope ilk="function" line="29" lineend="31" name="locked?" signature="locked?" />
        <scope ilk="function" line="33" lineend="44" name="lock" signature="lock" />
        <scope ilk="function" line="46" lineend="59" name="unlock" signature="unlock" />
      </scope>
      <scope classrefs="Object" ilk="class" line="63" lineend="754" name="Context">
        <import line="67" module="readline" symbol="*" />
        <scope ilk="function" line="68" lineend="70" name="readline" signature="readline(prompt, hist)" />
        <scope ilk="function" line="72" lineend="79" name="readline" signature="readline(prompt, hist)" />
        <scope attributes="__ctor__" ilk="function" line="83" lineend="98" name="initialize" signature="initialize" />
        <scope ilk="function" line="100" lineend="102" name="stop_next" signature="stop_next(n=1)" />
        <scope ilk="function" line="104" lineend="106" name="set_suspend" signature="set_suspend" />
        <scope ilk="function" line="108" lineend="110" name="clear_suspend" signature="clear_suspend" />
        <scope ilk="function" line="112" lineend="114" name="suspend_all" signature="suspend_all" />
        <scope ilk="function" line="116" lineend="118" name="resume_all" signature="resume_all" />
        <scope ilk="function" line="120" lineend="128" name="check_suspend" signature="check_suspend" />
        <scope ilk="function" line="130" lineend="132" name="trace?" signature="trace?" />
        <scope ilk="function" line="134" lineend="136" name="set_trace" signature="set_trace(arg)" />
        <scope ilk="function" line="138" lineend="140" name="stdout" signature="stdout" />
        <scope ilk="function" line="142" lineend="144" name="break_points" signature="break_points" />
        <scope ilk="function" line="146" lineend="148" name="display" signature="display" />
        <scope ilk="function" line="150" lineend="152" name="context" signature="context(th)" />
        <scope ilk="function" line="154" lineend="156" name="set_trace_all" signature="set_trace_all(arg)" />
        <scope ilk="function" line="158" lineend="160" name="set_last_thread" signature="set_last_thread(th)" />
        <scope ilk="function" line="162" lineend="173" name="debug_eval" signature="debug_eval(str, binding)" />
        <scope ilk="function" line="175" lineend="181" name="debug_silent_eval" signature="debug_silent_eval(str, binding)" />
        <scope ilk="function" line="183" lineend="188" name="var_list" signature="var_list(ary, binding)" />
        <scope ilk="function" line="190" lineend="210" name="debug_variable_info" signature="debug_variable_info(input, binding)" />
        <scope ilk="function" line="212" lineend="245" name="debug_method_info" signature="debug_method_info(input, binding)" />
        <scope ilk="function" line="247" lineend="254" name="thnum" signature="thnum" />
        <scope ilk="function" line="256" lineend="538" name="debug_command" signature="debug_command(file, line, id, binding)" />
        <scope ilk="function" line="540" lineend="582" name="debug_print_help" signature="debug_print_help" />
        <scope ilk="function" line="584" lineend="593" name="display_expressions" signature="display_expressions(binding)" />
        <scope ilk="function" line="595" lineend="597" name="display_expression" signature="display_expression(exp, binding)" />
        <scope ilk="function" line="599" lineend="604" name="frame_set_pos" signature="frame_set_pos(file, line)" />
        <scope ilk="function" line="606" lineend="615" name="display_frames" signature="display_frames(pos)" />
        <scope ilk="function" line="617" lineend="621" name="format_frame" signature="format_frame(pos)" />
        <scope ilk="function" line="623" lineend="639" name="display_list" signature="display_list(b, e, file, line)" />
        <scope ilk="function" line="641" lineend="650" name="line_at" signature="line_at(file, line)" />
        <scope ilk="function" line="652" lineend="658" name="debug_funcname" signature="debug_funcname(id)" />
        <scope ilk="function" line="660" lineend="681" name="check_break_points" signature="check_break_points(file, klass, pos, binding, id)" />
        <scope ilk="function" line="683" lineend="701" name="excn_handle" signature="excn_handle(file, line, id, binding)" />
        <scope ilk="function" line="703" lineend="753" name="trace_func" signature="trace_func(event, file, line, id, binding, klass)" />
      </scope>
      <scope classrefs="Object" ilk="class" line="765" lineend="934" name="DEBUGGER__">
        <scope ilk="function" line="766" lineend="768" name="stdout" signature="stdout" />
        <scope ilk="function" line="770" lineend="772" name="stdout=" signature="stdout=(s)" />
        <scope ilk="function" line="774" lineend="776" name="display" signature="display" />
        <scope ilk="function" line="778" lineend="780" name="break_points" signature="break_points" />
        <scope ilk="function" line="782" lineend="784" name="waiting" signature="waiting" />
        <scope ilk="function" line="786" lineend="795" name="set_trace" signature="set_trace( arg )" />
        <scope ilk="function" line="797" lineend="799" name="set_last_thread" signature="set_last_thread(th)" />
        <scope ilk="function" line="801" lineend="812" name="suspend" signature="suspend" />
        <scope ilk="function" line="814" lineend="829" name="resume" signature="resume" />
        <scope ilk="function" line="831" lineend="837" name="context" signature="context(thread=Thread.current)" />
        <scope ilk="function" line="839" lineend="841" name="interrupt" signature="interrupt" />
        <scope ilk="function" line="843" lineend="850" name="get_thread" signature="get_thread(num)" />
        <scope ilk="function" line="852" lineend="866" name="thread_list" signature="thread_list(num)" />
        <scope ilk="function" line="868" lineend="872" name="thread_list_all" signature="thread_list_all" />
        <scope ilk="function" line="874" lineend="885" name="make_thread_list" signature="make_thread_list" />
        <scope ilk="function" line="887" lineend="933" name="debug_thread_info" signature="debug_thread_info(input, binding)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="date2">
      <import line="5" module="date" symbol="*" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="date">
      <scope classrefs="Object" doc="Class representing a date." ilk="class" name="Date">
        <import symbol="Comparable" />
        <scope attributes="__classmethod__" doc="Load from Marshall format." ilk="function" name="_load" signature="(str)" />
        <scope attributes="__classmethod__" doc="Convert an Astronomical Julian Day Number to an Astronomical&#xA;Modified Julian Day Number." ilk="function" name="ajd_to_amjd" signature="(ajd)" />
        <scope attributes="__classmethod__" doc="Convert an Astronomical Julian Day Number to a (civil)&#xA;Julian Day Number." ilk="function" name="ajd_to_jd" signature="(ajd, of=0)" />
        <scope attributes="__classmethod__" doc="Convert an Astronomical Modified Julian Day Number to an&#xA;Astronomical Julian Day Number." ilk="function" name="amjd_to_ajd" signature="(amjd)" />
        <scope attributes="__classmethod__" doc="Create a new Date object for the Civil Date specified by&#xA;year y, month m, and day-of-month d." ilk="function" name="civil" signature="(y=-4712, m=1, d=1, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Convert a Civil Date to a Julian Day Number. y, m, and d are&#xA;the year, month, and day of the month." ilk="function" name="civil_to_jd" signature="(y, m, d, sg=GREGORIAN)" />
        <scope attributes="__classmethod__" doc="Create a new Date object for the Commercial Date specified&#xA;by year y, week-of-year w, and day-of-week d." ilk="function" name="commercial" signature="(y=1582, w=41, d=5, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Convert a Commercial Date to a Julian Day Number." ilk="function" name="commercial_to_jd" signature="(y, w, d, ns=GREGORIAN)" />
        <scope attributes="__classmethod__" doc="Convert a fractional day fr to [hours, minutes, seconds,&#xA;fraction_of_a_second]" ilk="function" name="day_fraction_to_time" signature="(fr)" />
        <scope attributes="__classmethod__" doc="Is a year a leap year in the Gregorian calendar?" ilk="function" name="gregorian_leap?" signature="(y)" />
        <scope attributes="__classmethod__" doc="Create a new Date object from a Julian Day Number." ilk="function" name="jd" signature="(jd=0, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Convert a (civil) Julian Day Number to an Astronomical&#xA;Julian Day Number." ilk="function" name="jd_to_ajd" signature="(jd, fr, of=0)" />
        <scope attributes="__classmethod__" doc="Convert a Julian Day Number to a Civil Date. jd is the&#xA;Julian Day Number." ilk="function" name="jd_to_civil" signature="(jd, sg=GREGORIAN)" />
        <scope attributes="__classmethod__" doc="Convert a Julian Day Number to a Commercial Date" ilk="function" name="jd_to_commercial" signature="(jd, sg=GREGORIAN)" />
        <scope attributes="__classmethod__" doc="Convert a Julian Day Number to the number of days since the&#xA;adoption of the Gregorian Calendar (in Italy)." ilk="function" name="jd_to_ld" signature="(jd)" />
        <scope attributes="__classmethod__" doc="Convert a Julian Day Number to a Modified Julian Day Number." ilk="function" name="jd_to_mjd" signature="(jd)" />
        <scope attributes="__classmethod__" doc="Convert a Julian Day Number to an Ordinal Date." ilk="function" name="jd_to_ordinal" signature="(jd, sg=GREGORIAN)" />
        <scope attributes="__classmethod__" doc="Convert a Julian Day Number to the day of the week." ilk="function" name="jd_to_wday" signature="(jd)" />
        <scope attributes="__classmethod__" doc="Is a year a leap year in the Julian calendar?" ilk="function" name="julian_leap?" signature="(y)" />
        <scope attributes="__classmethod__" doc="Convert a count of the number of days since the adoption of&#xA;the Gregorian Calendar (in Italy) to a Julian Day Number." ilk="function" name="ld_to_jd" signature="(ld)" />
        <scope attributes="__classmethod__" doc="Convert a Modified Julian Day Number to a Julian Day Number." ilk="function" name="mjd_to_jd" signature="(mjd)" />
        <scope attributes="__classmethod__ __ctor__" doc="*NOTE* this is the documentation for the method new0(). If&#xA;you are reading this as the documentation for new(), that is&#xA;because rdoc doesn&apos;t fully support the aliasing of the&#xA;initialize() method." ilk="function" name="new" signature="(ajd=0, of=0, sg=ITALY)" />
        <scope attributes="__classmethod__ private" ilk="function" name="new_with_hash" signature="(elem, sg)" />
        <scope attributes="__classmethod__" doc="Does a given Julian Day Number fall inside the new-style&#xA;(Gregorian) calendar?" ilk="function" name="ns?" signature="(jd, sg)" />
        <scope attributes="__classmethod__" doc="Create a new Date object from an Ordinal Date, specified by&#xA;year y and day-of-year d. d can be negative, in which it&#xA;counts backwards from the end of the year." ilk="function" name="ordinal" signature="(y=-4712, d=1, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Convert an Ordinal Date to a Julian Day Number." ilk="function" name="ordinal_to_jd" signature="(y, d, sg=GREGORIAN)" />
        <scope attributes="__classmethod__" doc="Does a given Julian Day Number fall inside the old-style&#xA;(Julian) calendar?" ilk="function" name="os?" signature="(jd, sg)" />
        <scope attributes="__classmethod__" doc="Create a new Date object by parsing from a String, without&#xA;specifying the format." ilk="function" name="parse" signature="(str=&apos;-4712-01-01&apos;, comp=false, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Create a new Date object by parsing from a String according&#xA;to a specified format." ilk="function" name="strptime" signature="(str=&apos;-4712-01-01&apos;, fmt=&apos;%F&apos;, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Convert an h hour, min minutes, s seconds period to a&#xA;fractional day." ilk="function" name="time_to_day_fraction" signature="(h, min, s)" />
        <scope attributes="__classmethod__" doc="Create a new Date object representing today." ilk="function" name="today" signature="(sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Do year y, month m, and day-of-month d make a valid Civil&#xA;Date? Returns the corresponding Julian Day Number if they&#xA;do, nil if they don&apos;t." ilk="function" name="valid_civil?" signature="(y, m, d, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Do year y, week-of-year w, and day-of-week d make a valid&#xA;Commercial Date? Returns the corresponding Julian Day Number&#xA;if they do, nil if they don&apos;t." ilk="function" name="valid_commercial?" signature="(y, w, d, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Is jd a valid Julian Day Number?" ilk="function" name="valid_jd?" signature="(jd, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Do the year y and day-of-year d make a valid Ordinal Date?&#xA;Returns the corresponding Julian Day Number if they do, or&#xA;nil if they don&apos;t." ilk="function" name="valid_ordinal?" signature="(y, d, sg=ITALY)" />
        <scope doc="Return a new Date object that is n days later than the&#xA;current one." ilk="function" name="+" signature="(n)" />
        <scope doc="Return a new Date object that is n months earlier than the&#xA;current one." ilk="function" name="&lt;&lt;" signature="(n)" />
        <scope doc="Compare this date with another date." ilk="function" name="&lt;=&gt;" signature="(other)" />
        <scope doc="The relationship operator for Date." ilk="function" name="===" signature="(other)" />
        <scope doc="Return a new Date object that is n months later than the&#xA;current one." ilk="function" name="&gt;&gt;" signature="(n)" />
        <scope doc="Dump to Marshal format." ilk="function" name="_dump" signature="(limit)" />
        <scope doc="Get the date as an Astronomical Julian Day Number." ilk="function" name="ajd" signature="()" />
        <scope doc="Get the date as an Astronomical Modified Julian Day Number." ilk="function" name="amjd" signature="()" />
        <scope attributes="private" doc="Get the date as a Civil Date, [year, month, day_of_month]" ilk="function" name="civil" signature="()" />
        <scope attributes="private" doc="Get the date as a Commercial Date, [year, week_of_year,&#xA;day_of_week]" ilk="function" name="commercial" signature="()" />
        <scope doc="Get the commercial day of the week of this date. Monday is&#xA;commercial day-of-week 1; Sunday is commercial day-of-week&#xA;7." ilk="function" name="cwday" signature="()" />
        <scope doc="Get the commercial week of the year of this date." ilk="function" name="cweek" signature="()" />
        <scope doc="Get the commercial year of this date. See *Commercial*&#xA;*Date* in the introduction for how this differs from the&#xA;normal year." ilk="function" name="cwyear" signature="()" />
        <scope doc="Alias for #mday" ilk="function" name="day" signature="()" />
        <scope doc="Get any fractional day part of the date." ilk="function" name="day_fraction" signature="()" />
        <scope doc="Step backward one day at a time until we reach min&#xA;(inclusive), yielding each date as we go." ilk="function" name="downto" signature="(min) {|date| ...}" />
        <scope doc="Create a copy of this Date object that uses the&#xA;English/Colonial Day of Calendar Reform." ilk="function" name="england" signature="()" />
        <scope doc="Is this Date equal to other?" ilk="function" name="eql?" signature="(other)" />
        <scope doc="Create a copy of this Date object that always uses the&#xA;Gregorian Calendar." ilk="function" name="gregorian" signature="()" />
        <scope doc="Calculate a hash value for this date." ilk="function" name="hash" signature="()" />
        <scope attributes="private" doc="Get the hour of this date." ilk="function" name="hour" signature="()" />
        <scope doc="Return internal object state as a programmer-readable&#xA;string." ilk="function" name="inspect" signature="()" />
        <scope doc="Create a copy of this Date object that uses the&#xA;Italian/Catholic Day of Calendar Reform." ilk="function" name="italy" signature="()" />
        <scope doc="Get the date as a Julian Day Number." ilk="function" name="jd" signature="()" />
        <scope doc="Create a copy of this Date object that always uses the&#xA;Julian Calendar." ilk="function" name="julian" signature="()" />
        <scope doc="Get the date as the number of days since the Day of Calendar&#xA;Reform (in Italy and the Catholic countries)." ilk="function" name="ld" signature="()" />
        <scope doc="Is this a leap year?" ilk="function" name="leap?" signature="()" />
        <scope doc="Get the day-of-the-month of this date." ilk="function" name="mday" signature="()" />
        <scope attributes="private" doc="Get the minute of this date." ilk="function" name="min" signature="()" />
        <scope doc="Get the date as a Modified Julian Day Number." ilk="function" name="mjd" signature="()" />
        <scope doc="Get the month of this date." ilk="function" name="mon" signature="()" />
        <scope doc="Alias for #mon" ilk="function" name="month" signature="()" />
        <scope attributes="private" ilk="function" name="new_offset" signature="(of=0)" />
        <scope doc="Create a copy of this Date object using a new Day of&#xA;Calendar Reform." ilk="function" name="new_start" signature="(sg=self.class::ITALY)" />
        <scope doc="Alias for #succ" ilk="function" name="next" signature="()" />
        <scope doc="Is the current date new-style (Gregorian Calendar)?" ilk="function" name="ns?" signature="()" />
        <scope attributes="private" ilk="function" name="offset" signature="()" />
        <scope attributes="private" doc="Get the date as an Ordinal Date, [year, day_of_year]" ilk="function" name="ordinal" signature="()" />
        <scope doc="Is the current date old-style (Julian Calendar)?" ilk="function" name="os?" signature="()" />
        <scope attributes="private" doc="Get the second of this date." ilk="function" name="sec" signature="()" />
        <scope attributes="private" doc="Get the fraction-of-a-second of this date." ilk="function" name="sec_fraction" signature="()" />
        <scope doc="When is the Day of Calendar Reform for this Date object?" ilk="function" name="start" signature="()" />
        <scope doc="Step the current date forward step days at a time (or&#xA;backward, if step is negative) until we reach limit&#xA;(inclusive), yielding the resultant date at each step." ilk="function" name="step" signature="(limit, step) {|date| ...}" />
        <scope doc="Return a new Date one day after this one." ilk="function" name="succ" signature="()" />
        <scope attributes="private" doc="Get the time of this date as [hours, minutes, seconds,&#xA;fraction_of_a_second]" ilk="function" name="time" signature="()" />
        <scope doc="Return the date as a human-readable string." ilk="function" name="to_s" signature="()" />
        <scope doc="Step forward one day at a time until we reach max&#xA;(inclusive), yielding each date as we go." ilk="function" name="upto" signature="(max) {|date| ...}" />
        <scope doc="Get the week day of this date. Sunday is day-of-week 0;&#xA;Saturday is day-of-week 6." ilk="function" name="wday" signature="()" />
        <scope doc="Get the day-of-the-year of this date." ilk="function" name="yday" signature="()" />
        <scope doc="Get the year of this date." ilk="function" name="year" signature="()" />
        <scope attributes="private" ilk="function" name="zone" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="date/format">
      <import line="4" module="rational" symbol="*" />
      <scope classrefs="Object" doc="format.rb: Written by Tadayoshi Funaba 1999-2005 $Id:&#xA;format.rb,v 2.15 2005-02-06 13:28:48+09 tadf Exp $" ilk="class" line="6" lineend="586" name="Date">
        <scope attributes="__classmethod__" ilk="function" line="53" lineend="238" name="__strptime" signature="self.__strptime(str, fmt, elem)" />
        <scope attributes="__classmethod__" ilk="function" line="242" lineend="245" name="_strptime" signature="self._strptime(str, fmt=&apos;%F&apos;)" />
        <scope attributes="__classmethod__" ilk="function" line="250" lineend="477" name="_parse" signature="self._parse(str, comp=false)" />
        <scope attributes="__classmethod__" ilk="function" line="479" lineend="489" name="zone_to_diff" signature="self.zone_to_diff(str)" />
        <scope ilk="function" line="491" lineend="578" name="strftime" signature="strftime(fmt=&apos;%F&apos;)" />
        <scope doc="alias_method :format, :strftime" ilk="function" line="582" name="asctime" signature="asctime()" />
      </scope>
      <scope classrefs="Date" ilk="class" line="588" lineend="598" name="DateTime">
        <scope attributes="__classmethod__" ilk="function" line="590" lineend="592" name="_strptime" signature="self._strptime(str, fmt=&apos;%FT%T%Z&apos;)" />
        <scope ilk="function" line="594" lineend="596" name="strftime" signature="strftime(fmt=&apos;%FT%T%Z&apos;)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="csv">
      <scope classrefs="Object" doc="CSV -- module for generating/parsing CSV data." ilk="class" line="11" lineend="992" name="CSV">
        <scope classrefs="RuntimeError" ilk="class" line="12" lineend="12" name="IllegalFormatError" />
        <scope classrefs="String" doc="deprecated" ilk="class" line="15" lineend="23" name="Cell">
          <scope attributes="__ctor__" ilk="function" line="16" lineend="18" name="initialize" signature="initialize(data = &quot;&quot;, is_null = false)" />
          <scope ilk="function" line="20" lineend="22" name="data" signature="data" />
        </scope>
        <scope classrefs="Array" doc="deprecated" ilk="class" line="26" lineend="27" name="Row" />
        <scope attributes="__classmethod__" doc="Open a CSV formatted file for reading or writing." ilk="function" line="83" lineend="91" name="open" signature="CSV.open(path, mode, fs = nil, rs = nil, &amp;block)" />
        <scope attributes="__classmethod__" ilk="function" line="93" lineend="95" name="foreach" signature="CSV.foreach(path, rs = nil, &amp;block)" />
        <scope attributes="__classmethod__" ilk="function" line="97" lineend="99" name="read" signature="CSV.read(path, length = nil, offset = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="101" lineend="108" name="readlines" signature="CSV.readlines(path, rs = nil)" />
        <scope attributes="__classmethod__" ilk="function" line="110" lineend="112" name="generate" signature="CSV.generate(path, fs = nil, rs = nil, &amp;block)" />
        <scope attributes="__classmethod__" doc="Parse lines from given string or stream. Return rows as an&#xA;Array of Arrays." ilk="function" line="115" lineend="129" name="parse" signature="CSV.parse(str_or_readable, fs = nil, rs = nil, &amp;block)" />
        <scope attributes="__classmethod__" doc="Parse a line from given string. Bear in mind it parses ONE&#xA;LINE." ilk="function" line="137" lineend="157" name="parse_line" signature="CSV.parse_line(src, fs = nil, rs = nil)" />
        <scope attributes="__classmethod__" doc="Create a line from cells. each cell is stringified by to_s." ilk="function" line="160" lineend="183" name="generate_line" signature="CSV.generate_line(row, fs = nil, rs = nil)" />
        <scope attributes="__classmethod__" doc="Parse a line from string. Consider using CSV.parse_line&#xA;instead." ilk="function" line="214" lineend="241" name="parse_row" signature="CSV.parse_row(src, idx, out_dev, fs = nil, rs = nil)" />
        <scope attributes="__classmethod__" doc="Convert a line from cells data to string." ilk="function" line="271" lineend="301" name="generate_row" signature="CSV.generate_row(src, cells, out_dev, fs = nil, rs = nil)" />
        <scope classrefs="Object" doc="Private class methods." ilk="class" line="304" lineend="510" name="self">
          <scope ilk="function" line="307" lineend="323" name="open_reader" signature="open_reader(path, mode, fs, rs, &amp;block)" />
          <scope ilk="function" line="325" lineend="341" name="open_writer" signature="open_writer(path, mode, fs, rs, &amp;block)" />
          <scope ilk="function" line="343" lineend="482" name="parse_body" signature="parse_body(src, idx, fs, rs)" />
          <scope ilk="function" line="484" lineend="500" name="generate_body" signature="generate_body(cell, out_dev, fs, rs)" />
          <scope ilk="function" line="502" lineend="509" name="generate_separator" signature="generate_separator(type, out_dev, fs, rs)" />
        </scope>
        <scope classrefs="Object" doc="CSV formatted string/stream reader." ilk="class" line="523" lineend="588" name="Reader">
          <scope attributes="__classmethod__" doc="Parse CSV data and get lines. Given block is called for each&#xA;parsed row." ilk="function" line="528" lineend="539" name="parse" signature="Reader.parse(str_or_readable, fs = &apos;,&apos;, rs = nil, &amp;block)" />
          <scope attributes="__classmethod__" doc="Returns reader instance." ilk="function" line="542" lineend="551" name="create" signature="Reader.create(str_or_readable, fs = &apos;,&apos;, rs = nil)" />
          <scope ilk="function" line="553" lineend="563" name="each" signature="each" />
          <scope ilk="function" line="565" lineend="569" name="shift" signature="shift" />
          <scope ilk="function" line="571" lineend="573" name="close" signature="close" />
          <scope attributes="__ctor__" ilk="function" line="577" lineend="579" name="initialize" signature="initialize(dev)" />
          <scope ilk="function" line="581" lineend="583" name="get_row" signature="get_row(row)" />
          <scope ilk="function" line="585" lineend="587" name="terminate" signature="terminate" />
          <import symbol="Enumerable" />
        </scope>
        <scope classrefs="Reader" ilk="class" line="591" lineend="612" name="StringReader">
          <scope attributes="__ctor__" ilk="function" line="592" lineend="600" name="initialize" signature="initialize(string, fs = &apos;,&apos;, rs = nil)" />
          <scope ilk="function" line="604" lineend="611" name="get_row" signature="get_row(row)" />
        </scope>
        <scope classrefs="Reader" ilk="class" line="615" lineend="655" name="IOReader">
          <scope attributes="__ctor__" ilk="function" line="616" lineend="626" name="initialize" signature="initialize(io, fs = &apos;,&apos;, rs = nil)" />
          <scope doc="Tell this reader to close the IO when terminated (Triggered&#xA;by invoking CSV::IOReader#close)." ilk="function" line="630" lineend="632" name="close_on_terminate" signature="close_on_terminate" />
          <scope ilk="function" line="636" lineend="644" name="get_row" signature="get_row(row)" />
          <scope ilk="function" line="646" lineend="654" name="terminate" signature="terminate" />
        </scope>
        <scope classrefs="Object" doc="CSV formatted string/stream writer." ilk="class" line="671" lineend="710" name="Writer">
          <scope attributes="__classmethod__" doc="Given block is called with the writer instance." ilk="function" line="674" lineend="683" name="generate" signature="Writer.generate(str_or_writable, fs = &apos;,&apos;, rs = nil, &amp;block)" />
          <scope attributes="__classmethod__" doc="str_or_writable must handle &apos;&lt;&lt;(string)&apos;." ilk="function" line="686" lineend="688" name="create" signature="Writer.create(str_or_writable, fs = &apos;,&apos;, rs = nil)" />
          <scope doc="dump CSV stream to the device. argument must be an Array of&#xA;String." ilk="function" line="691" lineend="694" name="&lt;&lt;" signature="&lt;&lt;(row" />
          <scope ilk="function" line="697" lineend="699" name="close" signature="close" />
          <scope attributes="__ctor__" ilk="function" line="703" lineend="705" name="initialize" signature="initialize(dev)" />
          <scope ilk="function" line="707" lineend="709" name="terminate" signature="terminate" />
        </scope>
        <scope classrefs="Writer" ilk="class" line="713" lineend="734" name="BasicWriter">
          <scope attributes="__ctor__" ilk="function" line="714" lineend="719" name="initialize" signature="initialize(str_or_writable, fs = &apos;,&apos;, rs = nil)" />
          <scope doc="Tell this writer to close the IO when terminated (Triggered&#xA;by invoking CSV::BasicWriter#close)." ilk="function" line="723" lineend="725" name="close_on_terminate" signature="close_on_terminate" />
          <scope ilk="function" line="729" lineend="733" name="terminate" signature="terminate" />
        </scope>
        <scope classrefs="Object" doc="Buffered stream." ilk="class" line="795" lineend="960" name="StreamBuf">
          <scope doc="get a char or a partial string from the stream." ilk="function" line="803" lineend="847" name="[]" signature="[](idx" />
          <scope doc="drop a string from the stream." ilk="function" line="854" lineend="880" name="drop" signature="drop(n)" />
          <scope ilk="function" line="882" lineend="884" name="is_eos?" signature="is_eos?" />
          <scope attributes="__ctor__" doc="WARN: Do not instantiate this class directly." ilk="function" line="888" lineend="895" name="initialize" signature="initialize" />
          <scope ilk="function" line="899" lineend="901" name="terminate" signature="terminate" />
          <scope doc="protected method &apos;read&apos; must be defined in derived classes." ilk="function" line="907" lineend="909" name="read" signature="read(size)" />
          <scope ilk="function" line="913" lineend="915" name="buf_size" signature="buf_size(idx)" />
          <scope ilk="function" line="917" lineend="939" name="add_buf" signature="add_buf" />
          <scope ilk="function" line="941" lineend="953" name="rel_buf" signature="rel_buf" />
          <scope ilk="function" line="955" lineend="957" name="idx_is_eos?" signature="idx_is_eos?(idx)" />
        </scope>
        <scope classrefs="StreamBuf" doc="Buffered IO." ilk="class" line="972" lineend="991" name="IOBuf">
          <scope attributes="__ctor__" ilk="function" line="973" lineend="976" name="initialize" signature="initialize(s)" />
          <scope ilk="function" line="978" lineend="980" name="close" signature="close" />
          <scope ilk="function" line="984" lineend="986" name="read" signature="read(size)" />
          <scope ilk="function" line="988" lineend="990" name="terminate" signature="terminate" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="complex">
      <scope classrefs="Numeric" doc="The complex number class. See complex.rb for an overview." ilk="class" name="Complex">
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" signature="(a, b)" />
        <scope attributes="__classmethod__" doc="Creates a Complex number a+b`i&apos;." ilk="function" name="new!" signature="(a, b=0)" />
        <scope attributes="__classmethod__" doc="Creates a Complex number in terms of r (radius) and theta&#xA;(angle)." ilk="function" name="polar" signature="(r, theta)" />
        <scope doc="Remainder after division by a real or complex number." ilk="function" name="%" signature="(other)" />
        <scope doc="Multiplication with real or complex number." ilk="function" name="*" signature="(other)" />
        <scope doc="Raise this complex number to the given (real or complex)&#xA;power." ilk="function" name="**" signature="(other)" />
        <scope doc="Addition with real or complex number." ilk="function" name="+" signature="(other)" />
        <scope doc="Division by real or complex number." ilk="function" name="/" signature="(other)" />
        <scope doc="Compares the absolute values of the two numbers." ilk="function" name="&lt;=&gt;" signature="(other)" />
        <scope doc="Test for numerical equality (a == a + 0`i&apos;)." ilk="function" name="==" signature="(other)" />
        <scope doc="Absolute value (aka modulus): distance from the zero point&#xA;on the complex plane." ilk="function" name="abs" signature="()" />
        <scope doc="Square of the absolute value." ilk="function" name="abs2" signature="()" />
        <scope doc="Alias for #arg" ilk="function" name="angle" signature="()" />
        <scope doc="Argument (angle from (1,0) on the complex plane)." ilk="function" name="arg" signature="()" />
        <scope doc="Attempts to coerce other to a Complex number." ilk="function" name="coerce" signature="(other)" />
        <scope doc="Alias for #conjugate" ilk="function" name="conj" signature="()" />
        <scope doc="Complex conjugate (z + z.conjugate = 2 * z.real)." ilk="function" name="conjugate" signature="()" />
        <scope doc="FIXME" ilk="function" name="denominator" signature="()" />
        <scope doc="Returns a hash code for the complex number." ilk="function" name="hash" signature="()" />
        <scope doc="The imaginary part of a complex number." ilk="function" name="image" />
        <scope doc="Returns &quot;Complex(`real&apos;, `image&apos;)&quot;." ilk="function" name="inspect" signature="()" />
        <scope doc="FIXME" ilk="function" name="numerator" signature="()" />
        <scope doc="Returns the absolute value `and&apos; the argument." ilk="function" name="polar" signature="()" />
        <scope doc="The real part of a complex number." ilk="function" name="real" />
        <scope doc="Standard string representation of the complex number." ilk="function" name="to_s" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="cgi">
      <scope classrefs="Object" doc="CGI class. See documentation for the file cgi.rb for an&#xA;overview of the CGI protocol." ilk="class" name="CGI">
        <scope doc="Mixin module for generating HTML version 4 with framesets." ilk="namespace" name="Html4Fr" />
        <scope classrefs="Object" doc="Class representing an HTTP session. See documentation for&#xA;the file cgi/session.rb for an introduction to HTTP&#xA;sessions." ilk="class" name="Session">
          <scope classrefs="Object" doc="In-memory session storage class." ilk="class" name="MemoryStore">
            <scope attributes="__classmethod__ __ctor__" doc="Create a new MemoryStore instance." ilk="function" name="new" signature="(session, option=nil)" />
            <scope doc="Close session storage." ilk="function" name="close" signature="()" />
            <scope doc="Delete the session state." ilk="function" name="delete" signature="()" />
            <scope doc="Restore session state." ilk="function" name="restore" signature="()" />
            <scope doc="Update session state." ilk="function" name="update" signature="()" />
          </scope>
          <scope classrefs="Object" doc="File-based session storage class." ilk="class" name="FileStore">
            <scope attributes="__classmethod__ __ctor__" doc="Create a new FileStore instance." ilk="function" name="new" signature="(session, option={})" />
            <scope doc="Update and close the session&apos;s FileStore file." ilk="function" name="close" signature="()" />
            <scope doc="Close and delete the session&apos;s FileStore file." ilk="function" name="delete" signature="()" />
            <scope doc="Restore session state from the session&apos;s FileStore file." ilk="function" name="restore" signature="()" />
            <scope doc="Save session state to the session&apos;s FileStore file." ilk="function" name="update" signature="()" />
          </scope>
          <scope classrefs="RuntimeError" ilk="class" name="NoSession" />
          <scope attributes="__classmethod__ __ctor__" doc="Create a new CGI::Session object for request." ilk="function" name="new" signature="(request, option={})" />
          <scope doc="Retrieve the session data for key key." ilk="function" name="[]" signature="(key)" />
          <scope doc="Set the session date for key key." ilk="function" name="[]=" signature="(key, val)" />
          <scope doc="Store session data on the server and close the session&#xA;storage. For some session storage types, this is a no-op." ilk="function" name="close" signature="()" />
          <scope attributes="private" doc="Create a new session id." ilk="function" name="create_new_id" signature="()" />
          <scope doc="Delete the session from storage. Also closes the storage." ilk="function" name="delete" signature="()" />
          <scope doc="The id of this session." ilk="function" name="new_session" />
          <scope doc="The id of this session." ilk="function" name="session_id" />
          <scope doc="Store session data on the server. For some session storage&#xA;types, this is a no-op." ilk="function" name="update" signature="()" />
        </scope>
        <scope doc="Mixin module providing HTML generation methods." ilk="namespace" name="HtmlExtension">
          <scope doc="Generate an Anchor element as a string." ilk="function" name="a" signature="(href = &quot;&quot;) {|| ...}" />
          <scope doc="Generate a Document Base URI element as a String." ilk="function" name="base" signature="(href = &quot;&quot;) {|| ...}" />
          <scope doc="Generate a BlockQuote element as a string." ilk="function" name="blockquote" signature="(cite = nil) {|| ...}" />
          <scope doc="Generate a Table Caption element as a string." ilk="function" name="caption" signature="(align = nil) {|| ...}" />
          <scope doc="Generate a Checkbox Input element as a string." ilk="function" name="checkbox" signature="(name = &quot;&quot;, value = nil, checked = nil)" />
          <scope doc="Generate a sequence of checkbox elements, as a String." ilk="function" name="checkbox_group" signature="(name = &quot;&quot;, *values)" />
          <scope doc="Generate an File Upload Input element as a string." ilk="function" name="file_field" signature="(name = &quot;&quot;, size = 20, maxlength = nil)" />
          <scope doc="Generate a Form element as a string." ilk="function" name="form" signature="(method = &quot;post&quot;, action = script_name, enctype = &quot;application/x-www-form-urlencoded&quot;) {|| ...}" />
          <scope doc="Generate a Hidden Input element as a string." ilk="function" name="hidden" signature="(name = &quot;&quot;, value = nil)" />
          <scope doc="Generate a top-level HTML element as a string." ilk="function" name="html" signature="(attributes = {}) {|| ...}" />
          <scope doc="Generate an Image Button Input element as a string." ilk="function" name="image_button" signature="(src = &quot;&quot;, name = nil, alt = nil)" />
          <scope doc="Generate an Image element as a string." ilk="function" name="img" signature="(src = &quot;&quot;, alt = &quot;&quot;, width = nil, height = nil)" />
          <scope doc="Generate a Form element with multipart encoding as a String." ilk="function" name="multipart_form" signature="(action = nil, enctype = &quot;multipart/form-data&quot;) {|| ...}" />
          <scope doc="Generate a Password Input element as a string." ilk="function" name="password_field" signature="(name = &quot;&quot;, value = nil, size = 40, maxlength = nil)" />
          <scope doc="Generate a Select element as a string." ilk="function" name="popup_menu" signature="(name = &quot;&quot;, *values)" />
          <scope doc="Generates a radio-button Input element." ilk="function" name="radio_button" signature="(name = &quot;&quot;, value = nil, checked = nil)" />
          <scope doc="Generate a sequence of radio button Input elements, as a&#xA;String." ilk="function" name="radio_group" signature="(name = &quot;&quot;, *values)" />
          <scope doc="Generate a reset button Input element, as a String." ilk="function" name="reset" signature="(value = nil, name = nil)" />
          <scope doc="Alias for #popup_menu" ilk="function" name="scrolling_list" signature="(name = &quot;&quot;, *values)" />
          <scope doc="Generate a submit button Input element, as a String." ilk="function" name="submit" signature="(value = nil, name = nil)" />
          <scope doc="Generate a text field Input element, as a String." ilk="function" name="text_field" signature="(name = &quot;&quot;, value = nil, size = 40, maxlength = nil)" />
          <scope doc="Generate a TextArea element, as a String." ilk="function" name="textarea" signature="(name = &quot;&quot;, cols = 70, rows = 10) {|| ...}" />
        </scope>
        <scope doc="Base module for HTML-generation mixins." ilk="namespace" name="TagMaker" />
        <scope doc="Mixin module for HTML version 4 transitional generation&#xA;methods." ilk="namespace" name="Html4Tr" />
        <scope classrefs="DelegateClass(Array)" doc="Class representing an HTTP cookie." ilk="class" name="Cookie">
          <scope attributes="__classmethod__ __ctor__" doc="Create a new CGI::Cookie object." ilk="function" name="new" signature="(name = &quot;&quot;, *value)" />
          <scope attributes="__classmethod__" doc="Parse a raw cookie string into a hash of cookie-name=&gt;Cookie&#xA;pairs." ilk="function" name="parse" signature="(raw_cookie)" />
          <scope ilk="function" name="domain" />
          <scope ilk="function" name="domain=" />
          <scope ilk="function" name="expires" />
          <scope ilk="function" name="expires=" />
          <scope ilk="function" name="name" />
          <scope ilk="function" name="name=" />
          <scope ilk="function" name="path" />
          <scope ilk="function" name="path=" />
          <scope ilk="function" name="secure" />
          <scope doc="Set whether the Cookie is a secure cookie or not." ilk="function" name="secure=" signature="(val)" />
          <scope doc="Convert the Cookie to its string representation." ilk="function" name="to_s" signature="()" />
          <scope ilk="function" name="value" />
          <scope ilk="function" name="value=" />
        </scope>
        <scope doc="Mixin module for HTML version 3 generation methods." ilk="namespace" name="Html3" />
        <scope doc="Mixin module." ilk="namespace" name="QueryExtension">
          <scope ilk="namespace" name="Value" />
          <scope doc="Get the value for the parameter with a given key." ilk="function" name="[]" signature="(key)" />
          <scope doc="Get the cookies as a hash of cookie-name=&gt;Cookie pairs." ilk="function" name="cookies" />
          <scope doc="Get the cookies as a hash of cookie-name=&gt;Cookie pairs." ilk="function" name="cookies=" />
          <scope doc="Returns true if a given parameter key exists in the query." ilk="function" name="has_key?" signature="(*args)" />
          <scope doc="Alias for #has_key?" ilk="function" name="include?" signature="(*args)" />
          <scope attributes="private" doc="Initialize the data from the query." ilk="function" name="initialize_query" signature="()" />
          <scope doc="Alias for #has_key?" ilk="function" name="key?" signature="(*args)" />
          <scope doc="Return all parameter keys as an array." ilk="function" name="keys" signature="(*args)" />
          <scope ilk="function" name="multipart?" signature="()" />
          <scope doc="Get the parameters as a hash of name=&gt;values pairs, where&#xA;values is an Array." ilk="function" name="params" />
          <scope doc="Set all the parameters." ilk="function" name="params=" signature="(hash)" />
          <scope doc="Get the raw cookies as a string." ilk="function" name="raw_cookie" signature="()" />
          <scope doc="Get the raw RFC2965 cookies as a string." ilk="function" name="raw_cookie2" signature="()" />
          <scope attributes="private" doc="offline mode. read name=value pairs on standard input." ilk="function" name="read_from_cmdline" signature="()" />
          <scope attributes="private" ilk="function" name="read_multipart" signature="(boundary, content_length)" />
        </scope>
        <scope doc="Mixin module for HTML version 4 generation methods." ilk="namespace" name="Html4" />
        <scope attributes="__classmethod__" doc="URL-encode a string." ilk="function" name="escape" signature="(string)" />
        <scope attributes="__classmethod__" doc="Escape only the tags of certain HTML elements in string." ilk="function" name="escapeElement" signature="(string, *elements)" />
        <scope attributes="__classmethod__" doc="Escape special characters in HTML, namely &amp;\&quot;&lt;&gt;" ilk="function" name="escapeHTML" signature="(string)" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new CGI instance." ilk="function" name="new" signature="(type = &quot;query&quot;)" />
        <scope attributes="__classmethod__" doc="Parse an HTTP query string into a hash of key=&gt;value pairs." ilk="function" name="parse" signature="(query)" />
        <scope attributes="__classmethod__" doc="Prettify (indent) an HTML string." ilk="function" name="pretty" signature="(string, shift = &quot; &quot;)" />
        <scope attributes="__classmethod__" doc="Format a Time object as a String using the format specified&#xA;by RFC 1123." ilk="function" name="rfc1123_date" signature="(time)" />
        <scope attributes="__classmethod__" doc="URL-decode a string." ilk="function" name="unescape" signature="(string)" />
        <scope attributes="__classmethod__" doc="Undo escaping such as that done by CGI::escapeElement()" ilk="function" name="unescapeElement" signature="(string, *elements)" />
        <scope attributes="__classmethod__" doc="Unescape a string that has been HTML-escaped" ilk="function" name="unescapeHTML" signature="(string)" />
        <scope attributes="private" ilk="function" name="env_table" signature="()" />
        <scope doc="Create an HTTP header block as a string." ilk="function" name="header" signature="(options = &quot;text/html&quot;)" />
        <scope doc="Print an HTTP header and body to $DEFAULT_OUTPUT ($&gt;)" ilk="function" name="out" signature="(options = &quot;text/html&quot;) {|| ...}" />
        <scope doc="Print an argument or list of arguments to the default output&#xA;stream" ilk="function" name="print" signature="(*options)" />
        <scope attributes="private" ilk="function" name="stdinput" signature="()" />
        <scope attributes="private" ilk="function" name="stdoutput" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="cgi-lib">
      <import line="114" module="delegate" symbol="*" />
      <scope classrefs="SimpleDelegator" ilk="class" line="116" lineend="272" name="CGI">
        <scope attributes="__classmethod__" doc="make rfc1123 date string" ilk="function" line="126" lineend="131" name="rfc1123_date" signature="CGI::rfc1123_date(time)" />
        <scope attributes="__classmethod__" doc="escape url encode" ilk="function" line="134" lineend="136" name="escape" signature="CGI::escape(str)" />
        <scope attributes="__classmethod__" doc="unescape url encoded" ilk="function" line="139" lineend="141" name="unescape" signature="CGI::unescape(str)" />
        <scope attributes="__classmethod__" doc="escape HTML" ilk="function" line="144" lineend="146" name="escapeHTML" signature="CGI::escapeHTML(str)" />
        <scope doc="offline mode. read name=value pairs on standard input." ilk="function" line="149" lineend="160" name="read_from_cmdline" signature="read_from_cmdline">
          <import line="150" module="shellwords.rb" symbol="*" />
        </scope>
        <scope attributes="__ctor__" ilk="function" line="162" lineend="197" name="initialize" signature="initialize(input = $stdin)" />
        <scope attributes="__classmethod__" doc="make HTML tag string" ilk="function" line="203" lineend="208" name="tag" signature="CGI::tag(element, attributes = {})" />
        <scope attributes="__classmethod__" doc="make raw cookie string" ilk="function" line="211" lineend="217" name="cookie" signature="CGI::cookie(options)" />
        <scope attributes="__classmethod__" doc="make HTTP header string" ilk="function" line="220" lineend="240" name="header" signature="CGI::header(*options)" />
        <scope attributes="__classmethod__" doc="print HTTP header and string to $&gt;" ilk="function" line="243" lineend="245" name="print" signature="CGI::print(*options)" />
        <scope attributes="__classmethod__" doc="print message to $&gt;" ilk="function" line="248" lineend="261" name="message" signature="CGI::message(message, title = &quot;&quot;, header = [&quot;Content-Type: text/html&quot;])" />
        <scope attributes="__classmethod__" doc="print error message to $&gt; and exit" ilk="function" line="264" lineend="271" name="error" signature="CGI::error" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="cgi/session">
      <import line="26" module="cgi" symbol="*" />
      <import line="27" module="tmpdir" symbol="*" />
      <scope classrefs="Object" doc="cgi/session.rb - session support for cgi scripts" ilk="class" line="29" lineend="488" name="CGI">
        <scope classrefs="Object" doc="Class representing an HTTP session." ilk="class" line="156" lineend="487" name="Session">
          <scope classrefs="RuntimeError" ilk="class" line="158" lineend="159" name="NoSession" />
          <scope ilk="function" line="162" lineend="162" name="session_id" />
          <scope ilk="function" line="162" lineend="162" name="new_session" />
          <scope attributes="__classmethod__" doc="The id of this session." ilk="function" line="164" lineend="168" name="callback" signature="Session::callback(dbman)" />
          <scope doc="Create a new session id." ilk="function" line="176" lineend="187" name="create_new_id" signature="create_new_id">
            <import line="177" module="digest/md5" symbol="*" />
          </scope>
          <scope attributes="__ctor__" doc="Create a new CGI::Session object for +request+." ilk="function" line="246" lineend="300" name="initialize" signature="initialize(request, option={})" />
          <scope doc="Retrieve the session data for key +key+." ilk="function" line="303" lineend="308" name="[]" signature="[](key" />
          <scope doc="Set the session date for key +key+." ilk="function" line="311" lineend="319" name="[]=" signature="[]=(key" />
          <scope doc="Store session data on the server." ilk="function" line="323" lineend="325" name="update" signature="update" />
          <scope doc="Store session data on the server and close the session&#xA;storage." ilk="function" line="329" lineend="332" name="close" signature="close" />
          <scope doc="Delete the session from storage. Also closes the storage." ilk="function" line="338" lineend="341" name="delete" signature="delete" />
          <scope classrefs="Object" doc="File-based session storage class." ilk="class" line="349" lineend="436" name="FileStore">
            <scope attributes="__ctor__" doc="Create a new FileStore instance." ilk="function" line="375" lineend="389" name="initialize" signature="initialize(session, option={})">
              <import line="380" module="digest/md5" symbol="*" />
            </scope>
            <scope doc="Restore session state from the session&apos;s FileStore file." ilk="function" line="394" lineend="410" name="restore" signature="restore" />
            <scope doc="Save session state to the session&apos;s FileStore file." ilk="function" line="413" lineend="424" name="update" signature="update" />
            <scope doc="Update and close the session&apos;s FileStore file." ilk="function" line="427" lineend="429" name="close" signature="close" />
            <scope doc="Close and delete the session&apos;s FileStore file." ilk="function" line="432" lineend="435" name="delete" signature="delete" />
          </scope>
          <scope classrefs="Object" doc="In-memory session storage class." ilk="class" line="443" lineend="486" name="MemoryStore">
            <scope attributes="__ctor__" doc=":nodoc: Create a new MemoryStore instance." ilk="function" line="451" lineend="459" name="initialize" signature="initialize(session, option=nil)" />
            <scope doc="Restore session state." ilk="function" line="464" lineend="466" name="restore" signature="restore" />
            <scope doc="Update session state." ilk="function" line="471" lineend="473" name="update" signature="update" />
            <scope doc="Close session storage." ilk="function" line="478" lineend="480" name="close" signature="close" />
            <scope doc="Delete the session state." ilk="function" line="483" lineend="485" name="delete" signature="delete" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="cgi/session/pstore">
      <import line="12" module="cgi/session" symbol="*" />
      <import line="13" module="pstore" symbol="*" />
      <scope classrefs="Object" doc="cgi/session/pstore.rb - persistent storage of marshalled&#xA;session data" ilk="class" line="15" lineend="108" name="CGI">
        <scope classrefs="Object" ilk="class" line="16" lineend="107" name="Session">
          <scope ilk="function" line="17" lineend="26" name="[]=" signature="[]=(key" />
          <scope classrefs="Object" doc="PStore-based session storage class." ilk="class" line="33" lineend="106" name="PStore">
            <scope attributes="__ctor__" doc="Create a new CGI::Session::PStore instance" ilk="function" line="56" lineend="74" name="initialize" signature="initialize">
              <import line="60" module="digest/md5" symbol="*" />
            </scope>
            <scope doc="Restore session state from the session&apos;s PStore file." ilk="function" line="79" lineend="86" name="restore" signature="restore" />
            <scope doc="Save session state to the session&apos;s PStore file." ilk="function" line="89" lineend="93" name="update" signature="update" />
            <scope doc="Update and close the session&apos;s PStore file." ilk="function" line="96" lineend="98" name="close" signature="close" />
            <scope doc="Close and delete the session&apos;s PStore file." ilk="function" line="101" lineend="104" name="delete" signature="delete" />
          </scope>
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="bigdecimal/util">
      <scope classrefs="Numeric" doc="BigDecimal utility library." ilk="class" line="20" lineend="24" name="Float">
        <scope ilk="function" line="21" lineend="23" name="to_d" signature="to_d" />
      </scope>
      <scope classrefs="Object" ilk="class" line="26" lineend="30" name="String">
        <scope ilk="function" line="27" lineend="29" name="to_d" signature="to_d" />
      </scope>
      <scope classrefs="Numeric" ilk="class" line="32" lineend="57" name="BigDecimal">
        <scope doc="to &quot;nnnnnn.mmm&quot; form digit string Use BigDecimal#to_s(&quot;F&quot;)&#xA;instead." ilk="function" line="35" lineend="43" name="to_digits" signature="to_digits" />
        <scope doc="Convert BigDecimal to Rational" ilk="function" line="46" lineend="56" name="to_r" signature="to_r" />
      </scope>
      <scope classrefs="Numeric" ilk="class" line="59" lineend="68" name="Rational">
        <scope doc="Convert Rational to BigDecimal" ilk="function" line="61" lineend="67" name="to_d" signature="to_d(nFig=0)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="bigdecimal/newton">
      <import line="23" module="bigdecimal/ludcmp" symbol="*" />
      <import line="24" module="bigdecimal/jacobian" symbol="*" />
      <scope doc="newton.rb" ilk="namespace" line="26" lineend="75" name="Newton">
        <scope ilk="function" line="30" lineend="37" name="norm" signature="norm(fv,zero=0.0)" />
        <scope ilk="function" line="39" lineend="74" name="nlsolve" signature="nlsolve(f,x)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="bigdecimal/math">
      <scope doc="Contents: sqrt(x, prec) sin (x, prec) cos (x, prec) atan(x,&#xA;prec)  Note: |x|&lt;1, x=0.9999 may not converge." ilk="namespace" line="24" lineend="196" name="BigMath">
        <scope ilk="function" line="25" lineend="27" name="sqrt" signature="sqrt(x,prec)" />
        <scope ilk="function" line="29" lineend="52" name="sin" signature="sin(x, prec)" />
        <scope ilk="function" line="54" lineend="77" name="cos" signature="cos(x, prec)" />
        <scope ilk="function" line="79" lineend="97" name="atan" signature="atan(x, prec)" />
        <scope ilk="function" line="99" lineend="118" name="exp" signature="exp(x, prec)" />
        <scope ilk="function" line="120" lineend="139" name="log" signature="log(x, prec)" />
        <scope ilk="function" line="141" lineend="177" name="PI" signature="PI(prec)" />
        <scope ilk="function" line="179" lineend="195" name="E" signature="E(prec)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="bigdecimal/ludcmp">
      <scope doc="ludcmp.rb" ilk="namespace" line="4" lineend="77" name="LUSolve">
        <scope ilk="function" line="5" lineend="53" name="ludecomp" signature="ludecomp(a,n,zero=0,one=1)" />
        <scope ilk="function" line="55" lineend="76" name="lusolve" signature="lusolve(a,b,ps,zero=0.0)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="bigdecimal/jacobian">
      <scope doc="jacobian.rb" ilk="namespace" line="6" lineend="63" name="Jacobian">
        <scope ilk="function" line="7" lineend="19" name="isEqual" signature="isEqual(a,b,zero=0.0,e=1.0e-8)" />
        <scope ilk="function" line="21" lineend="50" name="dfdxi" signature="dfdxi(f,fx,x,i)" />
        <scope ilk="function" line="52" lineend="62" name="jacobian" signature="jacobian(f,fx,x)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="benchmark">
      <scope doc="The Benchmark module provides methods to measure and report&#xA;the time used to execute Ruby code." ilk="namespace" name="Benchmark">
        <scope classrefs="Object" doc="A data object, representing the times associated with a&#xA;benchmark measurement." ilk="class" name="Tms">
          <scope attributes="__classmethod__ __ctor__" doc="Returns an initialized Tms object which has `u&apos; as the user&#xA;CPU time, `s&apos; as the system CPU time, `cu&apos; as the children&apos;s&#xA;user CPU time, `cs&apos; as the children&apos;s system CPU time,&#xA;`real&apos; as the elapsed real time and `l&apos; as the label." ilk="function" name="new" signature="(u = 0.0, s = 0.0, cu = 0.0, cs = 0.0, real = 0.0, l = nil)" />
          <scope doc="Returns a new Tms object obtained by memberwise&#xA;multiplication of the individual times for this Tms object&#xA;by `x&apos;." ilk="function" name="*" signature="(x)" />
          <scope doc="Returns a new Tms object obtained by memberwise summation of&#xA;the individual times for this Tms object with those of the&#xA;other Tms object. This method and #/() are useful for taking&#xA;statistics." ilk="function" name="+" signature="(other)" />
          <scope doc="Returns a new Tms object obtained by memberwise division of&#xA;the individual times for this Tms object by `x&apos;. This method&#xA;and #+() are useful for taking statistics." ilk="function" name="/" signature="(x)" />
          <scope doc="Returns a new Tms object whose times are the sum of the&#xA;times for this Tms object, plus the time required to execute&#xA;the code block (`blk&apos;)." ilk="function" name="add" signature="() {|| ...}" />
          <scope doc="An in-place version of #add." ilk="function" name="add!" signature="()" />
          <scope doc="System CPU time of children" ilk="function" name="cstime" />
          <scope doc="User CPU time of children" ilk="function" name="cutime" />
          <scope doc="Returns the contents of this Tms object as a formatted&#xA;string, according to a format string like that passed to&#xA;Kernel.format." ilk="function" name="format" signature="(arg0 = nil, *args)" />
          <scope doc="Label" ilk="function" name="label" />
          <scope ilk="function" name="memberwise" signature="(op, x)" />
          <scope doc="Elapsed real time" ilk="function" name="real" />
          <scope doc="System CPU time" ilk="function" name="stime" />
          <scope doc="Returns a new 6-element array, consisting of the label, user&#xA;CPU time, system CPU time, children&apos;s user CPU time,&#xA;children&apos;s system CPU time and elapsed real time." ilk="function" name="to_a" signature="()" />
          <scope doc="Same as #format." ilk="function" name="to_s" signature="()" />
          <scope doc="Total time, that is `utime&apos; + `stime&apos; + `cutime&apos; + `cstime&apos;" ilk="function" name="total" />
          <scope doc="User CPU time" ilk="function" name="utime" />
        </scope>
        <scope classrefs="Object" doc="This class is used by the Benchmark.benchmark and&#xA;Benchmark.bm methods. It is of little direct interest to the&#xA;user." ilk="class" name="Report" />
        <scope classrefs="Object" doc="A Job is a sequence of labelled blocks to be processed by&#xA;the Benchmark.bmbm method. It is of little direct interest&#xA;to the user." ilk="class" name="Job" />
        <scope doc="Invokes the block with a Benchmark::Report object, which may&#xA;be used to collect and report on the results of individual&#xA;benchmark tests. Reserves `label_width&apos; leading spaces for&#xA;labels on each line." ilk="function" name="benchmark" signature="(caption = &quot;&quot;, label_width = nil, fmtstr = nil, *labels) {|report| ...}" />
        <scope doc="A simple interface to the #benchmark method, #bm is&#xA;generates sequential reports with labels. The parameters&#xA;have the same meaning as for #benchmark." ilk="function" name="bm" signature="(label_width = 0, *labels) {|report| ...}" />
        <scope doc="Sometimes benchmark results are skewed because code executed&#xA;earlier encounters different garbage collection overheads&#xA;than that run later. #bmbm attempts to minimize this effect&#xA;by running the tests twice, the first time as a rehearsal in&#xA;order to get the runtime environment stable, the second time&#xA;for real." ilk="function" name="bmbm" signature="(width = 0) {|job| ...}" />
        <scope doc="Returns the time used to execute the given block as a&#xA;Benchmark::Tms object." ilk="function" name="measure" signature="(label = &quot;&quot;) {|| ...}" />
        <scope doc="Returns the elapsed real time used to execute the given&#xA;block." ilk="function" name="realtime" signature="() {|| ...}" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="base64">
      <scope doc="The Base64 module provides for the encoding (#encode64) and&#xA;decoding (#decode64) of binary data using a Base64&#xA;representation." ilk="namespace" name="Base64">
        <scope ilk="namespace" name="Deprecated" />
        <scope doc="`Prints&apos; the Base64 encoded version of bin (a String) in&#xA;lines of len (default 60) characters." ilk="function" name="b64encode" signature="(bin, len = 60)" />
        <scope doc="Returns the Base64-decoded version of str." ilk="function" name="decode64" signature="(str)" />
        <scope doc="Decodes text formatted using a subset of RFC2047 (the one&#xA;used for mime-encoding mail headers)." ilk="function" name="decode_b" signature="(str)" />
        <scope doc="Returns the Base64-encoded version of str." ilk="function" name="encode64" signature="(bin)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="abbrev">
      <scope doc="Calculate the set of unique abbreviations for a given set of&#xA;strings." ilk="namespace" name="Abbrev">
        <scope doc="Given a set of strings, calculate the set of unambiguous&#xA;abbreviations for those strings, and return a hash where the&#xA;keys are all the possible abbreviations and the values are&#xA;the full strings. Thus, given input of &quot;car&quot; and &quot;cone&quot;, the&#xA;keys pointing to &quot;car&quot; would be &quot;ca&quot; and &quot;car&quot;, while those&#xA;pointing to &quot;cone&quot; would be &quot;co&quot;, &quot;con&quot;, and &quot;cone&quot;." ilk="function" name="abbrev" signature="(words, pattern = nil)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole_event">
      <scope classrefs="Object" doc="WIN32OLE_EVENT objects controls OLE event." ilk="class" name="WIN32OLE_EVENT">
        <scope attributes="__classmethod__" doc="Translates and dispatches Windows message." ilk="function" name="message_loop" signature="WIN32OLE_EVENT.message_loop" />
        <scope attributes="__classmethod__ __ctor__" doc="Returns OLE event object. The first argument specifies&#xA;WIN32OLE object." ilk="function" name="new" signature="WIN32OLE_EVENT.new(ole, event) #=&gt; WIN32OLE_EVENT object." />
        <scope doc="Defines the callback event. If argument is omitted, this&#xA;method defines the callback of all events." ilk="function" name="on_event" signature="WIN32OLE_EVENT#on_event([event]){...}" />
        <scope doc="Defines the callback of event. If you want modify argument&#xA;in callback, you should use this method instead of&#xA;WIN32OLE_EVENT#on_event." ilk="function" name="on_event_with_outargs" signature="WIN32OLE_EVENT#on_event_with_outargs([event]){...}" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="sizedqueue">
      <scope classrefs="Queue" doc="This class represents queues of specified size capacity. The&#xA;push operation may be blocked if the capacity is full." ilk="class" name="SizedQueue">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a fixed-length queue with a maximum size of max." ilk="function" name="new" signature="(max)" />
        <scope doc="Alias for #push" ilk="function" name="&lt;&lt;" signature="(obj)" />
        <scope doc="Alias for #pop" ilk="function" name="deq" signature="(*args)" />
        <scope doc="Alias for #push" ilk="function" name="enq" signature="(obj)" />
        <scope doc="Returns the maximum size of the queue." ilk="function" name="max" signature="()" />
        <scope doc="Sets the maximum size of the queue." ilk="function" name="max=" signature="(max)" />
        <scope doc="Returns the number of threads waiting on the queue." ilk="function" name="num_waiting" signature="()" />
        <scope doc="Retrieves data from the queue and runs a waiting thread, if&#xA;any." ilk="function" name="pop" signature="(*args)" />
        <scope doc="Pushes obj to the queue. If there is no space left in the&#xA;queue, waits until space becomes available." ilk="function" name="push" signature="(obj)" />
        <scope doc="Alias for #pop" ilk="function" name="shift" signature="(*args)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="threadswait">
      <scope classrefs="Object" doc="This class watches for termination of multiple threads.&#xA;Basic functionality (wait until specified threads have&#xA;terminated) can be accessed through the class method&#xA;ThreadsWait::all_waits." ilk="class" name="ThreadsWait">
        <scope attributes="__classmethod__" doc="Waits until all specified threads have terminated. If a&#xA;block is provided, it is executed for each thread&#xA;termination." ilk="function" name="all_waits" signature="(*threads) {|thread| ...}" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a ThreadsWait object, specifying the threads to wait&#xA;on. Non-blocking." ilk="function" name="new" signature="(*threads)" />
        <scope doc="Waits until all of the specified threads are terminated. If&#xA;a block is supplied for the method, it is executed for each&#xA;thread termination." ilk="function" name="all_waits" signature="() {|th if block_given?| ...}" />
        <scope doc="Returns true if there are no threads to be synchronized." ilk="function" name="empty?" signature="()" />
        <scope doc="Returns true if any thread has terminated." ilk="function" name="finished?" signature="()" />
        <scope doc="Waits for specified threads to terminate." ilk="function" name="join" signature="(*threads)" />
        <scope doc="Specifies the threads that this object will wait for, but&#xA;does not actually wait." ilk="function" name="join_nowait" signature="(*threads)" />
        <scope doc="Waits until any of the specified threads has terminated, and&#xA;returns the one that does." ilk="function" name="next_wait" signature="(nonblock = nil)" />
        <scope doc="Returns the array of threads in the wait queue." ilk="function" name="threads" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="sortedset">
      <scope classrefs="Set" doc="SortedSet implements a set which elements are sorted in&#xA;order. See Set." ilk="class" name="SortedSet" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="observable">
      <scope classrefs="Object" doc="Implements the Observable design pattern as a mixin so that&#xA;other objects can be notified of changes in state. See&#xA;observer.rb for details and an example." ilk="class" name="Observable">
        <scope doc="Add observer as an observer on this object. observer will&#xA;now receive notifications." ilk="function" name="add_observer" signature="(observer)" />
        <scope doc="Set the changed state of this object. Notifications will be&#xA;sent only if the changed state is true." ilk="function" name="changed" signature="(state=true)" />
        <scope doc="Query the changed state of this object." ilk="function" name="changed?" signature="()" />
        <scope doc="Return the number of observers associated with this object." ilk="function" name="count_observers" signature="()" />
        <scope doc="Delete observer as an observer on this object. It will no&#xA;longer receive notifications." ilk="function" name="delete_observer" signature="(observer)" />
        <scope doc="Delete all observers associated with this object." ilk="function" name="delete_observers" signature="()" />
        <scope doc="If this object&apos;s changed state is true, invoke the update&#xA;method in each currently associated observer in turn,&#xA;passing it the given arguments. The changed state is then&#xA;set to false." ilk="function" name="notify_observers" signature="(*arg)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="file/constants">
      <scope ilk="namespace" name="Constants" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="nameerror/message">
      <scope classrefs="Data" ilk="class" name="message" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="process/uid">
      <scope doc="The Process::UID module contains a collection of module&#xA;functions which can be used to portably get, set, and switch&#xA;the current process&apos;s real, effective, and saved user IDs." ilk="namespace" name="UID">
        <scope doc="Change the current process&apos;s real and effective user ID to&#xA;that specified by `integer&apos;. Returns the new user ID." ilk="function" name="change_privilege" signature="Process::UID.change_privilege(integer)   =&gt; fixnum" />
        <scope doc="Returns the effective user ID for this process." ilk="function" name="eid" signature="Process.euid           =&gt; fixnum&#xA;Process::UID.eid       =&gt; fixnum&#xA;Process::Sys.geteuid   =&gt; fixnum" />
        <scope doc="Alias for #grant_privilege" ilk="function" name="eid=" signature="(p1)" />
        <scope doc="Set the effective user ID, and if possible, the saved user&#xA;ID of the process to the given `integer&apos;. Returns the new&#xA;effective user ID." ilk="function" name="grant_privilege" signature="Process::UID.grant_privilege(integer)   =&gt; fixnum&#xA;Process::UID.eid= integer               =&gt; fixnum" />
        <scope doc="Exchange real and effective user IDs and return the new&#xA;effective user ID. Not available on all platforms." ilk="function" name="re_exchange" signature="Process::UID.re_exchange   =&gt; fixnum" />
        <scope doc="Returns true if the real and effective user IDs of a process&#xA;may be exchanged on the current platform." ilk="function" name="re_exchangeable?" signature="Process::UID.re_exchangeable?   =&gt; true or false" />
        <scope doc="Returns the (real) user ID of this process." ilk="function" name="rid" signature="Process.uid           =&gt; fixnum&#xA;Process::UID.rid      =&gt; fixnum&#xA;Process::Sys.getuid   =&gt; fixnum" />
        <scope doc="Returns true if the current platform has saved user ID&#xA;functionality." ilk="function" name="sid_available?" signature="Process::UID.sid_available?   =&gt; true or false" />
        <scope doc="Switch the effective and real user IDs of the current&#xA;process. If a `block&apos; is given, the user IDs will be&#xA;switched back after the block is executed." ilk="function" name="switch" signature="Process::UID.switch              =&gt; fixnum&#xA;Process::UID.switch {|| block}   =&gt; object" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="mutex">
      <scope classrefs="Object" doc="Mutex implements a simple semaphore that can be used to&#xA;coordinate access to shared data from multiple concurrent&#xA;threads." ilk="class" name="Mutex">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new Mutex" ilk="function" name="new" signature="()" />
        <scope doc="If the mutex is locked, unlocks the mutex, wakes one waiting&#xA;thread, and yields in a critical section." ilk="function" name="exclusive_unlock" signature="() {|| ...}" />
        <scope doc="Attempts to grab the lock and waits if it isn&apos;t available." ilk="function" name="lock" signature="()" />
        <scope doc="Returns true if this lock is currently held by some thread." ilk="function" name="locked?" signature="()" />
        <scope doc="Obtains a lock, runs the block, and releases the lock when&#xA;the block completes. See the example under Mutex." ilk="function" name="synchronize" signature="() {|| ...}" />
        <scope doc="Attempts to obtain the lock and returns immediately. Returns&#xA;true if the lock was granted." ilk="function" name="try_lock" signature="()" />
        <scope doc="Releases the lock. Returns nil if ref wasn&apos;t locked." ilk="function" name="unlock" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="process/sys">
      <scope doc="The Process::Sys module contains UID and GID functions which&#xA;provide direct bindings to the system calls of the same&#xA;names instead of the more-portable versions of the same&#xA;functionality found in the Process, Process::UID, and&#xA;Process::GID modules." ilk="namespace" name="Sys">
        <scope doc="Returns the effective group ID for this process. Not&#xA;available on all platforms." ilk="function" name="getegid" signature="Process.egid          =&gt; fixnum&#xA;Process::GID.eid      =&gt; fixnum&#xA;Process::Sys.geteid   =&gt; fixnum" />
        <scope doc="Returns the effective user ID for this process." ilk="function" name="geteuid" signature="Process.euid           =&gt; fixnum&#xA;Process::UID.eid       =&gt; fixnum&#xA;Process::Sys.geteuid   =&gt; fixnum" />
        <scope doc="Returns the (real) group ID for this process." ilk="function" name="getgid" signature="Process.gid           =&gt; fixnum&#xA;Process::GID.rid      =&gt; fixnum&#xA;Process::Sys.getgid   =&gt; fixnum" />
        <scope doc="Returns the (real) user ID of this process." ilk="function" name="getuid" signature="Process.uid           =&gt; fixnum&#xA;Process::UID.rid      =&gt; fixnum&#xA;Process::Sys.getuid   =&gt; fixnum" />
        <scope doc="Returns true if the process was created as a result of an&#xA;execve(2) system call which had either of the setuid or&#xA;setgid bits set (and extra privileges were given as a&#xA;result) or if it has changed any of its real, effective or&#xA;saved user or group IDs since it began execution." ilk="function" name="issetugid" signature="Process::Sys.issetugid   =&gt; true or false" />
        <scope doc="Set the effective group ID of the calling process to&#xA;`integer&apos;. Not available on all platforms." ilk="function" name="setegid" signature="Process::Sys.setegid(integer)   =&gt; nil" />
        <scope doc="Set the effective user ID of the calling process to&#xA;`integer&apos;. Not available on all platforms." ilk="function" name="seteuid" signature="Process::Sys.seteuid(integer)   =&gt; nil" />
        <scope doc="Set the group ID of the current process to `integer&apos;. Not&#xA;available on all platforms." ilk="function" name="setgid" signature="Process::Sys.setgid(integer)   =&gt; nil" />
        <scope doc="Sets the (integer) real and/or effective group IDs of the&#xA;current process to `rid&apos; and `eid&apos;, respectively. A value of&#xA;-1 for either means to leave that ID unchanged." ilk="function" name="setregid" signature="Process::Sys.setregid(rid, eid)   =&gt; nil" />
        <scope doc="Sets the (integer) real, effective, and saved user IDs of&#xA;the current process to `rid&apos;, `eid&apos;, and `sid&apos; respectively.&#xA;A value of -1 for any value means to leave that ID&#xA;unchanged." ilk="function" name="setresgid" signature="Process::Sys.setresgid(rid, eid, sid)   =&gt; nil" />
        <scope doc="Sets the (integer) real, effective, and saved user IDs of&#xA;the current process to `rid&apos;, `eid&apos;, and `sid&apos; respectively.&#xA;A value of -1 for any value means to leave that ID&#xA;unchanged." ilk="function" name="setresuid" signature="Process::Sys.setresuid(rid, eid, sid)   =&gt; nil" />
        <scope doc="Sets the (integer) real and/or effective user IDs of the&#xA;current process to `rid&apos; and `eid&apos;, respectively. A value of&#xA;-1 for either means to leave that ID unchanged." ilk="function" name="setreuid" signature="Process::Sys.setreuid(rid, eid)   =&gt; nil" />
        <scope doc="Set the real group ID of the calling process to `integer&apos;.&#xA;Not available on all platforms." ilk="function" name="setrgid" signature="Process::Sys.setrgid(integer)   =&gt; nil" />
        <scope doc="Set the real user ID of the calling process to `integer&apos;.&#xA;Not available on all platforms." ilk="function" name="setruid" signature="Process::Sys.setruid(integer)   =&gt; nil" />
        <scope doc="Set the user ID of the current process to `integer&apos;. Not&#xA;available on all platforms." ilk="function" name="setuid" signature="Process::Sys.setuid(integer)   =&gt; nil" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="fatal">
      <scope classrefs="Exception" ilk="class" name="fatal" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="test">
      <scope classrefs="Object" ilk="class" name="Test">
        <scope ilk="namespace" name="Unit">
          <scope attributes="__classmethod__" ilk="function" name="run=" signature="(flag)" />
          <scope attributes="__classmethod__" ilk="function" name="run?" signature="()" />
        </scope>
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole_method">
      <scope classrefs="Object" doc="WIN32OLE_METHOD objects represent OLE method information." ilk="class" name="WIN32OLE_METHOD">
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new WIN32OLE_METHOD object which represents the&#xA;information about OLE method. The first argument `ole_type&apos;&#xA;specifies WIN32OLE_TYPE object." ilk="function" name="new" signature="WIN32OLE_METHOD.new(ole_type,  method) -&gt; WIN32OLE_METHOD object" />
        <scope doc="Returns dispatch ID." ilk="function" name="dispid" signature="WIN32OLE_METHOD#dispid" />
        <scope doc="Returns true if the method is event." ilk="function" name="event?" signature="WIN32OLE_METHOD#event?" />
        <scope doc="Returns event interface name if the method is event." ilk="function" name="event_interface" signature="WIN32OLE_METHOD#event_interface" />
        <scope doc="Returns help context." ilk="function" name="helpcontext" signature="WIN32OLE_METHOD#helpcontext" />
        <scope doc="Returns help file. If help file is not found, then the&#xA;method returns nil." ilk="function" name="helpfile" signature="WIN32OLE_METHOD#helpfile" />
        <scope doc="Returns help string of OLE method. If the help string is not&#xA;found, then the method returns nil." ilk="function" name="helpstring" signature="WIN32OLE_METHOD#helpstring" />
        <scope doc="Returns the method invoke kind." ilk="function" name="invkind" signature="WIN32OLE_MTHOD#invkind" />
        <scope doc="Returns the method kind string. The string is &quot;UNKNOWN&quot; or&#xA;&quot;PROPERTY&quot; or &quot;PROPERTY&quot; or &quot;PROPERTYGET&quot; or &quot;PROPERTYPUT&quot;&#xA;or &quot;PROPERTYPPUTREF&quot; or &quot;FUNC&quot;." ilk="function" name="invoke_kind" signature="WIN32OLE_METHOD#invoke_kind" />
        <scope doc="call-seq" ilk="function" name="name" signature="()" />
        <scope doc="Returns the offset ov VTBL." ilk="function" name="offset_vtbl" signature="WIN32OLE_METHOD#offset_vtbl" />
        <scope doc="returns array of WIN32OLE_PARAM object corresponding with&#xA;method parameters." ilk="function" name="params" signature="WIN32OLE_METHOD#params" />
        <scope doc="Returns string of return value type of method." ilk="function" name="return_type" signature="WIN32OLE_METHOD#return_type" />
        <scope doc="Returns detail information of return value type of method.&#xA;The information is array." ilk="function" name="return_type_detail" signature="WIN32OLE_METHOD#return_type_detail" />
        <scope doc="Returns number of return value type of method." ilk="function" name="return_vtype" signature="WIN32OLE_METHOD#return_vtype" />
        <scope doc="Returns the size of optional parameters." ilk="function" name="size_opt_params" signature="WIN32OLE_METHOD#size_opt_params" />
        <scope doc="Returns the size of arguments of the method." ilk="function" name="size_params" signature="WIN32OLE_METHOD#size_params" />
        <scope doc="Alias for #name" ilk="function" name="to_s" signature="()" />
        <scope doc="Returns true if the method is public." ilk="function" name="visible?" signature="WIN32OLE_METHOD#visible?" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="exceptionformatrix">
      <scope ilk="namespace" name="ExceptionForMatrix" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="conditionvariable">
      <scope classrefs="Object" doc="ConditionVariable objects augment class Mutex. Using&#xA;condition variables, it is possible to suspend while in the&#xA;middle of a critical section until a resource becomes&#xA;available." ilk="class" name="ConditionVariable">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new ConditionVariable" ilk="function" name="new" signature="()" />
        <scope doc="Wakes up all threads waiting for this lock." ilk="function" name="broadcast" signature="()" />
        <scope doc="Wakes up the first thread in line waiting for this lock." ilk="function" name="signal" signature="()" />
        <scope doc="Releases the lock held in mutex and waits; reacquires the&#xA;lock on wakeup." ilk="function" name="wait" signature="(mutex)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="vector">
      <scope classrefs="Object" doc="The Vector class represents a mathematical vector, which is&#xA;useful in its own right, and also constitutes a row or&#xA;column of a Matrix." ilk="class" name="Vector">
        <import symbol="ExceptionForMatrix" />
        <scope attributes="__classmethod__" doc="Creates a Vector from a list of elements." ilk="function" name="[]" signature="(*array)" />
        <scope attributes="__classmethod__" doc="Creates a vector from an Array. The optional second argument&#xA;specifies whether the array itself or a copy is used&#xA;internally." ilk="function" name="elements" signature="(array, copy = true)" />
        <scope attributes="__classmethod__ __ctor__" doc="For internal use." ilk="function" name="new" signature="(method, array, copy)" />
        <scope doc="Multiplies the vector by x, where x is a number or another&#xA;vector." ilk="function" name="*" signature="(x)" />
        <scope doc="Vector addition." ilk="function" name="+" signature="(v)" />
        <scope doc="Returns true iff the two vectors have the same elements in&#xA;the same order." ilk="function" name="==" signature="(other)" />
        <scope doc="Returns element number i (starting at zero) of the vector." ilk="function" name="[]" signature="(i)" />
        <scope doc="Return a copy of the vector." ilk="function" name="clone" signature="()" />
        <scope doc="FIXME: describe Vector#coerce." ilk="function" name="coerce" signature="(other)" />
        <scope doc="Like Array#collect." ilk="function" name="collect" signature="( {|e| ...}" />
        <scope doc="Collects (as in Enumerable#collect) over the elements of&#xA;this vector and v in conjunction." ilk="function" name="collect2" signature="(v) {|e1, e2| ...}" />
        <scope doc="For internal use." ilk="function" name="compare_by" signature="(elements)" />
        <scope doc="Creates a single-row matrix from this vector." ilk="function" name="covector" signature="()" />
        <scope doc="Iterate over the elements of this vector and v in&#xA;conjunction." ilk="function" name="each2" signature="(v) {|e1, e2| ...}" />
        <scope doc="Alias for #==" ilk="function" name="eqn?" signature="(other)" />
        <scope doc="Return a hash-code for the vector." ilk="function" name="hash" signature="()" />
        <scope doc="For internal use." ilk="function" name="init_elements" signature="(array, copy)" />
        <scope doc="Returns the inner product of this vector with the other." ilk="function" name="inner_product" signature="(v)" />
        <scope doc="Overrides Object#inspect" ilk="function" name="inspect" signature="()" />
        <scope doc="Alias for #collect" ilk="function" name="map" signature="(" />
        <scope doc="Like Vector#collect2, but returns a Vector instead of an&#xA;Array." ilk="function" name="map2" signature="(v) {|e1, e2| ...}" />
        <scope doc="Returns the modulus (Pythagorean distance) of the vector." ilk="function" name="r" signature="()" />
        <scope doc="Returns the number of elements in the vector." ilk="function" name="size" signature="()" />
        <scope doc="Returns the elements of the vector in an array." ilk="function" name="to_a" signature="()" />
        <scope doc="Overrides Object#to_s" ilk="function" name="to_s" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="enumerable/enumerator">
      <scope classrefs="Object" doc="A class which provides a method `each&apos; to be used as an&#xA;Enumerable object." ilk="class" name="Enumerator">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new Enumerable::Enumerator object, which is to be&#xA;used as an Enumerable object using the given object&apos;s given&#xA;method with the given arguments." ilk="function" name="new" signature="Enumerable::Enumerator.new(obj, method = :each, *args)" />
        <scope doc="Iterates the given block using the object and the method&#xA;specified in the first place." ilk="function" name="each" signature="enum.each {...}" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="simpledelegator">
      <scope classrefs="Delegator" doc="A concrete implementation of Delegator, this class provides&#xA;the means to delegate all supported method calls to the&#xA;object passed into the constructor and even to change the&#xA;object being delegated to at a later time with __setobj__ ." ilk="class" name="SimpleDelegator">
        <scope attributes="__classmethod__ __ctor__" doc="Pass in the `obj&apos; you would like to delegate method calls&#xA;to." ilk="function" name="new" signature="(obj)" />
        <scope doc="Returns the current object method calls are being delegated&#xA;to." ilk="function" name="__getobj__" signature="()" />
        <scope doc="Changes the delegate object to `obj&apos;." ilk="function" name="__setobj__" signature="(obj)" />
        <scope doc="Clone support for the object returned by __getobj__." ilk="function" name="clone" signature="()" />
        <scope doc="Duplication support for the object returned by __getobj__." ilk="function" name="dup" signature="(obj)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="queue">
      <scope classrefs="Object" doc="This class provides a way to synchronize communication&#xA;between threads." ilk="class" name="Queue">
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new queue." ilk="function" name="new" signature="()" />
        <scope doc="Alias for #push" ilk="function" name="&lt;&lt;" signature="(obj)" />
        <scope doc="Removes all objects from the queue." ilk="function" name="clear" signature="()" />
        <scope doc="Alias for #pop" ilk="function" name="deq" signature="(non_block=false)" />
        <scope doc="Returns true is the queue is empty." ilk="function" name="empty?" signature="()" />
        <scope doc="Alias for #push" ilk="function" name="enq" signature="(obj)" />
        <scope doc="Returns the length of the queue." ilk="function" name="length" signature="()" />
        <scope doc="Returns the number of threads waiting on the queue." ilk="function" name="num_waiting" signature="()" />
        <scope doc="Retrieves data from the queue. If the queue is empty, the&#xA;calling thread is suspended until data is pushed onto the&#xA;queue." ilk="function" name="pop" signature="(non_block=false)" />
        <scope doc="Pushes obj to the queue." ilk="function" name="push" signature="(obj)" />
        <scope doc="Alias for #pop" ilk="function" name="shift" signature="(non_block=false)" />
        <scope doc="Alias for #length" ilk="function" name="size" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32oleruntimeerror">
      <scope classrefs="RuntimeError" ilk="class" name="WIN32OLERuntimeError" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole_type">
      <scope classrefs="Object" doc="WIN32OLE_TYPE objects represent OLE type libarary&#xA;information." ilk="class" name="WIN32OLE_TYPE">
        <scope attributes="__classmethod__ __ctor__" doc="Returns a new WIN32OLE_TYPE object. The first argument&#xA;`typelib&apos; specifies OLE type library name." ilk="function" name="new" signature="WIN32OLE_TYPE.new(typelib, ole_class) -&gt; WIN32OLE_TYPE object" />
        <scope attributes="__classmethod__" doc="Returns array of WIN32OLE_TYPE objects defined by the&#xA;`typelib&apos; type library." ilk="function" name="ole_classes" signature="WIN32OLE_TYPE.ole_classes(typelib)" />
        <scope attributes="__classmethod__" doc="Returns array of ProgID." ilk="function" name="progids" signature="WIN32OLE_TYPE.progids" />
        <scope attributes="__classmethod__" doc="Returns array of type libraries." ilk="function" name="typelibs" signature="WIN32OLE_TYPE.typelibs" />
        <scope doc="Returns GUID." ilk="function" name="guid" signature="WIN32OLE_TYPE#guid  #=&gt; GUID" />
        <scope doc="Returns helpcontext. If helpcontext is not found, then&#xA;returns nil." ilk="function" name="helpcontext" signature="WIN32OLE_TYPE#helpcontext" />
        <scope doc="Returns helpfile path. If helpfile is not found, then&#xA;returns nil." ilk="function" name="helpfile" signature="WIN32OLE_TYPE#helpfile" />
        <scope doc="Returns help string." ilk="function" name="helpstring" signature="WIN32OLE_TYPE#helpstring #=&gt; help string." />
        <scope doc="Returns major version." ilk="function" name="major_version" signature="WIN32OLE_TYPE#major_version" />
        <scope doc="Returns minor version." ilk="function" name="minor_version" signature="WIN32OLE_TYPE#minor_version #=&gt; OLE minor version" />
        <scope doc="Returns OLE type name." ilk="function" name="name" signature="WIN32OLE_TYPE#name #=&gt; OLE type name" />
        <scope doc="Returns array of WIN32OLE_METHOD objects which represent OLE&#xA;method defined in OLE type library." ilk="function" name="ole_methods" signature="WIN32OLE_TYPE#ole_methods # the array of WIN32OLE_METHOD objects." />
        <scope doc="returns type of OLE class." ilk="function" name="ole_type" signature="WIN32OLE_TYPE#ole_type #=&gt; OLE type string." />
        <scope doc="Returns ProgID if it exists. If not found, then returns nil." ilk="function" name="progid" signature="WIN32OLE_TYPE#progid  #=&gt; ProgID" />
        <scope doc="Returns source class when the OLE class is &apos;Alias&apos;." ilk="function" name="src_type" signature="WIN32OLE_TYPE#src_type #=&gt; OLE source class" />
        <scope doc="Alias for #name" ilk="function" name="to_s" signature="()" />
        <scope doc="Returns number which represents type." ilk="function" name="typekind" signature="WIN32OLE_TYPE#typekind #=&gt; number of type." />
        <scope doc="Returns array of WIN32OLE_VARIABLE objects which represent&#xA;variables defined in OLE class." ilk="function" name="variables" signature="WIN32OLE_TYPE#variables" />
        <scope doc="Returns true if the OLE class is public." ilk="function" name="visible?" signature="WIN32OLE_TYPE#visible  #=&gt; true or false" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="process/gid">
      <scope ilk="namespace" name="Process" >
      <scope doc="The Process::GID module contains a collection of module&#xA;functions which can be used to portably get, set, and switch&#xA;the current process&apos;s real, effective, and saved group IDs." ilk="namespace" name="GID">
        <scope doc="Change the current process&apos;s real and effective group ID to&#xA;that specified by `integer&apos;. Returns the new group ID." ilk="function" name="change_privilege" signature="Process::GID.change_privilege(integer)   =&gt; fixnum" />
        <scope doc="Returns the effective group ID for this process. Not&#xA;available on all platforms." ilk="function" name="eid" signature="Process.egid          =&gt; fixnum&#xA;Process::GID.eid      =&gt; fixnum&#xA;Process::Sys.geteid   =&gt; fixnum" />
        <scope doc="Alias for #grant_privilege" ilk="function" name="eid=" signature="(p1)" />
        <scope doc="Set the effective group ID, and if possible, the saved group&#xA;ID of the process to the given `integer&apos;. Returns the new&#xA;effective group ID." ilk="function" name="grant_privilege" signature="Process::GID.grant_privilege(integer)    =&gt; fixnum&#xA;Process::GID.eid = integer               =&gt; fixnum" />
        <scope doc="Exchange real and effective group IDs and return the new&#xA;effective group ID. Not available on all platforms." ilk="function" name="re_exchange" signature="Process::GID.re_exchange   =&gt; fixnum" />
        <scope doc="Returns true if the real and effective group IDs of a&#xA;process may be exchanged on the current platform." ilk="function" name="re_exchangeable?" signature="Process::GID.re_exchangeable?   =&gt; true or false" />
        <scope doc="Returns the (real) group ID for this process." ilk="function" name="rid" signature="Process.gid           =&gt; fixnum&#xA;Process::GID.rid      =&gt; fixnum&#xA;Process::Sys.getgid   =&gt; fixnum" />
        <scope doc="Returns true if the current platform has saved group ID&#xA;functionality." ilk="function" name="sid_available?" signature="Process::GID.sid_available?   =&gt; true or false" />
        <scope doc="Switch the effective and real group IDs of the current&#xA;process. If a `block&apos; is given, the group IDs will be&#xA;switched back after the block is executed." ilk="function" name="switch" signature="Process::GID.switch              =&gt; fixnum&#xA;Process::GID.switch {|| block}   =&gt; object" />
      </scope>
     </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="stringscanner">
      <scope classrefs="Object" doc="StringScanner provides for lexical scanning operations on a&#xA;String." ilk="class" name="StringScanner">
        <scope classrefs="StandardError" ilk="class" name="Error" />
        <scope attributes="__classmethod__" doc="This method is defined for backward compatibility." ilk="function" name="must_C_version" signature=" StringScanner.must_C_version" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new StringScanner object to scan over the given&#xA;string. dup argument is obsolete and not used now." ilk="function" name="new" signature=" StringScanner.new(string, dup = false)" />
        <scope doc="Appends str to the string being scanned. This method does&#xA;not affect scan pointer." ilk="function" name="&lt;&lt;" signature="concat(str)&#xA;&lt;&lt;(str)" />
        <scope doc="Return the n-th subgroup in the most recent match." ilk="function" name="[]" signature=" [](n)" />
        <scope doc="Returns true iff the scan pointer is at the beginning of the&#xA;line." ilk="function" name="beginning_of_line?" signature="()" />
        <scope doc="Returns true iff the scan pointer is at the beginning of the&#xA;line." ilk="function" name="bol?" signature="()" />
        <scope doc="This returns the value that #scan would return, without&#xA;advancing the scan pointer. The match register is affected,&#xA;though." ilk="function" name="check" signature=" check(pattern)" />
        <scope doc="This returns the value that #scan_until would return,&#xA;without advancing the scan pointer. The match register is&#xA;affected, though." ilk="function" name="check_until" signature=" check_until(pattern)" />
        <scope doc="Equivalent to #terminate. This method is obsolete; use&#xA;#terminate instead." ilk="function" name="clear" signature="()" />
        <scope doc="Appends str to the string being scanned. This method does&#xA;not affect scan pointer." ilk="function" name="concat" signature="concat(str)&#xA;&lt;&lt;(str)" />
        <scope doc="Equivalent to #eos?. This method is obsolete, use #eos?&#xA;instead." ilk="function" name="empty?" signature="()" />
        <scope doc="Returns true if the scan pointer is at the end of the&#xA;string." ilk="function" name="eos?" signature="()" />
        <scope doc="Looks `ahead&apos; to see if the pattern exists `anywhere&apos; in the&#xA;string, without advancing the scan pointer. This predicates&#xA;whether a #scan_until will return a value." ilk="function" name="exist?" signature=" exist?(pattern)" />
        <scope doc="Scans one byte and returns it. Similar to, but not the same&#xA;as, #getch." ilk="function" name="get_byte" signature="()" />
        <scope doc="Equivalent to #get_byte. This method is obsolete; use&#xA;#get_byte instead." ilk="function" name="getbyte" signature="()" />
        <scope doc="Scans one character and returns it." ilk="function" name="getch" signature="()" />
        <scope doc="Returns a string that represents the StringScanner object,&#xA;showing:" ilk="function" name="inspect" signature="()" />
        <scope doc="Tests whether the given pattern is matched from the current&#xA;scan pointer. Returns the length of the match, or nil." ilk="function" name="match?" signature=" match?(pattern)" />
        <scope doc="Returns the last matched string." ilk="function" name="matched" signature="()" />
        <scope doc="Returns true iff the last match was successful." ilk="function" name="matched?" signature="()" />
        <scope doc="Returns the size of the most recent match (see #matched), or&#xA;nil if there was no recent match." ilk="function" name="matched_size" signature="()" />
        <scope doc="Equivalent to #matched_size. This method is obsolete; use&#xA;#matched_size instead." ilk="function" name="matchedsize" signature="()" />
        <scope doc="Extracts a string corresponding to string[pos,len], without&#xA;advancing the scan pointer." ilk="function" name="peek" signature=" peek(len)" />
        <scope doc="Equivalent to #peek. This method is obsolete; use #peek&#xA;instead." ilk="function" name="peep" signature="(p1)" />
        <scope doc="Returns the position of the scan pointer. In the &apos;reset&apos;&#xA;position, this value is zero." ilk="function" name="pointer" signature="()" />
        <scope doc="Modify the scan pointer." ilk="function" name="pointer=" signature=" pos=(n)" />
        <scope doc="Returns the position of the scan pointer. In the &apos;reset&apos;&#xA;position, this value is zero." ilk="function" name="pos" signature="()" />
        <scope doc="Modify the scan pointer." ilk="function" name="pos=" signature=" pos=(n)" />
        <scope doc="Return the *`post*-match&apos; (in the regular expression sense)&#xA;of the last scan." ilk="function" name="post_match" signature="()" />
        <scope doc="Return the *`pre*-match&apos; (in the regular expression sense)&#xA;of the last scan." ilk="function" name="pre_match" signature="()" />
        <scope doc="Reset the scan pointer (index 0) and clear matching data." ilk="function" name="reset" signature="()" />
        <scope doc="Returns the &quot;rest&quot; of the string (i.e. everything after the&#xA;scan pointer)." ilk="function" name="rest" signature="()" />
        <scope doc="Returns true iff there is more data in the string. See&#xA;#eos?." ilk="function" name="rest?" signature="()" />
        <scope doc="s.rest_size is equivalent to s.rest.size." ilk="function" name="rest_size" signature="()" />
        <scope doc="s.restsize is equivalent to s.rest_size. This method is&#xA;obsolete; use #rest_size instead." ilk="function" name="restsize" signature="()" />
        <scope doc="Tries to match with pattern at the current position. If&#xA;there&apos;s a match, the scanner advances the &quot;scan pointer&quot; and&#xA;returns the matched string." ilk="function" name="scan" signature=" scan(pattern)" />
        <scope doc="Tests whether the given pattern is matched from the current&#xA;scan pointer. Returns the matched string if return_string_p&#xA;is true." ilk="function" name="scan_full" signature=" scan_full(pattern, return_string_p, advance_pointer_p)" />
        <scope doc="Scans the string `until&apos; the pattern is matched. Returns the&#xA;substring up to and including the end of the match,&#xA;advancing the scan pointer to that location." ilk="function" name="scan_until" signature=" scan_until(pattern)" />
        <scope doc="Scans the string `until&apos; the pattern is matched. Returns the&#xA;matched string if return_string_p is true, otherwise returns&#xA;the number of bytes advanced." ilk="function" name="search_full" signature=" search_full(pattern, return_string_p, advance_pointer_p)" />
        <scope doc="Attempts to skip over the given pattern beginning with the&#xA;scan pointer. If it matches, the scan pointer is advanced to&#xA;the end of the match, and the length of the match is&#xA;returned." ilk="function" name="skip" signature=" skip(pattern)" />
        <scope doc="Advances the scan pointer until pattern is matched and&#xA;consumed. Returns the number of bytes advanced, or nil if no&#xA;match was found." ilk="function" name="skip_until" signature=" skip_until(pattern)" />
        <scope doc="Returns the string being scanned." ilk="function" name="string" signature="()" />
        <scope doc="Changes the string being scanned to str and resets the&#xA;scanner. Returns str." ilk="function" name="string=" signature=" string=(str)" />
        <scope doc="Set the scan pointer to the end of the string and clear&#xA;matching data." ilk="function" name="terminate" signature="terminate&#xA;clear" />
        <scope doc="Set the scan pointer to the previous position. Only one&#xA;previous position is remembered, and it changes with each&#xA;scanning operation." ilk="function" name="unscan" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="syncenumerator">
      <scope classrefs="Object" doc="SyncEnumerator creates an Enumerable object from multiple&#xA;Enumerable objects and enumerates them synchronously." ilk="class" name="SyncEnumerator">
        <import symbol="Enumerable" />
        <scope attributes="__classmethod__ __ctor__" doc="Creates a new SyncEnumerator which enumerates rows of given&#xA;Enumerable objects." ilk="function" name="new" signature="(*enums)" />
        <scope doc="Enumerates rows of the Enumerable objects." ilk="function" name="each" signature="() {|ret| ...}" />
        <scope doc="Returns true if the given nth Enumerable object has reached&#xA;the end. If no argument is given, returns true if any of the&#xA;Enumerable objects has reached the end." ilk="function" name="end?" signature="(i = nil)" />
        <scope doc="Returns the number of enumerated Enumerable objects, i.e.&#xA;the size of each row." ilk="function" name="length" signature="()" />
        <scope doc="Returns the number of enumerated Enumerable objects, i.e.&#xA;the size of each row." ilk="function" name="size" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole_param">
      <scope classrefs="Object" doc="WIN32OLE_PARAM objects represent param information of the&#xA;OLE method." ilk="class" name="WIN32OLE_PARAM">
        <scope doc="Returns default value. If the default value does not exist,&#xA;this method returns nil." ilk="function" name="default" signature="WIN32OLE_PARAM#default" />
        <scope doc="Returns true if the parameter is input." ilk="function" name="input?" signature="WIN32OLE_PARAM#input?" />
        <scope doc="Returns name." ilk="function" name="name" signature="WIN32OLE_PARAM#name" />
        <scope doc="Returns OLE type of WIN32OLE_PARAM object(parameter of OLE&#xA;method)." ilk="function" name="ole_type" signature="WIN32OLE_PARAM#ole_type" />
        <scope doc="Returns detail information of type of argument." ilk="function" name="ole_type_detail" signature="WIN32OLE_PARAM#ole_type_detail" />
        <scope doc="Returns true if argument is optional." ilk="function" name="optional?" signature="WIN32OLE_PARAM#optional?" />
        <scope doc="Returns true if argument is output." ilk="function" name="output?" signature="WIN32OLE#output?" />
        <scope doc="Returns true if argument is return value." ilk="function" name="retval?" signature="WIN32OLE_PARAM#retval?" />
        <scope doc="Alias for #name" ilk="function" name="to_s" signature="()" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="singletonclassmethods">
      <scope classrefs="Object" ilk="class" name="SingletonClassMethods">
        <scope attributes="private" doc="waiting-loop hook" ilk="function" name="_instantiate?" signature="()" />
        <scope attributes="private" ilk="function" name="_load" signature="(str)" />
        <scope doc="properly clone the Singleton pattern - did you know that&#xA;duping doesn&apos;t copy class methods?" ilk="function" name="clone" signature="()" />
        <scope attributes="private" doc="ensure that the Singleton pattern is properly inherited" ilk="function" name="inherited" signature="(sub_klass)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="singleforwardable">
      <scope classrefs="Object" doc="The SingleForwardable module provides delegation of&#xA;specified methods to a designated object, using the methods&#xA;#def_delegator and #def_delegators. This module is similar&#xA;to Forwardable, but it works on objects themselves, instead&#xA;of their defining classes." ilk="class" name="SingleForwardable">
        <scope doc="Alias for #def_singleton_delegator" ilk="function" name="def_delegator" signature="(accessor, method, ali = method)" />
        <scope doc="Alias for #def_singleton_delegators" ilk="function" name="def_delegators" signature="(accessor, *methods)" />
        <scope doc="Defines a method `method&apos; which delegates to `obj&apos; (i.e. it&#xA;calls the method of the same name in `obj&apos;)." ilk="function" name="def_singleton_delegator" signature="(accessor, method, ali = method)" />
        <scope doc="Shortcut for defining multiple delegator methods, but with&#xA;no provision for using a different name." ilk="function" name="def_singleton_delegators" signature="(accessor, *methods)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="process/status">
      <scope classrefs="Object" doc="Process::Status encapsulates the information on the status&#xA;of a running or terminated system process. The built-in&#xA;variable $? is either nil or a Process::Status object." ilk="class" name="Status">
        <scope doc="Logical AND of the bits in `stat&apos; with `num&apos;." ilk="function" name="&amp;" signature="stat &amp; num   =&gt; fixnum" />
        <scope doc="Returns true if the integer value of `stat&apos; equals `other&apos;." ilk="function" name="==" signature="stat == other   =&gt; true or false" />
        <scope doc="Shift the bits in `stat&apos; right `num&apos; places." ilk="function" name="&gt;&gt;" signature="stat &gt;&gt; num   =&gt; fixnum" />
        <scope doc="Returns true if `stat&apos; generated a coredump when it&#xA;terminated. Not available on all platforms." ilk="function" name="coredump?" signature="stat.coredump?   =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; exited normally (for example using an&#xA;exit() call or finishing the program)." ilk="function" name="exited?" signature="stat.exited?   =&gt; true or false" />
        <scope doc="Returns the least significant eight bits of the return code&#xA;of `stat&apos;. Only available if exited? is true." ilk="function" name="exitstatus" signature="stat.exitstatus   =&gt; fixnum or nil" />
        <scope doc="Override the inspection method." ilk="function" name="inspect" signature="stat.inspect   =&gt; string" />
        <scope doc="Returns the process ID that this status object represents." ilk="function" name="pid" signature="stat.pid   =&gt; fixnum" />
        <scope doc="Returns true if `stat&apos; terminated because of an uncaught&#xA;signal." ilk="function" name="signaled?" signature="stat.signaled?   =&gt; true or false" />
        <scope doc="Returns true if this process is stopped. This is only&#xA;returned if the corresponding wait call had the WUNTRACED&#xA;flag set." ilk="function" name="stopped?" signature="stat.stopped?   =&gt; true or false" />
        <scope doc="Returns the number of the signal that caused `stat&apos; to stop&#xA;(or nil if self is not stopped)." ilk="function" name="stopsig" signature="stat.stopsig   =&gt; fixnum or nil" />
        <scope doc="Returns true if `stat&apos; is successful, false if not. Returns&#xA;nil if exited? is not true." ilk="function" name="success?" signature="stat.success?   =&gt; true, false or nil" />
        <scope doc="Returns the number of the signal that caused `stat&apos; to&#xA;terminate (or nil if self was not terminated by an uncaught&#xA;signal)." ilk="function" name="termsig" signature="stat.termsig   =&gt; fixnum or nil" />
        <scope doc="Returns the bits in `stat&apos; as a Fixnum. Poking around in&#xA;these bits is platform dependent." ilk="function" name="to_i" signature="stat.to_i     =&gt; fixnum&#xA;stat.to_int   =&gt; fixnum" />
        <scope doc="Returns the bits in `stat&apos; as a Fixnum. Poking around in&#xA;these bits is platform dependent." ilk="function" name="to_int" signature="stat.to_i     =&gt; fixnum&#xA;stat.to_int   =&gt; fixnum" />
        <scope doc="Equivalent to `stat&apos;.to_i.to_s." ilk="function" name="to_s" signature="stat.to_s   =&gt; string" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="timeextentiontest">
      <scope classrefs="Test::Unit::TestCase" ilk="class" name="TimeExtentionTest" />
    </scope>
    <scope ilk="blob" lang="Ruby" name="file/stat">
      <scope classrefs="Object" doc="Objects of class File::Stat encapsulate common status&#xA;information for File objects. The information is recorded at&#xA;the moment the File::Stat object is created; changes made to&#xA;the file after that point will not be reflected." ilk="class" name="Stat">
        <import symbol="Comparable" />
        <scope attributes="__classmethod__ __ctor__" ilk="function" name="new" />
        <scope doc="Compares File::Stat objects by comparing their respective&#xA;modification times." ilk="function" name="&lt;=&gt;" signature="stat &lt;=&gt; other_stat    =&gt; -1, 0, 1" />
        <scope doc="Returns the last access time for this file as an object of&#xA;class Time." ilk="function" name="atime" signature="stat.atime   =&gt; time" />
        <scope doc="Returns the native file system&apos;s block size. Will return nil&#xA;on platforms that don&apos;t support this information." ilk="function" name="blksize" signature="stat.blksize   =&gt; integer or nil" />
        <scope doc="Returns true if the file is a block device, false if it&#xA;isn&apos;t or if the operating system doesn&apos;t support this&#xA;feature." ilk="function" name="blockdev?" signature="stat.blockdev?   =&gt; true or false" />
        <scope doc="Returns the number of native file system blocks allocated&#xA;for this file, or nil if the operating system doesn&apos;t&#xA;support this feature." ilk="function" name="blocks" signature="stat.blocks    =&gt; integer or nil" />
        <scope doc="Returns true if the file is a character device, false if it&#xA;isn&apos;t or if the operating system doesn&apos;t support this&#xA;feature." ilk="function" name="chardev?" signature="stat.chardev?    =&gt; true or false" />
        <scope doc="Returns the change time for `stat&apos; (that is, the time&#xA;directory information about the file was changed, not the&#xA;file itself)." ilk="function" name="ctime" signature="stat.ctime -&gt; aTime" />
        <scope doc="Returns an integer representing the device on which `stat&apos;&#xA;resides." ilk="function" name="dev" signature="stat.dev    =&gt; fixnum" />
        <scope doc="Returns the major part of File_Stat#dev or nil." ilk="function" name="dev_major" signature="stat.dev_major   =&gt; fixnum" />
        <scope doc="Returns the minor part of File_Stat#dev or nil." ilk="function" name="dev_minor" signature="stat.dev_minor   =&gt; fixnum" />
        <scope doc="Returns true if `stat&apos; is a directory, false otherwise." ilk="function" name="directory?" signature="stat.directory?   =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; is executable or if the operating&#xA;system doesn&apos;t distinguish executable files from&#xA;nonexecutable files. The tests are made using the effective&#xA;owner of the process." ilk="function" name="executable?" signature="stat.executable?    =&gt; true or false" />
        <scope doc="Same as executable?, but tests using the real owner of the&#xA;process." ilk="function" name="executable_real?" signature="stat.executable_real?    =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; is a regular file (not a device file,&#xA;pipe, socket, etc.)." ilk="function" name="file?" signature="stat.file?    =&gt; true or false" />
        <scope doc="Identifies the type of `stat&apos;. The return string is one of:&#xA;``file&apos;&apos;, ``directory&apos;&apos;, ``characterSpecial&apos;&apos;,&#xA;``blockSpecial&apos;&apos;, ``fifo&apos;&apos;, ``link&apos;&apos;, ``socket&apos;&apos;, or&#xA;``unknown&apos;&apos;." ilk="function" name="ftype" signature="stat.ftype   =&gt; string" />
        <scope doc="Returns the numeric group id of the owner of `stat&apos;." ilk="function" name="gid" signature="stat.gid   =&gt; fixnum" />
        <scope doc="Returns true if the effective group id of the process is the&#xA;same as the group id of `stat&apos;. On Windows NT, returns&#xA;false." ilk="function" name="grpowned?" signature="stat.grpowned?   =&gt; true or false" />
        <scope doc="Returns the inode number for `stat&apos;." ilk="function" name="ino" signature="stat.ino   =&gt; fixnum" />
        <scope doc="Produce a nicely formatted description of `stat&apos;." ilk="function" name="inspect" signature="stat.inspect  =&gt;  string" />
        <scope doc="Returns an integer representing the permission bits of&#xA;`stat&apos;. The meaning of the bits is platform dependent; on&#xA;Unix systems, see stat(2)." ilk="function" name="mode" signature="stat.mode   =&gt; fixnum" />
        <scope doc="Returns the modification time of `stat&apos;." ilk="function" name="mtime" signature="stat.mtime -&gt; aTime" />
        <scope doc="Returns the number of hard links to `stat&apos;." ilk="function" name="nlink" signature="stat.nlink   =&gt; fixnum" />
        <scope doc="Returns true if the effective user id of the process is the&#xA;same as the owner of `stat&apos;." ilk="function" name="owned?" signature="stat.owned?    =&gt; true or false" />
        <scope doc="Returns true if the operating system supports pipes and&#xA;`stat&apos; is a pipe; false otherwise." ilk="function" name="pipe?" signature="stat.pipe?    =&gt; true or false" />
        <scope doc="Returns an integer representing the device type on which&#xA;`stat&apos; resides. Returns nil if the operating system doesn&apos;t&#xA;support this feature." ilk="function" name="rdev" signature="stat.rdev   =&gt;  fixnum or nil" />
        <scope doc="Returns the major part of File_Stat#rdev or nil." ilk="function" name="rdev_major" signature="stat.rdev_major   =&gt; fixnum" />
        <scope doc="Returns the minor part of File_Stat#rdev or nil." ilk="function" name="rdev_minor" signature="stat.rdev_minor   =&gt; fixnum" />
        <scope doc="Returns true if `stat&apos; is readable by the effective user id&#xA;of this process." ilk="function" name="readable?" signature="stat.readable?    =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; is readable by the real user id of&#xA;this process." ilk="function" name="readable_real?" signature="stat.readable_real? -&gt; true or false" />
        <scope doc="Returns true if `stat&apos; has the set-group-id permission bit&#xA;set, false if it doesn&apos;t or if the operating system doesn&apos;t&#xA;support this feature." ilk="function" name="setgid?" signature="stat.setgid?   =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; has the set-user-id permission bit&#xA;set, false if it doesn&apos;t or if the operating system doesn&apos;t&#xA;support this feature." ilk="function" name="setuid?" signature="stat.setuid?    =&gt; true or false" />
        <scope doc="Returns the size of `stat&apos; in bytes." ilk="function" name="size" signature="stat.size    =&gt; fixnum" />
        <scope doc="Returns the size of `stat&apos; in bytes." ilk="function" name="size?" signature="state.size    =&gt; integer" />
        <scope doc="Returns true if `stat&apos; is a socket, false if it isn&apos;t or if&#xA;the operating system doesn&apos;t support this feature." ilk="function" name="socket?" signature="stat.socket?    =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; has its sticky bit set, false if it&#xA;doesn&apos;t or if the operating system doesn&apos;t support this&#xA;feature." ilk="function" name="sticky?" signature="stat.sticky?    =&gt; true or false" />
        <scope doc="Returns true if `stat&apos; is a symbolic link, false if it isn&apos;t&#xA;or if the operating system doesn&apos;t support this feature. As&#xA;File::stat automatically follows symbolic links, symlink?&#xA;will always be false for an object returned by File::stat." ilk="function" name="symlink?" signature="stat.symlink?    =&gt; true or false" />
        <scope doc="Returns the numeric user id of the owner of `stat&apos;." ilk="function" name="uid" signature="stat.uid    =&gt; fixnum" />
        <scope doc="Returns true if `stat&apos; is writable by the effective user id&#xA;of this process." ilk="function" name="writable?" signature="stat.writable? -&gt; true or false" />
        <scope doc="Returns true if `stat&apos; is writable by the real user id of&#xA;this process." ilk="function" name="writable_real?" signature="stat.writable_real? -&gt; true or false" />
        <scope doc="Returns true if `stat&apos; is a zero-length file; false&#xA;otherwise." ilk="function" name="zero?" signature="stat.zero?    =&gt; true or false" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="delegator">
      <scope classrefs="Object" doc="Delegator is an abstract class used to build delegator&#xA;pattern objects from subclasses. Subclasses should redefine&#xA;__getobj__." ilk="class" name="Delegator">
        <scope attributes="__classmethod__ __ctor__" doc="Pass in the `obj&apos; to delegate method calls to. All methods&#xA;supported by `obj&apos; will be delegated to." ilk="function" name="new" signature="(obj)" />
        <scope doc="This method must be overridden by subclasses and should&#xA;return the object method calls are being delegated to." ilk="function" name="__getobj__" signature="()" />
        <scope doc="Serialization support for the object returned by __getobj__." ilk="function" name="marshal_dump" signature="()" />
        <scope doc="Reinitializes delegation from a serialized object." ilk="function" name="marshal_load" signature="(obj)" />
        <scope doc="Handles the magic of delegation through __getobj__." ilk="function" name="method_missing" signature="(m, *args)" />
        <scope doc="Checks for a method provided by this the delegate object by&#xA;fowarding the call through __getobj__." ilk="function" name="respond_to?" signature="(m)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="pathnametest">
      <scope classrefs="Test::Unit::TestCase" ilk="class" name="PathnameTest">
        <scope classrefs="Object" ilk="class" name="AnotherStringLike" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="win32ole_variable">
      <scope classrefs="Object" doc="WIN32OLE_VARIABLE objects represent OLE variable&#xA;information." ilk="class" name="WIN32OLE_VARIABLE">
        <scope doc="Returns the name of variable." ilk="function" name="name" signature="WIN32OLE_VARIABLE#name" />
        <scope doc="Returns OLE type string." ilk="function" name="ole_type" signature="WIN32OLE_VARIABLE#ole_type" />
        <scope doc="Returns detail information of type. The information is array&#xA;of type." ilk="function" name="ole_type_detail" signature="WIN32OLE_VARIABLE#ole_type_detail" />
        <scope doc="Alias for #name" ilk="function" name="to_s" signature="()" />
        <scope doc="Returns value if value is exists. If the value does not&#xA;exist, this method returns nil." ilk="function" name="value" signature="WIN32OLE_VARIABLE#value" />
        <scope doc="Returns variable kind string." ilk="function" name="variable_kind" signature="WIN32OLE_VARIABLE#variable_kind" />
        <scope doc="Returns the number which represents variable kind." ilk="function" name="varkind" signature="WIN32OLE_VARIABLE#varkind" />
        <scope doc="Returns true if the variable is public." ilk="function" name="visible?" signature="WIN32OLE_VARIABLE#visible?" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="datetime">
      <scope classrefs="Date" doc="Class representing a date and time." ilk="class" name="DateTime">
        <scope attributes="__classmethod__" doc="Create a new DateTime object corresponding to the specified&#xA;Civil Date and hour h, minute min, second s." ilk="function" name="civil" signature="(y=-4712, m=1, d=1, h=0, min=0, s=0, of=0, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Create a new DateTime object corresponding to the specified&#xA;Commercial Date and hour h, minute min, second s." ilk="function" name="commercial" signature="(y=1582, w=41, d=5, h=0, min=0, s=0, of=0, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Create a new DateTime object corresponding to the specified&#xA;Julian Day Number jd and hour h, minute min, second s." ilk="function" name="jd" signature="(jd=0, h=0, min=0, s=0, of=0, sg=ITALY)" />
        <scope attributes="__classmethod__ private" ilk="function" name="new_with_hash" signature="(elem, sg)" />
        <scope attributes="__classmethod__" doc="Create a new DateTime object representing the current time." ilk="function" name="now" signature="(sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Create a new DateTime object corresponding to the specified&#xA;Ordinal Date and hour h, minute min, second s." ilk="function" name="ordinal" signature="(y=-4712, d=1, h=0, min=0, s=0, of=0, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Create a new DateTime object by parsing from a String,&#xA;without specifying the format." ilk="function" name="parse" signature="(str=&apos;-4712-01-01T00:00:00Z&apos;, comp=false, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Create a new DateTime object by parsing from a String&#xA;according to a specified format." ilk="function" name="strptime" signature="(str=&apos;-4712-01-01T00:00:00Z&apos;, fmt=&apos;%FT%T%Z&apos;, sg=ITALY)" />
        <scope attributes="__classmethod__" doc="Do hour h, minute min, and second s constitute a valid time?" ilk="function" name="valid_time?" signature="(h, min, s)" />
      </scope>
    </scope>
    <scope ilk="blob" lang="Ruby" name="cparse">
      <scope ilk="namespace" name="Racc">
        <scope ilk="function" name="&lt;" />
        <scope ilk="function" name="&lt;=" />
        <scope ilk="function" name="&lt;=&gt;" />
        <scope ilk="function" name="==" />
        <scope ilk="function" name="===" />
        <scope ilk="function" name="&gt;" />
        <scope ilk="function" name="&gt;=" />
        <scope ilk="function" name="ancestors" />
        <scope ilk="function" name="autoload" />
        <scope ilk="function" name="autoload?" />
        <scope ilk="function" name="class_eval" />
        <scope ilk="function" name="class_variables" />
        <scope ilk="function" name="const_defined?" />
        <scope ilk="function" name="const_get" />
        <scope ilk="function" name="const_missing" />
        <scope ilk="function" name="const_set" />
        <scope ilk="function" name="constants" />
        <scope ilk="function" name="freeze" />
        <scope ilk="function" name="include?" />
        <scope ilk="function" name="included_modules" />
        <scope ilk="function" name="instance_method" />
        <scope ilk="function" name="instance_methods" />
        <scope ilk="function" name="method_defined?" />
        <scope ilk="function" name="module_eval" />
        <scope ilk="function" name="name" />
        <scope ilk="function" name="private_class_method" />
        <scope ilk="function" name="private_instance_methods" />
        <scope ilk="function" name="private_method_defined?" />
        <scope ilk="function" name="protected_instance_methods" />
        <scope ilk="function" name="protected_method_defined?" />
        <scope ilk="function" name="public_class_method" />
        <scope ilk="function" name="public_instance_methods" />
        <scope ilk="function" name="public_method_defined?" />
        <scope ilk="function" name="to_s" />
      </scope>
    </scope>
  </file>
</codeintel>
