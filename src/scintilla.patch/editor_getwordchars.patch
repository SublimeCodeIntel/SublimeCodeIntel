# HG changeset patch
# Parent f1caf1482ff668bfbcfaa26c0382d2e9410e6569
# Date 1337885787 25200
# User Mook <marky@activestate.com>

add SCI_GETWORDCHARS(<unused>, stringresult chars) command to get word chars
add SCI_GETWHITESPACECHARS(<unused>, stringresult chars) to get whitespace chars
add SCI_GETPUNCTUATIONCHARS(<unused>, stringresult chars) to get punctutation
also add tests for {Set,Get}{Word,Whitespce,Punctuation}Chars

diff --git a/include/Scintilla.h b/include/Scintilla.h
--- include/Scintilla.h
+++ include/Scintilla.h
@@ -240,16 +240,17 @@ typedef sptr_t (*SciFnDirect)(sptr_t ptr
 #define SCI_ASSIGNCMDKEY 2070
 #define SCI_CLEARCMDKEY 2071
 #define SCI_CLEARALLCMDKEYS 2072
 #define SCI_SETSTYLINGEX 2073
 #define SCI_STYLESETVISIBLE 2074
 #define SCI_GETCARETPERIOD 2075
 #define SCI_SETCARETPERIOD 2076
 #define SCI_SETWORDCHARS 2077
+#define SCI_GETWORDCHARS 2643
 #define SCI_BEGINUNDOACTION 2078
 #define SCI_ENDUNDOACTION 2079
 #define INDIC_PLAIN 0
 #define INDIC_SQUIGGLE 1
 #define INDIC_TT 2
 #define INDIC_DIAGONAL 3
 #define INDIC_STRIKE 4
 #define INDIC_HIDDEN 5
@@ -683,6 +684,9 @@ typedef sptr_t (*SciFnDirect)(sptr_t ptr
 #define SCI_WORDRIGHTEND 2441
 #define SCI_WORDRIGHTENDEXTEND 2442
 #define SCI_SETWHITESPACECHARS 2443
+#define SCI_GETWHITESPACECHARS 2644
+#define SCI_SETPUNCTUATIONCHARS 2645
+#define SCI_GETPUNCTUATIONCHARS 2646
 #define SCI_SETCHARSDEFAULT 2444
 #define SCI_AUTOCGETCURRENT 2445
 #define SCI_AUTOCGETCURRENTTEXT 2610
diff --git a/include/Scintilla.iface b/include/Scintilla.iface
--- include/Scintilla.iface
+++ include/Scintilla.iface
@@ -544,16 +544,20 @@ get int GetCaretPeriod=2075(,)

 # Get the time in milliseconds that the caret is on and off. 0 = steady on.
 set void SetCaretPeriod=2076(int periodMilliseconds,)

 # Set the set of characters making up words for when moving or selecting by word.
 # First sets defaults like SetCharsDefault.
 set void SetWordChars=2077(, string characters)

+# Get the set of characters making up words for when moving or selecting by word.
+# Retuns the number of characters
+get int GetWordChars=2643(, stringresult characters)
+
 # Start a sequence of actions that is undone and redone as a unit.
 # May be nested.
 fun void BeginUndoAction=2078(,)

 # End a sequence of actions that is undone and redone as a unit.
 fun void EndUndoAction=2079(,)

 # Indicator style enumeration and some constants
@@ -1792,16 +1796,26 @@ fun void WordRightEnd=2441(,)

 # Move caret right one word, position cursor at end of word, extending selection to new caret position.
 fun void WordRightEndExtend=2442(,)

 # Set the set of characters making up whitespace for when moving or selecting by word.
 # Should be called after SetWordChars.
 set void SetWhitespaceChars=2443(, string characters)

+# Get the set of characters making up whitespace for when moving or selecting by word.
+get void GetWhitespaceChars=2644(, stringresult characters)
+
+# Set the set of characters making up punctuation characters
+# Should be called after SetWordChars.
+set void SetPunctuationChars=2645(, string characters)
+
+# Get the set of characters making up punctuation characters
+get void GetPunctuationChars=2646(, stringresult characters)
+
 # Reset the set of characters for whitespace and word characters to the defaults.
 fun void SetCharsDefault=2444(,)

 # Get currently selected item position in the auto-completion list
 fun int AutoCGetCurrent=2445(,)

 # Get currently selected item text in the auto-completion list
 # Returns the length of the item text
diff --git a/src/CharClassify.cxx b/src/CharClassify.cxx
--- src/CharClassify.cxx
+++ src/CharClassify.cxx
@@ -46,3 +46,19 @@ void CharClassify::SetCharClasses(const
		}
	}
 }
+
+int CharClassify::GetCharsOfClass(cc characterClass, unsigned char *buffer) {
+	// Get characters belonging to the given char class; return the number
+	// of characters (if the buffer is NULL, don't write to it).
+	int count = 0;
+	for (int ch = maxChar - 1; ch >= 0; --ch) {
+		if (charClass[ch] == characterClass) {
+			++count;
+			if (buffer) {
+				*buffer = static_cast<unsigned char>(ch);
+				buffer++;
+			}
+		}
+	}
+	return count;
+}
diff --git a/src/CharClassify.h b/src/CharClassify.h
--- src/CharClassify.h
+++ src/CharClassify.h
@@ -19,6 +19,7 @@ public:
	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };
	void SetDefaultCharClasses(bool includeWordClass);
	void SetCharClasses(const unsigned char *chars, cc newCharClass);
+	int GetCharsOfClass(cc charClass, unsigned char *buffer);
	cc GetClass(unsigned char ch) const { return static_cast<cc>(charClass[ch]);}
	bool IsWord(unsigned char ch) const { return static_cast<cc>(charClass[ch]) == ccWord;}

diff --git a/src/Document.cxx b/src/Document.cxx
--- src/Document.cxx
+++ src/Document.cxx
@@ -1622,6 +1622,10 @@ void Document::SetCharClasses(const unsi
     charClass.SetCharClasses(chars, newCharClass);
 }

+int Document::GetCharsOfClass(CharClassify::cc characterClass, unsigned char *buffer) {
+    return charClass.GetCharsOfClass(characterClass, buffer);
+}
+
 void Document::SetStylingBits(int bits) {
	stylingBits = bits;
	stylingBitsMask = (1 << stylingBits) - 1;
diff --git a/src/Document.h b/src/Document.h
--- src/Document.h
+++ src/Document.h
@@ -363,6 +363,7 @@ public:

	void SetDefaultCharClasses(bool includeWordClass);
	void SetCharClasses(const unsigned char *chars, CharClassify::cc newCharClass);
+	int GetCharsOfClass(CharClassify::cc charClass, unsigned char *buffer);
	void SetStylingBits(int bits);
	void SCI_METHOD StartStyling(int position, char mask);
	bool SCI_METHOD SetStyleFor(int length, char style);
diff --git a/src/Editor.cxx b/src/Editor.cxx
--- src/Editor.cxx
+++ src/Editor.cxx
@@ -7594,6 +7594,9 @@ sptr_t Editor::WndProc(unsigned int iMes
		caret.period = wParam;
		break;

+	case SCI_GETWORDCHARS:
+		return pdoc->GetCharsOfClass(CharClassify::ccWord, reinterpret_cast<unsigned char *>(lParam));
+
	case SCI_SETWORDCHARS: {
			pdoc->SetDefaultCharClasses(false);
			if (lParam == 0)
@@ -7602,6 +7605,9 @@ sptr_t Editor::WndProc(unsigned int iMes
		}
		break;

+	case SCI_GETWHITESPACECHARS:
+		return pdoc->GetCharsOfClass(CharClassify::ccSpace, reinterpret_cast<unsigned char *>(lParam));
+
	case SCI_SETWHITESPACECHARS: {
			if (lParam == 0)
				return 0;
@@ -7609,6 +7615,16 @@ sptr_t Editor::WndProc(unsigned int iMes
		}
		break;

+	case SCI_GETPUNCTUATIONCHARS:
+		return pdoc->GetCharsOfClass(CharClassify::ccPunctuation, reinterpret_cast<unsigned char *>(lParam));
+
+	case SCI_SETPUNCTUATIONCHARS: {
+			if (lParam == 0)
+				return 0;
+			pdoc->SetCharClasses(reinterpret_cast<unsigned char *>(lParam), CharClassify::ccPunctuation);
+		}
+		break;
+
	case SCI_SETCHARSDEFAULT:
		pdoc->SetDefaultCharClasses(true);
		break;
